// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.2 (lin64) Build 2708876 Wed Nov  6 21:39:14 MST 2019
// Date        : Tue May  5 17:00:07 2020
// Host        : xilinx-vm running 64-bit unknown
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               /home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/designs/vivado/mandelbrot_pinout/2018.2/mandelbrot_pinout.sim/sim_1/impl/timing/xsim/mandel_iter_time_impl.v
// Design      : mandelbrot_pinout
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7a200tsbg484-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module LUT6_2_UNIQ_BASE_
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD659
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD660
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD661
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD662
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD663
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD664
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD665
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD666
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD667
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD668
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD669
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD670
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD671
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD672
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD673
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD674
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD675
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD676
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD677
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD678
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD679
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD680
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD681
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD682
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD683
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD684
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD685
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD686
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD687
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD688
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD704
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD705
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD706
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD707
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD708
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD709
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD710
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD711
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD712
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD713
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD714
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD715
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD716
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD717
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD718
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD719
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD720
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD721
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD722
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD723
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD724
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD725
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h69696969FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD726
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD727
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD728
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD729
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD730
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD731
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD732
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD733
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD734
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD735
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD736
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD737
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD738
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD739
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD740
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD741
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD742
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD743
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD744
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD745
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD746
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD747
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD748
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD749
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD750
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD751
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module RAM32M_UNIQ_BASE_
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD689
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD690
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD691
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD692
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD693
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD694
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD695
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD696
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD697
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD698
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD699
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD700
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD701
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD702
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD703
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module clk_vga_hdmi_1024x600
   (ClkVgaxCO,
    ClkHdmixCO,
    reset,
    PllLockedxSO,
    ClkSys100MhzxCI);
  output ClkVgaxCO;
  output ClkHdmixCO;
  input reset;
  output PllLockedxSO;
  input ClkSys100MhzxCI;

  wire ClkHdmixCO;
  (* IBUF_LOW_PWR *) wire ClkSys100MhzxCI;
  wire ClkVgaxCO;
  wire PllLockedxSO;
  wire reset;

  clk_vga_hdmi_1024x600_clk_vga_hdmi_1024x600_clk_wiz inst
       (.ClkHdmixCO(ClkHdmixCO),
        .ClkSys100MhzxCI(ClkSys100MhzxCI),
        .ClkVgaxCO(ClkVgaxCO),
        .PllLockedxSO(PllLockedxSO),
        .reset(reset));
endmodule

(* ORIG_REF_NAME = "clk_vga_hdmi_1024x600_clk_wiz" *) 
module clk_vga_hdmi_1024x600_clk_vga_hdmi_1024x600_clk_wiz
   (ClkVgaxCO,
    ClkHdmixCO,
    reset,
    PllLockedxSO,
    ClkSys100MhzxCI);
  output ClkVgaxCO;
  output ClkHdmixCO;
  input reset;
  output PllLockedxSO;
  input ClkSys100MhzxCI;

  wire ClkHdmixCO;
  wire ClkHdmixCO_clk_vga_hdmi_1024x600;
  wire ClkSys100MhzxCI;
  wire ClkVgaxCO;
  wire ClkVgaxCO_clk_vga_hdmi_1024x600;
  wire PllLockedxSO;
  wire clkfbout_buf_clk_vga_hdmi_1024x600;
  wire clkfbout_clk_vga_hdmi_1024x600;
  wire reset;
  wire NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_adv_inst_DRDY_UNCONNECTED;
  wire NLW_mmcm_adv_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_adv_inst_DO_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  BUFG clkf_buf
       (.I(clkfbout_clk_vga_hdmi_1024x600),
        .O(clkfbout_buf_clk_vga_hdmi_1024x600));
  (* box_type = "PRIMITIVE" *) 
  BUFG clkout1_buf
       (.I(ClkVgaxCO_clk_vga_hdmi_1024x600),
        .O(ClkVgaxCO));
  (* box_type = "PRIMITIVE" *) 
  BUFG clkout2_buf
       (.I(ClkHdmixCO_clk_vga_hdmi_1024x600),
        .O(ClkHdmixCO));
  (* OPT_MODIFIED = "MLO RETARGET" *) 
  (* box_type = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(10.250000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(20.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(4),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("BUF_IN"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b1),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_adv_inst
       (.CLKFBIN(clkfbout_buf_clk_vga_hdmi_1024x600),
        .CLKFBOUT(clkfbout_clk_vga_hdmi_1024x600),
        .CLKFBOUTB(NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(ClkSys100MhzxCI),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(ClkVgaxCO_clk_vga_hdmi_1024x600),
        .CLKOUT0B(NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(ClkHdmixCO_clk_vga_hdmi_1024x600),
        .CLKOUT1B(NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT2B(NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_adv_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_adv_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(PllLockedxSO),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_adv_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(reset));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_regport,fifo_generator_v13_2_2,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_2,Vivado 2018.2.2" *) 
module fifo_regport
   (wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    empty,
    lopt);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, PHASE 0.000" *) input wr_clk;
  input wr_rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, PHASE 0.000" *) input rd_clk;
  input rd_rst;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [31:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [31:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  input lopt;

  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire lopt;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_injectdbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_injectsbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_injectdbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_injectsbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_injectdbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_injectsbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_injectdbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_injectsbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_injectdbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_injectsbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_injectdbiterr_UNCONNECTED;
  wire NLW_U0_axis_injectsbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_backup_UNCONNECTED;
  wire NLW_U0_backup_marker_UNCONNECTED;
  wire NLW_U0_clk_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_full_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_int_clk_UNCONNECTED;
  wire NLW_U0_m_aclk_UNCONNECTED;
  wire NLW_U0_m_aclk_en_UNCONNECTED;
  wire NLW_U0_m_axi_arready_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awready_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_bvalid_UNCONNECTED;
  wire NLW_U0_m_axi_rlast_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_rvalid_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wready_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tready_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_rst_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aclk_en_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_s_axis_tlast_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_s_axis_tvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire NLW_U0_srst_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_axi_ar_prog_empty_thresh_UNCONNECTED;
  wire [3:0]NLW_U0_axi_ar_prog_full_thresh_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_axi_aw_prog_empty_thresh_UNCONNECTED;
  wire [3:0]NLW_U0_axi_aw_prog_full_thresh_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [3:0]NLW_U0_axi_b_prog_empty_thresh_UNCONNECTED;
  wire [3:0]NLW_U0_axi_b_prog_full_thresh_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_axi_r_prog_empty_thresh_UNCONNECTED;
  wire [9:0]NLW_U0_axi_r_prog_full_thresh_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_axi_w_prog_empty_thresh_UNCONNECTED;
  wire [9:0]NLW_U0_axi_w_prog_full_thresh_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [9:0]NLW_U0_axis_prog_empty_thresh_UNCONNECTED;
  wire [9:0]NLW_U0_axis_prog_full_thresh_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [6:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:24]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_ruser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [6:0]NLW_U0_prog_empty_thresh_UNCONNECTED;
  wire [6:0]NLW_U0_prog_empty_thresh_assert_UNCONNECTED;
  wire [6:0]NLW_U0_prog_empty_thresh_negate_UNCONNECTED;
  wire [6:0]NLW_U0_prog_full_thresh_UNCONNECTED;
  wire [6:0]NLW_U0_prog_full_thresh_assert_UNCONNECTED;
  wire [6:0]NLW_U0_prog_full_thresh_negate_UNCONNECTED;
  wire [6:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_s_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_s_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_s_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_s_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_s_axis_tuser_UNCONNECTED;
  wire [6:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "7" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "32" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "32" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "1" *) 
  (* C_PRELOAD_REGS = "0" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "125" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "124" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "7" *) 
  (* C_RD_DEPTH = "128" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "7" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "7" *) 
  (* C_WR_DEPTH = "128" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "7" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  fifo_regport__fifo_generator_v13_2_2 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(NLW_U0_axi_ar_injectdbiterr_UNCONNECTED),
        .axi_ar_injectsbiterr(NLW_U0_axi_ar_injectsbiterr_UNCONNECTED),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh(NLW_U0_axi_ar_prog_empty_thresh_UNCONNECTED[3:0]),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh(NLW_U0_axi_ar_prog_full_thresh_UNCONNECTED[3:0]),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(NLW_U0_axi_aw_injectdbiterr_UNCONNECTED),
        .axi_aw_injectsbiterr(NLW_U0_axi_aw_injectsbiterr_UNCONNECTED),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh(NLW_U0_axi_aw_prog_empty_thresh_UNCONNECTED[3:0]),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh(NLW_U0_axi_aw_prog_full_thresh_UNCONNECTED[3:0]),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(NLW_U0_axi_b_injectdbiterr_UNCONNECTED),
        .axi_b_injectsbiterr(NLW_U0_axi_b_injectsbiterr_UNCONNECTED),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh(NLW_U0_axi_b_prog_empty_thresh_UNCONNECTED[3:0]),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh(NLW_U0_axi_b_prog_full_thresh_UNCONNECTED[3:0]),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(NLW_U0_axi_r_injectdbiterr_UNCONNECTED),
        .axi_r_injectsbiterr(NLW_U0_axi_r_injectsbiterr_UNCONNECTED),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh(NLW_U0_axi_r_prog_empty_thresh_UNCONNECTED[9:0]),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh(NLW_U0_axi_r_prog_full_thresh_UNCONNECTED[9:0]),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(NLW_U0_axi_w_injectdbiterr_UNCONNECTED),
        .axi_w_injectsbiterr(NLW_U0_axi_w_injectsbiterr_UNCONNECTED),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh(NLW_U0_axi_w_prog_empty_thresh_UNCONNECTED[9:0]),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh(NLW_U0_axi_w_prog_full_thresh_UNCONNECTED[9:0]),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(NLW_U0_axis_injectdbiterr_UNCONNECTED),
        .axis_injectsbiterr(NLW_U0_axis_injectsbiterr_UNCONNECTED),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh(NLW_U0_axis_prog_empty_thresh_UNCONNECTED[9:0]),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh(NLW_U0_axis_prog_full_thresh_UNCONNECTED[9:0]),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(NLW_U0_backup_UNCONNECTED),
        .backup_marker(NLW_U0_backup_marker_UNCONNECTED),
        .clk(NLW_U0_clk_UNCONNECTED),
        .data_count(NLW_U0_data_count_UNCONNECTED[6:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[31:24],dout[23:0]}),
        .empty(empty),
        .full(NLW_U0_full_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .int_clk(NLW_U0_int_clk_UNCONNECTED),
        .lopt(lopt),
        .m_aclk(NLW_U0_m_aclk_UNCONNECTED),
        .m_aclk_en(NLW_U0_m_aclk_en_UNCONNECTED),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(NLW_U0_m_axi_arready_UNCONNECTED),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(NLW_U0_m_axi_awready_UNCONNECTED),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(NLW_U0_m_axi_bid_UNCONNECTED[0]),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp(NLW_U0_m_axi_bresp_UNCONNECTED[1:0]),
        .m_axi_buser(NLW_U0_m_axi_buser_UNCONNECTED[0]),
        .m_axi_bvalid(NLW_U0_m_axi_bvalid_UNCONNECTED),
        .m_axi_rdata(NLW_U0_m_axi_rdata_UNCONNECTED[63:0]),
        .m_axi_rid(NLW_U0_m_axi_rid_UNCONNECTED[0]),
        .m_axi_rlast(NLW_U0_m_axi_rlast_UNCONNECTED),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp(NLW_U0_m_axi_rresp_UNCONNECTED[1:0]),
        .m_axi_ruser(NLW_U0_m_axi_ruser_UNCONNECTED[0]),
        .m_axi_rvalid(NLW_U0_m_axi_rvalid_UNCONNECTED),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(NLW_U0_m_axi_wready_UNCONNECTED),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(NLW_U0_m_axis_tready_UNCONNECTED),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh(NLW_U0_prog_empty_thresh_UNCONNECTED[6:0]),
        .prog_empty_thresh_assert(NLW_U0_prog_empty_thresh_assert_UNCONNECTED[6:0]),
        .prog_empty_thresh_negate(NLW_U0_prog_empty_thresh_negate_UNCONNECTED[6:0]),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh(NLW_U0_prog_full_thresh_UNCONNECTED[6:0]),
        .prog_full_thresh_assert(NLW_U0_prog_full_thresh_assert_UNCONNECTED[6:0]),
        .prog_full_thresh_negate(NLW_U0_prog_full_thresh_negate_UNCONNECTED[6:0]),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[6:0]),
        .rd_en(rd_en),
        .rd_rst(rd_rst),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(NLW_U0_rst_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aclk_en(NLW_U0_s_aclk_en_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arcache(NLW_U0_s_axi_arcache_UNCONNECTED[3:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arlock(NLW_U0_s_axi_arlock_UNCONNECTED[0]),
        .s_axi_arprot(NLW_U0_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arqos(NLW_U0_s_axi_arqos_UNCONNECTED[3:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion(NLW_U0_s_axi_arregion_UNCONNECTED[3:0]),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_aruser(NLW_U0_s_axi_aruser_UNCONNECTED[0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awcache(NLW_U0_s_axi_awcache_UNCONNECTED[3:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awlock(NLW_U0_s_axi_awlock_UNCONNECTED[0]),
        .s_axi_awprot(NLW_U0_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awqos(NLW_U0_s_axi_awqos_UNCONNECTED[3:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion(NLW_U0_s_axi_awregion_UNCONNECTED[3:0]),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awuser(NLW_U0_s_axi_awuser_UNCONNECTED[0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[63:0]),
        .s_axi_wid(NLW_U0_s_axi_wid_UNCONNECTED[0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[7:0]),
        .s_axi_wuser(NLW_U0_s_axi_wuser_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .s_axis_tdata(NLW_U0_s_axis_tdata_UNCONNECTED[7:0]),
        .s_axis_tdest(NLW_U0_s_axis_tdest_UNCONNECTED[0]),
        .s_axis_tid(NLW_U0_s_axis_tid_UNCONNECTED[0]),
        .s_axis_tkeep(NLW_U0_s_axis_tkeep_UNCONNECTED[0]),
        .s_axis_tlast(NLW_U0_s_axis_tlast_UNCONNECTED),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(NLW_U0_s_axis_tstrb_UNCONNECTED[0]),
        .s_axis_tuser(NLW_U0_s_axis_tuser_UNCONNECTED[3:0]),
        .s_axis_tvalid(NLW_U0_s_axis_tvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .srst(NLW_U0_srst_UNCONNECTED),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[6:0]),
        .wr_en(wr_en),
        .wr_rst(wr_rst),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "7" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module fifo_regport__xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [6:0]src_in_bin;
  input dest_clk;
  output [6:0]dest_out_bin;

  wire [6:0]async_path;
  wire [5:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[1] ;
  wire [6:0]dest_out_bin;
  wire [5:0]gray_enc;
  wire src_clk;
  wire [6:0]src_in_bin;

  initial assign \dest_graysync_ff_reg[0][0] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][3] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][4] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][5] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][6] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][0] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][3] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][4] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][5] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][6] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[1]),
        .O(binval[0]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .I5(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[6]),
        .Q(async_path[6]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "7" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module fifo_regport__xpm_cdc_gray__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [6:0]src_in_bin;
  input dest_clk;
  output [6:0]dest_out_bin;

  wire [6:0]async_path;
  wire [5:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[1] ;
  wire [6:0]dest_out_bin;
  wire [5:0]gray_enc;
  wire src_clk;
  wire [6:0]src_in_bin;

  initial assign \dest_graysync_ff_reg[0][0] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][3] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][4] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][5] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[0][6] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][0] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][3] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][4] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][5] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  initial assign \dest_graysync_ff_reg[1][6] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "141" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[1]),
        .O(binval[0]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .I5(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* \PinAttr:I0:HOLD_DETOUR  = "199" *) 
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[6]),
        .Q(async_path[6]),
        .R(1'b0));
endmodule

module hdmi
   (HdmiTxPxDO,
    HdmiTxNxDO,
    HdmiTxClkPxSO,
    HdmiTxClkNxSO,
    ClkVgaxCO,
    VidOnxS,
    AR,
    \VgaSyncxS_reg[HSyncxS] ,
    \VgaSyncxS_reg[VSyncxS] ,
    VidOnxS_reg_rep,
    VidOnxS_reg_rep__0,
    Q,
    \DcBiasxD_reg[3] ,
    \DcBiasxD_reg[1] ,
    \DcBiasxD_reg[3]_0 ,
    \DcBiasxD_reg[3]_1 ,
    \DcBiasxD_reg[1]_0 ,
    VidOnxS_reg_rep__0_0,
    S,
    DI,
    \VCountxD_reg[7] ,
    \VCountxD_reg[7]_0 ,
    \VCountxD_reg[7]_1 ,
    \VCountxD_reg[6] ,
    \VCountxD_reg[6]_0 ,
    \VCountxD_reg[5] ,
    \HCountxD_reg[7] ,
    VidOnxS_reg_rep_0,
    \HCountxD_reg[6] ,
    VidOnxS_reg_rep_1,
    \HCountxD_reg[15] ,
    VidOnxS_reg_rep__0_1,
    \VCountxD_reg[14] ,
    \VCountxD_reg[15] ,
    VidOnxS_reg_rep__0_2,
    \DcBiasxD_reg[0] ,
    \DcBiasxD_reg[3]_2 ,
    VidOnxS_reg_rep__0_3,
    \DcBiasxD_reg[0]_0 ,
    \DcBiasxD_reg[3]_3 ,
    VidOnxS_reg_rep__0_4,
    \VCountxD_reg[15]_0 ,
    \VCountxD_reg[15]_1 ,
    \VCountxD_reg[14]_0 ,
    \VCountxD_reg[15]_2 ,
    \HCountxD_reg[6]_0 ,
    \HCountxD_reg[15]_0 ,
    \DcBiasxD_reg[1]_1 ,
    \DcBiasxD_reg[2] ,
    ClkSys100MhzxCI_IBUF,
    TmdsEncodedDataxDO1_in,
    \TmdsEncodedDataxDO_reg[9] ,
    \TmdsEncodedDataxDO_reg[4] ,
    \TmdsEncodedDataxDO_reg[3] ,
    \TmdsEncodedDataxDO_reg[2] ,
    \TmdsEncodedDataxDO_reg[0] ,
    \TmdsEncodedDataxDO_reg[7] ,
    \TmdsEncodedDataxDO_reg[5] ,
    \TmdsEncodedDataxDO_reg[1] ,
    \TmdsEncodedDataxDO_reg[6] ,
    \TmdsEncodedDataxDO_reg[9]_0 ,
    \TmdsEncodedDataxDO_reg[8] ,
    \TmdsEncodedDataxDO_reg[9]_1 ,
    \TmdsEncodedDataxDO_reg[6]_0 ,
    \DcBiasxD_reg[3]_4 ,
    \DcBiasxD_reg[2]_0 ,
    \DcBiasxD_reg[2]_1 ,
    \DcBiasxD_reg[0]_1 ,
    \DcBiasxD_reg[3]_5 ,
    \TmdsEncodedDataxDO_reg[8]_0 ,
    \TmdsEncodedDataxDO_reg[4]_0 ,
    \TmdsEncodedDataxDO_reg[6]_1 ,
    \TmdsEncodedDataxDO_reg[9]_2 ,
    \DataxD_reg[0] ,
    \DataxD_reg[23] ,
    \DataxD[21]_i_2 ,
    \DataxD[21]_i_2_0 ,
    \DataxD[21]_i_2_1 ,
    \DataxD[21]_i_2_2 ,
    CO,
    ResetxRNI,
    \DcBiasxD_reg[2]_2 ,
    \DcBiasxD_reg[2]_3 ,
    \DcBiasxD_reg[2]_4 ,
    \TmdsEncodedDataxDO_reg[8]_1 ,
    \TmdsEncodedDataxDO_reg[8]_2 ,
    D,
    \DcBiasxD_reg[1]_2 ,
    \TmdsEncodedDataxDO_reg[5]_0 ,
    \TmdsEncodedDataxDO_reg[7]_0 ,
    \TmdsEncodedDataxDO_reg[1]_0 ,
    \DcBiasxD_reg[3]_6 );
  output [2:0]HdmiTxPxDO;
  output [2:0]HdmiTxNxDO;
  output HdmiTxClkPxSO;
  output HdmiTxClkNxSO;
  output ClkVgaxCO;
  output VidOnxS;
  output [0:0]AR;
  output \VgaSyncxS_reg[HSyncxS] ;
  output \VgaSyncxS_reg[VSyncxS] ;
  output VidOnxS_reg_rep;
  output VidOnxS_reg_rep__0;
  output [2:0]Q;
  output \DcBiasxD_reg[3] ;
  output \DcBiasxD_reg[1] ;
  output [3:0]\DcBiasxD_reg[3]_0 ;
  output \DcBiasxD_reg[3]_1 ;
  output \DcBiasxD_reg[1]_0 ;
  output VidOnxS_reg_rep__0_0;
  output [3:0]S;
  output [2:0]DI;
  output [3:0]\VCountxD_reg[7] ;
  output [3:0]\VCountxD_reg[7]_0 ;
  output [3:0]\VCountxD_reg[7]_1 ;
  output [0:0]\VCountxD_reg[6] ;
  output [3:0]\VCountxD_reg[6]_0 ;
  output [2:0]\VCountxD_reg[5] ;
  output [3:0]\HCountxD_reg[7] ;
  output [3:0]VidOnxS_reg_rep_0;
  output [3:0]\HCountxD_reg[6] ;
  output [3:0]VidOnxS_reg_rep_1;
  output [3:0]\HCountxD_reg[15] ;
  output [0:0]VidOnxS_reg_rep__0_1;
  output [3:0]\VCountxD_reg[14] ;
  output [3:0]\VCountxD_reg[15] ;
  output VidOnxS_reg_rep__0_2;
  output \DcBiasxD_reg[0] ;
  output [3:0]\DcBiasxD_reg[3]_2 ;
  output VidOnxS_reg_rep__0_3;
  output \DcBiasxD_reg[0]_0 ;
  output [3:0]\DcBiasxD_reg[3]_3 ;
  output [23:0]VidOnxS_reg_rep__0_4;
  output [3:0]\VCountxD_reg[15]_0 ;
  output [3:0]\VCountxD_reg[15]_1 ;
  output [3:0]\VCountxD_reg[14]_0 ;
  output [3:0]\VCountxD_reg[15]_2 ;
  output [3:0]\HCountxD_reg[6]_0 ;
  output [3:0]\HCountxD_reg[15]_0 ;
  output \DcBiasxD_reg[1]_1 ;
  output \DcBiasxD_reg[2] ;
  input ClkSys100MhzxCI_IBUF;
  input [7:0]TmdsEncodedDataxDO1_in;
  input \TmdsEncodedDataxDO_reg[9] ;
  input \TmdsEncodedDataxDO_reg[4] ;
  input \TmdsEncodedDataxDO_reg[3] ;
  input \TmdsEncodedDataxDO_reg[2] ;
  input \TmdsEncodedDataxDO_reg[0] ;
  input \TmdsEncodedDataxDO_reg[7] ;
  input \TmdsEncodedDataxDO_reg[5] ;
  input \TmdsEncodedDataxDO_reg[1] ;
  input \TmdsEncodedDataxDO_reg[6] ;
  input \TmdsEncodedDataxDO_reg[9]_0 ;
  input \TmdsEncodedDataxDO_reg[8] ;
  input \TmdsEncodedDataxDO_reg[9]_1 ;
  input \TmdsEncodedDataxDO_reg[6]_0 ;
  input \DcBiasxD_reg[3]_4 ;
  input \DcBiasxD_reg[2]_0 ;
  input \DcBiasxD_reg[2]_1 ;
  input \DcBiasxD_reg[0]_1 ;
  input \DcBiasxD_reg[3]_5 ;
  input [3:0]\TmdsEncodedDataxDO_reg[8]_0 ;
  input \TmdsEncodedDataxDO_reg[4]_0 ;
  input \TmdsEncodedDataxDO_reg[6]_1 ;
  input \TmdsEncodedDataxDO_reg[9]_2 ;
  input [0:0]\DataxD_reg[0] ;
  input [23:0]\DataxD_reg[23] ;
  input [0:0]\DataxD[21]_i_2 ;
  input [0:0]\DataxD[21]_i_2_0 ;
  input [0:0]\DataxD[21]_i_2_1 ;
  input [0:0]\DataxD[21]_i_2_2 ;
  input [0:0]CO;
  input ResetxRNI;
  input \DcBiasxD_reg[2]_2 ;
  input \DcBiasxD_reg[2]_3 ;
  input \DcBiasxD_reg[2]_4 ;
  input \TmdsEncodedDataxDO_reg[8]_1 ;
  input \TmdsEncodedDataxDO_reg[8]_2 ;
  input [3:0]D;
  input [0:0]\DcBiasxD_reg[1]_2 ;
  input [2:0]\TmdsEncodedDataxDO_reg[5]_0 ;
  input \TmdsEncodedDataxDO_reg[7]_0 ;
  input \TmdsEncodedDataxDO_reg[1]_0 ;
  input [3:0]\DcBiasxD_reg[3]_6 ;

  wire [0:0]AR;
  wire [0:0]CO;
  wire ClkHdmixCO;
  wire ClkSys100MhzBufgxC;
  wire ClkSys100MhzxCI_IBUF;
  wire ClkVgaxCO;
  wire [3:0]D;
  wire [2:0]DI;
  wire [0:0]\DataxD[21]_i_2 ;
  wire [0:0]\DataxD[21]_i_2_0 ;
  wire [0:0]\DataxD[21]_i_2_1 ;
  wire [0:0]\DataxD[21]_i_2_2 ;
  wire [0:0]\DataxD_reg[0] ;
  wire [23:0]\DataxD_reg[23] ;
  wire \DcBiasxD_reg[0] ;
  wire \DcBiasxD_reg[0]_0 ;
  wire \DcBiasxD_reg[0]_1 ;
  wire \DcBiasxD_reg[1] ;
  wire \DcBiasxD_reg[1]_0 ;
  wire \DcBiasxD_reg[1]_1 ;
  wire [0:0]\DcBiasxD_reg[1]_2 ;
  wire \DcBiasxD_reg[2] ;
  wire \DcBiasxD_reg[2]_0 ;
  wire \DcBiasxD_reg[2]_1 ;
  wire \DcBiasxD_reg[2]_2 ;
  wire \DcBiasxD_reg[2]_3 ;
  wire \DcBiasxD_reg[2]_4 ;
  wire \DcBiasxD_reg[3] ;
  wire [3:0]\DcBiasxD_reg[3]_0 ;
  wire \DcBiasxD_reg[3]_1 ;
  wire [3:0]\DcBiasxD_reg[3]_2 ;
  wire [3:0]\DcBiasxD_reg[3]_3 ;
  wire \DcBiasxD_reg[3]_4 ;
  wire \DcBiasxD_reg[3]_5 ;
  wire [3:0]\DcBiasxD_reg[3]_6 ;
  wire [3:0]\HCountxD_reg[15] ;
  wire [3:0]\HCountxD_reg[15]_0 ;
  wire [3:0]\HCountxD_reg[6] ;
  wire [3:0]\HCountxD_reg[6]_0 ;
  wire [3:0]\HCountxD_reg[7] ;
  wire HdmiPllLockedxS;
  wire HdmiTxClkNxSO;
  wire HdmiTxClkPxSO;
  wire [2:0]HdmiTxNxDO;
  wire [2:0]HdmiTxPxDO;
  wire [2:0]Q;
  wire ResetxRNI;
  wire [3:0]S;
  wire [7:0]TmdsEncodedDataxDO1_in;
  wire \TmdsEncodedDataxDO_reg[0] ;
  wire \TmdsEncodedDataxDO_reg[1] ;
  wire \TmdsEncodedDataxDO_reg[1]_0 ;
  wire \TmdsEncodedDataxDO_reg[2] ;
  wire \TmdsEncodedDataxDO_reg[3] ;
  wire \TmdsEncodedDataxDO_reg[4] ;
  wire \TmdsEncodedDataxDO_reg[4]_0 ;
  wire \TmdsEncodedDataxDO_reg[5] ;
  wire [2:0]\TmdsEncodedDataxDO_reg[5]_0 ;
  wire \TmdsEncodedDataxDO_reg[6] ;
  wire \TmdsEncodedDataxDO_reg[6]_0 ;
  wire \TmdsEncodedDataxDO_reg[6]_1 ;
  wire \TmdsEncodedDataxDO_reg[7] ;
  wire \TmdsEncodedDataxDO_reg[7]_0 ;
  wire \TmdsEncodedDataxDO_reg[8] ;
  wire [3:0]\TmdsEncodedDataxDO_reg[8]_0 ;
  wire \TmdsEncodedDataxDO_reg[8]_1 ;
  wire \TmdsEncodedDataxDO_reg[8]_2 ;
  wire \TmdsEncodedDataxDO_reg[9] ;
  wire \TmdsEncodedDataxDO_reg[9]_0 ;
  wire \TmdsEncodedDataxDO_reg[9]_1 ;
  wire \TmdsEncodedDataxDO_reg[9]_2 ;
  wire [3:0]\VCountxD_reg[14] ;
  wire [3:0]\VCountxD_reg[14]_0 ;
  wire [3:0]\VCountxD_reg[15] ;
  wire [3:0]\VCountxD_reg[15]_0 ;
  wire [3:0]\VCountxD_reg[15]_1 ;
  wire [3:0]\VCountxD_reg[15]_2 ;
  wire [2:0]\VCountxD_reg[5] ;
  wire [0:0]\VCountxD_reg[6] ;
  wire [3:0]\VCountxD_reg[6]_0 ;
  wire [3:0]\VCountxD_reg[7] ;
  wire [3:0]\VCountxD_reg[7]_0 ;
  wire [3:0]\VCountxD_reg[7]_1 ;
  wire \VgaSyncxS_reg[HSyncxS] ;
  wire \VgaSyncxS_reg[VSyncxS] ;
  wire VgaxI_n_10;
  wire VgaxI_n_11;
  wire VgaxI_n_9;
  wire VidOnxS;
  wire VidOnxS_reg_rep;
  wire [3:0]VidOnxS_reg_rep_0;
  wire [3:0]VidOnxS_reg_rep_1;
  wire VidOnxS_reg_rep__0;
  wire VidOnxS_reg_rep__0_0;
  wire [0:0]VidOnxS_reg_rep__0_1;
  wire VidOnxS_reg_rep__0_2;
  wire VidOnxS_reg_rep__0_3;
  wire [23:0]VidOnxS_reg_rep__0_4;

  (* box_type = "PRIMITIVE" *) 
  BUFG \ClkVgaHdmi1024x600xG.BUFGClkSysToClkVgaHdmixI 
       (.I(ClkSys100MhzxCI_IBUF),
        .O(ClkSys100MhzBufgxC));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/designs/vivado/mandelbrot_pinout/2018.2/mandelbrot_pinout.srcs/sources_1/ip/clk_vga_hdmi_1024x600/clk_vga_hdmi_1024x600.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  clk_vga_hdmi_1024x600 \ClkVgaHdmi1024x600xG.ClkVgaHdmi1024x600xI 
       (.ClkHdmixCO(ClkHdmixCO),
        .ClkSys100MhzxCI(ClkSys100MhzBufgxC),
        .ClkVgaxCO(ClkVgaxCO),
        .PllLockedxSO(HdmiPllLockedxS),
        .reset(ResetxRNI));
  vga_to_hdmi VgaToHdmixI
       (.ClkHdmixCI(ClkHdmixCO),
        .ClkVgaxCI(ClkVgaxCO),
        .D(D),
        .\DcBiasxD_reg[0] (\DcBiasxD_reg[0] ),
        .\DcBiasxD_reg[0]_0 (\DcBiasxD_reg[0]_0 ),
        .\DcBiasxD_reg[0]_1 (\DcBiasxD_reg[0]_1 ),
        .\DcBiasxD_reg[1] (\DcBiasxD_reg[1] ),
        .\DcBiasxD_reg[1]_0 (\DcBiasxD_reg[1]_0 ),
        .\DcBiasxD_reg[1]_1 (\DcBiasxD_reg[1]_1 ),
        .\DcBiasxD_reg[1]_2 (\DcBiasxD_reg[1]_2 ),
        .\DcBiasxD_reg[2] (\DcBiasxD_reg[2] ),
        .\DcBiasxD_reg[2]_0 (\DcBiasxD_reg[2]_0 ),
        .\DcBiasxD_reg[2]_1 (\DcBiasxD_reg[2]_1 ),
        .\DcBiasxD_reg[2]_2 (\DcBiasxD_reg[2]_2 ),
        .\DcBiasxD_reg[2]_3 (\DcBiasxD_reg[2]_3 ),
        .\DcBiasxD_reg[2]_4 (\DcBiasxD_reg[2]_4 ),
        .\DcBiasxD_reg[3] (\DcBiasxD_reg[3] ),
        .\DcBiasxD_reg[3]_0 (\DcBiasxD_reg[3]_1 ),
        .\DcBiasxD_reg[3]_1 (\DcBiasxD_reg[3]_2 ),
        .\DcBiasxD_reg[3]_2 (\DcBiasxD_reg[3]_3 ),
        .\DcBiasxD_reg[3]_3 (\DcBiasxD_reg[3]_4 ),
        .\DcBiasxD_reg[3]_4 (\DcBiasxD_reg[3]_5 ),
        .\DcBiasxD_reg[3]_5 (\DcBiasxD_reg[3]_6 ),
        .HdmiTxClkNxSO(HdmiTxClkNxSO),
        .HdmiTxClkPxSO(HdmiTxClkPxSO),
        .HdmiTxNxDO(HdmiTxNxDO),
        .HdmiTxPxDO(HdmiTxPxDO),
        .Q(\DcBiasxD_reg[3]_0 ),
        .RstxRI(AR),
        .TmdsEncodedDataxDO1_in(TmdsEncodedDataxDO1_in),
        .\TmdsEncodedDataxDO_reg[0] (\TmdsEncodedDataxDO_reg[0] ),
        .\TmdsEncodedDataxDO_reg[1] (\TmdsEncodedDataxDO_reg[1] ),
        .\TmdsEncodedDataxDO_reg[1]_0 (\TmdsEncodedDataxDO_reg[1]_0 ),
        .\TmdsEncodedDataxDO_reg[2] (\TmdsEncodedDataxDO_reg[2] ),
        .\TmdsEncodedDataxDO_reg[3] (\TmdsEncodedDataxDO_reg[3] ),
        .\TmdsEncodedDataxDO_reg[4] (\TmdsEncodedDataxDO_reg[4] ),
        .\TmdsEncodedDataxDO_reg[5] (\TmdsEncodedDataxDO_reg[5] ),
        .\TmdsEncodedDataxDO_reg[5]_0 ({\TmdsEncodedDataxDO_reg[5]_0 [2],VgaxI_n_10,\TmdsEncodedDataxDO_reg[5]_0 [1:0],VgaxI_n_11}),
        .\TmdsEncodedDataxDO_reg[6] (\TmdsEncodedDataxDO_reg[6] ),
        .\TmdsEncodedDataxDO_reg[6]_0 (\TmdsEncodedDataxDO_reg[6]_0 ),
        .\TmdsEncodedDataxDO_reg[6]_1 (\TmdsEncodedDataxDO_reg[6]_1 ),
        .\TmdsEncodedDataxDO_reg[7] (VgaxI_n_9),
        .\TmdsEncodedDataxDO_reg[7]_0 (\TmdsEncodedDataxDO_reg[7] ),
        .\TmdsEncodedDataxDO_reg[7]_1 (\TmdsEncodedDataxDO_reg[7]_0 ),
        .\TmdsEncodedDataxDO_reg[8] (\TmdsEncodedDataxDO_reg[8] ),
        .\TmdsEncodedDataxDO_reg[8]_0 (VidOnxS),
        .\TmdsEncodedDataxDO_reg[8]_1 (\TmdsEncodedDataxDO_reg[8]_1 ),
        .\TmdsEncodedDataxDO_reg[8]_2 (\TmdsEncodedDataxDO_reg[8]_2 ),
        .\TmdsEncodedDataxDO_reg[9] (\TmdsEncodedDataxDO_reg[9] ),
        .\TmdsEncodedDataxDO_reg[9]_0 (\TmdsEncodedDataxDO_reg[9]_0 ),
        .\TmdsEncodedDataxDO_reg[9]_1 (\TmdsEncodedDataxDO_reg[9]_1 ),
        .\TmdsEncodedDataxDO_reg[9]_2 (\TmdsEncodedDataxDO_reg[9]_2 ),
        .\TmdsEncodedDataxDO_reg[9]_3 (VidOnxS_reg_rep),
        .\VgaSyncxS_reg[HSyncxS] (\VgaSyncxS_reg[HSyncxS] ));
  vga VgaxI
       (.CO(CO),
        .ClkVgaxCO(ClkVgaxCO),
        .DI(DI),
        .\DataxD[21]_i_2 (\DataxD[21]_i_2 ),
        .\DataxD[21]_i_2_0 (\DataxD[21]_i_2_0 ),
        .\DataxD[21]_i_2_1 (\DataxD[21]_i_2_1 ),
        .\DataxD[21]_i_2_2 (\DataxD[21]_i_2_2 ),
        .\DataxD_reg[0] (\DataxD_reg[0] ),
        .\DataxD_reg[23] (\DataxD_reg[23] ),
        .\HCountxD_reg[15] (\HCountxD_reg[15] ),
        .\HCountxD_reg[15]_0 (\HCountxD_reg[15]_0 ),
        .\HCountxD_reg[6] (\HCountxD_reg[6] ),
        .\HCountxD_reg[6]_0 (\HCountxD_reg[6]_0 ),
        .\HCountxD_reg[7] (\HCountxD_reg[7] ),
        .PllLockedxSO(HdmiPllLockedxS),
        .Q(Q),
        .RstxRI(AR),
        .S(S),
        .\TmdsEncodedDataxDO_reg[0] (\DcBiasxD_reg[3]_1 ),
        .\TmdsEncodedDataxDO_reg[4] (\TmdsEncodedDataxDO_reg[4]_0 ),
        .\TmdsEncodedDataxDO_reg[8] (\TmdsEncodedDataxDO_reg[8]_0 ),
        .\VCountxD_reg[14] (\VCountxD_reg[14] ),
        .\VCountxD_reg[14]_0 (\VCountxD_reg[14]_0 ),
        .\VCountxD_reg[15] (\VCountxD_reg[15] ),
        .\VCountxD_reg[15]_0 (\VCountxD_reg[15]_0 ),
        .\VCountxD_reg[15]_1 (\VCountxD_reg[15]_1 ),
        .\VCountxD_reg[15]_2 (\VCountxD_reg[15]_2 ),
        .\VCountxD_reg[5] (\VCountxD_reg[5] ),
        .\VCountxD_reg[6] (\VCountxD_reg[6] ),
        .\VCountxD_reg[6]_0 (\VCountxD_reg[6]_0 ),
        .\VCountxD_reg[7] (\VCountxD_reg[7] ),
        .\VCountxD_reg[7]_0 (\VCountxD_reg[7]_0 ),
        .\VCountxD_reg[7]_1 (\VCountxD_reg[7]_1 ),
        .\VgaSyncxS_reg[HSyncxS] (\VgaSyncxS_reg[HSyncxS] ),
        .\VgaSyncxS_reg[VSyncxS] (\VgaSyncxS_reg[VSyncxS] ),
        .VidOnxS_reg(VidOnxS),
        .VidOnxS_reg_rep(VidOnxS_reg_rep),
        .VidOnxS_reg_rep_0(VgaxI_n_9),
        .VidOnxS_reg_rep_1(VidOnxS_reg_rep_0),
        .VidOnxS_reg_rep_2(VidOnxS_reg_rep_1),
        .VidOnxS_reg_rep__0(VidOnxS_reg_rep__0),
        .VidOnxS_reg_rep__0_0({VgaxI_n_10,VgaxI_n_11}),
        .VidOnxS_reg_rep__0_1(VidOnxS_reg_rep__0_0),
        .VidOnxS_reg_rep__0_2(VidOnxS_reg_rep__0_1),
        .VidOnxS_reg_rep__0_3(VidOnxS_reg_rep__0_2),
        .VidOnxS_reg_rep__0_4(VidOnxS_reg_rep__0_3),
        .VidOnxS_reg_rep__0_5(VidOnxS_reg_rep__0_4));
endmodule

module image_generator
   (CO,
    \VCountxD_reg[3] ,
    \VCountxD_reg[15] ,
    \VCountxD_reg[7] ,
    VidOnxS_reg_rep__0,
    VidOnxS_reg_rep,
    D,
    \DataxD_reg[12]_0 ,
    \DcBiasxD_reg[0] ,
    \DataxD_reg[9]_0 ,
    \DataxD_reg[8]_0 ,
    VidOnxS_reg_rep__0_0,
    \DataxD_reg[16]_0 ,
    \DcBiasxD_reg[2] ,
    \DcBiasxD[3]_i_21_0 ,
    \DataxD_reg[11]_0 ,
    \DataxD_reg[11]_1 ,
    \DataxD_reg[11]_2 ,
    \DataxD_reg[11]_3 ,
    \DcBiasxD_reg[0]_0 ,
    \DataxD_reg[14]_0 ,
    TmdsEncodedDataxDO1_in,
    \DataxD_reg[1]_0 ,
    \DcBiasxD_reg[0]_1 ,
    \DcBiasxD_reg[0]_2 ,
    VidOnxS_reg_rep__0_1,
    \DcBiasxD_reg[0]_3 ,
    VidOnxS_reg_rep__0_2,
    \DcBiasxD_reg[3] ,
    \DataxD_reg[17]_0 ,
    VidOnxS_reg_rep__0_3,
    VidOnxS_reg_rep__0_4,
    VidOnxS_reg_rep__0_5,
    \DataxD_reg[21]_0 ,
    \DataxD_reg[17]_1 ,
    \DataxD_reg[10]_0 ,
    VidOnxS_reg_rep__0_6,
    \DataxD_reg[8]_1 ,
    \VgaSyncxS_reg[VSyncxS]__0 ,
    VidOnxS_reg_rep_0,
    DI,
    S,
    \DataxD[21]_i_3 ,
    \DataxD3_inferred__1/i__carry__0_0 ,
    \DataxD3_inferred__1/i__carry__0_1 ,
    \DataxD[21]_i_3_0 ,
    \DataxD[21]_i_3_1 ,
    \DataxD3_inferred__3/i__carry__0_0 ,
    \DataxD3_inferred__3/i__carry__0_1 ,
    \DataxD[21]_i_4 ,
    Q,
    \DataxD3_inferred__5/i__carry__0_0 ,
    \DataxD3_inferred__5/i__carry__0_1 ,
    \DataxD[21]_i_4_0 ,
    \DataxD[21]_i_4_1 ,
    DataxD2_carry__0_0,
    DataxD2_carry__0_1,
    \DataxD[21]_i_5 ,
    \DataxD[21]_i_5_0 ,
    \DataxD2_inferred__4/i__carry__0_0 ,
    \DataxD2_inferred__4/i__carry__0_1 ,
    \DataxD_reg[0]_0 ,
    \DataxD_reg[0]_1 ,
    \DcBiasxD[3]_i_7_0 ,
    \DcBiasxD_reg[1] ,
    \DcBiasxD_reg[1]_0 ,
    \DcBiasxD_reg[2]_0 ,
    \TmdsEncodedDataxDO_reg[4] ,
    \TmdsEncodedDataxDO_reg[2] ,
    \TmdsEncodedDataxDO_reg[7] ,
    \DcBiasxD_reg[1]_1 ,
    \VgaSyncxS_reg[HSyncxS] ,
    \TmdsEncodedDataxDO_reg[2]_0 ,
    \DcBiasxD_reg[2]_1 ,
    VidOnxS,
    \TmdsEncodedDataxDO_reg[9] ,
    \TmdsEncodedDataxDO_reg[9]_0 ,
    \TmdsEncodedDataxDO_reg[1] ,
    \TmdsEncodedDataxDO_reg[1]_0 ,
    \TmdsEncodedDataxDO_reg[8] ,
    \VgaSyncxS_reg[VSyncxS] ,
    \TmdsEncodedDataxDO_reg[9]_1 ,
    \DataxD_reg[23]_0 ,
    ClkVgaxCO,
    AR);
  output [0:0]CO;
  output [0:0]\VCountxD_reg[3] ;
  output [0:0]\VCountxD_reg[15] ;
  output [0:0]\VCountxD_reg[7] ;
  output [0:0]VidOnxS_reg_rep__0;
  output [0:0]VidOnxS_reg_rep;
  output [0:0]D;
  output \DataxD_reg[12]_0 ;
  output \DcBiasxD_reg[0] ;
  output \DataxD_reg[9]_0 ;
  output \DataxD_reg[8]_0 ;
  output [2:0]VidOnxS_reg_rep__0_0;
  output [3:0]\DataxD_reg[16]_0 ;
  output \DcBiasxD_reg[2] ;
  output \DcBiasxD[3]_i_21_0 ;
  output \DataxD_reg[11]_0 ;
  output \DataxD_reg[11]_1 ;
  output \DataxD_reg[11]_2 ;
  output \DataxD_reg[11]_3 ;
  output \DcBiasxD_reg[0]_0 ;
  output \DataxD_reg[14]_0 ;
  output [7:0]TmdsEncodedDataxDO1_in;
  output \DataxD_reg[1]_0 ;
  output \DcBiasxD_reg[0]_1 ;
  output [3:0]\DcBiasxD_reg[0]_2 ;
  output VidOnxS_reg_rep__0_1;
  output [3:0]\DcBiasxD_reg[0]_3 ;
  output VidOnxS_reg_rep__0_2;
  output \DcBiasxD_reg[3] ;
  output \DataxD_reg[17]_0 ;
  output VidOnxS_reg_rep__0_3;
  output VidOnxS_reg_rep__0_4;
  output VidOnxS_reg_rep__0_5;
  output \DataxD_reg[21]_0 ;
  output \DataxD_reg[17]_1 ;
  output \DataxD_reg[10]_0 ;
  output VidOnxS_reg_rep__0_6;
  output \DataxD_reg[8]_1 ;
  output \VgaSyncxS_reg[VSyncxS]__0 ;
  output VidOnxS_reg_rep_0;
  input [2:0]DI;
  input [3:0]S;
  input [3:0]\DataxD[21]_i_3 ;
  input [2:0]\DataxD3_inferred__1/i__carry__0_0 ;
  input [3:0]\DataxD3_inferred__1/i__carry__0_1 ;
  input [3:0]\DataxD[21]_i_3_0 ;
  input [3:0]\DataxD[21]_i_3_1 ;
  input [3:0]\DataxD3_inferred__3/i__carry__0_0 ;
  input [3:0]\DataxD3_inferred__3/i__carry__0_1 ;
  input [3:0]\DataxD[21]_i_4 ;
  input [0:0]Q;
  input [2:0]\DataxD3_inferred__5/i__carry__0_0 ;
  input [3:0]\DataxD3_inferred__5/i__carry__0_1 ;
  input [3:0]\DataxD[21]_i_4_0 ;
  input [3:0]\DataxD[21]_i_4_1 ;
  input [3:0]DataxD2_carry__0_0;
  input [3:0]DataxD2_carry__0_1;
  input [0:0]\DataxD[21]_i_5 ;
  input [3:0]\DataxD[21]_i_5_0 ;
  input [3:0]\DataxD2_inferred__4/i__carry__0_0 ;
  input [3:0]\DataxD2_inferred__4/i__carry__0_1 ;
  input [3:0]\DataxD_reg[0]_0 ;
  input [3:0]\DataxD_reg[0]_1 ;
  input [3:0]\DcBiasxD[3]_i_7_0 ;
  input \DcBiasxD_reg[1] ;
  input \DcBiasxD_reg[1]_0 ;
  input \DcBiasxD_reg[2]_0 ;
  input \TmdsEncodedDataxDO_reg[4] ;
  input \TmdsEncodedDataxDO_reg[2] ;
  input \TmdsEncodedDataxDO_reg[7] ;
  input \DcBiasxD_reg[1]_1 ;
  input \VgaSyncxS_reg[HSyncxS] ;
  input [3:0]\TmdsEncodedDataxDO_reg[2]_0 ;
  input \DcBiasxD_reg[2]_1 ;
  input VidOnxS;
  input \TmdsEncodedDataxDO_reg[9] ;
  input \TmdsEncodedDataxDO_reg[9]_0 ;
  input [3:0]\TmdsEncodedDataxDO_reg[1] ;
  input \TmdsEncodedDataxDO_reg[1]_0 ;
  input \TmdsEncodedDataxDO_reg[8] ;
  input \VgaSyncxS_reg[VSyncxS] ;
  input \TmdsEncodedDataxDO_reg[9]_1 ;
  input [23:0]\DataxD_reg[23]_0 ;
  input ClkVgaxCO;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]CO;
  wire ClkVgaxCO;
  wire [0:0]D;
  wire [2:0]DI;
  wire [23:1]DataImGen2HDMIxD;
  wire [3:0]DataxD2_carry__0_0;
  wire [3:0]DataxD2_carry__0_1;
  wire DataxD2_carry_n_0;
  wire [3:0]\DataxD2_inferred__4/i__carry__0_0 ;
  wire [3:0]\DataxD2_inferred__4/i__carry__0_1 ;
  wire \DataxD2_inferred__4/i__carry_n_0 ;
  wire DataxD3_carry_n_0;
  wire [2:0]\DataxD3_inferred__1/i__carry__0_0 ;
  wire [3:0]\DataxD3_inferred__1/i__carry__0_1 ;
  wire \DataxD3_inferred__1/i__carry_n_0 ;
  wire [3:0]\DataxD3_inferred__3/i__carry__0_0 ;
  wire [3:0]\DataxD3_inferred__3/i__carry__0_1 ;
  wire \DataxD3_inferred__3/i__carry_n_0 ;
  wire [2:0]\DataxD3_inferred__5/i__carry__0_0 ;
  wire [3:0]\DataxD3_inferred__5/i__carry__0_1 ;
  wire \DataxD3_inferred__5/i__carry_n_0 ;
  wire [3:0]\DataxD[21]_i_3 ;
  wire [3:0]\DataxD[21]_i_3_0 ;
  wire [3:0]\DataxD[21]_i_3_1 ;
  wire [3:0]\DataxD[21]_i_4 ;
  wire [3:0]\DataxD[21]_i_4_0 ;
  wire [3:0]\DataxD[21]_i_4_1 ;
  wire [0:0]\DataxD[21]_i_5 ;
  wire [3:0]\DataxD[21]_i_5_0 ;
  wire [3:0]\DataxD_reg[0]_0 ;
  wire [3:0]\DataxD_reg[0]_1 ;
  wire \DataxD_reg[10]_0 ;
  wire \DataxD_reg[11]_0 ;
  wire \DataxD_reg[11]_1 ;
  wire \DataxD_reg[11]_2 ;
  wire \DataxD_reg[11]_3 ;
  wire \DataxD_reg[12]_0 ;
  wire \DataxD_reg[14]_0 ;
  wire [3:0]\DataxD_reg[16]_0 ;
  wire \DataxD_reg[17]_0 ;
  wire \DataxD_reg[17]_1 ;
  wire \DataxD_reg[1]_0 ;
  wire \DataxD_reg[21]_0 ;
  wire [23:0]\DataxD_reg[23]_0 ;
  wire \DataxD_reg[8]_0 ;
  wire \DataxD_reg[8]_1 ;
  wire \DataxD_reg[9]_0 ;
  wire \DcBiasxD[0]_i_2__0_n_0 ;
  wire \DcBiasxD[0]_i_2__1_n_0 ;
  wire \DcBiasxD[0]_i_3__0_n_0 ;
  wire \DcBiasxD[0]_i_3__1_n_0 ;
  wire \DcBiasxD[0]_i_4__0_n_0 ;
  wire \DcBiasxD[0]_i_4__1_n_0 ;
  wire \DcBiasxD[0]_i_5_n_0 ;
  wire \DcBiasxD[1]_i_10_n_0 ;
  wire \DcBiasxD[1]_i_11__0_n_0 ;
  wire \DcBiasxD[1]_i_12_n_0 ;
  wire \DcBiasxD[1]_i_13_n_0 ;
  wire \DcBiasxD[1]_i_14_n_0 ;
  wire \DcBiasxD[1]_i_15_n_0 ;
  wire \DcBiasxD[1]_i_16_n_0 ;
  wire \DcBiasxD[1]_i_2__1_n_0 ;
  wire \DcBiasxD[1]_i_3__0_n_0 ;
  wire \DcBiasxD[1]_i_3__1_n_0 ;
  wire \DcBiasxD[1]_i_3_n_0 ;
  wire \DcBiasxD[1]_i_4__1_n_0 ;
  wire \DcBiasxD[1]_i_4_n_0 ;
  wire \DcBiasxD[1]_i_5__0_n_0 ;
  wire \DcBiasxD[1]_i_5_n_0 ;
  wire \DcBiasxD[1]_i_6__0_n_0 ;
  wire \DcBiasxD[1]_i_6_n_0 ;
  wire \DcBiasxD[1]_i_7__0_n_0 ;
  wire \DcBiasxD[1]_i_7_n_0 ;
  wire \DcBiasxD[1]_i_8__0_n_0 ;
  wire \DcBiasxD[1]_i_8_n_0 ;
  wire \DcBiasxD[1]_i_9__0_n_0 ;
  wire \DcBiasxD[1]_i_9_n_0 ;
  wire \DcBiasxD[2]_i_2__0_n_0 ;
  wire \DcBiasxD[2]_i_2__1_n_0 ;
  wire \DcBiasxD[2]_i_3__0_n_0 ;
  wire \DcBiasxD[2]_i_4__0_n_0 ;
  wire \DcBiasxD[2]_i_5_n_0 ;
  wire \DcBiasxD[2]_i_6_n_0 ;
  wire \DcBiasxD[2]_i_7_n_0 ;
  wire \DcBiasxD[2]_i_8_n_0 ;
  wire \DcBiasxD[3]_i_10__0_n_0 ;
  wire \DcBiasxD[3]_i_11__1_n_0 ;
  wire \DcBiasxD[3]_i_11_n_0 ;
  wire \DcBiasxD[3]_i_12__1_n_0 ;
  wire \DcBiasxD[3]_i_13__0_n_0 ;
  wire \DcBiasxD[3]_i_13__1_n_0 ;
  wire \DcBiasxD[3]_i_13_n_0 ;
  wire \DcBiasxD[3]_i_14__0_n_0 ;
  wire \DcBiasxD[3]_i_14__1_n_0 ;
  wire \DcBiasxD[3]_i_14_n_0 ;
  wire \DcBiasxD[3]_i_15__0_n_0 ;
  wire \DcBiasxD[3]_i_15_n_0 ;
  wire \DcBiasxD[3]_i_16_n_0 ;
  wire \DcBiasxD[3]_i_17_n_0 ;
  wire \DcBiasxD[3]_i_18_n_0 ;
  wire \DcBiasxD[3]_i_19_n_0 ;
  wire \DcBiasxD[3]_i_20_n_0 ;
  wire \DcBiasxD[3]_i_21_0 ;
  wire \DcBiasxD[3]_i_21_n_0 ;
  wire \DcBiasxD[3]_i_22_n_0 ;
  wire \DcBiasxD[3]_i_2__1_n_0 ;
  wire \DcBiasxD[3]_i_3__0_n_0 ;
  wire \DcBiasxD[3]_i_3_n_0 ;
  wire \DcBiasxD[3]_i_4__0_n_0 ;
  wire \DcBiasxD[3]_i_4__1_n_0 ;
  wire \DcBiasxD[3]_i_5__0_n_0 ;
  wire \DcBiasxD[3]_i_5_n_0 ;
  wire \DcBiasxD[3]_i_6__0_n_0 ;
  wire \DcBiasxD[3]_i_6__1_n_0 ;
  wire [3:0]\DcBiasxD[3]_i_7_0 ;
  wire \DcBiasxD[3]_i_7__1_n_0 ;
  wire \DcBiasxD[3]_i_8__0_n_0 ;
  wire \DcBiasxD[3]_i_8__1_n_0 ;
  wire \DcBiasxD[3]_i_9__0_n_0 ;
  wire \DcBiasxD[3]_i_9__1_n_0 ;
  wire \DcBiasxD_reg[0] ;
  wire \DcBiasxD_reg[0]_0 ;
  wire \DcBiasxD_reg[0]_1 ;
  wire [3:0]\DcBiasxD_reg[0]_2 ;
  wire [3:0]\DcBiasxD_reg[0]_3 ;
  wire \DcBiasxD_reg[1] ;
  wire \DcBiasxD_reg[1]_0 ;
  wire \DcBiasxD_reg[1]_1 ;
  wire \DcBiasxD_reg[2] ;
  wire \DcBiasxD_reg[2]_0 ;
  wire \DcBiasxD_reg[2]_1 ;
  wire \DcBiasxD_reg[3] ;
  wire [0:0]Q;
  wire [3:0]S;
  wire [7:0]TmdsEncodedDataxDO1_in;
  wire \TmdsEncodedDataxDO[1]_i_2_n_0 ;
  wire \TmdsEncodedDataxDO[2]_i_2__0_n_0 ;
  wire \TmdsEncodedDataxDO[2]_i_2_n_0 ;
  wire \TmdsEncodedDataxDO[3]_i_2_n_0 ;
  wire \TmdsEncodedDataxDO[4]_i_2__0_n_0 ;
  wire \TmdsEncodedDataxDO[4]_i_2__1_n_0 ;
  wire \TmdsEncodedDataxDO[5]_i_2__0_n_0 ;
  wire \TmdsEncodedDataxDO[5]_i_2__1_n_0 ;
  wire \TmdsEncodedDataxDO[6]_i_2__0_n_0 ;
  wire \TmdsEncodedDataxDO[6]_i_2__1_n_0 ;
  wire \TmdsEncodedDataxDO[7]_i_2__0_n_0 ;
  wire \TmdsEncodedDataxDO[7]_i_2__1_n_0 ;
  wire \TmdsEncodedDataxDO[7]_i_2_n_0 ;
  wire \TmdsEncodedDataxDO[8]_i_3_n_0 ;
  wire \TmdsEncodedDataxDO[8]_i_4_n_0 ;
  wire \TmdsEncodedDataxDO[8]_i_5_n_0 ;
  wire \TmdsEncodedDataxDO[8]_i_6_n_0 ;
  wire \TmdsEncodedDataxDO[8]_i_7_n_0 ;
  wire [3:0]\TmdsEncodedDataxDO_reg[1] ;
  wire \TmdsEncodedDataxDO_reg[1]_0 ;
  wire \TmdsEncodedDataxDO_reg[2] ;
  wire [3:0]\TmdsEncodedDataxDO_reg[2]_0 ;
  wire \TmdsEncodedDataxDO_reg[4] ;
  wire \TmdsEncodedDataxDO_reg[7] ;
  wire \TmdsEncodedDataxDO_reg[8] ;
  wire \TmdsEncodedDataxDO_reg[9] ;
  wire \TmdsEncodedDataxDO_reg[9]_0 ;
  wire \TmdsEncodedDataxDO_reg[9]_1 ;
  wire [0:0]\VCountxD_reg[15] ;
  wire [0:0]\VCountxD_reg[3] ;
  wire [0:0]\VCountxD_reg[7] ;
  wire \VgaSyncxS_reg[HSyncxS] ;
  wire \VgaSyncxS_reg[VSyncxS] ;
  wire \VgaSyncxS_reg[VSyncxS]__0 ;
  wire VidOnxS;
  wire [0:0]VidOnxS_reg_rep;
  wire VidOnxS_reg_rep_0;
  wire [0:0]VidOnxS_reg_rep__0;
  wire [2:0]VidOnxS_reg_rep__0_0;
  wire VidOnxS_reg_rep__0_1;
  wire VidOnxS_reg_rep__0_2;
  wire VidOnxS_reg_rep__0_3;
  wire VidOnxS_reg_rep__0_4;
  wire VidOnxS_reg_rep__0_5;
  wire VidOnxS_reg_rep__0_6;
  wire [2:0]NLW_DataxD2_carry_CO_UNCONNECTED;
  wire [3:0]NLW_DataxD2_carry_O_UNCONNECTED;
  wire [2:0]NLW_DataxD2_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_DataxD2_carry__0_O_UNCONNECTED;
  wire [2:0]\NLW_DataxD2_inferred__4/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD2_inferred__4/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD2_inferred__4/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD2_inferred__4/i__carry__0_O_UNCONNECTED ;
  wire [2:0]NLW_DataxD3_carry_CO_UNCONNECTED;
  wire [3:0]NLW_DataxD3_carry_O_UNCONNECTED;
  wire [2:0]NLW_DataxD3_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_DataxD3_carry__0_O_UNCONNECTED;
  wire [2:0]\NLW_DataxD3_inferred__1/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD3_inferred__1/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD3_inferred__1/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD3_inferred__1/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD3_inferred__3/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD3_inferred__3/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD3_inferred__3/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD3_inferred__3/i__carry__0_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD3_inferred__5/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD3_inferred__5/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD3_inferred__5/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD3_inferred__5/i__carry__0_O_UNCONNECTED ;

  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 DataxD2_carry
       (.CI(1'b0),
        .CO({DataxD2_carry_n_0,NLW_DataxD2_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(DataxD2_carry__0_0),
        .O(NLW_DataxD2_carry_O_UNCONNECTED[3:0]),
        .S(DataxD2_carry__0_1));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 DataxD2_carry__0
       (.CI(DataxD2_carry_n_0),
        .CO({VidOnxS_reg_rep__0,NLW_DataxD2_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\DataxD[21]_i_5 }),
        .O(NLW_DataxD2_carry__0_O_UNCONNECTED[3:0]),
        .S(\DataxD[21]_i_5_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD2_inferred__4/i__carry 
       (.CI(1'b0),
        .CO({\DataxD2_inferred__4/i__carry_n_0 ,\NLW_DataxD2_inferred__4/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI(\DataxD2_inferred__4/i__carry__0_0 ),
        .O(\NLW_DataxD2_inferred__4/i__carry_O_UNCONNECTED [3:0]),
        .S(\DataxD2_inferred__4/i__carry__0_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD2_inferred__4/i__carry__0 
       (.CI(\DataxD2_inferred__4/i__carry_n_0 ),
        .CO({VidOnxS_reg_rep,\NLW_DataxD2_inferred__4/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\DataxD_reg[0]_0 ),
        .O(\NLW_DataxD2_inferred__4/i__carry__0_O_UNCONNECTED [3:0]),
        .S(\DataxD_reg[0]_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 DataxD3_carry
       (.CI(1'b0),
        .CO({DataxD3_carry_n_0,NLW_DataxD3_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({DI,1'b0}),
        .O(NLW_DataxD3_carry_O_UNCONNECTED[3:0]),
        .S(S));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 DataxD3_carry__0
       (.CI(DataxD3_carry_n_0),
        .CO({CO,NLW_DataxD3_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_DataxD3_carry__0_O_UNCONNECTED[3:0]),
        .S(\DataxD[21]_i_3 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD3_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\DataxD3_inferred__1/i__carry_n_0 ,\NLW_DataxD3_inferred__1/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\DataxD3_inferred__1/i__carry__0_0 [2],1'b0,\DataxD3_inferred__1/i__carry__0_0 [1:0]}),
        .O(\NLW_DataxD3_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S(\DataxD3_inferred__1/i__carry__0_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD3_inferred__1/i__carry__0 
       (.CI(\DataxD3_inferred__1/i__carry_n_0 ),
        .CO({\VCountxD_reg[3] ,\NLW_DataxD3_inferred__1/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\DataxD[21]_i_3_0 ),
        .O(\NLW_DataxD3_inferred__1/i__carry__0_O_UNCONNECTED [3:0]),
        .S(\DataxD[21]_i_3_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD3_inferred__3/i__carry 
       (.CI(1'b0),
        .CO({\DataxD3_inferred__3/i__carry_n_0 ,\NLW_DataxD3_inferred__3/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI(\DataxD3_inferred__3/i__carry__0_0 ),
        .O(\NLW_DataxD3_inferred__3/i__carry_O_UNCONNECTED [3:0]),
        .S(\DataxD3_inferred__3/i__carry__0_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD3_inferred__3/i__carry__0 
       (.CI(\DataxD3_inferred__3/i__carry_n_0 ),
        .CO({\VCountxD_reg[15] ,\NLW_DataxD3_inferred__3/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_DataxD3_inferred__3/i__carry__0_O_UNCONNECTED [3:0]),
        .S(\DataxD[21]_i_4 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD3_inferred__5/i__carry 
       (.CI(1'b0),
        .CO({\DataxD3_inferred__5/i__carry_n_0 ,\NLW_DataxD3_inferred__5/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({Q,\DataxD3_inferred__5/i__carry__0_0 }),
        .O(\NLW_DataxD3_inferred__5/i__carry_O_UNCONNECTED [3:0]),
        .S(\DataxD3_inferred__5/i__carry__0_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD3_inferred__5/i__carry__0 
       (.CI(\DataxD3_inferred__5/i__carry_n_0 ),
        .CO({\VCountxD_reg[7] ,\NLW_DataxD3_inferred__5/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\DataxD[21]_i_4_0 ),
        .O(\NLW_DataxD3_inferred__5/i__carry__0_O_UNCONNECTED [3:0]),
        .S(\DataxD[21]_i_4_1 ));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[0] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [0]),
        .Q(\DataxD_reg[16]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[10] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [10]),
        .Q(DataImGen2HDMIxD[10]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[11] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [11]),
        .Q(DataImGen2HDMIxD[11]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[12] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [12]),
        .Q(\DataxD_reg[16]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[13] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [13]),
        .Q(DataImGen2HDMIxD[13]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[14] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [14]),
        .Q(DataImGen2HDMIxD[14]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[15] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [15]),
        .Q(DataImGen2HDMIxD[15]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[16] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [16]),
        .Q(\DataxD_reg[16]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[17] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [17]),
        .Q(DataImGen2HDMIxD[17]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[18] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [18]),
        .Q(DataImGen2HDMIxD[18]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[19] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [19]),
        .Q(DataImGen2HDMIxD[19]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[1] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [1]),
        .Q(DataImGen2HDMIxD[1]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[20] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [20]),
        .Q(DataImGen2HDMIxD[20]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[21] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [21]),
        .Q(DataImGen2HDMIxD[21]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[22] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [22]),
        .Q(DataImGen2HDMIxD[22]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[23] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [23]),
        .Q(DataImGen2HDMIxD[23]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[2] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [2]),
        .Q(DataImGen2HDMIxD[2]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[3] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [3]),
        .Q(DataImGen2HDMIxD[3]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[4] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [4]),
        .Q(DataImGen2HDMIxD[4]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[5] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [5]),
        .Q(DataImGen2HDMIxD[5]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[6] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [6]),
        .Q(DataImGen2HDMIxD[6]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[7] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [7]),
        .Q(DataImGen2HDMIxD[7]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[8] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [8]),
        .Q(\DataxD_reg[16]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \DataxD_reg[9] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\DataxD_reg[23]_0 [9]),
        .Q(DataImGen2HDMIxD[9]));
  LUT5 #(
    .INIT(32'h906F6F90)) 
    \DcBiasxD[0]_i_1__0 
       (.I0(\DataxD_reg[1]_0 ),
        .I1(\DcBiasxD[0]_i_2__0_n_0 ),
        .I2(\DcBiasxD_reg[0]_1 ),
        .I3(\TmdsEncodedDataxDO_reg[2]_0 [0]),
        .I4(\DcBiasxD[0]_i_3__1_n_0 ),
        .O(\DcBiasxD_reg[0]_2 [0]));
  LUT5 #(
    .INIT(32'h609F9F60)) 
    \DcBiasxD[0]_i_1__1 
       (.I0(VidOnxS_reg_rep__0_2),
        .I1(\DcBiasxD[0]_i_2__1_n_0 ),
        .I2(\DcBiasxD[3]_i_6__1_n_0 ),
        .I3(\TmdsEncodedDataxDO_reg[1] [0]),
        .I4(\DcBiasxD[0]_i_3__0_n_0 ),
        .O(\DcBiasxD_reg[0]_3 [0]));
  LUT5 #(
    .INIT(32'h65A65565)) 
    \DcBiasxD[0]_i_2__0 
       (.I0(\TmdsEncodedDataxDO_reg[2]_0 [3]),
        .I1(\DcBiasxD[1]_i_11__0_n_0 ),
        .I2(\DcBiasxD[1]_i_12_n_0 ),
        .I3(\DcBiasxD[1]_i_13_n_0 ),
        .I4(\DcBiasxD[1]_i_14_n_0 ),
        .O(\DcBiasxD[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAAA6A665)) 
    \DcBiasxD[0]_i_2__1 
       (.I0(\TmdsEncodedDataxDO_reg[1] [3]),
        .I1(\DcBiasxD[2]_i_5_n_0 ),
        .I2(\DcBiasxD[2]_i_6_n_0 ),
        .I3(\DcBiasxD[2]_i_7_n_0 ),
        .I4(\DcBiasxD[2]_i_8_n_0 ),
        .O(\DcBiasxD[0]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h90606F9F)) 
    \DcBiasxD[0]_i_3 
       (.I0(DataImGen2HDMIxD[9]),
        .I1(\DataxD_reg[16]_0 [1]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .I3(DataImGen2HDMIxD[11]),
        .I4(\DcBiasxD[0]_i_5_n_0 ),
        .O(\DataxD_reg[9]_0 ));
  LUT5 #(
    .INIT(32'h960069FF)) 
    \DcBiasxD[0]_i_3__0 
       (.I0(DataImGen2HDMIxD[17]),
        .I1(\DataxD_reg[16]_0 [3]),
        .I2(DataImGen2HDMIxD[19]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(\DcBiasxD[0]_i_4__1_n_0 ),
        .O(\DcBiasxD[0]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h82287DD7)) 
    \DcBiasxD[0]_i_3__1 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(DataImGen2HDMIxD[3]),
        .I2(\DataxD_reg[16]_0 [0]),
        .I3(DataImGen2HDMIxD[1]),
        .I4(\DcBiasxD[0]_i_4__0_n_0 ),
        .O(\DcBiasxD[0]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h8E080000FFEF8E08)) 
    \DcBiasxD[0]_i_4 
       (.I0(\DcBiasxD[3]_i_15_n_0 ),
        .I1(\DcBiasxD[3]_i_18_n_0 ),
        .I2(\DcBiasxD_reg[1]_1 ),
        .I3(\DcBiasxD[3]_i_17_n_0 ),
        .I4(\DcBiasxD[3]_i_20_n_0 ),
        .I5(\DcBiasxD[3]_i_19_n_0 ),
        .O(\DataxD_reg[11]_1 ));
  LUT4 #(
    .INIT(16'h7BB7)) 
    \DcBiasxD[0]_i_4__0 
       (.I0(DataImGen2HDMIxD[5]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[7]),
        .I3(\DataxD_reg[16]_0 [0]),
        .O(\DcBiasxD[0]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h96A569A5)) 
    \DcBiasxD[0]_i_4__1 
       (.I0(\TmdsEncodedDataxDO[6]_i_2__0_n_0 ),
        .I1(DataImGen2HDMIxD[21]),
        .I2(\TmdsEncodedDataxDO[7]_i_2__1_n_0 ),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(\DataxD_reg[16]_0 [3]),
        .O(\DcBiasxD[0]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h695A965A)) 
    \DcBiasxD[0]_i_5 
       (.I0(\DataxD_reg[14]_0 ),
        .I1(DataImGen2HDMIxD[13]),
        .I2(\TmdsEncodedDataxDO[7]_i_2_n_0 ),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(\DataxD_reg[16]_0 [1]),
        .O(\DcBiasxD[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h42BDFFFF42BD0000)) 
    \DcBiasxD[1]_i_1 
       (.I0(\DataxD_reg[12]_0 ),
        .I1(\DcBiasxD[3]_i_7_0 [0]),
        .I2(\DcBiasxD[1]_i_3__0_n_0 ),
        .I3(\DcBiasxD_reg[1] ),
        .I4(\DcBiasxD_reg[1]_0 ),
        .I5(\DcBiasxD[1]_i_5_n_0 ),
        .O(D));
  LUT4 #(
    .INIT(16'h377F)) 
    \DcBiasxD[1]_i_10 
       (.I0(DataImGen2HDMIxD[9]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[11]),
        .I3(DataImGen2HDMIxD[10]),
        .O(\DcBiasxD[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h4F2FB0D0BFDF4020)) 
    \DcBiasxD[1]_i_11__0 
       (.I0(DataImGen2HDMIxD[6]),
        .I1(DataImGen2HDMIxD[5]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .I3(\DataxD_reg[1]_0 ),
        .I4(\TmdsEncodedDataxDO[3]_i_2_n_0 ),
        .I5(DataImGen2HDMIxD[4]),
        .O(\DcBiasxD[1]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'h8AEA7A1A7A1A8AEA)) 
    \DcBiasxD[1]_i_12 
       (.I0(\DataxD_reg[1]_0 ),
        .I1(DataImGen2HDMIxD[3]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .I3(DataImGen2HDMIxD[2]),
        .I4(\DataxD_reg[16]_0 [0]),
        .I5(DataImGen2HDMIxD[1]),
        .O(\DcBiasxD[1]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h3ACCCA33ACCCA333)) 
    \DcBiasxD[1]_i_13 
       (.I0(\DataxD_reg[16]_0 [0]),
        .I1(\DataxD_reg[1]_0 ),
        .I2(DataImGen2HDMIxD[7]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(\TmdsEncodedDataxDO[6]_i_2__1_n_0 ),
        .I5(DataImGen2HDMIxD[5]),
        .O(\DcBiasxD[1]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hD728FFFF)) 
    \DcBiasxD[1]_i_14 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(DataImGen2HDMIxD[5]),
        .I2(DataImGen2HDMIxD[7]),
        .I3(\TmdsEncodedDataxDO_reg[9]_0 ),
        .I4(\DcBiasxD[1]_i_16_n_0 ),
        .O(\DcBiasxD[1]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9669000069960000)) 
    \DcBiasxD[1]_i_15 
       (.I0(DataImGen2HDMIxD[7]),
        .I1(\DataxD_reg[16]_0 [0]),
        .I2(DataImGen2HDMIxD[6]),
        .I3(DataImGen2HDMIxD[5]),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(DataImGen2HDMIxD[4]),
        .O(\DcBiasxD[1]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9600)) 
    \DcBiasxD[1]_i_16 
       (.I0(DataImGen2HDMIxD[1]),
        .I1(\DataxD_reg[16]_0 [0]),
        .I2(DataImGen2HDMIxD[3]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .O(\DcBiasxD[1]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h24DBFFFF24DB0000)) 
    \DcBiasxD[1]_i_1__0 
       (.I0(\DataxD_reg[1]_0 ),
        .I1(\DcBiasxD[1]_i_3__1_n_0 ),
        .I2(\TmdsEncodedDataxDO_reg[2]_0 [0]),
        .I3(\DcBiasxD[1]_i_4__1_n_0 ),
        .I4(\DcBiasxD_reg[0]_1 ),
        .I5(\DcBiasxD[1]_i_5__0_n_0 ),
        .O(\DcBiasxD_reg[0]_2 [1]));
  LUT6 #(
    .INIT(64'h24DBFFFF24DB0000)) 
    \DcBiasxD[1]_i_1__1 
       (.I0(VidOnxS_reg_rep__0_2),
        .I1(\DcBiasxD[1]_i_2__1_n_0 ),
        .I2(\TmdsEncodedDataxDO_reg[1] [0]),
        .I3(\DcBiasxD[1]_i_3_n_0 ),
        .I4(\DcBiasxD[3]_i_6__1_n_0 ),
        .I5(\DcBiasxD[1]_i_4_n_0 ),
        .O(\DcBiasxD_reg[0]_3 [1]));
  LUT6 #(
    .INIT(64'h15007F155701FF57)) 
    \DcBiasxD[1]_i_2 
       (.I0(\DcBiasxD[1]_i_6_n_0 ),
        .I1(\DcBiasxD[1]_i_7_n_0 ),
        .I2(\DcBiasxD[1]_i_8__0_n_0 ),
        .I3(\DcBiasxD[1]_i_9_n_0 ),
        .I4(\DcBiasxD[1]_i_10_n_0 ),
        .I5(\DcBiasxD_reg[1]_1 ),
        .O(\DataxD_reg[12]_0 ));
  LUT6 #(
    .INIT(64'h80E880E880E8E8FE)) 
    \DcBiasxD[1]_i_2__0 
       (.I0(\DcBiasxD[1]_i_6__0_n_0 ),
        .I1(\DcBiasxD[1]_i_7__0_n_0 ),
        .I2(\DcBiasxD[1]_i_8_n_0 ),
        .I3(\DcBiasxD[1]_i_9__0_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[9]_0 ),
        .I5(\TmdsEncodedDataxDO[7]_i_2__0_n_0 ),
        .O(\DataxD_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \DcBiasxD[1]_i_2__1 
       (.I0(\DcBiasxD[0]_i_2__1_n_0 ),
        .I1(\DcBiasxD[0]_i_3__0_n_0 ),
        .O(\DcBiasxD[1]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \DcBiasxD[1]_i_3 
       (.I0(\DcBiasxD[2]_i_6_n_0 ),
        .I1(\DcBiasxD[2]_i_7_n_0 ),
        .I2(\DcBiasxD[2]_i_5_n_0 ),
        .I3(\DcBiasxD[2]_i_8_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[1] [1]),
        .O(\DcBiasxD[1]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DcBiasxD[1]_i_3__0 
       (.I0(\DataxD_reg[9]_0 ),
        .I1(\DcBiasxD_reg[2]_0 ),
        .O(\DcBiasxD[1]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DcBiasxD[1]_i_3__1 
       (.I0(\DcBiasxD[0]_i_2__0_n_0 ),
        .I1(\DcBiasxD[0]_i_3__1_n_0 ),
        .O(\DcBiasxD[1]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h6A9A9565)) 
    \DcBiasxD[1]_i_4 
       (.I0(\DcBiasxD[3]_i_8__1_n_0 ),
        .I1(\TmdsEncodedDataxDO_reg[1] [0]),
        .I2(\DcBiasxD[0]_i_3__0_n_0 ),
        .I3(VidOnxS_reg_rep__0_2),
        .I4(\TmdsEncodedDataxDO_reg[1] [1]),
        .O(\DcBiasxD[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \DcBiasxD[1]_i_4__1 
       (.I0(\DcBiasxD[1]_i_11__0_n_0 ),
        .I1(\DcBiasxD[1]_i_12_n_0 ),
        .I2(\DcBiasxD[1]_i_13_n_0 ),
        .I3(\DcBiasxD[1]_i_14_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[2]_0 [1]),
        .O(\DcBiasxD[1]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h65959A6A)) 
    \DcBiasxD[1]_i_5 
       (.I0(\DataxD_reg[8]_0 ),
        .I1(\DcBiasxD[3]_i_7_0 [0]),
        .I2(\DataxD_reg[9]_0 ),
        .I3(\DataxD_reg[12]_0 ),
        .I4(\DcBiasxD[3]_i_7_0 [1]),
        .O(\DcBiasxD[1]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h95656A9A)) 
    \DcBiasxD[1]_i_5__0 
       (.I0(\DcBiasxD[3]_i_9__0_n_0 ),
        .I1(\TmdsEncodedDataxDO_reg[2]_0 [0]),
        .I2(\DcBiasxD[0]_i_3__1_n_0 ),
        .I3(\DataxD_reg[1]_0 ),
        .I4(\TmdsEncodedDataxDO_reg[2]_0 [1]),
        .O(\DcBiasxD[1]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h00FF69FF69FFFFFF)) 
    \DcBiasxD[1]_i_6 
       (.I0(\DataxD_reg[16]_0 [2]),
        .I1(DataImGen2HDMIxD[14]),
        .I2(DataImGen2HDMIxD[13]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[15]),
        .I5(\DataxD_reg[16]_0 [1]),
        .O(\DcBiasxD[1]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h6F9FFFFF)) 
    \DcBiasxD[1]_i_6__0 
       (.I0(DataImGen2HDMIxD[1]),
        .I1(DataImGen2HDMIxD[2]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .I3(DataImGen2HDMIxD[3]),
        .I4(\DcBiasxD[1]_i_15_n_0 ),
        .O(\DcBiasxD[1]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h6996FFFF9669FFFF)) 
    \DcBiasxD[1]_i_7 
       (.I0(DataImGen2HDMIxD[15]),
        .I1(\DataxD_reg[16]_0 [1]),
        .I2(DataImGen2HDMIxD[13]),
        .I3(DataImGen2HDMIxD[14]),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(\DataxD_reg[16]_0 [2]),
        .O(\DcBiasxD[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h377F7F377F37377F)) 
    \DcBiasxD[1]_i_7__0 
       (.I0(DataImGen2HDMIxD[7]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(\DataxD_reg[16]_0 [0]),
        .I3(DataImGen2HDMIxD[4]),
        .I4(DataImGen2HDMIxD[5]),
        .I5(DataImGen2HDMIxD[6]),
        .O(\DcBiasxD[1]_i_7__0_n_0 ));
  LUT4 #(
    .INIT(16'h377F)) 
    \DcBiasxD[1]_i_8 
       (.I0(DataImGen2HDMIxD[1]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[2]),
        .I3(DataImGen2HDMIxD[3]),
        .O(\DcBiasxD[1]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h7BB7)) 
    \DcBiasxD[1]_i_8__0 
       (.I0(DataImGen2HDMIxD[11]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[9]),
        .I3(DataImGen2HDMIxD[10]),
        .O(\DcBiasxD[1]_i_8__0_n_0 ));
  LUT4 #(
    .INIT(16'hE800)) 
    \DcBiasxD[1]_i_9 
       (.I0(\DataxD_reg[16]_0 [2]),
        .I1(DataImGen2HDMIxD[13]),
        .I2(DataImGen2HDMIxD[14]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .O(\DcBiasxD[1]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hE800)) 
    \DcBiasxD[1]_i_9__0 
       (.I0(DataImGen2HDMIxD[4]),
        .I1(DataImGen2HDMIxD[5]),
        .I2(DataImGen2HDMIxD[6]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .O(\DcBiasxD[1]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'h960096FF96FF9600)) 
    \DcBiasxD[2]_i_1__0 
       (.I0(\DcBiasxD[3]_i_3_n_0 ),
        .I1(\DcBiasxD[3]_i_5_n_0 ),
        .I2(\DcBiasxD[3]_i_4__0_n_0 ),
        .I3(\DcBiasxD_reg[0]_1 ),
        .I4(\DcBiasxD[2]_i_2__0_n_0 ),
        .I5(\DcBiasxD_reg[2]_1 ),
        .O(\DcBiasxD_reg[0]_2 [2]));
  LUT6 #(
    .INIT(64'h606F6F606F60606F)) 
    \DcBiasxD[2]_i_1__1 
       (.I0(\DcBiasxD[3]_i_2__1_n_0 ),
        .I1(\DcBiasxD[2]_i_2__1_n_0 ),
        .I2(\DcBiasxD[3]_i_6__1_n_0 ),
        .I3(\DcBiasxD[2]_i_3__0_n_0 ),
        .I4(\DcBiasxD[2]_i_4__0_n_0 ),
        .I5(\TmdsEncodedDataxDO_reg[1] [2]),
        .O(\DcBiasxD_reg[0]_3 [2]));
  LUT6 #(
    .INIT(64'h0028BEFFBEFF0028)) 
    \DcBiasxD[2]_i_2 
       (.I0(\DataxD_reg[12]_0 ),
        .I1(\DataxD_reg[9]_0 ),
        .I2(\DcBiasxD_reg[2]_0 ),
        .I3(\DcBiasxD[3]_i_7_0 [0]),
        .I4(\DcBiasxD[3]_i_7_0 [1]),
        .I5(\DataxD_reg[8]_0 ),
        .O(\DcBiasxD_reg[0] ));
  LUT5 #(
    .INIT(32'hF9D190D1)) 
    \DcBiasxD[2]_i_2__0 
       (.I0(\DataxD_reg[1]_0 ),
        .I1(\DcBiasxD[3]_i_9__0_n_0 ),
        .I2(\TmdsEncodedDataxDO_reg[2]_0 [1]),
        .I3(\DcBiasxD[0]_i_3__1_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[2]_0 [0]),
        .O(\DcBiasxD[2]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h66996969)) 
    \DcBiasxD[2]_i_2__1 
       (.I0(\TmdsEncodedDataxDO_reg[1] [2]),
        .I1(\DcBiasxD[3]_i_9__1_n_0 ),
        .I2(\DcBiasxD[0]_i_2__1_n_0 ),
        .I3(\TmdsEncodedDataxDO_reg[1] [1]),
        .I4(\DcBiasxD[3]_i_8__1_n_0 ),
        .O(\DcBiasxD[2]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hF6746074)) 
    \DcBiasxD[2]_i_3__0 
       (.I0(VidOnxS_reg_rep__0_2),
        .I1(\DcBiasxD[3]_i_8__1_n_0 ),
        .I2(\TmdsEncodedDataxDO_reg[1] [1]),
        .I3(\DcBiasxD[0]_i_3__0_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[1] [0]),
        .O(\DcBiasxD[2]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hF740EAA2)) 
    \DcBiasxD[2]_i_4 
       (.I0(\DataxD_reg[12]_0 ),
        .I1(\DataxD_reg[9]_0 ),
        .I2(\DcBiasxD[3]_i_7_0 [0]),
        .I3(\DcBiasxD[3]_i_7_0 [1]),
        .I4(\DataxD_reg[8]_0 ),
        .O(\DcBiasxD_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h9AA6A665)) 
    \DcBiasxD[2]_i_4__0 
       (.I0(VidOnxS_reg_rep__0_2),
        .I1(\DcBiasxD[2]_i_5_n_0 ),
        .I2(\DcBiasxD[2]_i_6_n_0 ),
        .I3(\DcBiasxD[2]_i_7_n_0 ),
        .I4(\DcBiasxD[2]_i_8_n_0 ),
        .O(\DcBiasxD[2]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h09603FFC9FF63FFC)) 
    \DcBiasxD[2]_i_5 
       (.I0(DataImGen2HDMIxD[21]),
        .I1(\TmdsEncodedDataxDO[6]_i_2__0_n_0 ),
        .I2(\TmdsEncodedDataxDO[7]_i_2__1_n_0 ),
        .I3(VidOnxS_reg_rep__0_2),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(\DataxD_reg[16]_0 [3]),
        .O(\DcBiasxD[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h37B3C84CFB7F0480)) 
    \DcBiasxD[2]_i_6 
       (.I0(DataImGen2HDMIxD[21]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(VidOnxS_reg_rep__0_2),
        .I3(DataImGen2HDMIxD[22]),
        .I4(\TmdsEncodedDataxDO[4]_i_2__1_n_0 ),
        .I5(DataImGen2HDMIxD[20]),
        .O(\DcBiasxD[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6600960096FF99FF)) 
    \DcBiasxD[2]_i_7 
       (.I0(DataImGen2HDMIxD[17]),
        .I1(\DataxD_reg[16]_0 [3]),
        .I2(DataImGen2HDMIxD[18]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[19]),
        .I5(VidOnxS_reg_rep__0_2),
        .O(\DcBiasxD[2]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h00008228)) 
    \DcBiasxD[2]_i_8 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(DataImGen2HDMIxD[19]),
        .I2(\DataxD_reg[16]_0 [3]),
        .I3(DataImGen2HDMIxD[17]),
        .I4(\DcBiasxD[0]_i_4__1_n_0 ),
        .O(\DcBiasxD[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h4182204182044182)) 
    \DcBiasxD[3]_i_10 
       (.I0(\DcBiasxD[3]_i_15_n_0 ),
        .I1(\DcBiasxD[3]_i_20_n_0 ),
        .I2(\DcBiasxD[3]_i_19_n_0 ),
        .I3(\DcBiasxD[3]_i_17_n_0 ),
        .I4(\DcBiasxD_reg[1]_1 ),
        .I5(\DcBiasxD[3]_i_18_n_0 ),
        .O(\DataxD_reg[11]_2 ));
  LUT4 #(
    .INIT(16'hB2DB)) 
    \DcBiasxD[3]_i_10__0 
       (.I0(\DcBiasxD[1]_i_11__0_n_0 ),
        .I1(\DcBiasxD[1]_i_12_n_0 ),
        .I2(\DcBiasxD[1]_i_13_n_0 ),
        .I3(\DcBiasxD[1]_i_14_n_0 ),
        .O(\DcBiasxD[3]_i_10__0_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \DcBiasxD[3]_i_11 
       (.I0(\DataxD_reg[12]_0 ),
        .I1(\DataxD_reg[11]_1 ),
        .I2(\DcBiasxD[3]_i_7_0 [3]),
        .O(\DcBiasxD[3]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h74)) 
    \DcBiasxD[3]_i_11__1 
       (.I0(\TmdsEncodedDataxDO_reg[1] [0]),
        .I1(\DcBiasxD[0]_i_3__0_n_0 ),
        .I2(VidOnxS_reg_rep__0_2),
        .O(\DcBiasxD[3]_i_11__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \DcBiasxD[3]_i_12 
       (.I0(\DataxD_reg[12]_0 ),
        .I1(\DcBiasxD[3]_i_21_n_0 ),
        .O(\DcBiasxD[3]_i_21_0 ));
  LUT5 #(
    .INIT(32'hA69A65A6)) 
    \DcBiasxD[3]_i_12__0 
       (.I0(\DataxD_reg[1]_0 ),
        .I1(\DcBiasxD[1]_i_14_n_0 ),
        .I2(\DcBiasxD[1]_i_13_n_0 ),
        .I3(\DcBiasxD[1]_i_12_n_0 ),
        .I4(\DcBiasxD[1]_i_11__0_n_0 ),
        .O(VidOnxS_reg_rep__0_1));
  LUT4 #(
    .INIT(16'h9669)) 
    \DcBiasxD[3]_i_12__1 
       (.I0(VidOnxS_reg_rep__0_2),
        .I1(\DcBiasxD[3]_i_14__1_n_0 ),
        .I2(\DcBiasxD[2]_i_5_n_0 ),
        .I3(\DcBiasxD[2]_i_8_n_0 ),
        .O(\DcBiasxD[3]_i_12__1_n_0 ));
  LUT6 #(
    .INIT(64'hB2D44D2B24BDDB42)) 
    \DcBiasxD[3]_i_13 
       (.I0(\DcBiasxD[3]_i_18_n_0 ),
        .I1(\DcBiasxD_reg[1]_1 ),
        .I2(\TmdsEncodedDataxDO[7]_i_2_n_0 ),
        .I3(\DataxD_reg[12]_0 ),
        .I4(\DcBiasxD[3]_i_16_n_0 ),
        .I5(\DcBiasxD[3]_i_15_n_0 ),
        .O(\DcBiasxD[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h7FD5D57F40151540)) 
    \DcBiasxD[3]_i_13__0 
       (.I0(\TmdsEncodedDataxDO_reg[2]_0 [0]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[3]),
        .I3(\TmdsEncodedDataxDO[1]_i_2_n_0 ),
        .I4(\DcBiasxD[0]_i_4__0_n_0 ),
        .I5(\DataxD_reg[1]_0 ),
        .O(\DcBiasxD[3]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'h566A5556A995AAA9)) 
    \DcBiasxD[3]_i_13__1 
       (.I0(VidOnxS_reg_rep__0_2),
        .I1(\DcBiasxD[2]_i_8_n_0 ),
        .I2(\DcBiasxD[2]_i_7_n_0 ),
        .I3(\DcBiasxD[2]_i_6_n_0 ),
        .I4(\DcBiasxD[2]_i_5_n_0 ),
        .I5(\TmdsEncodedDataxDO_reg[1] [3]),
        .O(\DcBiasxD[3]_i_13__1_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \DcBiasxD[3]_i_14 
       (.I0(\DcBiasxD[3]_i_7_0 [0]),
        .I1(\DataxD_reg[9]_0 ),
        .I2(\DataxD_reg[12]_0 ),
        .O(\DcBiasxD[3]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \DcBiasxD[3]_i_14__0 
       (.I0(\DataxD_reg[1]_0 ),
        .I1(\DcBiasxD[1]_i_11__0_n_0 ),
        .I2(\DcBiasxD[1]_i_12_n_0 ),
        .I3(\DcBiasxD[1]_i_13_n_0 ),
        .I4(\DcBiasxD[1]_i_14_n_0 ),
        .O(\DcBiasxD[3]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'h6966666666966666)) 
    \DcBiasxD[3]_i_14__1 
       (.I0(\DcBiasxD[2]_i_7_n_0 ),
        .I1(\TmdsEncodedDataxDO[5]_i_2__0_n_0 ),
        .I2(DataImGen2HDMIxD[22]),
        .I3(VidOnxS_reg_rep__0_2),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(DataImGen2HDMIxD[21]),
        .O(\DcBiasxD[3]_i_14__1_n_0 ));
  LUT4 #(
    .INIT(16'h7BB7)) 
    \DcBiasxD[3]_i_15 
       (.I0(DataImGen2HDMIxD[11]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(\DataxD_reg[16]_0 [1]),
        .I3(DataImGen2HDMIxD[9]),
        .O(\DcBiasxD[3]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h59559A59A6AA65A6)) 
    \DcBiasxD[3]_i_15__0 
       (.I0(\DataxD_reg[1]_0 ),
        .I1(\DcBiasxD[1]_i_14_n_0 ),
        .I2(\DcBiasxD[1]_i_13_n_0 ),
        .I3(\DcBiasxD[1]_i_12_n_0 ),
        .I4(\DcBiasxD[1]_i_11__0_n_0 ),
        .I5(\TmdsEncodedDataxDO_reg[2]_0 [3]),
        .O(\DcBiasxD[3]_i_15__0_n_0 ));
  LUT6 #(
    .INIT(64'h36339333C9CC6CCC)) 
    \DcBiasxD[3]_i_16 
       (.I0(DataImGen2HDMIxD[14]),
        .I1(\DcBiasxD[3]_i_22_n_0 ),
        .I2(\DataxD_reg[12]_0 ),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[13]),
        .I5(\DcBiasxD[3]_i_20_n_0 ),
        .O(\DcBiasxD[3]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DcBiasxD[3]_i_17 
       (.I0(\TmdsEncodedDataxDO[7]_i_2_n_0 ),
        .I1(\DataxD_reg[12]_0 ),
        .O(\DcBiasxD[3]_i_17_n_0 ));
  LUT5 #(
    .INIT(32'h609F9F60)) 
    \DcBiasxD[3]_i_18 
       (.I0(DataImGen2HDMIxD[14]),
        .I1(\DataxD_reg[16]_0 [2]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .I3(\DataxD_reg[11]_0 ),
        .I4(\DataxD_reg[12]_0 ),
        .O(\DcBiasxD[3]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h8C7340BFC43B08F7)) 
    \DcBiasxD[3]_i_19 
       (.I0(DataImGen2HDMIxD[13]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(\DataxD_reg[12]_0 ),
        .I3(\DataxD_reg[11]_0 ),
        .I4(\DataxD_reg[16]_0 [2]),
        .I5(DataImGen2HDMIxD[14]),
        .O(\DcBiasxD[3]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h8E71FFFF8E710000)) 
    \DcBiasxD[3]_i_1__1 
       (.I0(\DcBiasxD[3]_i_2__1_n_0 ),
        .I1(\DcBiasxD[3]_i_3__0_n_0 ),
        .I2(\DcBiasxD[3]_i_4__1_n_0 ),
        .I3(\DcBiasxD[3]_i_5__0_n_0 ),
        .I4(\DcBiasxD[3]_i_6__1_n_0 ),
        .I5(\DcBiasxD[3]_i_7__1_n_0 ),
        .O(\DcBiasxD_reg[0]_3 [3]));
  LUT6 #(
    .INIT(64'h3C00960096FFC3FF)) 
    \DcBiasxD[3]_i_20 
       (.I0(DataImGen2HDMIxD[11]),
        .I1(DataImGen2HDMIxD[9]),
        .I2(\DataxD_reg[16]_0 [1]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[10]),
        .I5(\DataxD_reg[12]_0 ),
        .O(\DcBiasxD[3]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h4D44DD4DDD4DDBDD)) 
    \DcBiasxD[3]_i_21 
       (.I0(\DcBiasxD[3]_i_20_n_0 ),
        .I1(\DcBiasxD[3]_i_19_n_0 ),
        .I2(\DcBiasxD[3]_i_17_n_0 ),
        .I3(\DcBiasxD_reg[1]_1 ),
        .I4(\DcBiasxD[3]_i_18_n_0 ),
        .I5(\DcBiasxD[3]_i_15_n_0 ),
        .O(\DcBiasxD[3]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h9060609060909060)) 
    \DcBiasxD[3]_i_22 
       (.I0(\DataxD_reg[16]_0 [2]),
        .I1(DataImGen2HDMIxD[10]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .I3(\DataxD_reg[16]_0 [1]),
        .I4(DataImGen2HDMIxD[9]),
        .I5(DataImGen2HDMIxD[11]),
        .O(\DcBiasxD[3]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h8E71FFFF8E710000)) 
    \DcBiasxD[3]_i_2__0 
       (.I0(\DcBiasxD[3]_i_3_n_0 ),
        .I1(\DcBiasxD[3]_i_4__0_n_0 ),
        .I2(\DcBiasxD[3]_i_5_n_0 ),
        .I3(\DcBiasxD[3]_i_6__0_n_0 ),
        .I4(\DcBiasxD_reg[0]_1 ),
        .I5(\DcBiasxD[3]_i_8__0_n_0 ),
        .O(\DcBiasxD_reg[0]_2 [3]));
  LUT6 #(
    .INIT(64'h7FF7011001107FF7)) 
    \DcBiasxD[3]_i_2__1 
       (.I0(VidOnxS_reg_rep__0_2),
        .I1(\TmdsEncodedDataxDO_reg[1] [0]),
        .I2(\DcBiasxD[0]_i_3__0_n_0 ),
        .I3(\DcBiasxD[0]_i_2__1_n_0 ),
        .I4(\DcBiasxD[3]_i_8__1_n_0 ),
        .I5(\TmdsEncodedDataxDO_reg[1] [1]),
        .O(\DcBiasxD[3]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h1001F77F)) 
    \DcBiasxD[3]_i_3 
       (.I0(\DataxD_reg[1]_0 ),
        .I1(\TmdsEncodedDataxDO_reg[2]_0 [0]),
        .I2(\DcBiasxD[0]_i_3__1_n_0 ),
        .I3(\DcBiasxD[0]_i_2__0_n_0 ),
        .I4(\DcBiasxD[1]_i_4__1_n_0 ),
        .O(\DcBiasxD[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hBE)) 
    \DcBiasxD[3]_i_3__0 
       (.I0(\DcBiasxD[0]_i_2__1_n_0 ),
        .I1(\DcBiasxD[3]_i_8__1_n_0 ),
        .I2(\TmdsEncodedDataxDO_reg[1] [1]),
        .O(\DcBiasxD[3]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'h9F)) 
    \DcBiasxD[3]_i_4__0 
       (.I0(\DcBiasxD[3]_i_9__0_n_0 ),
        .I1(\TmdsEncodedDataxDO_reg[2]_0 [1]),
        .I2(\DcBiasxD[0]_i_2__0_n_0 ),
        .O(\DcBiasxD[3]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hD12E2ED1)) 
    \DcBiasxD[3]_i_4__1 
       (.I0(\DcBiasxD[3]_i_8__1_n_0 ),
        .I1(\TmdsEncodedDataxDO_reg[1] [1]),
        .I2(\DcBiasxD[0]_i_2__1_n_0 ),
        .I3(\DcBiasxD[3]_i_9__1_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[1] [2]),
        .O(\DcBiasxD[3]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h2ED1D12E)) 
    \DcBiasxD[3]_i_5 
       (.I0(\DcBiasxD[3]_i_9__0_n_0 ),
        .I1(\TmdsEncodedDataxDO_reg[2]_0 [1]),
        .I2(\DcBiasxD[0]_i_2__0_n_0 ),
        .I3(\DcBiasxD[3]_i_10__0_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[2]_0 [2]),
        .O(\DcBiasxD[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hD7B7D7DE)) 
    \DcBiasxD[3]_i_5__0 
       (.I0(\TmdsEncodedDataxDO_reg[1] [2]),
        .I1(\DcBiasxD[3]_i_9__1_n_0 ),
        .I2(\DcBiasxD[0]_i_2__1_n_0 ),
        .I3(\TmdsEncodedDataxDO_reg[1] [1]),
        .I4(\DcBiasxD[3]_i_8__1_n_0 ),
        .O(\DcBiasxD[3]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'h7DED7D7B)) 
    \DcBiasxD[3]_i_6__0 
       (.I0(\TmdsEncodedDataxDO_reg[2]_0 [2]),
        .I1(\DcBiasxD[3]_i_10__0_n_0 ),
        .I2(\DcBiasxD[0]_i_2__0_n_0 ),
        .I3(\TmdsEncodedDataxDO_reg[2]_0 [1]),
        .I4(\DcBiasxD[3]_i_9__0_n_0 ),
        .O(\DcBiasxD[3]_i_6__0_n_0 ));
  LUT4 #(
    .INIT(16'h4555)) 
    \DcBiasxD[3]_i_6__1 
       (.I0(\TmdsEncodedDataxDO_reg[1]_0 ),
        .I1(\DcBiasxD[0]_i_3__0_n_0 ),
        .I2(\DcBiasxD[3]_i_8__1_n_0 ),
        .I3(\DcBiasxD[3]_i_9__1_n_0 ),
        .O(\DcBiasxD[3]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h65A6A6A6656565A6)) 
    \DcBiasxD[3]_i_7 
       (.I0(\DcBiasxD[3]_i_11_n_0 ),
        .I1(\DcBiasxD[3]_i_7_0 [2]),
        .I2(\DcBiasxD[3]_i_21_0 ),
        .I3(\DcBiasxD[3]_i_13_n_0 ),
        .I4(\DcBiasxD[3]_i_7_0 [1]),
        .I5(\DcBiasxD[3]_i_14_n_0 ),
        .O(\DcBiasxD_reg[2] ));
  LUT4 #(
    .INIT(16'h5455)) 
    \DcBiasxD[3]_i_7__0 
       (.I0(\TmdsEncodedDataxDO_reg[9] ),
        .I1(\DcBiasxD[3]_i_9__0_n_0 ),
        .I2(\DcBiasxD[0]_i_3__1_n_0 ),
        .I3(\DcBiasxD[3]_i_10__0_n_0 ),
        .O(\DcBiasxD_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h2B22BB2BD4DD44D4)) 
    \DcBiasxD[3]_i_7__1 
       (.I0(\TmdsEncodedDataxDO_reg[1] [2]),
        .I1(\DcBiasxD[2]_i_4__0_n_0 ),
        .I2(\DcBiasxD[3]_i_11__1_n_0 ),
        .I3(\TmdsEncodedDataxDO_reg[1] [1]),
        .I4(\DcBiasxD[3]_i_12__1_n_0 ),
        .I5(\DcBiasxD[3]_i_13__1_n_0 ),
        .O(\DcBiasxD[3]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'h6C363636C96C6C6C)) 
    \DcBiasxD[3]_i_8 
       (.I0(\DcBiasxD[3]_i_15_n_0 ),
        .I1(\DcBiasxD[3]_i_16_n_0 ),
        .I2(\DcBiasxD[3]_i_17_n_0 ),
        .I3(\DataxD_reg[16]_0 [1]),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(\DcBiasxD[3]_i_18_n_0 ),
        .O(\DataxD_reg[8]_0 ));
  LUT6 #(
    .INIT(64'h2B22BB2BD4DD44D4)) 
    \DcBiasxD[3]_i_8__0 
       (.I0(\TmdsEncodedDataxDO_reg[2]_0 [2]),
        .I1(VidOnxS_reg_rep__0_1),
        .I2(\DcBiasxD[3]_i_13__0_n_0 ),
        .I3(\TmdsEncodedDataxDO_reg[2]_0 [1]),
        .I4(\DcBiasxD[3]_i_14__0_n_0 ),
        .I5(\DcBiasxD[3]_i_15__0_n_0 ),
        .O(\DcBiasxD[3]_i_8__0_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \DcBiasxD[3]_i_8__1 
       (.I0(\DcBiasxD[2]_i_8_n_0 ),
        .I1(\DcBiasxD[2]_i_5_n_0 ),
        .I2(\DcBiasxD[3]_i_14__1_n_0 ),
        .O(\DcBiasxD[3]_i_8__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \DcBiasxD[3]_i_9 
       (.I0(\DcBiasxD[3]_i_15_n_0 ),
        .I1(\DcBiasxD[3]_i_18_n_0 ),
        .I2(\DcBiasxD_reg[1]_1 ),
        .I3(\DcBiasxD[3]_i_17_n_0 ),
        .I4(\DcBiasxD[3]_i_19_n_0 ),
        .I5(\DcBiasxD[3]_i_20_n_0 ),
        .O(\DataxD_reg[11]_3 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \DcBiasxD[3]_i_9__0 
       (.I0(\DcBiasxD[1]_i_14_n_0 ),
        .I1(\DcBiasxD[1]_i_13_n_0 ),
        .I2(\DcBiasxD[1]_i_12_n_0 ),
        .I3(\DcBiasxD[1]_i_11__0_n_0 ),
        .O(\DcBiasxD[3]_i_9__0_n_0 ));
  LUT4 #(
    .INIT(16'hE87E)) 
    \DcBiasxD[3]_i_9__1 
       (.I0(\DcBiasxD[2]_i_8_n_0 ),
        .I1(\DcBiasxD[2]_i_7_n_0 ),
        .I2(\DcBiasxD[2]_i_6_n_0 ),
        .I3(\DcBiasxD[2]_i_5_n_0 ),
        .O(\DcBiasxD[3]_i_9__1_n_0 ));
  LUT6 #(
    .INIT(64'h5DFDF75708A8A202)) 
    \TmdsEncodedDataxDO[0]_i_1__0 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(\DataxD_reg[1]_0 ),
        .I2(\DcBiasxD_reg[0]_1 ),
        .I3(\DcBiasxD[0]_i_2__0_n_0 ),
        .I4(\DataxD_reg[16]_0 [0]),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(TmdsEncodedDataxDO1_in[0]));
  LUT5 #(
    .INIT(32'h82888222)) 
    \TmdsEncodedDataxDO[0]_i_1__1 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(\DataxD_reg[16]_0 [3]),
        .I2(\DcBiasxD[0]_i_2__1_n_0 ),
        .I3(\DcBiasxD[3]_i_6__1_n_0 ),
        .I4(VidOnxS_reg_rep__0_2),
        .O(VidOnxS_reg_rep__0_3));
  LUT6 #(
    .INIT(64'h9655FFFF96550000)) 
    \TmdsEncodedDataxDO[1]_i_1 
       (.I0(\TmdsEncodedDataxDO[1]_i_2_n_0 ),
        .I1(\DataxD_reg[1]_0 ),
        .I2(\DcBiasxD[0]_i_2__0_n_0 ),
        .I3(\DcBiasxD_reg[0]_1 ),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(TmdsEncodedDataxDO1_in[1]));
  LUT5 #(
    .INIT(32'h66969666)) 
    \TmdsEncodedDataxDO[1]_i_1__0 
       (.I0(DataImGen2HDMIxD[17]),
        .I1(\DataxD_reg[16]_0 [3]),
        .I2(\DcBiasxD[3]_i_6__1_n_0 ),
        .I3(\DcBiasxD[0]_i_2__1_n_0 ),
        .I4(VidOnxS_reg_rep__0_2),
        .O(\DataxD_reg[17]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \TmdsEncodedDataxDO[1]_i_1__1 
       (.I0(\DataxD_reg[16]_0 [1]),
        .I1(DataImGen2HDMIxD[9]),
        .I2(\TmdsEncodedDataxDO_reg[7] ),
        .O(\DataxD_reg[8]_1 ));
  LUT3 #(
    .INIT(8'h9F)) 
    \TmdsEncodedDataxDO[1]_i_2 
       (.I0(\DataxD_reg[16]_0 [0]),
        .I1(DataImGen2HDMIxD[1]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .O(\TmdsEncodedDataxDO[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hD77D7DD7)) 
    \TmdsEncodedDataxDO[2]_i_1 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(DataImGen2HDMIxD[9]),
        .I2(\DataxD_reg[16]_0 [1]),
        .I3(DataImGen2HDMIxD[10]),
        .I4(\TmdsEncodedDataxDO_reg[2] ),
        .O(VidOnxS_reg_rep__0_0[0]));
  LUT6 #(
    .INIT(64'hA6560000A656FFFF)) 
    \TmdsEncodedDataxDO[2]_i_1__0 
       (.I0(\TmdsEncodedDataxDO[2]_i_2_n_0 ),
        .I1(\DataxD_reg[1]_0 ),
        .I2(\DcBiasxD_reg[0]_1 ),
        .I3(\DcBiasxD[0]_i_2__0_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(TmdsEncodedDataxDO1_in[2]));
  LUT6 #(
    .INIT(64'hD7D7D77D7D7DD77D)) 
    \TmdsEncodedDataxDO[2]_i_1__1 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(DataImGen2HDMIxD[18]),
        .I2(\TmdsEncodedDataxDO[2]_i_2__0_n_0 ),
        .I3(VidOnxS_reg_rep__0_2),
        .I4(\DcBiasxD[3]_i_6__1_n_0 ),
        .I5(\DcBiasxD[0]_i_2__1_n_0 ),
        .O(VidOnxS_reg_rep__0_4));
  LUT4 #(
    .INIT(16'h69FF)) 
    \TmdsEncodedDataxDO[2]_i_2 
       (.I0(DataImGen2HDMIxD[1]),
        .I1(\DataxD_reg[16]_0 [0]),
        .I2(DataImGen2HDMIxD[2]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .O(\TmdsEncodedDataxDO[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h9F)) 
    \TmdsEncodedDataxDO[2]_i_2__0 
       (.I0(\DataxD_reg[16]_0 [3]),
        .I1(DataImGen2HDMIxD[17]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .O(\TmdsEncodedDataxDO[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \TmdsEncodedDataxDO[3]_i_1 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(DataImGen2HDMIxD[10]),
        .I2(\DataxD_reg[16]_0 [1]),
        .I3(DataImGen2HDMIxD[9]),
        .I4(DataImGen2HDMIxD[11]),
        .I5(\TmdsEncodedDataxDO_reg[7] ),
        .O(VidOnxS_reg_rep__0_0[1]));
  LUT6 #(
    .INIT(64'h69AAFFFF69AA0000)) 
    \TmdsEncodedDataxDO[3]_i_1__0 
       (.I0(\TmdsEncodedDataxDO[3]_i_2_n_0 ),
        .I1(\DataxD_reg[1]_0 ),
        .I2(\DcBiasxD[0]_i_2__0_n_0 ),
        .I3(\DcBiasxD_reg[0]_1 ),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(TmdsEncodedDataxDO1_in[3]));
  LUT5 #(
    .INIT(32'hA66A0000)) 
    \TmdsEncodedDataxDO[3]_i_1__1 
       (.I0(\TmdsEncodedDataxDO[4]_i_2__1_n_0 ),
        .I1(\DcBiasxD[3]_i_6__1_n_0 ),
        .I2(\DcBiasxD[0]_i_2__1_n_0 ),
        .I3(VidOnxS_reg_rep__0_2),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .O(VidOnxS_reg_rep__0_6));
  LUT5 #(
    .INIT(32'h48848448)) 
    \TmdsEncodedDataxDO[3]_i_2 
       (.I0(DataImGen2HDMIxD[3]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[2]),
        .I3(\DataxD_reg[16]_0 [0]),
        .I4(DataImGen2HDMIxD[1]),
        .O(\TmdsEncodedDataxDO[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h59A9000059A9FFFF)) 
    \TmdsEncodedDataxDO[4]_i_1__0 
       (.I0(\TmdsEncodedDataxDO[4]_i_2__0_n_0 ),
        .I1(\DataxD_reg[1]_0 ),
        .I2(\DcBiasxD_reg[0]_1 ),
        .I3(\DcBiasxD[0]_i_2__0_n_0 ),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(TmdsEncodedDataxDO1_in[4]));
  LUT6 #(
    .INIT(64'h7D7D7DD7D7D77DD7)) 
    \TmdsEncodedDataxDO[4]_i_1__1 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(DataImGen2HDMIxD[20]),
        .I2(\TmdsEncodedDataxDO[4]_i_2__1_n_0 ),
        .I3(VidOnxS_reg_rep__0_2),
        .I4(\DcBiasxD[3]_i_6__1_n_0 ),
        .I5(\DcBiasxD[0]_i_2__1_n_0 ),
        .O(VidOnxS_reg_rep__0_5));
  LUT6 #(
    .INIT(64'h9669699600000000)) 
    \TmdsEncodedDataxDO[4]_i_2__0 
       (.I0(DataImGen2HDMIxD[1]),
        .I1(\DataxD_reg[16]_0 [0]),
        .I2(DataImGen2HDMIxD[2]),
        .I3(DataImGen2HDMIxD[3]),
        .I4(DataImGen2HDMIxD[4]),
        .I5(\TmdsEncodedDataxDO_reg[4] ),
        .O(\TmdsEncodedDataxDO[4]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h48848448)) 
    \TmdsEncodedDataxDO[4]_i_2__1 
       (.I0(DataImGen2HDMIxD[19]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[18]),
        .I3(\DataxD_reg[16]_0 [3]),
        .I4(DataImGen2HDMIxD[17]),
        .O(\TmdsEncodedDataxDO[4]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h82282882)) 
    \TmdsEncodedDataxDO[5]_i_1 
       (.I0(\TmdsEncodedDataxDO_reg[4] ),
        .I1(\DataxD_reg[16]_0 [2]),
        .I2(\DataxD_reg[11]_0 ),
        .I3(DataImGen2HDMIxD[13]),
        .I4(\TmdsEncodedDataxDO_reg[7] ),
        .O(VidOnxS_reg_rep__0_0[2]));
  LUT6 #(
    .INIT(64'h9655FFFF96550000)) 
    \TmdsEncodedDataxDO[5]_i_1__0 
       (.I0(\TmdsEncodedDataxDO[5]_i_2__1_n_0 ),
        .I1(\DataxD_reg[1]_0 ),
        .I2(\DcBiasxD[0]_i_2__0_n_0 ),
        .I3(\DcBiasxD_reg[0]_1 ),
        .I4(VidOnxS),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(TmdsEncodedDataxDO1_in[5]));
  LUT5 #(
    .INIT(32'h66969666)) 
    \TmdsEncodedDataxDO[5]_i_1__1 
       (.I0(DataImGen2HDMIxD[21]),
        .I1(\TmdsEncodedDataxDO[5]_i_2__0_n_0 ),
        .I2(\DcBiasxD[3]_i_6__1_n_0 ),
        .I3(\DcBiasxD[0]_i_2__1_n_0 ),
        .I4(VidOnxS_reg_rep__0_2),
        .O(\DataxD_reg[21]_0 ));
  LUT5 #(
    .INIT(32'h96FF69FF)) 
    \TmdsEncodedDataxDO[5]_i_2 
       (.I0(DataImGen2HDMIxD[11]),
        .I1(DataImGen2HDMIxD[9]),
        .I2(\DataxD_reg[16]_0 [1]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[10]),
        .O(\DataxD_reg[11]_0 ));
  LUT6 #(
    .INIT(64'h9669699600000000)) 
    \TmdsEncodedDataxDO[5]_i_2__0 
       (.I0(DataImGen2HDMIxD[17]),
        .I1(\DataxD_reg[16]_0 [3]),
        .I2(DataImGen2HDMIxD[18]),
        .I3(DataImGen2HDMIxD[19]),
        .I4(DataImGen2HDMIxD[20]),
        .I5(\TmdsEncodedDataxDO_reg[4] ),
        .O(\TmdsEncodedDataxDO[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hB77B7BB748848448)) 
    \TmdsEncodedDataxDO[5]_i_2__1 
       (.I0(DataImGen2HDMIxD[5]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[4]),
        .I3(DataImGen2HDMIxD[3]),
        .I4(DataImGen2HDMIxD[2]),
        .I5(\TmdsEncodedDataxDO[1]_i_2_n_0 ),
        .O(\TmdsEncodedDataxDO[5]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h59A9000059A9FFFF)) 
    \TmdsEncodedDataxDO[6]_i_1__0 
       (.I0(\TmdsEncodedDataxDO[6]_i_2__1_n_0 ),
        .I1(\DataxD_reg[1]_0 ),
        .I2(\DcBiasxD_reg[0]_1 ),
        .I3(\DcBiasxD[0]_i_2__0_n_0 ),
        .I4(VidOnxS),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(TmdsEncodedDataxDO1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hB487)) 
    \TmdsEncodedDataxDO[6]_i_1__1 
       (.I0(\DcBiasxD[0]_i_2__1_n_0 ),
        .I1(\DcBiasxD[3]_i_6__1_n_0 ),
        .I2(\TmdsEncodedDataxDO[6]_i_2__0_n_0 ),
        .I3(VidOnxS_reg_rep__0_2),
        .O(\DcBiasxD_reg[3] ));
  LUT5 #(
    .INIT(32'h6F909F60)) 
    \TmdsEncodedDataxDO[6]_i_2 
       (.I0(DataImGen2HDMIxD[14]),
        .I1(\DataxD_reg[16]_0 [2]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .I3(\DataxD_reg[11]_0 ),
        .I4(DataImGen2HDMIxD[13]),
        .O(\DataxD_reg[14]_0 ));
  LUT5 #(
    .INIT(32'h69CC96CC)) 
    \TmdsEncodedDataxDO[6]_i_2__0 
       (.I0(DataImGen2HDMIxD[22]),
        .I1(\TmdsEncodedDataxDO[4]_i_2__1_n_0 ),
        .I2(DataImGen2HDMIxD[20]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[21]),
        .O(\TmdsEncodedDataxDO[6]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h69CC96CC)) 
    \TmdsEncodedDataxDO[6]_i_2__1 
       (.I0(DataImGen2HDMIxD[6]),
        .I1(\TmdsEncodedDataxDO[3]_i_2_n_0 ),
        .I2(DataImGen2HDMIxD[4]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[5]),
        .O(\TmdsEncodedDataxDO[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h69AAFFFF69AA0000)) 
    \TmdsEncodedDataxDO[7]_i_1 
       (.I0(\TmdsEncodedDataxDO[7]_i_2__0_n_0 ),
        .I1(\DataxD_reg[1]_0 ),
        .I2(\DcBiasxD[0]_i_2__0_n_0 ),
        .I3(\DcBiasxD_reg[0]_1 ),
        .I4(VidOnxS),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(TmdsEncodedDataxDO1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hA66A)) 
    \TmdsEncodedDataxDO[7]_i_1__0 
       (.I0(\TmdsEncodedDataxDO[7]_i_2__1_n_0 ),
        .I1(\DcBiasxD[3]_i_6__1_n_0 ),
        .I2(\DcBiasxD[0]_i_2__1_n_0 ),
        .I3(VidOnxS_reg_rep__0_2),
        .O(\DataxD_reg[17]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \TmdsEncodedDataxDO[7]_i_1__1 
       (.I0(\TmdsEncodedDataxDO[7]_i_2_n_0 ),
        .I1(\TmdsEncodedDataxDO_reg[7] ),
        .O(\DataxD_reg[10]_0 ));
  LUT5 #(
    .INIT(32'h96556955)) 
    \TmdsEncodedDataxDO[7]_i_2 
       (.I0(\DcBiasxD[1]_i_7_n_0 ),
        .I1(DataImGen2HDMIxD[10]),
        .I2(DataImGen2HDMIxD[9]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[11]),
        .O(\TmdsEncodedDataxDO[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9F6F60906F9F9060)) 
    \TmdsEncodedDataxDO[7]_i_2__0 
       (.I0(DataImGen2HDMIxD[7]),
        .I1(DataImGen2HDMIxD[5]),
        .I2(\TmdsEncodedDataxDO_reg[4] ),
        .I3(DataImGen2HDMIxD[4]),
        .I4(\TmdsEncodedDataxDO[3]_i_2_n_0 ),
        .I5(DataImGen2HDMIxD[6]),
        .O(\TmdsEncodedDataxDO[7]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h69AA96AA)) 
    \TmdsEncodedDataxDO[7]_i_2__1 
       (.I0(\TmdsEncodedDataxDO[8]_i_6_n_0 ),
        .I1(DataImGen2HDMIxD[17]),
        .I2(DataImGen2HDMIxD[18]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[19]),
        .O(\TmdsEncodedDataxDO[7]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hE880FCC0FCC0FEE8)) 
    \TmdsEncodedDataxDO[8]_i_1 
       (.I0(\TmdsEncodedDataxDO_reg[8] ),
        .I1(\TmdsEncodedDataxDO[8]_i_3_n_0 ),
        .I2(\TmdsEncodedDataxDO[8]_i_4_n_0 ),
        .I3(\TmdsEncodedDataxDO[8]_i_5_n_0 ),
        .I4(\TmdsEncodedDataxDO[8]_i_6_n_0 ),
        .I5(\TmdsEncodedDataxDO[8]_i_7_n_0 ),
        .O(VidOnxS_reg_rep__0_2));
  LUT4 #(
    .INIT(16'h377F)) 
    \TmdsEncodedDataxDO[8]_i_3 
       (.I0(DataImGen2HDMIxD[20]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[21]),
        .I3(DataImGen2HDMIxD[22]),
        .O(\TmdsEncodedDataxDO[8]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h377F)) 
    \TmdsEncodedDataxDO[8]_i_4 
       (.I0(DataImGen2HDMIxD[17]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[18]),
        .I3(DataImGen2HDMIxD[19]),
        .O(\TmdsEncodedDataxDO[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00FF69FF69FFFFFF)) 
    \TmdsEncodedDataxDO[8]_i_5 
       (.I0(DataImGen2HDMIxD[20]),
        .I1(DataImGen2HDMIxD[21]),
        .I2(DataImGen2HDMIxD[22]),
        .I3(\TmdsEncodedDataxDO_reg[4] ),
        .I4(DataImGen2HDMIxD[23]),
        .I5(\DataxD_reg[16]_0 [3]),
        .O(\TmdsEncodedDataxDO[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9669000069960000)) 
    \TmdsEncodedDataxDO[8]_i_6 
       (.I0(DataImGen2HDMIxD[23]),
        .I1(\DataxD_reg[16]_0 [3]),
        .I2(DataImGen2HDMIxD[22]),
        .I3(DataImGen2HDMIxD[21]),
        .I4(\TmdsEncodedDataxDO_reg[4] ),
        .I5(DataImGen2HDMIxD[20]),
        .O(\TmdsEncodedDataxDO[8]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h8448)) 
    \TmdsEncodedDataxDO[8]_i_7 
       (.I0(DataImGen2HDMIxD[19]),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(DataImGen2HDMIxD[18]),
        .I3(DataImGen2HDMIxD[17]),
        .O(\TmdsEncodedDataxDO[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAC3AAC300C3FFC3)) 
    \VgaToHdmixI/TmdsEncoderC0xI/TmdsEncodedDataxDO[9]_i_1 
       (.I0(\DcBiasxD[0]_i_2__0_n_0 ),
        .I1(\VgaSyncxS_reg[VSyncxS] ),
        .I2(\VgaSyncxS_reg[HSyncxS] ),
        .I3(VidOnxS),
        .I4(\DataxD_reg[1]_0 ),
        .I5(\DcBiasxD_reg[0]_1 ),
        .O(\VgaSyncxS_reg[VSyncxS]__0 ));
  LUT4 #(
    .INIT(16'h5F3F)) 
    \VgaToHdmixI/TmdsEncoderC2xI/TmdsEncodedDataxDO[9]_i_1 
       (.I0(\DcBiasxD[0]_i_2__1_n_0 ),
        .I1(VidOnxS_reg_rep__0_2),
        .I2(\TmdsEncodedDataxDO_reg[9]_1 ),
        .I3(\DcBiasxD[3]_i_6__1_n_0 ),
        .O(VidOnxS_reg_rep_0));
endmodule

(* C_AXI4_ADDR_SIZE = "12" *) (* C_AXI4_DATA_SIZE = "32" *) (* C_CHANNEL_NUMBER = "4" *) 
(* C_GPIO_SIZE = "8" *) (* C_HDMI_LATENCY = "0" *) (* ECO_CHECKSUM = "3743f0c5" *) 
(* POWER_OPT_BRAM_CDC = "0" *) (* POWER_OPT_BRAM_SR_ADDR = "2" *) (* POWER_OPT_LOOPED_NET_PERCENTAGE = "0" *) 
(* NotValidForBitStream *)
module mandelbrot_pinout
   (ClkSys100MhzxCI,
    ResetxRNI,
    LedxDO,
    HdmiTxRsclxSO,
    HdmiTxRsdaxSIO,
    HdmiTxHpdxSI,
    HdmiTxCecxSIO,
    HdmiTxClkPxSO,
    HdmiTxClkNxSO,
    HdmiTxPxDO,
    HdmiTxNxDO);
  input ClkSys100MhzxCI;
  input ResetxRNI;
  output [7:0]LedxDO;
  output HdmiTxRsclxSO;
  inout HdmiTxRsdaxSIO;
  input HdmiTxHpdxSI;
  inout HdmiTxCecxSIO;
  output HdmiTxClkPxSO;
  output HdmiTxClkNxSO;
  output [2:0]HdmiTxPxDO;
  output [2:0]HdmiTxNxDO;

  wire ClkSys100MhzBufgxC;
  wire ClkSys100MhzxCI;
  wire ClkSys100MhzxCI_IBUF;
  wire ClkVgaxC;
  wire [16:0]DataImGen2HDMIxD;
  wire DataxD2;
  wire DataxD214_in;
  wire DataxD3;
  wire DataxD31_in;
  wire DataxD33_in;
  wire DataxD35_in;
  wire [31:0]FlagColor1RegPortxDN;
  wire [31:0]FlagColor1RegPortxDP;
  wire [31:0]FlagColor2RegPortxDP;
  wire FlagColor3RegPortxDN;
  wire [31:0]FlagColor3RegPortxDP;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_10 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_11 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_12 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_13 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_18 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_19 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_20 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_21 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_22 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_23 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_24 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_25 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_34 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_35 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_36 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_37 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_38 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_39 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_40 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_41 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_42 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_43 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_44 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_45 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_46 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_47 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_48 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_49 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_50 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_51 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_52 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_53 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_54 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_55 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_56 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_57 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_6 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_7 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_8 ;
  wire \FpgaUserCDxB.ImageGeneratorxI_n_9 ;
  wire HdmiTxClkNxSO;
  wire HdmiTxClkPxSO;
  wire [2:0]HdmiTxNxDO;
  wire [2:0]HdmiTxPxDO;
  wire HdmiTxRsclxSO;
  wire InterruptRegPortxDN;
  wire [31:0]InterruptRegPortxDP;
  wire [7:0]LedsxD;
  wire [7:0]LedxDO;
  wire [7:0]LedxDO_OBUF;
  wire [23:0]RdDataFlagColor1xDP;
  wire [31:0]RdDataxD;
  wire RdEnFlagColor1xS;
  wire ResetxRNI;
  wire ResetxRNI_IBUF;
  wire RstPllLockedxS;
  wire [7:0]TmdsEncodedDataxDO1_in;
  wire \UBlazeCDxB.UblazeSoPCxI_n_100 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_101 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_102 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_103 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_104 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_105 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_106 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_107 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_108 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_109 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_110 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_75 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_78 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_79 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_80 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_81 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_82 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_83 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_84 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_85 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_86 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_87 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_88 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_89 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_90 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_91 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_92 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_93 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_94 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_95 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_96 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_97 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_98 ;
  wire \UBlazeCDxB.UblazeSoPCxI_n_99 ;
  wire UBlazePllNotLockedxS;
  wire UBlazeUserClkxC;
  wire [7:1]VCountxD;
  wire \VgaHdmiCDxB.HdmixI_n_119 ;
  wire \VgaHdmiCDxB.HdmixI_n_120 ;
  wire \VgaHdmiCDxB.HdmixI_n_121 ;
  wire \VgaHdmiCDxB.HdmixI_n_122 ;
  wire \VgaHdmiCDxB.HdmixI_n_123 ;
  wire \VgaHdmiCDxB.HdmixI_n_124 ;
  wire \VgaHdmiCDxB.HdmixI_n_125 ;
  wire \VgaHdmiCDxB.HdmixI_n_126 ;
  wire \VgaHdmiCDxB.HdmixI_n_127 ;
  wire \VgaHdmiCDxB.HdmixI_n_128 ;
  wire \VgaHdmiCDxB.HdmixI_n_129 ;
  wire \VgaHdmiCDxB.HdmixI_n_13 ;
  wire \VgaHdmiCDxB.HdmixI_n_130 ;
  wire \VgaHdmiCDxB.HdmixI_n_131 ;
  wire \VgaHdmiCDxB.HdmixI_n_132 ;
  wire \VgaHdmiCDxB.HdmixI_n_133 ;
  wire \VgaHdmiCDxB.HdmixI_n_134 ;
  wire \VgaHdmiCDxB.HdmixI_n_135 ;
  wire \VgaHdmiCDxB.HdmixI_n_136 ;
  wire \VgaHdmiCDxB.HdmixI_n_137 ;
  wire \VgaHdmiCDxB.HdmixI_n_138 ;
  wire \VgaHdmiCDxB.HdmixI_n_139 ;
  wire \VgaHdmiCDxB.HdmixI_n_14 ;
  wire \VgaHdmiCDxB.HdmixI_n_140 ;
  wire \VgaHdmiCDxB.HdmixI_n_141 ;
  wire \VgaHdmiCDxB.HdmixI_n_142 ;
  wire \VgaHdmiCDxB.HdmixI_n_143 ;
  wire \VgaHdmiCDxB.HdmixI_n_144 ;
  wire \VgaHdmiCDxB.HdmixI_n_18 ;
  wire \VgaHdmiCDxB.HdmixI_n_19 ;
  wire \VgaHdmiCDxB.HdmixI_n_21 ;
  wire \VgaHdmiCDxB.HdmixI_n_22 ;
  wire \VgaHdmiCDxB.HdmixI_n_23 ;
  wire \VgaHdmiCDxB.HdmixI_n_24 ;
  wire \VgaHdmiCDxB.HdmixI_n_25 ;
  wire \VgaHdmiCDxB.HdmixI_n_26 ;
  wire \VgaHdmiCDxB.HdmixI_n_27 ;
  wire \VgaHdmiCDxB.HdmixI_n_28 ;
  wire \VgaHdmiCDxB.HdmixI_n_29 ;
  wire \VgaHdmiCDxB.HdmixI_n_30 ;
  wire \VgaHdmiCDxB.HdmixI_n_31 ;
  wire \VgaHdmiCDxB.HdmixI_n_32 ;
  wire \VgaHdmiCDxB.HdmixI_n_33 ;
  wire \VgaHdmiCDxB.HdmixI_n_34 ;
  wire \VgaHdmiCDxB.HdmixI_n_35 ;
  wire \VgaHdmiCDxB.HdmixI_n_36 ;
  wire \VgaHdmiCDxB.HdmixI_n_37 ;
  wire \VgaHdmiCDxB.HdmixI_n_38 ;
  wire \VgaHdmiCDxB.HdmixI_n_39 ;
  wire \VgaHdmiCDxB.HdmixI_n_40 ;
  wire \VgaHdmiCDxB.HdmixI_n_41 ;
  wire \VgaHdmiCDxB.HdmixI_n_42 ;
  wire \VgaHdmiCDxB.HdmixI_n_43 ;
  wire \VgaHdmiCDxB.HdmixI_n_44 ;
  wire \VgaHdmiCDxB.HdmixI_n_45 ;
  wire \VgaHdmiCDxB.HdmixI_n_46 ;
  wire \VgaHdmiCDxB.HdmixI_n_47 ;
  wire \VgaHdmiCDxB.HdmixI_n_48 ;
  wire \VgaHdmiCDxB.HdmixI_n_49 ;
  wire \VgaHdmiCDxB.HdmixI_n_50 ;
  wire \VgaHdmiCDxB.HdmixI_n_51 ;
  wire \VgaHdmiCDxB.HdmixI_n_52 ;
  wire \VgaHdmiCDxB.HdmixI_n_53 ;
  wire \VgaHdmiCDxB.HdmixI_n_54 ;
  wire \VgaHdmiCDxB.HdmixI_n_55 ;
  wire \VgaHdmiCDxB.HdmixI_n_56 ;
  wire \VgaHdmiCDxB.HdmixI_n_57 ;
  wire \VgaHdmiCDxB.HdmixI_n_58 ;
  wire \VgaHdmiCDxB.HdmixI_n_59 ;
  wire \VgaHdmiCDxB.HdmixI_n_60 ;
  wire \VgaHdmiCDxB.HdmixI_n_61 ;
  wire \VgaHdmiCDxB.HdmixI_n_62 ;
  wire \VgaHdmiCDxB.HdmixI_n_63 ;
  wire \VgaHdmiCDxB.HdmixI_n_64 ;
  wire \VgaHdmiCDxB.HdmixI_n_65 ;
  wire \VgaHdmiCDxB.HdmixI_n_66 ;
  wire \VgaHdmiCDxB.HdmixI_n_67 ;
  wire \VgaHdmiCDxB.HdmixI_n_68 ;
  wire \VgaHdmiCDxB.HdmixI_n_69 ;
  wire \VgaHdmiCDxB.HdmixI_n_70 ;
  wire \VgaHdmiCDxB.HdmixI_n_71 ;
  wire \VgaHdmiCDxB.HdmixI_n_72 ;
  wire \VgaHdmiCDxB.HdmixI_n_73 ;
  wire \VgaHdmiCDxB.HdmixI_n_74 ;
  wire \VgaHdmiCDxB.HdmixI_n_75 ;
  wire \VgaHdmiCDxB.HdmixI_n_76 ;
  wire \VgaHdmiCDxB.HdmixI_n_77 ;
  wire \VgaHdmiCDxB.HdmixI_n_78 ;
  wire \VgaHdmiCDxB.HdmixI_n_79 ;
  wire \VgaHdmiCDxB.HdmixI_n_80 ;
  wire \VgaHdmiCDxB.HdmixI_n_81 ;
  wire \VgaHdmiCDxB.HdmixI_n_82 ;
  wire \VgaHdmiCDxB.HdmixI_n_83 ;
  wire \VgaHdmiCDxB.HdmixI_n_84 ;
  wire \VgaHdmiCDxB.HdmixI_n_86 ;
  wire \VgaHdmiCDxB.HdmixI_n_87 ;
  wire \VgaHdmiCDxB.HdmixI_n_88 ;
  wire \VgaHdmiCDxB.HdmixI_n_89 ;
  wire \VgaHdmiCDxB.HdmixI_n_90 ;
  wire \VgaHdmiCDxB.HdmixI_n_92 ;
  wire \VgaHdmiCDxB.HdmixI_n_93 ;
  wire \VgaHdmiCDxB.HdmixI_n_94 ;
  wire \VgaSyncxS_reg[HSyncxS] ;
  wire \VgaSyncxS_reg[VSyncxS] ;
  wire \VgaToHdmixI/TmdsEncoderC0xI/p_1_in ;
  wire \VgaToHdmixI/TmdsEncoderC1xI/p_1_in ;
  wire \VgaToHdmixI/TmdsEncoderC2xI/p_1_in ;
  wire VidOnxS;
  wire [31:0]WrDataxD;
  wire WrValidDelayedxS;
  wire WrValidxS;
  wire [31:0]dout;
  wire empty;
  wire [31:0]p_0_in;
  wire [23:0]p_1_in;
  wire \NLW_FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_full_UNCONNECTED ;
  wire [31:24]\NLW_FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_dout_UNCONNECTED ;

initial begin
 $sdf_annotate("mandel_iter_time_impl.sdf",,,,"tool_control");
end
  IBUF ClkSys100MhzxCI_IBUF_inst
       (.I(ClkSys100MhzxCI),
        .O(ClkSys100MhzxCI_IBUF));
  image_generator \FpgaUserCDxB.ImageGeneratorxI 
       (.AR(RstPllLockedxS),
        .CO(DataxD3),
        .ClkVgaxCO(ClkVgaxC),
        .D(\FpgaUserCDxB.ImageGeneratorxI_n_6 ),
        .DI({\VgaHdmiCDxB.HdmixI_n_31 ,\VgaHdmiCDxB.HdmixI_n_32 ,\VgaHdmiCDxB.HdmixI_n_33 }),
        .DataxD2_carry__0_0({\VgaHdmiCDxB.HdmixI_n_54 ,\VgaHdmiCDxB.HdmixI_n_55 ,\VgaHdmiCDxB.HdmixI_n_56 ,\VgaHdmiCDxB.HdmixI_n_57 }),
        .DataxD2_carry__0_1({\VgaHdmiCDxB.HdmixI_n_135 ,\VgaHdmiCDxB.HdmixI_n_136 ,\VgaHdmiCDxB.HdmixI_n_137 ,\VgaHdmiCDxB.HdmixI_n_138 }),
        .\DataxD2_inferred__4/i__carry__0_0 ({\VgaHdmiCDxB.HdmixI_n_58 ,\VgaHdmiCDxB.HdmixI_n_59 ,\VgaHdmiCDxB.HdmixI_n_60 ,\VgaHdmiCDxB.HdmixI_n_61 }),
        .\DataxD2_inferred__4/i__carry__0_1 ({\VgaHdmiCDxB.HdmixI_n_62 ,\VgaHdmiCDxB.HdmixI_n_63 ,\VgaHdmiCDxB.HdmixI_n_64 ,\VgaHdmiCDxB.HdmixI_n_65 }),
        .\DataxD3_inferred__1/i__carry__0_0 ({\VgaHdmiCDxB.HdmixI_n_46 ,VCountxD[3],VCountxD[1]}),
        .\DataxD3_inferred__1/i__carry__0_1 ({\VgaHdmiCDxB.HdmixI_n_42 ,\VgaHdmiCDxB.HdmixI_n_43 ,\VgaHdmiCDxB.HdmixI_n_44 ,\VgaHdmiCDxB.HdmixI_n_45 }),
        .\DataxD3_inferred__3/i__carry__0_0 ({\VgaHdmiCDxB.HdmixI_n_34 ,\VgaHdmiCDxB.HdmixI_n_35 ,\VgaHdmiCDxB.HdmixI_n_36 ,\VgaHdmiCDxB.HdmixI_n_37 }),
        .\DataxD3_inferred__3/i__carry__0_1 ({\VgaHdmiCDxB.HdmixI_n_38 ,\VgaHdmiCDxB.HdmixI_n_39 ,\VgaHdmiCDxB.HdmixI_n_40 ,\VgaHdmiCDxB.HdmixI_n_41 }),
        .\DataxD3_inferred__5/i__carry__0_0 ({\VgaHdmiCDxB.HdmixI_n_51 ,\VgaHdmiCDxB.HdmixI_n_52 ,\VgaHdmiCDxB.HdmixI_n_53 }),
        .\DataxD3_inferred__5/i__carry__0_1 ({\VgaHdmiCDxB.HdmixI_n_47 ,\VgaHdmiCDxB.HdmixI_n_48 ,\VgaHdmiCDxB.HdmixI_n_49 ,\VgaHdmiCDxB.HdmixI_n_50 }),
        .\DataxD[21]_i_3 ({\VgaHdmiCDxB.HdmixI_n_119 ,\VgaHdmiCDxB.HdmixI_n_120 ,\VgaHdmiCDxB.HdmixI_n_121 ,\VgaHdmiCDxB.HdmixI_n_122 }),
        .\DataxD[21]_i_3_0 ({\VgaHdmiCDxB.HdmixI_n_127 ,\VgaHdmiCDxB.HdmixI_n_128 ,\VgaHdmiCDxB.HdmixI_n_129 ,\VgaHdmiCDxB.HdmixI_n_130 }),
        .\DataxD[21]_i_3_1 ({\VgaHdmiCDxB.HdmixI_n_123 ,\VgaHdmiCDxB.HdmixI_n_124 ,\VgaHdmiCDxB.HdmixI_n_125 ,\VgaHdmiCDxB.HdmixI_n_126 }),
        .\DataxD[21]_i_4 ({\VgaHdmiCDxB.HdmixI_n_131 ,\VgaHdmiCDxB.HdmixI_n_132 ,\VgaHdmiCDxB.HdmixI_n_133 ,\VgaHdmiCDxB.HdmixI_n_134 }),
        .\DataxD[21]_i_4_0 ({\VgaHdmiCDxB.HdmixI_n_75 ,\VgaHdmiCDxB.HdmixI_n_76 ,\VgaHdmiCDxB.HdmixI_n_77 ,\VgaHdmiCDxB.HdmixI_n_78 }),
        .\DataxD[21]_i_4_1 ({\VgaHdmiCDxB.HdmixI_n_79 ,\VgaHdmiCDxB.HdmixI_n_80 ,\VgaHdmiCDxB.HdmixI_n_81 ,\VgaHdmiCDxB.HdmixI_n_82 }),
        .\DataxD[21]_i_5 (\VgaHdmiCDxB.HdmixI_n_74 ),
        .\DataxD[21]_i_5_0 ({\VgaHdmiCDxB.HdmixI_n_139 ,\VgaHdmiCDxB.HdmixI_n_140 ,\VgaHdmiCDxB.HdmixI_n_141 ,\VgaHdmiCDxB.HdmixI_n_142 }),
        .\DataxD_reg[0]_0 ({\VgaHdmiCDxB.HdmixI_n_66 ,\VgaHdmiCDxB.HdmixI_n_67 ,\VgaHdmiCDxB.HdmixI_n_68 ,\VgaHdmiCDxB.HdmixI_n_69 }),
        .\DataxD_reg[0]_1 ({\VgaHdmiCDxB.HdmixI_n_70 ,\VgaHdmiCDxB.HdmixI_n_71 ,\VgaHdmiCDxB.HdmixI_n_72 ,\VgaHdmiCDxB.HdmixI_n_73 }),
        .\DataxD_reg[10]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_53 ),
        .\DataxD_reg[11]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_20 ),
        .\DataxD_reg[11]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_21 ),
        .\DataxD_reg[11]_2 (\FpgaUserCDxB.ImageGeneratorxI_n_22 ),
        .\DataxD_reg[11]_3 (\FpgaUserCDxB.ImageGeneratorxI_n_23 ),
        .\DataxD_reg[12]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_7 ),
        .\DataxD_reg[14]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_25 ),
        .\DataxD_reg[16]_0 ({DataImGen2HDMIxD[16],DataImGen2HDMIxD[12],DataImGen2HDMIxD[8],DataImGen2HDMIxD[0]}),
        .\DataxD_reg[17]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_47 ),
        .\DataxD_reg[17]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_52 ),
        .\DataxD_reg[1]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_34 ),
        .\DataxD_reg[21]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_51 ),
        .\DataxD_reg[23]_0 (p_1_in),
        .\DataxD_reg[8]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_10 ),
        .\DataxD_reg[8]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_55 ),
        .\DataxD_reg[9]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_9 ),
        .\DcBiasxD[3]_i_21_0 (\FpgaUserCDxB.ImageGeneratorxI_n_19 ),
        .\DcBiasxD[3]_i_7_0 ({\VgaToHdmixI/TmdsEncoderC1xI/p_1_in ,\VgaHdmiCDxB.HdmixI_n_21 ,\VgaHdmiCDxB.HdmixI_n_22 ,\VgaHdmiCDxB.HdmixI_n_23 }),
        .\DcBiasxD_reg[0] (\FpgaUserCDxB.ImageGeneratorxI_n_8 ),
        .\DcBiasxD_reg[0]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_24 ),
        .\DcBiasxD_reg[0]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_35 ),
        .\DcBiasxD_reg[0]_2 ({\FpgaUserCDxB.ImageGeneratorxI_n_36 ,\FpgaUserCDxB.ImageGeneratorxI_n_37 ,\FpgaUserCDxB.ImageGeneratorxI_n_38 ,\FpgaUserCDxB.ImageGeneratorxI_n_39 }),
        .\DcBiasxD_reg[0]_3 ({\FpgaUserCDxB.ImageGeneratorxI_n_41 ,\FpgaUserCDxB.ImageGeneratorxI_n_42 ,\FpgaUserCDxB.ImageGeneratorxI_n_43 ,\FpgaUserCDxB.ImageGeneratorxI_n_44 }),
        .\DcBiasxD_reg[1] (\VgaHdmiCDxB.HdmixI_n_143 ),
        .\DcBiasxD_reg[1]_0 (\VgaHdmiCDxB.HdmixI_n_19 ),
        .\DcBiasxD_reg[1]_1 (\VgaHdmiCDxB.HdmixI_n_26 ),
        .\DcBiasxD_reg[2] (\FpgaUserCDxB.ImageGeneratorxI_n_18 ),
        .\DcBiasxD_reg[2]_0 (\VgaHdmiCDxB.HdmixI_n_18 ),
        .\DcBiasxD_reg[2]_1 (\VgaHdmiCDxB.HdmixI_n_144 ),
        .\DcBiasxD_reg[3] (\FpgaUserCDxB.ImageGeneratorxI_n_46 ),
        .Q(VCountxD[7]),
        .S({\VgaHdmiCDxB.HdmixI_n_27 ,\VgaHdmiCDxB.HdmixI_n_28 ,\VgaHdmiCDxB.HdmixI_n_29 ,\VgaHdmiCDxB.HdmixI_n_30 }),
        .TmdsEncodedDataxDO1_in(TmdsEncodedDataxDO1_in),
        .\TmdsEncodedDataxDO_reg[1] ({\VgaToHdmixI/TmdsEncoderC2xI/p_1_in ,\VgaHdmiCDxB.HdmixI_n_92 ,\VgaHdmiCDxB.HdmixI_n_93 ,\VgaHdmiCDxB.HdmixI_n_94 }),
        .\TmdsEncodedDataxDO_reg[1]_0 (\VgaHdmiCDxB.HdmixI_n_90 ),
        .\TmdsEncodedDataxDO_reg[2] (\VgaHdmiCDxB.HdmixI_n_24 ),
        .\TmdsEncodedDataxDO_reg[2]_0 ({\VgaToHdmixI/TmdsEncoderC0xI/p_1_in ,\VgaHdmiCDxB.HdmixI_n_86 ,\VgaHdmiCDxB.HdmixI_n_87 ,\VgaHdmiCDxB.HdmixI_n_88 }),
        .\TmdsEncodedDataxDO_reg[4] (\VgaHdmiCDxB.HdmixI_n_14 ),
        .\TmdsEncodedDataxDO_reg[7] (\VgaHdmiCDxB.HdmixI_n_25 ),
        .\TmdsEncodedDataxDO_reg[8] (\VgaHdmiCDxB.HdmixI_n_89 ),
        .\TmdsEncodedDataxDO_reg[9] (\VgaHdmiCDxB.HdmixI_n_84 ),
        .\TmdsEncodedDataxDO_reg[9]_0 (\VgaHdmiCDxB.HdmixI_n_83 ),
        .\TmdsEncodedDataxDO_reg[9]_1 (\VgaHdmiCDxB.HdmixI_n_13 ),
        .\VCountxD_reg[15] (DataxD33_in),
        .\VCountxD_reg[3] (DataxD31_in),
        .\VCountxD_reg[7] (DataxD35_in),
        .\VgaSyncxS_reg[HSyncxS] (\VgaSyncxS_reg[HSyncxS] ),
        .\VgaSyncxS_reg[VSyncxS] (\VgaSyncxS_reg[VSyncxS] ),
        .\VgaSyncxS_reg[VSyncxS]__0 (\FpgaUserCDxB.ImageGeneratorxI_n_56 ),
        .VidOnxS(VidOnxS),
        .VidOnxS_reg_rep(DataxD214_in),
        .VidOnxS_reg_rep_0(\FpgaUserCDxB.ImageGeneratorxI_n_57 ),
        .VidOnxS_reg_rep__0(DataxD2),
        .VidOnxS_reg_rep__0_0({\FpgaUserCDxB.ImageGeneratorxI_n_11 ,\FpgaUserCDxB.ImageGeneratorxI_n_12 ,\FpgaUserCDxB.ImageGeneratorxI_n_13 }),
        .VidOnxS_reg_rep__0_1(\FpgaUserCDxB.ImageGeneratorxI_n_40 ),
        .VidOnxS_reg_rep__0_2(\FpgaUserCDxB.ImageGeneratorxI_n_45 ),
        .VidOnxS_reg_rep__0_3(\FpgaUserCDxB.ImageGeneratorxI_n_48 ),
        .VidOnxS_reg_rep__0_4(\FpgaUserCDxB.ImageGeneratorxI_n_49 ),
        .VidOnxS_reg_rep__0_5(\FpgaUserCDxB.ImageGeneratorxI_n_50 ),
        .VidOnxS_reg_rep__0_6(\FpgaUserCDxB.ImageGeneratorxI_n_54 ));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/designs/vivado/mandelbrot_pinout/2018.2/mandelbrot_pinout.srcs/sources_1/ip/fifo_regport/fifo_regport.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.2" *) 
  fifo_regport \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI 
       (.din(FlagColor1RegPortxDN),
        .dout({\NLW_FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_dout_UNCONNECTED [31:24],dout[23:0]}),
        .empty(empty),
        .full(\NLW_FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_full_UNCONNECTED ),
        .lopt(empty),
        .rd_clk(ClkVgaxC),
        .rd_en(RdEnFlagColor1xS),
        .rd_rst(RstPllLockedxS),
        .wr_clk(UBlazeUserClkxC),
        .wr_en(WrValidDelayedxS),
        .wr_rst(UBlazePllNotLockedxS));
  LUT1 #(
    .INIT(2'h1)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_34 
       (.I0(empty),
        .O(RdEnFlagColor1xS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[0] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[0]),
        .Q(RdDataFlagColor1xDP[0]),
        .S(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[10] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[10]),
        .Q(RdDataFlagColor1xDP[10]),
        .R(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[11] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[11]),
        .Q(RdDataFlagColor1xDP[11]),
        .S(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[12] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[12]),
        .Q(RdDataFlagColor1xDP[12]),
        .R(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[13] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[13]),
        .Q(RdDataFlagColor1xDP[13]),
        .R(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[14] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[14]),
        .Q(RdDataFlagColor1xDP[14]),
        .R(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[15] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[15]),
        .Q(RdDataFlagColor1xDP[15]),
        .S(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[16] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[16]),
        .Q(RdDataFlagColor1xDP[16]),
        .R(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[17] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[17]),
        .Q(RdDataFlagColor1xDP[17]),
        .S(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[18] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[18]),
        .Q(RdDataFlagColor1xDP[18]),
        .R(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[19] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[19]),
        .Q(RdDataFlagColor1xDP[19]),
        .S(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[1] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[1]),
        .Q(RdDataFlagColor1xDP[1]),
        .S(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[20] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[20]),
        .Q(RdDataFlagColor1xDP[20]),
        .S(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[21] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[21]),
        .Q(RdDataFlagColor1xDP[21]),
        .S(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[22] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[22]),
        .Q(RdDataFlagColor1xDP[22]),
        .R(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[23] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[23]),
        .Q(RdDataFlagColor1xDP[23]),
        .R(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[2] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[2]),
        .Q(RdDataFlagColor1xDP[2]),
        .R(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[3] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[3]),
        .Q(RdDataFlagColor1xDP[3]),
        .R(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[4] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[4]),
        .Q(RdDataFlagColor1xDP[4]),
        .R(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[5] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[5]),
        .Q(RdDataFlagColor1xDP[5]),
        .S(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[6] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[6]),
        .Q(RdDataFlagColor1xDP[6]),
        .R(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[7] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[7]),
        .Q(RdDataFlagColor1xDP[7]),
        .R(RstPllLockedxS));
  FDSE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[8] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[8]),
        .Q(RdDataFlagColor1xDP[8]),
        .S(RstPllLockedxS));
  FDRE #(
    .INIT(1'b0)) 
    \FpgaUserToUBlazeCDCxB.RdDataFlagColor1xDP_reg[9] 
       (.C(ClkVgaxC),
        .CE(RdEnFlagColor1xS),
        .D(dout[9]),
        .Q(RdDataFlagColor1xDP[9]),
        .R(RstPllLockedxS));
  OBUF HdmiTxRsclxSO_OBUF_inst
       (.I(1'b1),
        .O(HdmiTxRsclxSO));
  OBUF \LedxDO_OBUF[0]_inst 
       (.I(LedxDO_OBUF[0]),
        .O(LedxDO[0]));
  OBUF \LedxDO_OBUF[1]_inst 
       (.I(LedxDO_OBUF[1]),
        .O(LedxDO[1]));
  OBUF \LedxDO_OBUF[2]_inst 
       (.I(LedxDO_OBUF[2]),
        .O(LedxDO[2]));
  OBUF \LedxDO_OBUF[3]_inst 
       (.I(LedxDO_OBUF[3]),
        .O(LedxDO[3]));
  OBUF \LedxDO_OBUF[4]_inst 
       (.I(LedxDO_OBUF[4]),
        .O(LedxDO[4]));
  OBUF \LedxDO_OBUF[5]_inst 
       (.I(LedxDO_OBUF[5]),
        .O(LedxDO[5]));
  OBUF \LedxDO_OBUF[6]_inst 
       (.I(LedxDO_OBUF[6]),
        .O(LedxDO[6]));
  OBUF \LedxDO_OBUF[7]_inst 
       (.I(LedxDO_OBUF[7]),
        .O(LedxDO[7]));
  IBUF ResetxRNI_IBUF_inst
       (.I(ResetxRNI),
        .O(ResetxRNI_IBUF));
  (* box_type = "PRIMITIVE" *) 
  BUFG \UBlazeCDxB.BUFGClkSysToClkMandelxI 
       (.I(ClkSys100MhzxCI_IBUF),
        .O(ClkSys100MhzBufgxC));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.LedsFDRExG[0].LedsFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(LedsxD[0]),
        .Q(LedxDO_OBUF[0]),
        .R(UBlazePllNotLockedxS));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.LedsFDRExG[1].LedsFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(LedsxD[1]),
        .Q(LedxDO_OBUF[1]),
        .R(UBlazePllNotLockedxS));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.LedsFDRExG[2].LedsFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(LedsxD[2]),
        .Q(LedxDO_OBUF[2]),
        .R(UBlazePllNotLockedxS));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.LedsFDRExG[3].LedsFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(LedsxD[3]),
        .Q(LedxDO_OBUF[3]),
        .R(UBlazePllNotLockedxS));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.LedsFDRExG[4].LedsFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(LedsxD[4]),
        .Q(LedxDO_OBUF[4]),
        .R(UBlazePllNotLockedxS));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.LedsFDRExG[5].LedsFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(LedsxD[5]),
        .Q(LedxDO_OBUF[5]),
        .R(UBlazePllNotLockedxS));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.LedsFDRExG[6].LedsFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(LedsxD[6]),
        .Q(LedxDO_OBUF[6]),
        .R(UBlazePllNotLockedxS));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.LedsFDRExG[7].LedsFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(LedsxD[7]),
        .Q(LedxDO_OBUF[7]),
        .R(UBlazePllNotLockedxS));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[0] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[0]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[0]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[10] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[10]),
        .Q(FlagColor1RegPortxDP[10]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[11] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[11]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[11]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[12] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[12]),
        .Q(FlagColor1RegPortxDP[12]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[13] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[13]),
        .Q(FlagColor1RegPortxDP[13]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[14] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[14]),
        .Q(FlagColor1RegPortxDP[14]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[15] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[15]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[15]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[16] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[16]),
        .Q(FlagColor1RegPortxDP[16]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[17] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[17]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[17]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[18] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[18]),
        .Q(FlagColor1RegPortxDP[18]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[19] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[19]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[19]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[1] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[1]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[1]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[20] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[20]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[20]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[21] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[21]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[21]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[22] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[22]),
        .Q(FlagColor1RegPortxDP[22]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[23] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[23]),
        .Q(FlagColor1RegPortxDP[23]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[24] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[24]),
        .Q(FlagColor1RegPortxDP[24]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[25] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[25]),
        .Q(FlagColor1RegPortxDP[25]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[26] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[26]),
        .Q(FlagColor1RegPortxDP[26]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[27] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[27]),
        .Q(FlagColor1RegPortxDP[27]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[28] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[28]),
        .Q(FlagColor1RegPortxDP[28]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[29] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[29]),
        .Q(FlagColor1RegPortxDP[29]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[2] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[2]),
        .Q(FlagColor1RegPortxDP[2]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[30] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[30]),
        .Q(FlagColor1RegPortxDP[30]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[31]),
        .Q(FlagColor1RegPortxDP[31]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[3] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[3]),
        .Q(FlagColor1RegPortxDP[3]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[4] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[4]),
        .Q(FlagColor1RegPortxDP[4]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[5] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[5]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[5]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[6] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[6]),
        .Q(FlagColor1RegPortxDP[6]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[7] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[7]),
        .Q(FlagColor1RegPortxDP[7]));
  FDPE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[8] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .D(WrDataxD[8]),
        .PRE(UBlazePllNotLockedxS),
        .Q(FlagColor1RegPortxDP[8]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[9] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[9]),
        .Q(FlagColor1RegPortxDP[9]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[0] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[0]),
        .Q(FlagColor2RegPortxDP[0]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[10] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[10]),
        .Q(FlagColor2RegPortxDP[10]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[11] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[11]),
        .Q(FlagColor2RegPortxDP[11]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[12] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[12]),
        .Q(FlagColor2RegPortxDP[12]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[13] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[13]),
        .Q(FlagColor2RegPortxDP[13]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[14] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[14]),
        .Q(FlagColor2RegPortxDP[14]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[15] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[15]),
        .Q(FlagColor2RegPortxDP[15]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[16] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[16]),
        .Q(FlagColor2RegPortxDP[16]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[17] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[17]),
        .Q(FlagColor2RegPortxDP[17]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[18] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[18]),
        .Q(FlagColor2RegPortxDP[18]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[19] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[19]),
        .Q(FlagColor2RegPortxDP[19]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[1] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[1]),
        .Q(FlagColor2RegPortxDP[1]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[20] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[20]),
        .Q(FlagColor2RegPortxDP[20]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[21] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[21]),
        .Q(FlagColor2RegPortxDP[21]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[22] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[22]),
        .Q(FlagColor2RegPortxDP[22]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[23] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[23]),
        .Q(FlagColor2RegPortxDP[23]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[24] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[24]),
        .Q(FlagColor2RegPortxDP[24]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[25] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[25]),
        .Q(FlagColor2RegPortxDP[25]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[26] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[26]),
        .Q(FlagColor2RegPortxDP[26]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[27] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[27]),
        .Q(FlagColor2RegPortxDP[27]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[28] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[28]),
        .Q(FlagColor2RegPortxDP[28]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[29] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[29]),
        .Q(FlagColor2RegPortxDP[29]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[2] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[2]),
        .Q(FlagColor2RegPortxDP[2]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[30] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[30]),
        .Q(FlagColor2RegPortxDP[30]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[31] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[31]),
        .Q(FlagColor2RegPortxDP[31]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[3] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[3]),
        .Q(FlagColor2RegPortxDP[3]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[4] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[4]),
        .Q(FlagColor2RegPortxDP[4]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[5] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[5]),
        .Q(FlagColor2RegPortxDP[5]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[6] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[6]),
        .Q(FlagColor2RegPortxDP[6]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[7] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[7]),
        .Q(FlagColor2RegPortxDP[7]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[8] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[8]),
        .Q(FlagColor2RegPortxDP[8]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP_reg[9] 
       (.C(UBlazeUserClkxC),
        .CE(\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[9]),
        .Q(FlagColor2RegPortxDP[9]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[0] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[0]),
        .Q(FlagColor3RegPortxDP[0]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[10] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[10]),
        .Q(FlagColor3RegPortxDP[10]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[11] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[11]),
        .Q(FlagColor3RegPortxDP[11]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[12] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[12]),
        .Q(FlagColor3RegPortxDP[12]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[13] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[13]),
        .Q(FlagColor3RegPortxDP[13]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[14] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[14]),
        .Q(FlagColor3RegPortxDP[14]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[15] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[15]),
        .Q(FlagColor3RegPortxDP[15]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[16] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[16]),
        .Q(FlagColor3RegPortxDP[16]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[17] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[17]),
        .Q(FlagColor3RegPortxDP[17]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[18] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[18]),
        .Q(FlagColor3RegPortxDP[18]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[19] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[19]),
        .Q(FlagColor3RegPortxDP[19]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[1] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[1]),
        .Q(FlagColor3RegPortxDP[1]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[20] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[20]),
        .Q(FlagColor3RegPortxDP[20]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[21] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[21]),
        .Q(FlagColor3RegPortxDP[21]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[22] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[22]),
        .Q(FlagColor3RegPortxDP[22]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[23] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[23]),
        .Q(FlagColor3RegPortxDP[23]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[24] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[24]),
        .Q(FlagColor3RegPortxDP[24]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[25] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[25]),
        .Q(FlagColor3RegPortxDP[25]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[26] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[26]),
        .Q(FlagColor3RegPortxDP[26]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[27] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[27]),
        .Q(FlagColor3RegPortxDP[27]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[28] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[28]),
        .Q(FlagColor3RegPortxDP[28]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[29] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[29]),
        .Q(FlagColor3RegPortxDP[29]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[2] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[2]),
        .Q(FlagColor3RegPortxDP[2]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[30] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[30]),
        .Q(FlagColor3RegPortxDP[30]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[31] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[31]),
        .Q(FlagColor3RegPortxDP[31]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[3] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[3]),
        .Q(FlagColor3RegPortxDP[3]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[4] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[4]),
        .Q(FlagColor3RegPortxDP[4]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[5] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[5]),
        .Q(FlagColor3RegPortxDP[5]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[6] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[6]),
        .Q(FlagColor3RegPortxDP[6]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[7] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[7]),
        .Q(FlagColor3RegPortxDP[7]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[8] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[8]),
        .Q(FlagColor3RegPortxDP[8]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP_reg[9] 
       (.C(UBlazeUserClkxC),
        .CE(FlagColor3RegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(WrDataxD[9]),
        .Q(FlagColor3RegPortxDP[9]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[0] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_110 ),
        .Q(InterruptRegPortxDP[0]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[10] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_100 ),
        .Q(InterruptRegPortxDP[10]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[11] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_99 ),
        .Q(InterruptRegPortxDP[11]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[12] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_98 ),
        .Q(InterruptRegPortxDP[12]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[13] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_97 ),
        .Q(InterruptRegPortxDP[13]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[14] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_96 ),
        .Q(InterruptRegPortxDP[14]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[15] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_95 ),
        .Q(InterruptRegPortxDP[15]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[16] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_94 ),
        .Q(InterruptRegPortxDP[16]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[17] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_93 ),
        .Q(InterruptRegPortxDP[17]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[18] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_92 ),
        .Q(InterruptRegPortxDP[18]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[19] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_91 ),
        .Q(InterruptRegPortxDP[19]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[1] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_109 ),
        .Q(InterruptRegPortxDP[1]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[20] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_90 ),
        .Q(InterruptRegPortxDP[20]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[21] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_89 ),
        .Q(InterruptRegPortxDP[21]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[22] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_88 ),
        .Q(InterruptRegPortxDP[22]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[23] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_87 ),
        .Q(InterruptRegPortxDP[23]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[24] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_86 ),
        .Q(InterruptRegPortxDP[24]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[25] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_85 ),
        .Q(InterruptRegPortxDP[25]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[26] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_84 ),
        .Q(InterruptRegPortxDP[26]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[27] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_83 ),
        .Q(InterruptRegPortxDP[27]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[28] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_82 ),
        .Q(InterruptRegPortxDP[28]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[29] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_81 ),
        .Q(InterruptRegPortxDP[29]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[2] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_108 ),
        .Q(InterruptRegPortxDP[2]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[30] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_80 ),
        .Q(InterruptRegPortxDP[30]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_79 ),
        .Q(InterruptRegPortxDP[31]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[3] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_107 ),
        .Q(InterruptRegPortxDP[3]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[4] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_106 ),
        .Q(InterruptRegPortxDP[4]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[5] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_105 ),
        .Q(InterruptRegPortxDP[5]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[6] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_104 ),
        .Q(InterruptRegPortxDP[6]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[7] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_103 ),
        .Q(InterruptRegPortxDP[7]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[8] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_102 ),
        .Q(InterruptRegPortxDP[8]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[9] 
       (.C(UBlazeUserClkxC),
        .CE(InterruptRegPortxDN),
        .CLR(UBlazePllNotLockedxS),
        .D(\UBlazeCDxB.UblazeSoPCxI_n_101 ),
        .Q(InterruptRegPortxDP[9]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[0] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[0]),
        .Q(RdDataxD[0]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[10] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[10]),
        .Q(RdDataxD[10]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[11] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[11]),
        .Q(RdDataxD[11]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[12] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[12]),
        .Q(RdDataxD[12]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[13] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[13]),
        .Q(RdDataxD[13]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[14] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[14]),
        .Q(RdDataxD[14]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[15] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[15]),
        .Q(RdDataxD[15]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[16] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[16]),
        .Q(RdDataxD[16]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[17] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[17]),
        .Q(RdDataxD[17]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[18] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[18]),
        .Q(RdDataxD[18]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[19] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[19]),
        .Q(RdDataxD[19]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[1] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[1]),
        .Q(RdDataxD[1]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[20] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[20]),
        .Q(RdDataxD[20]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[21] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[21]),
        .Q(RdDataxD[21]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[22] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[22]),
        .Q(RdDataxD[22]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[23] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[23]),
        .Q(RdDataxD[23]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[24] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[24]),
        .Q(RdDataxD[24]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[25] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[25]),
        .Q(RdDataxD[25]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[26] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[26]),
        .Q(RdDataxD[26]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[27] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[27]),
        .Q(RdDataxD[27]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[28] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[28]),
        .Q(RdDataxD[28]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[29] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[29]),
        .Q(RdDataxD[29]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[2] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[2]),
        .Q(RdDataxD[2]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[30] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[30]),
        .Q(RdDataxD[30]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[31] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[31]),
        .Q(RdDataxD[31]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[3] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[3]),
        .Q(RdDataxD[3]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[4] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[4]),
        .Q(RdDataxD[4]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[5] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[5]),
        .Q(RdDataxD[5]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[6] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[6]),
        .Q(RdDataxD[6]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[7] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[7]),
        .Q(RdDataxD[7]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[8] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[8]),
        .Q(RdDataxD[8]));
  FDCE #(
    .INIT(1'b0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[9] 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .CLR(UBlazePllNotLockedxS),
        .D(p_0_in[9]),
        .Q(RdDataxD[9]));
  ublaze_core \UBlazeCDxB.UblazeSoPCxI 
       (.D({\UBlazeCDxB.UblazeSoPCxI_n_79 ,\UBlazeCDxB.UblazeSoPCxI_n_80 ,\UBlazeCDxB.UblazeSoPCxI_n_81 ,\UBlazeCDxB.UblazeSoPCxI_n_82 ,\UBlazeCDxB.UblazeSoPCxI_n_83 ,\UBlazeCDxB.UblazeSoPCxI_n_84 ,\UBlazeCDxB.UblazeSoPCxI_n_85 ,\UBlazeCDxB.UblazeSoPCxI_n_86 ,\UBlazeCDxB.UblazeSoPCxI_n_87 ,\UBlazeCDxB.UblazeSoPCxI_n_88 ,\UBlazeCDxB.UblazeSoPCxI_n_89 ,\UBlazeCDxB.UblazeSoPCxI_n_90 ,\UBlazeCDxB.UblazeSoPCxI_n_91 ,\UBlazeCDxB.UblazeSoPCxI_n_92 ,\UBlazeCDxB.UblazeSoPCxI_n_93 ,\UBlazeCDxB.UblazeSoPCxI_n_94 ,\UBlazeCDxB.UblazeSoPCxI_n_95 ,\UBlazeCDxB.UblazeSoPCxI_n_96 ,\UBlazeCDxB.UblazeSoPCxI_n_97 ,\UBlazeCDxB.UblazeSoPCxI_n_98 ,\UBlazeCDxB.UblazeSoPCxI_n_99 ,\UBlazeCDxB.UblazeSoPCxI_n_100 ,\UBlazeCDxB.UblazeSoPCxI_n_101 ,\UBlazeCDxB.UblazeSoPCxI_n_102 ,\UBlazeCDxB.UblazeSoPCxI_n_103 ,\UBlazeCDxB.UblazeSoPCxI_n_104 ,\UBlazeCDxB.UblazeSoPCxI_n_105 ,\UBlazeCDxB.UblazeSoPCxI_n_106 ,\UBlazeCDxB.UblazeSoPCxI_n_107 ,\UBlazeCDxB.UblazeSoPCxI_n_108 ,\UBlazeCDxB.UblazeSoPCxI_n_109 ,\UBlazeCDxB.UblazeSoPCxI_n_110 }),
        .E(InterruptRegPortxDN),
        .FlagColor1RegPortxDP(FlagColor1RegPortxDP),
        .GpioxDO_tri_o(LedsxD),
        .Q(RdDataxD),
        .ResetxRNI(ResetxRNI_IBUF),
        .SysClkxCI(ClkSys100MhzBufgxC),
        .\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] (p_0_in),
        .\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] (InterruptRegPortxDP),
        .\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] (FlagColor3RegPortxDP),
        .\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 (FlagColor2RegPortxDP),
        .UBlazePllNotLockedxS(UBlazePllNotLockedxS),
        .UserClkxCO(UBlazeUserClkxC),
        .WrDataxDO(WrDataxD),
        .WrValidxSO(WrValidxS),
        .\bbstub_WrAddrxDO[4] (\UBlazeCDxB.UblazeSoPCxI_n_75 ),
        .\bbstub_WrAddrxDO[4]_0 (FlagColor3RegPortxDN),
        .\bbstub_WrAddrxDO[4]_1 (\UBlazeCDxB.UblazeSoPCxI_n_78 ),
        .din(FlagColor1RegPortxDN));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \UBlazeCDxB.WrValidFDRExI 
       (.C(UBlazeUserClkxC),
        .CE(1'b1),
        .D(WrValidxS),
        .Q(WrValidDelayedxS),
        .R(UBlazePllNotLockedxS));
  hdmi \VgaHdmiCDxB.HdmixI 
       (.AR(RstPllLockedxS),
        .CO(DataxD3),
        .ClkSys100MhzxCI_IBUF(ClkSys100MhzxCI_IBUF),
        .ClkVgaxCO(ClkVgaxC),
        .D({\FpgaUserCDxB.ImageGeneratorxI_n_36 ,\FpgaUserCDxB.ImageGeneratorxI_n_37 ,\FpgaUserCDxB.ImageGeneratorxI_n_38 ,\FpgaUserCDxB.ImageGeneratorxI_n_39 }),
        .DI({\VgaHdmiCDxB.HdmixI_n_31 ,\VgaHdmiCDxB.HdmixI_n_32 ,\VgaHdmiCDxB.HdmixI_n_33 }),
        .\DataxD[21]_i_2 (DataxD2),
        .\DataxD[21]_i_2_0 (DataxD33_in),
        .\DataxD[21]_i_2_1 (DataxD35_in),
        .\DataxD[21]_i_2_2 (DataxD31_in),
        .\DataxD_reg[0] (DataxD214_in),
        .\DataxD_reg[23] (RdDataFlagColor1xDP),
        .\DcBiasxD_reg[0] (\VgaHdmiCDxB.HdmixI_n_84 ),
        .\DcBiasxD_reg[0]_0 (\VgaHdmiCDxB.HdmixI_n_90 ),
        .\DcBiasxD_reg[0]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_9 ),
        .\DcBiasxD_reg[1] (\VgaHdmiCDxB.HdmixI_n_19 ),
        .\DcBiasxD_reg[1]_0 (\VgaHdmiCDxB.HdmixI_n_25 ),
        .\DcBiasxD_reg[1]_1 (\VgaHdmiCDxB.HdmixI_n_143 ),
        .\DcBiasxD_reg[1]_2 (\FpgaUserCDxB.ImageGeneratorxI_n_6 ),
        .\DcBiasxD_reg[2] (\VgaHdmiCDxB.HdmixI_n_144 ),
        .\DcBiasxD_reg[2]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_8 ),
        .\DcBiasxD_reg[2]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_24 ),
        .\DcBiasxD_reg[2]_2 (\FpgaUserCDxB.ImageGeneratorxI_n_19 ),
        .\DcBiasxD_reg[2]_3 (\FpgaUserCDxB.ImageGeneratorxI_n_40 ),
        .\DcBiasxD_reg[2]_4 (\FpgaUserCDxB.ImageGeneratorxI_n_23 ),
        .\DcBiasxD_reg[3] (\VgaHdmiCDxB.HdmixI_n_18 ),
        .\DcBiasxD_reg[3]_0 ({\VgaToHdmixI/TmdsEncoderC1xI/p_1_in ,\VgaHdmiCDxB.HdmixI_n_21 ,\VgaHdmiCDxB.HdmixI_n_22 ,\VgaHdmiCDxB.HdmixI_n_23 }),
        .\DcBiasxD_reg[3]_1 (\VgaHdmiCDxB.HdmixI_n_24 ),
        .\DcBiasxD_reg[3]_2 ({\VgaToHdmixI/TmdsEncoderC0xI/p_1_in ,\VgaHdmiCDxB.HdmixI_n_86 ,\VgaHdmiCDxB.HdmixI_n_87 ,\VgaHdmiCDxB.HdmixI_n_88 }),
        .\DcBiasxD_reg[3]_3 ({\VgaToHdmixI/TmdsEncoderC2xI/p_1_in ,\VgaHdmiCDxB.HdmixI_n_92 ,\VgaHdmiCDxB.HdmixI_n_93 ,\VgaHdmiCDxB.HdmixI_n_94 }),
        .\DcBiasxD_reg[3]_4 (\FpgaUserCDxB.ImageGeneratorxI_n_18 ),
        .\DcBiasxD_reg[3]_5 (\FpgaUserCDxB.ImageGeneratorxI_n_10 ),
        .\DcBiasxD_reg[3]_6 ({\FpgaUserCDxB.ImageGeneratorxI_n_41 ,\FpgaUserCDxB.ImageGeneratorxI_n_42 ,\FpgaUserCDxB.ImageGeneratorxI_n_43 ,\FpgaUserCDxB.ImageGeneratorxI_n_44 }),
        .\HCountxD_reg[15] ({\VgaHdmiCDxB.HdmixI_n_70 ,\VgaHdmiCDxB.HdmixI_n_71 ,\VgaHdmiCDxB.HdmixI_n_72 ,\VgaHdmiCDxB.HdmixI_n_73 }),
        .\HCountxD_reg[15]_0 ({\VgaHdmiCDxB.HdmixI_n_139 ,\VgaHdmiCDxB.HdmixI_n_140 ,\VgaHdmiCDxB.HdmixI_n_141 ,\VgaHdmiCDxB.HdmixI_n_142 }),
        .\HCountxD_reg[6] ({\VgaHdmiCDxB.HdmixI_n_62 ,\VgaHdmiCDxB.HdmixI_n_63 ,\VgaHdmiCDxB.HdmixI_n_64 ,\VgaHdmiCDxB.HdmixI_n_65 }),
        .\HCountxD_reg[6]_0 ({\VgaHdmiCDxB.HdmixI_n_135 ,\VgaHdmiCDxB.HdmixI_n_136 ,\VgaHdmiCDxB.HdmixI_n_137 ,\VgaHdmiCDxB.HdmixI_n_138 }),
        .\HCountxD_reg[7] ({\VgaHdmiCDxB.HdmixI_n_54 ,\VgaHdmiCDxB.HdmixI_n_55 ,\VgaHdmiCDxB.HdmixI_n_56 ,\VgaHdmiCDxB.HdmixI_n_57 }),
        .HdmiTxClkNxSO(HdmiTxClkNxSO),
        .HdmiTxClkPxSO(HdmiTxClkPxSO),
        .HdmiTxNxDO(HdmiTxNxDO),
        .HdmiTxPxDO(HdmiTxPxDO),
        .Q({VCountxD[7],VCountxD[3],VCountxD[1]}),
        .ResetxRNI(ResetxRNI_IBUF),
        .S({\VgaHdmiCDxB.HdmixI_n_27 ,\VgaHdmiCDxB.HdmixI_n_28 ,\VgaHdmiCDxB.HdmixI_n_29 ,\VgaHdmiCDxB.HdmixI_n_30 }),
        .TmdsEncodedDataxDO1_in(TmdsEncodedDataxDO1_in),
        .\TmdsEncodedDataxDO_reg[0] (\FpgaUserCDxB.ImageGeneratorxI_n_48 ),
        .\TmdsEncodedDataxDO_reg[1] (\FpgaUserCDxB.ImageGeneratorxI_n_52 ),
        .\TmdsEncodedDataxDO_reg[1]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_55 ),
        .\TmdsEncodedDataxDO_reg[2] (\FpgaUserCDxB.ImageGeneratorxI_n_49 ),
        .\TmdsEncodedDataxDO_reg[3] (\FpgaUserCDxB.ImageGeneratorxI_n_54 ),
        .\TmdsEncodedDataxDO_reg[4] (\FpgaUserCDxB.ImageGeneratorxI_n_50 ),
        .\TmdsEncodedDataxDO_reg[4]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_20 ),
        .\TmdsEncodedDataxDO_reg[5] (\FpgaUserCDxB.ImageGeneratorxI_n_51 ),
        .\TmdsEncodedDataxDO_reg[5]_0 ({\FpgaUserCDxB.ImageGeneratorxI_n_11 ,\FpgaUserCDxB.ImageGeneratorxI_n_12 ,\FpgaUserCDxB.ImageGeneratorxI_n_13 }),
        .\TmdsEncodedDataxDO_reg[6] (\FpgaUserCDxB.ImageGeneratorxI_n_46 ),
        .\TmdsEncodedDataxDO_reg[6]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_25 ),
        .\TmdsEncodedDataxDO_reg[6]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_21 ),
        .\TmdsEncodedDataxDO_reg[7] (\FpgaUserCDxB.ImageGeneratorxI_n_47 ),
        .\TmdsEncodedDataxDO_reg[7]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_53 ),
        .\TmdsEncodedDataxDO_reg[8] (\FpgaUserCDxB.ImageGeneratorxI_n_45 ),
        .\TmdsEncodedDataxDO_reg[8]_0 ({DataImGen2HDMIxD[16],DataImGen2HDMIxD[12],DataImGen2HDMIxD[8],DataImGen2HDMIxD[0]}),
        .\TmdsEncodedDataxDO_reg[8]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_34 ),
        .\TmdsEncodedDataxDO_reg[8]_2 (\FpgaUserCDxB.ImageGeneratorxI_n_35 ),
        .\TmdsEncodedDataxDO_reg[9] (\FpgaUserCDxB.ImageGeneratorxI_n_56 ),
        .\TmdsEncodedDataxDO_reg[9]_0 (\FpgaUserCDxB.ImageGeneratorxI_n_57 ),
        .\TmdsEncodedDataxDO_reg[9]_1 (\FpgaUserCDxB.ImageGeneratorxI_n_7 ),
        .\TmdsEncodedDataxDO_reg[9]_2 (\FpgaUserCDxB.ImageGeneratorxI_n_22 ),
        .\VCountxD_reg[14] ({\VgaHdmiCDxB.HdmixI_n_75 ,\VgaHdmiCDxB.HdmixI_n_76 ,\VgaHdmiCDxB.HdmixI_n_77 ,\VgaHdmiCDxB.HdmixI_n_78 }),
        .\VCountxD_reg[14]_0 ({\VgaHdmiCDxB.HdmixI_n_127 ,\VgaHdmiCDxB.HdmixI_n_128 ,\VgaHdmiCDxB.HdmixI_n_129 ,\VgaHdmiCDxB.HdmixI_n_130 }),
        .\VCountxD_reg[15] ({\VgaHdmiCDxB.HdmixI_n_79 ,\VgaHdmiCDxB.HdmixI_n_80 ,\VgaHdmiCDxB.HdmixI_n_81 ,\VgaHdmiCDxB.HdmixI_n_82 }),
        .\VCountxD_reg[15]_0 ({\VgaHdmiCDxB.HdmixI_n_119 ,\VgaHdmiCDxB.HdmixI_n_120 ,\VgaHdmiCDxB.HdmixI_n_121 ,\VgaHdmiCDxB.HdmixI_n_122 }),
        .\VCountxD_reg[15]_1 ({\VgaHdmiCDxB.HdmixI_n_123 ,\VgaHdmiCDxB.HdmixI_n_124 ,\VgaHdmiCDxB.HdmixI_n_125 ,\VgaHdmiCDxB.HdmixI_n_126 }),
        .\VCountxD_reg[15]_2 ({\VgaHdmiCDxB.HdmixI_n_131 ,\VgaHdmiCDxB.HdmixI_n_132 ,\VgaHdmiCDxB.HdmixI_n_133 ,\VgaHdmiCDxB.HdmixI_n_134 }),
        .\VCountxD_reg[5] ({\VgaHdmiCDxB.HdmixI_n_51 ,\VgaHdmiCDxB.HdmixI_n_52 ,\VgaHdmiCDxB.HdmixI_n_53 }),
        .\VCountxD_reg[6] (\VgaHdmiCDxB.HdmixI_n_46 ),
        .\VCountxD_reg[6]_0 ({\VgaHdmiCDxB.HdmixI_n_47 ,\VgaHdmiCDxB.HdmixI_n_48 ,\VgaHdmiCDxB.HdmixI_n_49 ,\VgaHdmiCDxB.HdmixI_n_50 }),
        .\VCountxD_reg[7] ({\VgaHdmiCDxB.HdmixI_n_34 ,\VgaHdmiCDxB.HdmixI_n_35 ,\VgaHdmiCDxB.HdmixI_n_36 ,\VgaHdmiCDxB.HdmixI_n_37 }),
        .\VCountxD_reg[7]_0 ({\VgaHdmiCDxB.HdmixI_n_38 ,\VgaHdmiCDxB.HdmixI_n_39 ,\VgaHdmiCDxB.HdmixI_n_40 ,\VgaHdmiCDxB.HdmixI_n_41 }),
        .\VCountxD_reg[7]_1 ({\VgaHdmiCDxB.HdmixI_n_42 ,\VgaHdmiCDxB.HdmixI_n_43 ,\VgaHdmiCDxB.HdmixI_n_44 ,\VgaHdmiCDxB.HdmixI_n_45 }),
        .\VgaSyncxS_reg[HSyncxS] (\VgaSyncxS_reg[HSyncxS] ),
        .\VgaSyncxS_reg[VSyncxS] (\VgaSyncxS_reg[VSyncxS] ),
        .VidOnxS(VidOnxS),
        .VidOnxS_reg_rep(\VgaHdmiCDxB.HdmixI_n_13 ),
        .VidOnxS_reg_rep_0({\VgaHdmiCDxB.HdmixI_n_58 ,\VgaHdmiCDxB.HdmixI_n_59 ,\VgaHdmiCDxB.HdmixI_n_60 ,\VgaHdmiCDxB.HdmixI_n_61 }),
        .VidOnxS_reg_rep_1({\VgaHdmiCDxB.HdmixI_n_66 ,\VgaHdmiCDxB.HdmixI_n_67 ,\VgaHdmiCDxB.HdmixI_n_68 ,\VgaHdmiCDxB.HdmixI_n_69 }),
        .VidOnxS_reg_rep__0(\VgaHdmiCDxB.HdmixI_n_14 ),
        .VidOnxS_reg_rep__0_0(\VgaHdmiCDxB.HdmixI_n_26 ),
        .VidOnxS_reg_rep__0_1(\VgaHdmiCDxB.HdmixI_n_74 ),
        .VidOnxS_reg_rep__0_2(\VgaHdmiCDxB.HdmixI_n_83 ),
        .VidOnxS_reg_rep__0_3(\VgaHdmiCDxB.HdmixI_n_89 ),
        .VidOnxS_reg_rep__0_4(p_1_in));
endmodule

module serializer_10_to_1
   (TmdsSerialDataxSO,
    ClkHdmixCI,
    ClkVgaxCI,
    TmdsDataxDI,
    RstxRI);
  output TmdsSerialDataxSO;
  input ClkHdmixCI;
  input ClkVgaxCI;
  input [9:0]TmdsDataxDI;
  input RstxRI;

  wire ClkHdmixCI;
  wire ClkVgaxCI;
  wire RstxRI;
  wire SHIFTOUT1;
  wire SHIFTOUT2;
  wire [9:0]TmdsDataxDI;
  wire TmdsSerialDataxSO;
  wire NLW_MasterOSERDESE2xI_OFB_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_SHIFTOUT1_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_SHIFTOUT2_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TBYTEOUT_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TFB_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TQ_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_OFB_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_OQ_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TBYTEOUT_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TFB_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TQ_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("DDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b1),
    .INIT_TQ(1'b1),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    MasterOSERDESE2xI
       (.CLK(ClkHdmixCI),
        .CLKDIV(ClkVgaxCI),
        .D1(TmdsDataxDI[0]),
        .D2(TmdsDataxDI[1]),
        .D3(TmdsDataxDI[2]),
        .D4(TmdsDataxDI[3]),
        .D5(TmdsDataxDI[4]),
        .D6(TmdsDataxDI[5]),
        .D7(TmdsDataxDI[6]),
        .D8(TmdsDataxDI[7]),
        .OCE(1'b1),
        .OFB(NLW_MasterOSERDESE2xI_OFB_UNCONNECTED),
        .OQ(TmdsSerialDataxSO),
        .RST(RstxRI),
        .SHIFTIN1(SHIFTOUT1),
        .SHIFTIN2(SHIFTOUT2),
        .SHIFTOUT1(NLW_MasterOSERDESE2xI_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_MasterOSERDESE2xI_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_MasterOSERDESE2xI_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_MasterOSERDESE2xI_TFB_UNCONNECTED),
        .TQ(NLW_MasterOSERDESE2xI_TQ_UNCONNECTED));
  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("DDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b1),
    .INIT_TQ(1'b1),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("SLAVE"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SlaveOSERDESE2xI
       (.CLK(ClkHdmixCI),
        .CLKDIV(ClkVgaxCI),
        .D1(1'b0),
        .D2(1'b0),
        .D3(TmdsDataxDI[8]),
        .D4(TmdsDataxDI[9]),
        .D5(1'b0),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_SlaveOSERDESE2xI_OFB_UNCONNECTED),
        .OQ(NLW_SlaveOSERDESE2xI_OQ_UNCONNECTED),
        .RST(RstxRI),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(SHIFTOUT1),
        .SHIFTOUT2(SHIFTOUT2),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SlaveOSERDESE2xI_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SlaveOSERDESE2xI_TFB_UNCONNECTED),
        .TQ(NLW_SlaveOSERDESE2xI_TQ_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "serializer_10_to_1" *) 
module serializer_10_to_1_0
   (TmdsSerialDataxSO,
    ClkHdmixCI,
    ClkVgaxCI,
    TmdsDataxDI,
    RstxRI);
  output TmdsSerialDataxSO;
  input ClkHdmixCI;
  input ClkVgaxCI;
  input [9:0]TmdsDataxDI;
  input RstxRI;

  wire ClkHdmixCI;
  wire ClkVgaxCI;
  wire RstxRI;
  wire SHIFTOUT1;
  wire SHIFTOUT2;
  wire [9:0]TmdsDataxDI;
  wire TmdsSerialDataxSO;
  wire NLW_MasterOSERDESE2xI_OFB_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_SHIFTOUT1_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_SHIFTOUT2_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TBYTEOUT_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TFB_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TQ_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_OFB_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_OQ_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TBYTEOUT_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TFB_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TQ_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("DDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b1),
    .INIT_TQ(1'b1),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    MasterOSERDESE2xI
       (.CLK(ClkHdmixCI),
        .CLKDIV(ClkVgaxCI),
        .D1(TmdsDataxDI[0]),
        .D2(TmdsDataxDI[1]),
        .D3(TmdsDataxDI[2]),
        .D4(TmdsDataxDI[3]),
        .D5(TmdsDataxDI[4]),
        .D6(TmdsDataxDI[5]),
        .D7(TmdsDataxDI[6]),
        .D8(TmdsDataxDI[7]),
        .OCE(1'b1),
        .OFB(NLW_MasterOSERDESE2xI_OFB_UNCONNECTED),
        .OQ(TmdsSerialDataxSO),
        .RST(RstxRI),
        .SHIFTIN1(SHIFTOUT1),
        .SHIFTIN2(SHIFTOUT2),
        .SHIFTOUT1(NLW_MasterOSERDESE2xI_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_MasterOSERDESE2xI_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_MasterOSERDESE2xI_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_MasterOSERDESE2xI_TFB_UNCONNECTED),
        .TQ(NLW_MasterOSERDESE2xI_TQ_UNCONNECTED));
  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("DDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b1),
    .INIT_TQ(1'b1),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("SLAVE"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SlaveOSERDESE2xI
       (.CLK(ClkHdmixCI),
        .CLKDIV(ClkVgaxCI),
        .D1(1'b0),
        .D2(1'b0),
        .D3(TmdsDataxDI[8]),
        .D4(TmdsDataxDI[9]),
        .D5(1'b0),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_SlaveOSERDESE2xI_OFB_UNCONNECTED),
        .OQ(NLW_SlaveOSERDESE2xI_OQ_UNCONNECTED),
        .RST(RstxRI),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(SHIFTOUT1),
        .SHIFTOUT2(SHIFTOUT2),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SlaveOSERDESE2xI_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SlaveOSERDESE2xI_TFB_UNCONNECTED),
        .TQ(NLW_SlaveOSERDESE2xI_TQ_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "serializer_10_to_1" *) 
module serializer_10_to_1_1
   (TmdsSerialDataxSO,
    ClkHdmixCI,
    ClkVgaxCI,
    TmdsDataxDI,
    RstxRI);
  output TmdsSerialDataxSO;
  input ClkHdmixCI;
  input ClkVgaxCI;
  input [9:0]TmdsDataxDI;
  input RstxRI;

  wire ClkHdmixCI;
  wire ClkVgaxCI;
  wire RstxRI;
  wire SHIFTOUT1;
  wire SHIFTOUT2;
  wire [9:0]TmdsDataxDI;
  wire TmdsSerialDataxSO;
  wire NLW_MasterOSERDESE2xI_OFB_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_SHIFTOUT1_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_SHIFTOUT2_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TBYTEOUT_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TFB_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TQ_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_OFB_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_OQ_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TBYTEOUT_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TFB_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TQ_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("DDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b1),
    .INIT_TQ(1'b1),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    MasterOSERDESE2xI
       (.CLK(ClkHdmixCI),
        .CLKDIV(ClkVgaxCI),
        .D1(TmdsDataxDI[0]),
        .D2(TmdsDataxDI[1]),
        .D3(TmdsDataxDI[2]),
        .D4(TmdsDataxDI[3]),
        .D5(TmdsDataxDI[4]),
        .D6(TmdsDataxDI[5]),
        .D7(TmdsDataxDI[6]),
        .D8(TmdsDataxDI[7]),
        .OCE(1'b1),
        .OFB(NLW_MasterOSERDESE2xI_OFB_UNCONNECTED),
        .OQ(TmdsSerialDataxSO),
        .RST(RstxRI),
        .SHIFTIN1(SHIFTOUT1),
        .SHIFTIN2(SHIFTOUT2),
        .SHIFTOUT1(NLW_MasterOSERDESE2xI_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_MasterOSERDESE2xI_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_MasterOSERDESE2xI_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_MasterOSERDESE2xI_TFB_UNCONNECTED),
        .TQ(NLW_MasterOSERDESE2xI_TQ_UNCONNECTED));
  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("DDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b1),
    .INIT_TQ(1'b1),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("SLAVE"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SlaveOSERDESE2xI
       (.CLK(ClkHdmixCI),
        .CLKDIV(ClkVgaxCI),
        .D1(1'b0),
        .D2(1'b0),
        .D3(TmdsDataxDI[8]),
        .D4(TmdsDataxDI[9]),
        .D5(1'b0),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_SlaveOSERDESE2xI_OFB_UNCONNECTED),
        .OQ(NLW_SlaveOSERDESE2xI_OQ_UNCONNECTED),
        .RST(RstxRI),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(SHIFTOUT1),
        .SHIFTOUT2(SHIFTOUT2),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SlaveOSERDESE2xI_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SlaveOSERDESE2xI_TFB_UNCONNECTED),
        .TQ(NLW_SlaveOSERDESE2xI_TQ_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "serializer_10_to_1" *) 
module serializer_10_to_1_2
   (TmdsSerialDataxSO,
    ClkHdmixCI,
    ClkVgaxCI,
    RstxRI);
  output TmdsSerialDataxSO;
  input ClkHdmixCI;
  input ClkVgaxCI;
  input RstxRI;

  wire ClkHdmixCI;
  wire ClkVgaxCI;
  wire RstxRI;
  wire SHIFTOUT1;
  wire SHIFTOUT2;
  wire TmdsSerialDataxSO;
  wire NLW_MasterOSERDESE2xI_OFB_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_SHIFTOUT1_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_SHIFTOUT2_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TBYTEOUT_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TFB_UNCONNECTED;
  wire NLW_MasterOSERDESE2xI_TQ_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_OFB_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_OQ_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TBYTEOUT_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TFB_UNCONNECTED;
  wire NLW_SlaveOSERDESE2xI_TQ_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("DDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b1),
    .INIT_TQ(1'b1),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    MasterOSERDESE2xI
       (.CLK(ClkHdmixCI),
        .CLKDIV(ClkVgaxCI),
        .D1(1'b1),
        .D2(1'b1),
        .D3(1'b1),
        .D4(1'b1),
        .D5(1'b1),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_MasterOSERDESE2xI_OFB_UNCONNECTED),
        .OQ(TmdsSerialDataxSO),
        .RST(RstxRI),
        .SHIFTIN1(SHIFTOUT1),
        .SHIFTIN2(SHIFTOUT2),
        .SHIFTOUT1(NLW_MasterOSERDESE2xI_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_MasterOSERDESE2xI_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_MasterOSERDESE2xI_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_MasterOSERDESE2xI_TFB_UNCONNECTED),
        .TQ(NLW_MasterOSERDESE2xI_TQ_UNCONNECTED));
  (* box_type = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("DDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b1),
    .INIT_TQ(1'b1),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("SLAVE"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SlaveOSERDESE2xI
       (.CLK(ClkHdmixCI),
        .CLKDIV(ClkVgaxCI),
        .D1(1'b0),
        .D2(1'b0),
        .D3(1'b0),
        .D4(1'b0),
        .D5(1'b0),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_SlaveOSERDESE2xI_OFB_UNCONNECTED),
        .OQ(NLW_SlaveOSERDESE2xI_OQ_UNCONNECTED),
        .RST(RstxRI),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(SHIFTOUT1),
        .SHIFTOUT2(SHIFTOUT2),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SlaveOSERDESE2xI_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SlaveOSERDESE2xI_TFB_UNCONNECTED),
        .TQ(NLW_SlaveOSERDESE2xI_TQ_UNCONNECTED));
endmodule

module tmds_encoder
   (TmdsDataxDI,
    \DcBiasxD_reg[0]_0 ,
    \DcBiasxD_reg[3]_0 ,
    \DcBiasxD_reg[2]_0 ,
    TmdsEncodedDataxDO1_in,
    ClkVgaxCI,
    \TmdsEncodedDataxDO_reg[9]_0 ,
    \VgaSyncxS_reg[HSyncxS] ,
    \TmdsEncodedDataxDO_reg[8]_0 ,
    \TmdsEncodedDataxDO_reg[8]_1 ,
    \TmdsEncodedDataxDO_reg[8]_2 ,
    \DcBiasxD_reg[2]_1 ,
    \DcBiasxD_reg[0]_1 ,
    D);
  output [9:0]TmdsDataxDI;
  output \DcBiasxD_reg[0]_0 ;
  output [3:0]\DcBiasxD_reg[3]_0 ;
  output \DcBiasxD_reg[2]_0 ;
  input [7:0]TmdsEncodedDataxDO1_in;
  input ClkVgaxCI;
  input \TmdsEncodedDataxDO_reg[9]_0 ;
  input \VgaSyncxS_reg[HSyncxS] ;
  input \TmdsEncodedDataxDO_reg[8]_0 ;
  input \TmdsEncodedDataxDO_reg[8]_1 ;
  input \TmdsEncodedDataxDO_reg[8]_2 ;
  input \DcBiasxD_reg[2]_1 ;
  input \DcBiasxD_reg[0]_1 ;
  input [3:0]D;

  wire ClkVgaxCI;
  wire [3:0]D;
  wire \DcBiasxD_reg[0]_0 ;
  wire \DcBiasxD_reg[0]_1 ;
  wire \DcBiasxD_reg[2]_0 ;
  wire \DcBiasxD_reg[2]_1 ;
  wire [3:0]\DcBiasxD_reg[3]_0 ;
  wire [9:0]TmdsDataxDI;
  wire [7:0]TmdsEncodedDataxDO1_in;
  wire \TmdsEncodedDataxDO[8]_i_1_n_0 ;
  wire \TmdsEncodedDataxDO_reg[8]_0 ;
  wire \TmdsEncodedDataxDO_reg[8]_1 ;
  wire \TmdsEncodedDataxDO_reg[8]_2 ;
  wire \TmdsEncodedDataxDO_reg[9]_0 ;
  wire \VgaSyncxS_reg[HSyncxS] ;

  LUT2 #(
    .INIT(4'h9)) 
    \DcBiasxD[2]_i_3__1 
       (.I0(\DcBiasxD_reg[3]_0 [2]),
        .I1(\DcBiasxD_reg[2]_1 ),
        .O(\DcBiasxD_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \DcBiasxD[3]_i_11__0 
       (.I0(\DcBiasxD_reg[3]_0 [0]),
        .I1(\DcBiasxD_reg[3]_0 [3]),
        .I2(\DcBiasxD_reg[3]_0 [2]),
        .I3(\DcBiasxD_reg[3]_0 [1]),
        .O(\DcBiasxD_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[0] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(D[0]),
        .Q(\DcBiasxD_reg[3]_0 [0]),
        .R(\DcBiasxD_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[1] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(D[1]),
        .Q(\DcBiasxD_reg[3]_0 [1]),
        .R(\DcBiasxD_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[2] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(D[2]),
        .Q(\DcBiasxD_reg[3]_0 [2]),
        .R(\DcBiasxD_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[3] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(D[3]),
        .Q(\DcBiasxD_reg[3]_0 [3]),
        .R(\DcBiasxD_reg[0]_1 ));
  LUT4 #(
    .INIT(16'hD1D0)) 
    \TmdsEncodedDataxDO[8]_i_1 
       (.I0(\VgaSyncxS_reg[HSyncxS] ),
        .I1(\TmdsEncodedDataxDO_reg[8]_0 ),
        .I2(\TmdsEncodedDataxDO_reg[8]_1 ),
        .I3(\TmdsEncodedDataxDO_reg[8]_2 ),
        .O(\TmdsEncodedDataxDO[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[0] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(TmdsEncodedDataxDO1_in[0]),
        .Q(TmdsDataxDI[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[1] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(TmdsEncodedDataxDO1_in[1]),
        .Q(TmdsDataxDI[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[2] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(TmdsEncodedDataxDO1_in[2]),
        .Q(TmdsDataxDI[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[3] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(TmdsEncodedDataxDO1_in[3]),
        .Q(TmdsDataxDI[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[4] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(TmdsEncodedDataxDO1_in[4]),
        .Q(TmdsDataxDI[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[5] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(TmdsEncodedDataxDO1_in[5]),
        .Q(TmdsDataxDI[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[6] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(TmdsEncodedDataxDO1_in[6]),
        .Q(TmdsDataxDI[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[7] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(TmdsEncodedDataxDO1_in[7]),
        .Q(TmdsDataxDI[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[8] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO[8]_i_1_n_0 ),
        .Q(TmdsDataxDI[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[9] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[9]_0 ),
        .Q(TmdsDataxDI[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tmds_encoder" *) 
module tmds_encoder_3
   (\DcBiasxD_reg[3]_0 ,
    \DcBiasxD_reg[1]_0 ,
    Q,
    \DcBiasxD_reg[3]_1 ,
    \DcBiasxD_reg[1]_1 ,
    \DcBiasxD_reg[1]_2 ,
    TmdsDataxDI,
    \TmdsEncodedDataxDO_reg[9]_0 ,
    \TmdsEncodedDataxDO_reg[6]_0 ,
    \DcBiasxD_reg[3]_2 ,
    \DcBiasxD_reg[2]_0 ,
    \DcBiasxD_reg[2]_1 ,
    \DcBiasxD_reg[0]_0 ,
    \DcBiasxD_reg[3]_3 ,
    \TmdsEncodedDataxDO_reg[6]_1 ,
    \TmdsEncodedDataxDO_reg[9]_1 ,
    \DcBiasxD_reg[2]_2 ,
    \DcBiasxD_reg[2]_3 ,
    \TmdsEncodedDataxDO_reg[7]_0 ,
    ClkVgaxCI,
    \DcBiasxD_reg[1]_3 ,
    \TmdsEncodedDataxDO_reg[5]_0 ,
    \TmdsEncodedDataxDO_reg[7]_1 ,
    \TmdsEncodedDataxDO_reg[1]_0 ,
    \TmdsEncodedDataxDO_reg[9]_2 );
  output \DcBiasxD_reg[3]_0 ;
  output \DcBiasxD_reg[1]_0 ;
  output [3:0]Q;
  output \DcBiasxD_reg[3]_1 ;
  output \DcBiasxD_reg[1]_1 ;
  output \DcBiasxD_reg[1]_2 ;
  output [9:0]TmdsDataxDI;
  input \TmdsEncodedDataxDO_reg[9]_0 ;
  input \TmdsEncodedDataxDO_reg[6]_0 ;
  input \DcBiasxD_reg[3]_2 ;
  input \DcBiasxD_reg[2]_0 ;
  input \DcBiasxD_reg[2]_1 ;
  input \DcBiasxD_reg[0]_0 ;
  input \DcBiasxD_reg[3]_3 ;
  input \TmdsEncodedDataxDO_reg[6]_1 ;
  input \TmdsEncodedDataxDO_reg[9]_1 ;
  input \DcBiasxD_reg[2]_2 ;
  input \DcBiasxD_reg[2]_3 ;
  input \TmdsEncodedDataxDO_reg[7]_0 ;
  input ClkVgaxCI;
  input [0:0]\DcBiasxD_reg[1]_3 ;
  input [4:0]\TmdsEncodedDataxDO_reg[5]_0 ;
  input \TmdsEncodedDataxDO_reg[7]_1 ;
  input \TmdsEncodedDataxDO_reg[1]_0 ;
  input \TmdsEncodedDataxDO_reg[9]_2 ;

  wire ClkVgaxCI;
  wire \DcBiasxD[0]_i_1_n_0 ;
  wire \DcBiasxD[2]_i_1_n_0 ;
  wire \DcBiasxD[2]_i_3_n_0 ;
  wire \DcBiasxD[2]_i_5__0_n_0 ;
  wire \DcBiasxD[3]_i_1__0_n_0 ;
  wire \DcBiasxD[3]_i_2_n_0 ;
  wire \DcBiasxD[3]_i_3__1_n_0 ;
  wire \DcBiasxD[3]_i_4_n_0 ;
  wire \DcBiasxD[3]_i_5__1_n_0 ;
  wire \DcBiasxD_reg[0]_0 ;
  wire \DcBiasxD_reg[1]_0 ;
  wire \DcBiasxD_reg[1]_1 ;
  wire \DcBiasxD_reg[1]_2 ;
  wire [0:0]\DcBiasxD_reg[1]_3 ;
  wire \DcBiasxD_reg[2]_0 ;
  wire \DcBiasxD_reg[2]_1 ;
  wire \DcBiasxD_reg[2]_2 ;
  wire \DcBiasxD_reg[2]_3 ;
  wire \DcBiasxD_reg[3]_0 ;
  wire \DcBiasxD_reg[3]_1 ;
  wire \DcBiasxD_reg[3]_2 ;
  wire \DcBiasxD_reg[3]_3 ;
  wire [3:0]Q;
  wire [9:0]TmdsDataxDI;
  wire \TmdsEncodedDataxDO[6]_i_1_n_0 ;
  wire \TmdsEncodedDataxDO[8]_i_1_n_0 ;
  wire \TmdsEncodedDataxDO[9]_i_1_n_0 ;
  wire \TmdsEncodedDataxDO_reg[1]_0 ;
  wire [4:0]\TmdsEncodedDataxDO_reg[5]_0 ;
  wire \TmdsEncodedDataxDO_reg[6]_0 ;
  wire \TmdsEncodedDataxDO_reg[6]_1 ;
  wire \TmdsEncodedDataxDO_reg[7]_0 ;
  wire \TmdsEncodedDataxDO_reg[7]_1 ;
  wire \TmdsEncodedDataxDO_reg[9]_0 ;
  wire \TmdsEncodedDataxDO_reg[9]_1 ;
  wire \TmdsEncodedDataxDO_reg[9]_2 ;

  LUT5 #(
    .INIT(32'h906F6F90)) 
    \DcBiasxD[0]_i_1 
       (.I0(\TmdsEncodedDataxDO_reg[9]_0 ),
        .I1(\DcBiasxD_reg[3]_0 ),
        .I2(\DcBiasxD_reg[1]_0 ),
        .I3(Q[0]),
        .I4(\DcBiasxD_reg[0]_0 ),
        .O(\DcBiasxD[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \DcBiasxD[0]_i_2 
       (.I0(Q[3]),
        .I1(\TmdsEncodedDataxDO_reg[6]_1 ),
        .O(\DcBiasxD_reg[3]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DcBiasxD[1]_i_4__0 
       (.I0(Q[1]),
        .I1(\DcBiasxD_reg[3]_3 ),
        .O(\DcBiasxD_reg[1]_2 ));
  LUT6 #(
    .INIT(64'h960096FF96FF9600)) 
    \DcBiasxD[2]_i_1 
       (.I0(\DcBiasxD_reg[2]_0 ),
        .I1(\DcBiasxD[3]_i_3__1_n_0 ),
        .I2(\DcBiasxD[2]_i_3_n_0 ),
        .I3(\DcBiasxD_reg[1]_0 ),
        .I4(\DcBiasxD_reg[2]_1 ),
        .I5(\DcBiasxD[2]_i_5__0_n_0 ),
        .O(\DcBiasxD[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hED)) 
    \DcBiasxD[2]_i_3 
       (.I0(\DcBiasxD_reg[3]_3 ),
        .I1(\DcBiasxD_reg[3]_0 ),
        .I2(Q[1]),
        .O(\DcBiasxD[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DcBiasxD[2]_i_5__0 
       (.I0(Q[2]),
        .I1(\DcBiasxD_reg[2]_2 ),
        .O(\DcBiasxD[2]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h2FD0FFFF2FD00000)) 
    \DcBiasxD[3]_i_1__0 
       (.I0(\DcBiasxD[3]_i_2_n_0 ),
        .I1(\DcBiasxD[3]_i_3__1_n_0 ),
        .I2(\DcBiasxD[3]_i_4_n_0 ),
        .I3(\DcBiasxD[3]_i_5__1_n_0 ),
        .I4(\DcBiasxD_reg[1]_0 ),
        .I5(\DcBiasxD_reg[3]_2 ),
        .O(\DcBiasxD[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFF9FFFFFFFF)) 
    \DcBiasxD[3]_i_2 
       (.I0(Q[1]),
        .I1(\DcBiasxD_reg[3]_3 ),
        .I2(\TmdsEncodedDataxDO_reg[9]_0 ),
        .I3(\DcBiasxD_reg[0]_0 ),
        .I4(\DcBiasxD_reg[3]_0 ),
        .I5(Q[0]),
        .O(\DcBiasxD[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6666699699999669)) 
    \DcBiasxD[3]_i_3__1 
       (.I0(Q[3]),
        .I1(\DcBiasxD_reg[2]_3 ),
        .I2(\DcBiasxD_reg[3]_3 ),
        .I3(\DcBiasxD_reg[3]_0 ),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\DcBiasxD[3]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hEBFF33B333B3EBFF)) 
    \DcBiasxD[3]_i_4 
       (.I0(Q[0]),
        .I1(\DcBiasxD_reg[3]_0 ),
        .I2(\DcBiasxD_reg[0]_0 ),
        .I3(\TmdsEncodedDataxDO_reg[9]_0 ),
        .I4(\DcBiasxD_reg[3]_3 ),
        .I5(Q[1]),
        .O(\DcBiasxD[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6F6F6FF96FF96F6F)) 
    \DcBiasxD[3]_i_5__1 
       (.I0(Q[3]),
        .I1(\DcBiasxD_reg[2]_3 ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\DcBiasxD_reg[3]_0 ),
        .I5(\DcBiasxD_reg[3]_3 ),
        .O(\DcBiasxD[3]_i_5__1_n_0 ));
  LUT5 #(
    .INIT(32'h55555554)) 
    \DcBiasxD[3]_i_6 
       (.I0(\TmdsEncodedDataxDO_reg[9]_1 ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[0]),
        .O(\DcBiasxD_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[0] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\DcBiasxD[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[1] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\DcBiasxD_reg[1]_3 ),
        .Q(Q[1]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[2] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\DcBiasxD[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[3] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\DcBiasxD[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  LUT3 #(
    .INIT(8'h8B)) 
    \TmdsEncodedDataxDO[4]_i_2 
       (.I0(\DcBiasxD_reg[3]_0 ),
        .I1(\DcBiasxD_reg[1]_0 ),
        .I2(\TmdsEncodedDataxDO_reg[9]_0 ),
        .O(\DcBiasxD_reg[3]_1 ));
  LUT3 #(
    .INIT(8'h82)) 
    \TmdsEncodedDataxDO[5]_i_3 
       (.I0(\DcBiasxD_reg[1]_0 ),
        .I1(\DcBiasxD_reg[3]_0 ),
        .I2(\TmdsEncodedDataxDO_reg[9]_0 ),
        .O(\DcBiasxD_reg[1]_1 ));
  LUT4 #(
    .INIT(16'h748B)) 
    \TmdsEncodedDataxDO[6]_i_1 
       (.I0(\DcBiasxD_reg[3]_0 ),
        .I1(\DcBiasxD_reg[1]_0 ),
        .I2(\TmdsEncodedDataxDO_reg[9]_0 ),
        .I3(\TmdsEncodedDataxDO_reg[6]_0 ),
        .O(\TmdsEncodedDataxDO[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h2F)) 
    \TmdsEncodedDataxDO[8]_i_1 
       (.I0(\DcBiasxD_reg[1]_0 ),
        .I1(\TmdsEncodedDataxDO_reg[9]_2 ),
        .I2(\TmdsEncodedDataxDO_reg[9]_0 ),
        .O(\TmdsEncodedDataxDO[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h5F4F)) 
    \TmdsEncodedDataxDO[9]_i_1 
       (.I0(\DcBiasxD_reg[3]_1 ),
        .I1(\DcBiasxD_reg[1]_0 ),
        .I2(\TmdsEncodedDataxDO_reg[9]_2 ),
        .I3(\TmdsEncodedDataxDO_reg[9]_0 ),
        .O(\TmdsEncodedDataxDO[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[0] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[5]_0 [0]),
        .Q(TmdsDataxDI[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[1] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[1]_0 ),
        .Q(TmdsDataxDI[1]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[2] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[5]_0 [1]),
        .Q(TmdsDataxDI[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[3] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[5]_0 [2]),
        .Q(TmdsDataxDI[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[4] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[5]_0 [3]),
        .Q(TmdsDataxDI[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[5] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[5]_0 [4]),
        .Q(TmdsDataxDI[5]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \TmdsEncodedDataxDO_reg[6] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO[6]_i_1_n_0 ),
        .Q(TmdsDataxDI[6]),
        .S(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[7] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[7]_1 ),
        .Q(TmdsDataxDI[7]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[8] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO[8]_i_1_n_0 ),
        .Q(TmdsDataxDI[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[9] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO[9]_i_1_n_0 ),
        .Q(TmdsDataxDI[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tmds_encoder" *) 
module tmds_encoder_4
   (TmdsDataxDI,
    \DcBiasxD_reg[0]_0 ,
    \DcBiasxD_reg[3]_0 ,
    \TmdsEncodedDataxDO_reg[4]_0 ,
    ClkVgaxCI,
    \TmdsEncodedDataxDO_reg[3]_0 ,
    \TmdsEncodedDataxDO_reg[2]_0 ,
    \TmdsEncodedDataxDO_reg[0]_0 ,
    \TmdsEncodedDataxDO_reg[7]_0 ,
    \TmdsEncodedDataxDO_reg[7]_1 ,
    \TmdsEncodedDataxDO_reg[5]_0 ,
    \TmdsEncodedDataxDO_reg[1]_0 ,
    \TmdsEncodedDataxDO_reg[6]_0 ,
    \TmdsEncodedDataxDO_reg[9]_0 ,
    \TmdsEncodedDataxDO_reg[8]_0 ,
    \DcBiasxD_reg[3]_1 );
  output [9:0]TmdsDataxDI;
  output \DcBiasxD_reg[0]_0 ;
  output [3:0]\DcBiasxD_reg[3]_0 ;
  input \TmdsEncodedDataxDO_reg[4]_0 ;
  input ClkVgaxCI;
  input \TmdsEncodedDataxDO_reg[3]_0 ;
  input \TmdsEncodedDataxDO_reg[2]_0 ;
  input \TmdsEncodedDataxDO_reg[0]_0 ;
  input \TmdsEncodedDataxDO_reg[7]_0 ;
  input \TmdsEncodedDataxDO_reg[7]_1 ;
  input \TmdsEncodedDataxDO_reg[5]_0 ;
  input \TmdsEncodedDataxDO_reg[1]_0 ;
  input \TmdsEncodedDataxDO_reg[6]_0 ;
  input \TmdsEncodedDataxDO_reg[9]_0 ;
  input \TmdsEncodedDataxDO_reg[8]_0 ;
  input [3:0]\DcBiasxD_reg[3]_1 ;

  wire ClkVgaxCI;
  wire \DcBiasxD_reg[0]_0 ;
  wire [3:0]\DcBiasxD_reg[3]_0 ;
  wire [3:0]\DcBiasxD_reg[3]_1 ;
  wire [9:0]TmdsDataxDI;
  wire \TmdsEncodedDataxDO_reg[0]_0 ;
  wire \TmdsEncodedDataxDO_reg[1]_0 ;
  wire \TmdsEncodedDataxDO_reg[2]_0 ;
  wire \TmdsEncodedDataxDO_reg[3]_0 ;
  wire \TmdsEncodedDataxDO_reg[4]_0 ;
  wire \TmdsEncodedDataxDO_reg[5]_0 ;
  wire \TmdsEncodedDataxDO_reg[6]_0 ;
  wire \TmdsEncodedDataxDO_reg[7]_0 ;
  wire \TmdsEncodedDataxDO_reg[7]_1 ;
  wire \TmdsEncodedDataxDO_reg[8]_0 ;
  wire \TmdsEncodedDataxDO_reg[9]_0 ;

  LUT4 #(
    .INIT(16'h0001)) 
    \DcBiasxD[3]_i_10__1 
       (.I0(\DcBiasxD_reg[3]_0 [0]),
        .I1(\DcBiasxD_reg[3]_0 [3]),
        .I2(\DcBiasxD_reg[3]_0 [2]),
        .I3(\DcBiasxD_reg[3]_0 [1]),
        .O(\DcBiasxD_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[0] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\DcBiasxD_reg[3]_1 [0]),
        .Q(\DcBiasxD_reg[3]_0 [0]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[1] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\DcBiasxD_reg[3]_1 [1]),
        .Q(\DcBiasxD_reg[3]_0 [1]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[2] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\DcBiasxD_reg[3]_1 [2]),
        .Q(\DcBiasxD_reg[3]_0 [2]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DcBiasxD_reg[3] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\DcBiasxD_reg[3]_1 [3]),
        .Q(\DcBiasxD_reg[3]_0 [3]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[0] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[0]_0 ),
        .Q(TmdsDataxDI[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[1] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[1]_0 ),
        .Q(TmdsDataxDI[1]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[2] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[2]_0 ),
        .Q(TmdsDataxDI[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[3] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[3]_0 ),
        .Q(TmdsDataxDI[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[4] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[4]_0 ),
        .Q(TmdsDataxDI[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[5] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[5]_0 ),
        .Q(TmdsDataxDI[5]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \TmdsEncodedDataxDO_reg[6] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[6]_0 ),
        .Q(TmdsDataxDI[6]),
        .S(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[7] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[7]_1 ),
        .Q(TmdsDataxDI[7]),
        .R(\TmdsEncodedDataxDO_reg[7]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[8] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[8]_0 ),
        .Q(TmdsDataxDI[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TmdsEncodedDataxDO_reg[9] 
       (.C(ClkVgaxCI),
        .CE(1'b1),
        .D(\TmdsEncodedDataxDO_reg[9]_0 ),
        .Q(TmdsDataxDI[9]),
        .R(1'b0));
endmodule

module ublaze_core
   (GpioxDO_tri_o,
    UserClkxCO,
    WrDataxDO,
    WrValidxSO,
    UBlazePllNotLockedxS,
    din,
    \bbstub_WrAddrxDO[4] ,
    E,
    \bbstub_WrAddrxDO[4]_0 ,
    \bbstub_WrAddrxDO[4]_1 ,
    D,
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] ,
    Q,
    ResetxRNI,
    SysClkxCI,
    FlagColor1RegPortxDP,
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] ,
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[31] ,
    \UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 );
  output [7:0]GpioxDO_tri_o;
  output UserClkxCO;
  output [31:0]WrDataxDO;
  output WrValidxSO;
  output UBlazePllNotLockedxS;
  output [31:0]din;
  output \bbstub_WrAddrxDO[4] ;
  output [0:0]E;
  output [0:0]\bbstub_WrAddrxDO[4]_0 ;
  output [0:0]\bbstub_WrAddrxDO[4]_1 ;
  output [31:0]D;
  output [31:0]\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] ;
  input [31:0]Q;
  input ResetxRNI;
  input SysClkxCI;
  input [31:0]FlagColor1RegPortxDP;
  input [31:0]\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] ;
  input [31:0]\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] ;
  input [31:0]\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 ;

  wire [31:0]D;
  wire [0:0]E;
  wire [31:0]FlagColor1RegPortxDP;
  wire \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ;
  wire \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_36_n_0 ;
  wire [7:0]GpioxDO_tri_o;
  wire [31:0]Q;
  wire [11:0]RdAddrxD;
  wire RdValidxS;
  wire ResetxRNI;
  wire SysClkxCI;
  wire [31:0]\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] ;
  wire [31:0]\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[0]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[10]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[11]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[12]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[13]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[14]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[15]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[16]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[17]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[18]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[19]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[1]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[20]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[21]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[22]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[23]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[24]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[25]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[26]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[27]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[28]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[29]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[2]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[30]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_5_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[3]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[4]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[5]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[6]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[7]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[8]_i_2_n_0 ;
  wire \UBlazeCDxB.RegBankxB.RdDataxD[9]_i_2_n_0 ;
  wire [31:0]\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] ;
  wire [31:0]\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 ;
  wire UBlazePllLockedxS;
  wire UBlazePllNotLockedxS;
  wire UserClkxCO;
  wire [11:0]WrAddrxD;
  wire [31:0]WrDataxDO;
  wire WrValidxSO;
  wire \bbstub_WrAddrxDO[4] ;
  wire [0:0]\bbstub_WrAddrxDO[4]_0 ;
  wire [0:0]\bbstub_WrAddrxDO[4]_1 ;
  wire [31:0]din;
  wire \NLW_UblazeSoPCxB.UblazeCorexI_InterruptxSI_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_1 
       (.I0(UBlazePllLockedxS),
        .O(UBlazePllNotLockedxS));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_10 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[23]),
        .I5(FlagColor1RegPortxDP[23]),
        .O(din[23]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_11 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[22]),
        .I5(FlagColor1RegPortxDP[22]),
        .O(din[22]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_12 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[21]),
        .I5(FlagColor1RegPortxDP[21]),
        .O(din[21]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_13 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[20]),
        .I5(FlagColor1RegPortxDP[20]),
        .O(din[20]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_14 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[19]),
        .I5(FlagColor1RegPortxDP[19]),
        .O(din[19]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_15 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[18]),
        .I5(FlagColor1RegPortxDP[18]),
        .O(din[18]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_16 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[17]),
        .I5(FlagColor1RegPortxDP[17]),
        .O(din[17]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_17 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[16]),
        .I5(FlagColor1RegPortxDP[16]),
        .O(din[16]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_18 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[15]),
        .I5(FlagColor1RegPortxDP[15]),
        .O(din[15]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_19 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[14]),
        .I5(FlagColor1RegPortxDP[14]),
        .O(din[14]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_2 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[31]),
        .I5(FlagColor1RegPortxDP[31]),
        .O(din[31]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_20 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[13]),
        .I5(FlagColor1RegPortxDP[13]),
        .O(din[13]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_21 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[12]),
        .I5(FlagColor1RegPortxDP[12]),
        .O(din[12]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_22 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[11]),
        .I5(FlagColor1RegPortxDP[11]),
        .O(din[11]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_23 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[10]),
        .I5(FlagColor1RegPortxDP[10]),
        .O(din[10]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_24 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[9]),
        .I5(FlagColor1RegPortxDP[9]),
        .O(din[9]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_25 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[8]),
        .I5(FlagColor1RegPortxDP[8]),
        .O(din[8]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_26 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[7]),
        .I5(FlagColor1RegPortxDP[7]),
        .O(din[7]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_27 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[6]),
        .I5(FlagColor1RegPortxDP[6]),
        .O(din[6]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_28 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[5]),
        .I5(FlagColor1RegPortxDP[5]),
        .O(din[5]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_29 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[4]),
        .I5(FlagColor1RegPortxDP[4]),
        .O(din[4]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_3 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[30]),
        .I5(FlagColor1RegPortxDP[30]),
        .O(din[30]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_30 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[3]),
        .I5(FlagColor1RegPortxDP[3]),
        .O(din[3]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_31 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[2]),
        .I5(FlagColor1RegPortxDP[2]),
        .O(din[2]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_32 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[1]),
        .I5(FlagColor1RegPortxDP[1]),
        .O(din[1]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_33 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[0]),
        .I5(FlagColor1RegPortxDP[0]),
        .O(din[0]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35 
       (.I0(WrAddrxD[9]),
        .I1(WrAddrxD[10]),
        .I2(WrAddrxD[0]),
        .I3(WrAddrxD[11]),
        .I4(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_36_n_0 ),
        .O(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_36 
       (.I0(WrAddrxD[7]),
        .I1(WrAddrxD[1]),
        .I2(WrAddrxD[6]),
        .I3(WrValidxSO),
        .I4(WrAddrxD[5]),
        .I5(WrAddrxD[8]),
        .O(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_36_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_4 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[29]),
        .I5(FlagColor1RegPortxDP[29]),
        .O(din[29]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_5 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[28]),
        .I5(FlagColor1RegPortxDP[28]),
        .O(din[28]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_6 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[27]),
        .I5(FlagColor1RegPortxDP[27]),
        .O(din[27]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_7 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[26]),
        .I5(FlagColor1RegPortxDP[26]),
        .O(din[26]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_8 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[25]),
        .I5(FlagColor1RegPortxDP[25]),
        .O(din[25]));
  LUT6 #(
    .INIT(64'hFFFFFF7F00800000)) 
    \FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_9 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .I4(WrDataxDO[24]),
        .I5(FlagColor1RegPortxDP[24]),
        .O(din[24]));
  LUT4 #(
    .INIT(16'h0080)) 
    \UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP[31]_i_1 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .O(\bbstub_WrAddrxDO[4] ));
  LUT4 #(
    .INIT(16'h0400)) 
    \UBlazeCDxB.RegBankxB.FlagColor2RegPortxDP[31]_i_1 
       (.I0(WrAddrxD[2]),
        .I1(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I2(WrAddrxD[3]),
        .I3(WrAddrxD[4]),
        .O(\bbstub_WrAddrxDO[4]_1 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \UBlazeCDxB.RegBankxB.FlagColor3RegPortxDP[31]_i_1 
       (.I0(WrAddrxD[2]),
        .I1(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I2(WrAddrxD[3]),
        .I3(WrAddrxD[4]),
        .O(\bbstub_WrAddrxDO[4]_0 ));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[0]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [0]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[0]),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[10]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [10]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[10]),
        .O(D[10]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[11]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [11]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[11]),
        .O(D[11]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[12]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [12]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[12]),
        .O(D[12]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[13]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [13]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[13]),
        .O(D[13]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[14]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [14]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[14]),
        .O(D[14]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[15]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [15]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[15]),
        .O(D[15]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[16]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [16]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[16]),
        .O(D[16]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[17]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [17]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[17]),
        .O(D[17]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[18]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [18]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[18]),
        .O(D[18]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[19]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [19]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[19]),
        .O(D[19]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[1]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [1]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[20]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [20]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[20]),
        .O(D[20]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[21]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [21]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[21]),
        .O(D[21]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[22]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [22]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[22]),
        .O(D[22]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[23]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [23]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[23]),
        .O(D[23]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[24]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [24]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[24]),
        .O(D[24]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[25]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [25]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[25]),
        .O(D[25]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[26]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [26]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[26]),
        .O(D[26]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[27]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [27]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[27]),
        .O(D[27]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[28]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [28]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[28]),
        .O(D[28]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[29]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [29]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[29]),
        .O(D[29]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[2]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [2]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[2]),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[30]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [30]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[30]),
        .O(D[30]));
  LUT4 #(
    .INIT(16'h002A)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[31]_i_1 
       (.I0(\FpgaUserToUBlazeCDCxB.FifoFlagColor1RegPortxI_i_35_n_0 ),
        .I1(WrAddrxD[3]),
        .I2(WrAddrxD[2]),
        .I3(WrAddrxD[4]),
        .O(E));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[31]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [31]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[31]),
        .O(D[31]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[3]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [3]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[3]),
        .O(D[3]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[4]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [4]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[4]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[5]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [5]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[5]),
        .O(D[5]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[6]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [6]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[6]),
        .O(D[6]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[7]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [7]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[7]),
        .O(D[7]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[8]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [8]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[8]),
        .O(D[8]));
  LUT4 #(
    .INIT(16'h0FA8)) 
    \UBlazeCDxB.RegBankxB.InterruptRegPortxDP[9]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [9]),
        .I1(WrAddrxD[2]),
        .I2(WrAddrxD[3]),
        .I3(WrDataxDO[9]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[0]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[0]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[0]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[0]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [0]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [0]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [0]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[10]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[10]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[10]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[10]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [10]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [10]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [10]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[11]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[11]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[11]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[11]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [11]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [11]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [11]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[12]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[12]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[12]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[12]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [12]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [12]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [12]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[13]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[13]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[13]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[13]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [13]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [13]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [13]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[14]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[14]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[14]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[14]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [14]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [14]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [14]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[15]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[15]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[15]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[15]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [15]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [15]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [15]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[16]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[16]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[16]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[16]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [16]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [16]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [16]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[17]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[17]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[17]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[17]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [17]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [17]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [17]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[18]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[18]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[18]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[18]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [18]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [18]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [18]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[19]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[19]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[19]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[19]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [19]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [19]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [19]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[1]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[1]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[1]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[1]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [1]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [1]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [1]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[20]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[20]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[20]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[20]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [20]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [20]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [20]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[21]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[21]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[21]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[21]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [21]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [21]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [21]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[22]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[22]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[22]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[22]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [22]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [22]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [22]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[23]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[23]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[23]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[23]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [23]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [23]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [23]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[24]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[24]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[24]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[24]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [24]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [24]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [24]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[25]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[25]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[25]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[25]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [25]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [25]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [25]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[26]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[26]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[26]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[26]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [26]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [26]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [26]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[27]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[27]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[27]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[27]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [27]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [27]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [27]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[28]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[28]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[28]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[28]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [28]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [28]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [28]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[29]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[29]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[29]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[29]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [29]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [29]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [29]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[2]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[2]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[2]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[2]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [2]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [2]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [2]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[30]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[30]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[30]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [30]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[30]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [30]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [30]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [30]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000AA8A)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_2_n_0 ),
        .I1(RdAddrxD[4]),
        .I2(RdAddrxD[3]),
        .I3(FlagColor1RegPortxDP[31]),
        .I4(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [31]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [31]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [31]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFD0FFFFFFFF)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3 
       (.I0(RdAddrxD[2]),
        .I1(RdAddrxD[4]),
        .I2(RdAddrxD[3]),
        .I3(RdAddrxD[0]),
        .I4(RdAddrxD[1]),
        .I5(RdValidxS),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4 
       (.I0(RdAddrxD[8]),
        .I1(RdAddrxD[10]),
        .I2(RdAddrxD[9]),
        .I3(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_5_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[31]_i_5 
       (.I0(RdAddrxD[7]),
        .I1(RdAddrxD[5]),
        .I2(RdAddrxD[11]),
        .I3(RdAddrxD[6]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[3]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[3]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[3]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[3]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [3]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [3]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [3]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[4]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[4]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[4]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[4]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [4]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [4]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [4]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[5]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[5]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[5]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[5]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [5]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [5]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [5]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[6]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[6]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[6]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[6]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [6]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [6]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [6]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[7]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[7]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[7]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[7]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [7]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [7]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [7]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[8]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[8]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[8]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[8]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [8]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [8]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [8]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022222022)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[9]_i_1 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD[9]_i_2_n_0 ),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_4_n_0 ),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(FlagColor1RegPortxDP[9]),
        .I5(\UBlazeCDxB.RegBankxB.RdDataxD[31]_i_3_n_0 ),
        .O(\UBlazeCDxB.RegBankxB.FlagColor1RegPortxDP_reg[31] [9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0CFC0)) 
    \UBlazeCDxB.RegBankxB.RdDataxD[9]_i_2 
       (.I0(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31] [9]),
        .I1(\UBlazeCDxB.RegBankxB.RdDataxD_reg[31]_0 [9]),
        .I2(RdAddrxD[4]),
        .I3(RdAddrxD[3]),
        .I4(RdAddrxD[2]),
        .I5(\UBlazeCDxB.RegBankxB.InterruptRegPortxDP_reg[31] [9]),
        .O(\UBlazeCDxB.RegBankxB.RdDataxD[9]_i_2_n_0 ));
  (* hw_handoff = "ublaze_sopc.hwdef" *) 
  ublaze_sopc \UblazeSoPCxB.UblazeCorexI 
       (.GpioxDO_tri_o(GpioxDO_tri_o),
        .InterruptxSI(\NLW_UblazeSoPCxB.UblazeCorexI_InterruptxSI_UNCONNECTED ),
        .PllLockedxSO(UBlazePllLockedxS),
        .RdAddrxDO(RdAddrxD),
        .RdDataxDI(Q),
        .RdValidxSO(RdValidxS),
        .ResetxRNI(ResetxRNI),
        .SysClkxCI(SysClkxCI),
        .UserClkxCO(UserClkxCO),
        .WrAddrxDO(WrAddrxD),
        .WrDataxDO(WrDataxDO),
        .WrValidxSO(WrValidxSO));
endmodule

(* hw_handoff = "ublaze_sopc.hwdef" *) 
module ublaze_sopc
   (GpioxDO_tri_o,
    InterruptxSI,
    PllLockedxSO,
    RdAddrxDO,
    RdDataxDI,
    RdValidxSO,
    ResetxRNI,
    SysClkxCI,
    UserClkxCO,
    WrAddrxDO,
    WrDataxDO,
    WrValidxSO);
  (* x_interface_info = "xilinx.com:interface:gpio:1.0 GpioxDO TRI_O" *) output [7:0]GpioxDO_tri_o;
  (* x_interface_info = "xilinx.com:signal:interrupt:1.0 INTR.INTERRUPTXSI INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME INTR.INTERRUPTXSI, PortWidth 1, SENSITIVITY LEVEL_HIGH" *) input InterruptxSI;
  output PllLockedxSO;
  output [11:0]RdAddrxDO;
  input [31:0]RdDataxDI;
  output RdValidxSO;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.RESETXRNI RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.RESETXRNI, POLARITY ACTIVE_LOW" *) input ResetxRNI;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.SYSCLKXCI CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.SYSCLKXCI, CLK_DOMAIN ublaze_sopc_clk_in1_0, FREQ_HZ 100000000, PHASE 0.000" *) input SysClkxCI;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.USERCLKXCO CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.USERCLKXCO, CLK_DOMAIN /ublaze_pll_clk_out1, FREQ_HZ 50000000, PHASE 0.0" *) output UserClkxCO;
  output [11:0]WrAddrxDO;
  output [31:0]WrDataxDO;
  output WrValidxSO;

  wire ARESETN_1;
  wire [0:31]Conn1_ABUS;
  wire Conn1_ADDRSTROBE;
  wire [0:31]Conn1_READDBUS;
  wire Conn1_READY;
  wire [0:31]Conn1_WRITEDBUS;
  wire [0:31]Conn_ABUS;
  wire Conn_ADDRSTROBE;
  wire [0:3]Conn_BE;
  wire [0:31]Conn_READDBUS;
  wire Conn_READY;
  wire [0:31]Conn_WRITEDBUS;
  wire Conn_WRITESTROBE;
  wire [7:0]GpioxDO_tri_o;
  wire PllLockedxSO;
  wire [11:0]RdAddrxDO;
  wire [31:0]RdDataxDI;
  wire RdValidxSO;
  wire ResetxRNI;
  wire S00_ARESETN_1;
  wire [31:0]S00_AXI_1_ARADDR;
  wire S00_AXI_1_ARREADY;
  wire S00_AXI_1_ARVALID;
  wire S00_AXI_1_AWREADY;
  wire S00_AXI_1_AWVALID;
  wire S00_AXI_1_BVALID;
  wire [31:0]S00_AXI_1_RDATA;
  wire S00_AXI_1_RVALID;
  wire [31:0]S00_AXI_1_WDATA;
  wire S00_AXI_1_WREADY;
  wire S00_AXI_1_WVALID;
  wire SysClkxCI;
  wire UserClkxCO;
  wire [11:0]WrAddrxDO;
  wire [31:0]WrDataxDO;
  wire WrValidxSO;
  wire axi_intc_interrupt_INTERRUPT;
  wire [3:0]axi_interconnect_M00_AXI_ARADDR;
  wire axi_interconnect_M00_AXI_ARREADY;
  wire axi_interconnect_M00_AXI_ARVALID;
  wire axi_interconnect_M00_AXI_AWREADY;
  wire axi_interconnect_M00_AXI_AWVALID;
  wire axi_interconnect_M00_AXI_BREADY;
  wire axi_interconnect_M00_AXI_BVALID;
  wire [31:0]axi_interconnect_M00_AXI_RDATA;
  wire axi_interconnect_M00_AXI_RREADY;
  wire axi_interconnect_M00_AXI_RVALID;
  wire [31:0]axi_interconnect_M00_AXI_WDATA;
  wire axi_interconnect_M00_AXI_WREADY;
  wire axi_interconnect_M00_AXI_WVALID;
  wire [8:0]axi_interconnect_M01_AXI_ARADDR;
  wire axi_interconnect_M01_AXI_ARREADY;
  wire axi_interconnect_M01_AXI_ARVALID;
  wire axi_interconnect_M01_AXI_AWREADY;
  wire axi_interconnect_M01_AXI_AWVALID;
  wire axi_interconnect_M01_AXI_BREADY;
  wire axi_interconnect_M01_AXI_BVALID;
  wire [31:0]axi_interconnect_M01_AXI_RDATA;
  wire axi_interconnect_M01_AXI_RREADY;
  wire axi_interconnect_M01_AXI_RVALID;
  wire [31:0]axi_interconnect_M01_AXI_WDATA;
  wire axi_interconnect_M01_AXI_WREADY;
  wire axi_interconnect_M01_AXI_WVALID;
  wire [4:0]axi_interconnect_M02_AXI_ARADDR;
  wire axi_interconnect_M02_AXI_ARREADY;
  wire axi_interconnect_M02_AXI_ARVALID;
  wire axi_interconnect_M02_AXI_AWREADY;
  wire axi_interconnect_M02_AXI_AWVALID;
  wire axi_interconnect_M02_AXI_BREADY;
  wire axi_interconnect_M02_AXI_BVALID;
  wire [31:0]axi_interconnect_M02_AXI_RDATA;
  wire axi_interconnect_M02_AXI_RREADY;
  wire axi_interconnect_M02_AXI_RVALID;
  wire [31:0]axi_interconnect_M02_AXI_WDATA;
  wire axi_interconnect_M02_AXI_WREADY;
  wire axi_interconnect_M02_AXI_WVALID;
  wire [8:0]axi_interconnect_M03_AXI_ARADDR;
  wire axi_interconnect_M03_AXI_ARREADY;
  wire axi_interconnect_M03_AXI_ARVALID;
  wire axi_interconnect_M03_AXI_AWREADY;
  wire axi_interconnect_M03_AXI_AWVALID;
  wire axi_interconnect_M03_AXI_BREADY;
  wire axi_interconnect_M03_AXI_BVALID;
  wire [31:0]axi_interconnect_M03_AXI_RDATA;
  wire axi_interconnect_M03_AXI_RREADY;
  wire axi_interconnect_M03_AXI_RVALID;
  wire [31:0]axi_interconnect_M03_AXI_WDATA;
  wire axi_interconnect_M03_AXI_WREADY;
  wire axi_interconnect_M03_AXI_WVALID;
  wire [31:0]axi_interconnect_M04_AXI_ARADDR;
  wire axi_interconnect_M04_AXI_ARREADY;
  wire axi_interconnect_M04_AXI_ARVALID;
  wire [31:0]axi_interconnect_M04_AXI_AWADDR;
  wire axi_interconnect_M04_AXI_AWREADY;
  wire axi_interconnect_M04_AXI_AWVALID;
  wire axi_interconnect_M04_AXI_BREADY;
  wire axi_interconnect_M04_AXI_BVALID;
  wire [31:0]axi_interconnect_M04_AXI_RDATA;
  wire axi_interconnect_M04_AXI_RREADY;
  wire axi_interconnect_M04_AXI_RVALID;
  wire [31:0]axi_interconnect_M04_AXI_WDATA;
  wire axi_interconnect_M04_AXI_WREADY;
  wire axi_interconnect_M04_AXI_WVALID;
  wire axi_timer_interrupt;
  wire [0:31]dlmb_bram_ctrl_BRAM_PORT_ADDR;
  wire dlmb_bram_ctrl_BRAM_PORT_CLK;
  wire [0:31]dlmb_bram_ctrl_BRAM_PORT_DIN;
  wire [31:0]dlmb_bram_ctrl_BRAM_PORT_DOUT;
  wire dlmb_bram_ctrl_BRAM_PORT_EN;
  wire dlmb_bram_ctrl_BRAM_PORT_RST;
  wire [0:3]dlmb_bram_ctrl_BRAM_PORT_WE;
  wire [0:31]ilmb_bram_ctrl_BRAM_PORT_ADDR;
  wire ilmb_bram_ctrl_BRAM_PORT_CLK;
  wire [0:31]ilmb_bram_ctrl_BRAM_PORT_DIN;
  wire [31:0]ilmb_bram_ctrl_BRAM_PORT_DOUT;
  wire ilmb_bram_ctrl_BRAM_PORT_EN;
  wire ilmb_bram_ctrl_BRAM_PORT_RST;
  wire [0:3]ilmb_bram_ctrl_BRAM_PORT_WE;
  wire [1:0]interrupt_xlconcat_dout;
  wire mdm_MBDEBUG_0_CAPTURE;
  wire mdm_MBDEBUG_0_CLK;
  wire [0:7]mdm_MBDEBUG_0_REG_EN;
  wire mdm_MBDEBUG_0_RST;
  wire mdm_MBDEBUG_0_SHIFT;
  wire mdm_MBDEBUG_0_TDI;
  wire mdm_MBDEBUG_0_TDO;
  wire mdm_MBDEBUG_0_UPDATE;
  wire [0:31]microblaze_0_DLMB_ABUS;
  wire microblaze_0_DLMB_ADDRSTROBE;
  wire [0:3]microblaze_0_DLMB_BE;
  wire [0:31]microblaze_0_DLMB_READDBUS;
  wire microblaze_0_DLMB_READY;
  wire [0:31]microblaze_0_DLMB_WRITEDBUS;
  wire microblaze_0_DLMB_WRITESTROBE;
  wire [0:31]microblaze_0_ILMB_ABUS;
  wire microblaze_0_ILMB_ADDRSTROBE;
  wire [0:31]microblaze_0_ILMB_READDBUS;
  wire microblaze_0_ILMB_READY;
  wire proc_sys_reset_0_bus_struct_reset;
  wire proc_sys_reset_0_mb_reset;
  wire [7:0]NLW_axi_gpio_s_axi_araddr_UNCONNECTED;
  wire [8:0]NLW_axi_gpio_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_gpio_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_gpio_s_axi_rresp_UNCONNECTED;
  wire [23:8]NLW_axi_gpio_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_gpio_s_axi_wstrb_UNCONNECTED;
  wire [1:1]NLW_axi_intc_intr_UNCONNECTED;
  wire [1:0]NLW_axi_intc_s_axi_araddr_UNCONNECTED;
  wire [8:0]NLW_axi_intc_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_intc_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_intc_s_axi_rresp_UNCONNECTED;
  wire [31:2]NLW_axi_intc_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_intc_s_axi_wstrb_UNCONNECTED;
  wire NLW_axi_interconnect_M00_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_M00_ARESETN_UNCONNECTED;
  wire NLW_axi_interconnect_M01_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_M01_ARESETN_UNCONNECTED;
  wire NLW_axi_interconnect_M02_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_M02_ARESETN_UNCONNECTED;
  wire NLW_axi_interconnect_M03_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_M03_ARESETN_UNCONNECTED;
  wire NLW_axi_interconnect_M04_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_M04_ARESETN_UNCONNECTED;
  wire NLW_axi_interconnect_S00_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_S00_ARESETN_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_M00_AXI_araddr_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_M00_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M00_AXI_bresp_UNCONNECTED;
  wire [31:8]NLW_axi_interconnect_M00_AXI_rdata_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M00_AXI_rresp_UNCONNECTED;
  wire [31:8]NLW_axi_interconnect_M00_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_M00_AXI_wstrb_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_M01_AXI_araddr_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_M01_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M01_AXI_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M01_AXI_rresp_UNCONNECTED;
  wire [23:8]NLW_axi_interconnect_M01_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_M01_AXI_wstrb_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_M02_AXI_araddr_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_M02_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M02_AXI_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M02_AXI_rresp_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_M02_AXI_wstrb_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_M03_AXI_araddr_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_M03_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M03_AXI_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M03_AXI_rresp_UNCONNECTED;
  wire [31:2]NLW_axi_interconnect_M03_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_M03_AXI_wstrb_UNCONNECTED;
  wire [31:12]NLW_axi_interconnect_M04_AXI_araddr_UNCONNECTED;
  wire [31:12]NLW_axi_interconnect_M04_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M04_AXI_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_M04_AXI_rresp_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_M04_AXI_wstrb_UNCONNECTED;
  wire [2:0]NLW_axi_interconnect_S00_AXI_arprot_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_S00_AXI_awaddr_UNCONNECTED;
  wire [2:0]NLW_axi_interconnect_S00_AXI_awprot_UNCONNECTED;
  wire [0:0]NLW_axi_interconnect_S00_AXI_bready_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_S00_AXI_bresp_UNCONNECTED;
  wire [0:0]NLW_axi_interconnect_S00_AXI_rready_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_S00_AXI_rresp_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_S00_AXI_wstrb_UNCONNECTED;
  wire NLW_axi_timer_generateout0_UNCONNECTED;
  wire NLW_axi_timer_generateout1_UNCONNECTED;
  wire NLW_axi_timer_pwm0_UNCONNECTED;
  wire [1:0]NLW_axi_timer_s_axi_araddr_UNCONNECTED;
  wire [4:0]NLW_axi_timer_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_timer_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_timer_s_axi_rresp_UNCONNECTED;
  wire [3:0]NLW_axi_timer_s_axi_wstrb_UNCONNECTED;
  wire NLW_dlmb_LMB_CE_UNCONNECTED;
  wire NLW_dlmb_LMB_Clk_UNCONNECTED;
  wire NLW_dlmb_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_LMB_Rst_UNCONNECTED;
  wire NLW_dlmb_LMB_UE_UNCONNECTED;
  wire NLW_dlmb_LMB_Wait_UNCONNECTED;
  wire NLW_dlmb_M_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_dlmb_LMB_ABus_UNCONNECTED;
  wire [0:31]NLW_dlmb_M_ABus_UNCONNECTED;
  wire [0:0]NLW_dlmb_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_dlmb_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_dlmb_Sl_Wait_UNCONNECTED;
  wire NLW_dlmb_bram_ctrl_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_bram_ctrl_Sl_CE_UNCONNECTED;
  wire NLW_dlmb_bram_ctrl_Sl_UE_UNCONNECTED;
  wire NLW_dlmb_bram_ctrl_Sl_Wait_UNCONNECTED;
  wire [0:31]NLW_dlmb_bram_ctrl_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_dlmb_bram_ctrl_LMB_ABus_UNCONNECTED;
  wire NLW_ilmb_LMB_CE_UNCONNECTED;
  wire NLW_ilmb_LMB_Clk_UNCONNECTED;
  wire NLW_ilmb_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_LMB_Rst_UNCONNECTED;
  wire NLW_ilmb_LMB_UE_UNCONNECTED;
  wire NLW_ilmb_LMB_Wait_UNCONNECTED;
  wire NLW_ilmb_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_M_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_M_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_ilmb_LMB_ABus_UNCONNECTED;
  wire [0:3]NLW_ilmb_LMB_BE_UNCONNECTED;
  wire [0:31]NLW_ilmb_M_ABus_UNCONNECTED;
  wire [0:3]NLW_ilmb_M_BE_UNCONNECTED;
  wire [0:0]NLW_ilmb_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_ilmb_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_ilmb_Sl_Wait_UNCONNECTED;
  wire NLW_ilmb_bram_ctrl_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_bram_ctrl_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_bram_ctrl_Sl_CE_UNCONNECTED;
  wire NLW_ilmb_bram_ctrl_Sl_UE_UNCONNECTED;
  wire NLW_ilmb_bram_ctrl_Sl_Wait_UNCONNECTED;
  wire [0:31]NLW_ilmb_bram_ctrl_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_ilmb_bram_ctrl_LMB_ABus_UNCONNECTED;
  wire [0:3]NLW_ilmb_bram_ctrl_LMB_BE_UNCONNECTED;
  wire [0:0]NLW_interrupt_xlconcat_In1_UNCONNECTED;
  wire [1:1]NLW_interrupt_xlconcat_dout_UNCONNECTED;
  wire NLW_mandelbrot_regbank_InterruptxSI_UNCONNECTED;
  wire NLW_mandelbrot_regbank_InterruptxSO_UNCONNECTED;
  wire [31:12]NLW_mandelbrot_regbank_SAxiARAddrxDI_UNCONNECTED;
  wire [31:12]NLW_mandelbrot_regbank_SAxiAWAddrxDI_UNCONNECTED;
  wire [1:0]NLW_mandelbrot_regbank_SAxiBRespxDO_UNCONNECTED;
  wire [1:0]NLW_mandelbrot_regbank_SAxiRRespxDO_UNCONNECTED;
  wire [3:0]NLW_mandelbrot_regbank_SAxiWStrbxDI_UNCONNECTED;
  wire NLW_mdm_Dbg_Disable_0_UNCONNECTED;
  wire NLW_mdm_Debug_SYS_Rst_UNCONNECTED;
  wire NLW_mdm_Interrupt_UNCONNECTED;
  wire [1:0]NLW_mdm_S_AXI_ARADDR_UNCONNECTED;
  wire [3:0]NLW_mdm_S_AXI_AWADDR_UNCONNECTED;
  wire [1:0]NLW_mdm_S_AXI_BRESP_UNCONNECTED;
  wire [31:8]NLW_mdm_S_AXI_RDATA_UNCONNECTED;
  wire [1:0]NLW_mdm_S_AXI_RRESP_UNCONNECTED;
  wire [31:8]NLW_mdm_S_AXI_WDATA_UNCONNECTED;
  wire [3:0]NLW_mdm_S_AXI_WSTRB_UNCONNECTED;
  wire [31:0]NLW_ublaze_bram_addra_UNCONNECTED;
  wire [31:0]NLW_ublaze_bram_addrb_UNCONNECTED;
  wire NLW_ublaze_core_DCE_UNCONNECTED;
  wire NLW_ublaze_core_DUE_UNCONNECTED;
  wire NLW_ublaze_core_DWait_UNCONNECTED;
  wire NLW_ublaze_core_Dbg_Disable_UNCONNECTED;
  wire NLW_ublaze_core_ICE_UNCONNECTED;
  wire NLW_ublaze_core_IFetch_UNCONNECTED;
  wire NLW_ublaze_core_IUE_UNCONNECTED;
  wire NLW_ublaze_core_IWAIT_UNCONNECTED;
  wire NLW_ublaze_core_M_AXI_DP_BREADY_UNCONNECTED;
  wire NLW_ublaze_core_M_AXI_DP_RREADY_UNCONNECTED;
  wire NLW_ublaze_core_Read_Strobe_UNCONNECTED;
  wire [0:31]NLW_ublaze_core_Data_Addr_UNCONNECTED;
  wire [0:31]NLW_ublaze_core_Instr_Addr_UNCONNECTED;
  wire [0:1]NLW_ublaze_core_Interrupt_Ack_UNCONNECTED;
  wire [0:31]NLW_ublaze_core_Interrupt_Address_UNCONNECTED;
  wire [2:0]NLW_ublaze_core_M_AXI_DP_ARPROT_UNCONNECTED;
  wire [31:0]NLW_ublaze_core_M_AXI_DP_AWADDR_UNCONNECTED;
  wire [2:0]NLW_ublaze_core_M_AXI_DP_AWPROT_UNCONNECTED;
  wire [1:0]NLW_ublaze_core_M_AXI_DP_BRESP_UNCONNECTED;
  wire [1:0]NLW_ublaze_core_M_AXI_DP_RRESP_UNCONNECTED;
  wire [3:0]NLW_ublaze_core_M_AXI_DP_WSTRB_UNCONNECTED;
  wire NLW_ublaze_sys_reset_aux_reset_in_UNCONNECTED;
  wire NLW_ublaze_sys_reset_mb_debug_sys_rst_UNCONNECTED;
  wire [0:0]NLW_ublaze_sys_reset_peripheral_reset_UNCONNECTED;

  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_axi_gpio_0_0/ublaze_sopc_axi_gpio_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "axi_gpio,Vivado 2018.2.2" *) 
  ublaze_sopc_axi_gpio_0_0 axi_gpio
       (.gpio_io_o(GpioxDO_tri_o),
        .s_axi_aclk(UserClkxCO),
        .s_axi_araddr({axi_interconnect_M01_AXI_ARADDR[8],NLW_axi_gpio_s_axi_araddr_UNCONNECTED[7:4],axi_interconnect_M01_AXI_ARADDR[3:2],NLW_axi_gpio_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_aresetn(S00_ARESETN_1),
        .s_axi_arready(axi_interconnect_M01_AXI_ARREADY),
        .s_axi_arvalid(axi_interconnect_M01_AXI_ARVALID),
        .s_axi_awaddr(NLW_axi_gpio_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awready(axi_interconnect_M01_AXI_AWREADY),
        .s_axi_awvalid(axi_interconnect_M01_AXI_AWVALID),
        .s_axi_bready(axi_interconnect_M01_AXI_BREADY),
        .s_axi_bresp(NLW_axi_gpio_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(axi_interconnect_M01_AXI_BVALID),
        .s_axi_rdata(axi_interconnect_M01_AXI_RDATA),
        .s_axi_rready(axi_interconnect_M01_AXI_RREADY),
        .s_axi_rresp(NLW_axi_gpio_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(axi_interconnect_M01_AXI_RVALID),
        .s_axi_wdata({axi_interconnect_M01_AXI_WDATA[31:24],NLW_axi_gpio_s_axi_wdata_UNCONNECTED[23:8],axi_interconnect_M01_AXI_WDATA[7:0]}),
        .s_axi_wready(axi_interconnect_M01_AXI_WREADY),
        .s_axi_wstrb(NLW_axi_gpio_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(axi_interconnect_M01_AXI_WVALID));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_axi_intc_0_0/ublaze_sopc_axi_intc_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "axi_intc,Vivado 2018.2.2" *) 
  ublaze_sopc_axi_intc_0_0 axi_intc
       (.intr({NLW_axi_intc_intr_UNCONNECTED[1],interrupt_xlconcat_dout[0]}),
        .irq(axi_intc_interrupt_INTERRUPT),
        .s_axi_aclk(UserClkxCO),
        .s_axi_araddr({axi_interconnect_M03_AXI_ARADDR[8:2],NLW_axi_intc_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_aresetn(S00_ARESETN_1),
        .s_axi_arready(axi_interconnect_M03_AXI_ARREADY),
        .s_axi_arvalid(axi_interconnect_M03_AXI_ARVALID),
        .s_axi_awaddr(NLW_axi_intc_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awready(axi_interconnect_M03_AXI_AWREADY),
        .s_axi_awvalid(axi_interconnect_M03_AXI_AWVALID),
        .s_axi_bready(axi_interconnect_M03_AXI_BREADY),
        .s_axi_bresp(NLW_axi_intc_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(axi_interconnect_M03_AXI_BVALID),
        .s_axi_rdata(axi_interconnect_M03_AXI_RDATA),
        .s_axi_rready(axi_interconnect_M03_AXI_RREADY),
        .s_axi_rresp(NLW_axi_intc_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(axi_interconnect_M03_AXI_RVALID),
        .s_axi_wdata({NLW_axi_intc_s_axi_wdata_UNCONNECTED[31:2],axi_interconnect_M03_AXI_WDATA[1:0]}),
        .s_axi_wready(axi_interconnect_M03_AXI_WREADY),
        .s_axi_wstrb(NLW_axi_intc_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(axi_interconnect_M03_AXI_WVALID));
  ublaze_sopc_axi_interconnect_0_0 axi_interconnect
       (.ACLK(UserClkxCO),
        .ARESETN(ARESETN_1),
        .M00_ACLK(NLW_axi_interconnect_M00_ACLK_UNCONNECTED),
        .M00_ARESETN(NLW_axi_interconnect_M00_ARESETN_UNCONNECTED),
        .M00_AXI_araddr({NLW_axi_interconnect_M00_AXI_araddr_UNCONNECTED[31:4],axi_interconnect_M00_AXI_ARADDR[3:2],NLW_axi_interconnect_M00_AXI_araddr_UNCONNECTED[1:0]}),
        .M00_AXI_arready(axi_interconnect_M00_AXI_ARREADY),
        .M00_AXI_arvalid(axi_interconnect_M00_AXI_ARVALID),
        .M00_AXI_awaddr(NLW_axi_interconnect_M00_AXI_awaddr_UNCONNECTED[31:0]),
        .M00_AXI_awready(axi_interconnect_M00_AXI_AWREADY),
        .M00_AXI_awvalid(axi_interconnect_M00_AXI_AWVALID),
        .M00_AXI_bready(axi_interconnect_M00_AXI_BREADY),
        .M00_AXI_bresp(NLW_axi_interconnect_M00_AXI_bresp_UNCONNECTED[1:0]),
        .M00_AXI_bvalid(axi_interconnect_M00_AXI_BVALID),
        .M00_AXI_rdata({NLW_axi_interconnect_M00_AXI_rdata_UNCONNECTED[31:8],axi_interconnect_M00_AXI_RDATA[7:0]}),
        .M00_AXI_rready(axi_interconnect_M00_AXI_RREADY),
        .M00_AXI_rresp(NLW_axi_interconnect_M00_AXI_rresp_UNCONNECTED[1:0]),
        .M00_AXI_rvalid(axi_interconnect_M00_AXI_RVALID),
        .M00_AXI_wdata({NLW_axi_interconnect_M00_AXI_wdata_UNCONNECTED[31:8],axi_interconnect_M00_AXI_WDATA[7:0]}),
        .M00_AXI_wready(axi_interconnect_M00_AXI_WREADY),
        .M00_AXI_wstrb(NLW_axi_interconnect_M00_AXI_wstrb_UNCONNECTED[3:0]),
        .M00_AXI_wvalid(axi_interconnect_M00_AXI_WVALID),
        .M01_ACLK(NLW_axi_interconnect_M01_ACLK_UNCONNECTED),
        .M01_ARESETN(NLW_axi_interconnect_M01_ARESETN_UNCONNECTED),
        .M01_AXI_araddr({NLW_axi_interconnect_M01_AXI_araddr_UNCONNECTED[31:9],axi_interconnect_M01_AXI_ARADDR[8],NLW_axi_interconnect_M01_AXI_araddr_UNCONNECTED[7:4],axi_interconnect_M01_AXI_ARADDR[3:2],NLW_axi_interconnect_M01_AXI_araddr_UNCONNECTED[1:0]}),
        .M01_AXI_arready(axi_interconnect_M01_AXI_ARREADY),
        .M01_AXI_arvalid(axi_interconnect_M01_AXI_ARVALID),
        .M01_AXI_awaddr(NLW_axi_interconnect_M01_AXI_awaddr_UNCONNECTED[31:0]),
        .M01_AXI_awready(axi_interconnect_M01_AXI_AWREADY),
        .M01_AXI_awvalid(axi_interconnect_M01_AXI_AWVALID),
        .M01_AXI_bready(axi_interconnect_M01_AXI_BREADY),
        .M01_AXI_bresp(NLW_axi_interconnect_M01_AXI_bresp_UNCONNECTED[1:0]),
        .M01_AXI_bvalid(axi_interconnect_M01_AXI_BVALID),
        .M01_AXI_rdata(axi_interconnect_M01_AXI_RDATA),
        .M01_AXI_rready(axi_interconnect_M01_AXI_RREADY),
        .M01_AXI_rresp(NLW_axi_interconnect_M01_AXI_rresp_UNCONNECTED[1:0]),
        .M01_AXI_rvalid(axi_interconnect_M01_AXI_RVALID),
        .M01_AXI_wdata({axi_interconnect_M01_AXI_WDATA[31:24],NLW_axi_interconnect_M01_AXI_wdata_UNCONNECTED[23:8],axi_interconnect_M01_AXI_WDATA[7:0]}),
        .M01_AXI_wready(axi_interconnect_M01_AXI_WREADY),
        .M01_AXI_wstrb(NLW_axi_interconnect_M01_AXI_wstrb_UNCONNECTED[3:0]),
        .M01_AXI_wvalid(axi_interconnect_M01_AXI_WVALID),
        .M02_ACLK(NLW_axi_interconnect_M02_ACLK_UNCONNECTED),
        .M02_ARESETN(NLW_axi_interconnect_M02_ARESETN_UNCONNECTED),
        .M02_AXI_araddr({NLW_axi_interconnect_M02_AXI_araddr_UNCONNECTED[31:5],axi_interconnect_M02_AXI_ARADDR[4:2],NLW_axi_interconnect_M02_AXI_araddr_UNCONNECTED[1:0]}),
        .M02_AXI_arready(axi_interconnect_M02_AXI_ARREADY),
        .M02_AXI_arvalid(axi_interconnect_M02_AXI_ARVALID),
        .M02_AXI_awaddr(NLW_axi_interconnect_M02_AXI_awaddr_UNCONNECTED[31:0]),
        .M02_AXI_awready(axi_interconnect_M02_AXI_AWREADY),
        .M02_AXI_awvalid(axi_interconnect_M02_AXI_AWVALID),
        .M02_AXI_bready(axi_interconnect_M02_AXI_BREADY),
        .M02_AXI_bresp(NLW_axi_interconnect_M02_AXI_bresp_UNCONNECTED[1:0]),
        .M02_AXI_bvalid(axi_interconnect_M02_AXI_BVALID),
        .M02_AXI_rdata(axi_interconnect_M02_AXI_RDATA),
        .M02_AXI_rready(axi_interconnect_M02_AXI_RREADY),
        .M02_AXI_rresp(NLW_axi_interconnect_M02_AXI_rresp_UNCONNECTED[1:0]),
        .M02_AXI_rvalid(axi_interconnect_M02_AXI_RVALID),
        .M02_AXI_wdata(axi_interconnect_M02_AXI_WDATA),
        .M02_AXI_wready(axi_interconnect_M02_AXI_WREADY),
        .M02_AXI_wstrb(NLW_axi_interconnect_M02_AXI_wstrb_UNCONNECTED[3:0]),
        .M02_AXI_wvalid(axi_interconnect_M02_AXI_WVALID),
        .M03_ACLK(NLW_axi_interconnect_M03_ACLK_UNCONNECTED),
        .M03_ARESETN(NLW_axi_interconnect_M03_ARESETN_UNCONNECTED),
        .M03_AXI_araddr({NLW_axi_interconnect_M03_AXI_araddr_UNCONNECTED[31:9],axi_interconnect_M03_AXI_ARADDR[8:2],NLW_axi_interconnect_M03_AXI_araddr_UNCONNECTED[1:0]}),
        .M03_AXI_arready(axi_interconnect_M03_AXI_ARREADY),
        .M03_AXI_arvalid(axi_interconnect_M03_AXI_ARVALID),
        .M03_AXI_awaddr(NLW_axi_interconnect_M03_AXI_awaddr_UNCONNECTED[31:0]),
        .M03_AXI_awready(axi_interconnect_M03_AXI_AWREADY),
        .M03_AXI_awvalid(axi_interconnect_M03_AXI_AWVALID),
        .M03_AXI_bready(axi_interconnect_M03_AXI_BREADY),
        .M03_AXI_bresp(NLW_axi_interconnect_M03_AXI_bresp_UNCONNECTED[1:0]),
        .M03_AXI_bvalid(axi_interconnect_M03_AXI_BVALID),
        .M03_AXI_rdata(axi_interconnect_M03_AXI_RDATA),
        .M03_AXI_rready(axi_interconnect_M03_AXI_RREADY),
        .M03_AXI_rresp(NLW_axi_interconnect_M03_AXI_rresp_UNCONNECTED[1:0]),
        .M03_AXI_rvalid(axi_interconnect_M03_AXI_RVALID),
        .M03_AXI_wdata({NLW_axi_interconnect_M03_AXI_wdata_UNCONNECTED[31:2],axi_interconnect_M03_AXI_WDATA[1:0]}),
        .M03_AXI_wready(axi_interconnect_M03_AXI_WREADY),
        .M03_AXI_wstrb(NLW_axi_interconnect_M03_AXI_wstrb_UNCONNECTED[3:0]),
        .M03_AXI_wvalid(axi_interconnect_M03_AXI_WVALID),
        .M04_ACLK(NLW_axi_interconnect_M04_ACLK_UNCONNECTED),
        .M04_ARESETN(NLW_axi_interconnect_M04_ARESETN_UNCONNECTED),
        .M04_AXI_araddr({NLW_axi_interconnect_M04_AXI_araddr_UNCONNECTED[31:12],axi_interconnect_M04_AXI_ARADDR[11:0]}),
        .M04_AXI_arready(axi_interconnect_M04_AXI_ARREADY),
        .M04_AXI_arvalid(axi_interconnect_M04_AXI_ARVALID),
        .M04_AXI_awaddr({NLW_axi_interconnect_M04_AXI_awaddr_UNCONNECTED[31:12],axi_interconnect_M04_AXI_AWADDR[11:0]}),
        .M04_AXI_awready(axi_interconnect_M04_AXI_AWREADY),
        .M04_AXI_awvalid(axi_interconnect_M04_AXI_AWVALID),
        .M04_AXI_bready(axi_interconnect_M04_AXI_BREADY),
        .M04_AXI_bresp(NLW_axi_interconnect_M04_AXI_bresp_UNCONNECTED[1:0]),
        .M04_AXI_bvalid(axi_interconnect_M04_AXI_BVALID),
        .M04_AXI_rdata(axi_interconnect_M04_AXI_RDATA),
        .M04_AXI_rready(axi_interconnect_M04_AXI_RREADY),
        .M04_AXI_rresp(NLW_axi_interconnect_M04_AXI_rresp_UNCONNECTED[1:0]),
        .M04_AXI_rvalid(axi_interconnect_M04_AXI_RVALID),
        .M04_AXI_wdata(axi_interconnect_M04_AXI_WDATA),
        .M04_AXI_wready(axi_interconnect_M04_AXI_WREADY),
        .M04_AXI_wstrb(NLW_axi_interconnect_M04_AXI_wstrb_UNCONNECTED[3:0]),
        .M04_AXI_wvalid(axi_interconnect_M04_AXI_WVALID),
        .S00_ACLK(NLW_axi_interconnect_S00_ACLK_UNCONNECTED),
        .S00_ARESETN(NLW_axi_interconnect_S00_ARESETN_UNCONNECTED),
        .S00_AXI_araddr(S00_AXI_1_ARADDR),
        .S00_AXI_arprot(NLW_axi_interconnect_S00_AXI_arprot_UNCONNECTED[2:0]),
        .S00_AXI_arready(S00_AXI_1_ARREADY),
        .S00_AXI_arvalid(S00_AXI_1_ARVALID),
        .S00_AXI_awaddr(NLW_axi_interconnect_S00_AXI_awaddr_UNCONNECTED[31:0]),
        .S00_AXI_awprot(NLW_axi_interconnect_S00_AXI_awprot_UNCONNECTED[2:0]),
        .S00_AXI_awready(S00_AXI_1_AWREADY),
        .S00_AXI_awvalid(S00_AXI_1_AWVALID),
        .S00_AXI_bready(NLW_axi_interconnect_S00_AXI_bready_UNCONNECTED[0]),
        .S00_AXI_bresp(NLW_axi_interconnect_S00_AXI_bresp_UNCONNECTED[1:0]),
        .S00_AXI_bvalid(S00_AXI_1_BVALID),
        .S00_AXI_rdata(S00_AXI_1_RDATA),
        .S00_AXI_rready(NLW_axi_interconnect_S00_AXI_rready_UNCONNECTED[0]),
        .S00_AXI_rresp(NLW_axi_interconnect_S00_AXI_rresp_UNCONNECTED[1:0]),
        .S00_AXI_rvalid(S00_AXI_1_RVALID),
        .S00_AXI_wdata(S00_AXI_1_WDATA),
        .S00_AXI_wready(S00_AXI_1_WREADY),
        .S00_AXI_wstrb(NLW_axi_interconnect_S00_AXI_wstrb_UNCONNECTED[3:0]),
        .S00_AXI_wvalid(S00_AXI_1_WVALID));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_axi_timer_0_0/ublaze_sopc_axi_timer_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "axi_timer,Vivado 2018.2.2" *) 
  ublaze_sopc_axi_timer_0_0 axi_timer
       (.capturetrig0(1'b0),
        .capturetrig1(1'b0),
        .freeze(1'b0),
        .generateout0(NLW_axi_timer_generateout0_UNCONNECTED),
        .generateout1(NLW_axi_timer_generateout1_UNCONNECTED),
        .interrupt(axi_timer_interrupt),
        .pwm0(NLW_axi_timer_pwm0_UNCONNECTED),
        .s_axi_aclk(UserClkxCO),
        .s_axi_araddr({axi_interconnect_M02_AXI_ARADDR[4:2],NLW_axi_timer_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_aresetn(S00_ARESETN_1),
        .s_axi_arready(axi_interconnect_M02_AXI_ARREADY),
        .s_axi_arvalid(axi_interconnect_M02_AXI_ARVALID),
        .s_axi_awaddr(NLW_axi_timer_s_axi_awaddr_UNCONNECTED[4:0]),
        .s_axi_awready(axi_interconnect_M02_AXI_AWREADY),
        .s_axi_awvalid(axi_interconnect_M02_AXI_AWVALID),
        .s_axi_bready(axi_interconnect_M02_AXI_BREADY),
        .s_axi_bresp(NLW_axi_timer_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(axi_interconnect_M02_AXI_BVALID),
        .s_axi_rdata(axi_interconnect_M02_AXI_RDATA),
        .s_axi_rready(axi_interconnect_M02_AXI_RREADY),
        .s_axi_rresp(NLW_axi_timer_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(axi_interconnect_M02_AXI_RVALID),
        .s_axi_wdata(axi_interconnect_M02_AXI_WDATA),
        .s_axi_wready(axi_interconnect_M02_AXI_WREADY),
        .s_axi_wstrb(NLW_axi_timer_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(axi_interconnect_M02_AXI_WVALID));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_lmb_v10_0_1/ublaze_sopc_lmb_v10_0_1.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "lmb_v10,Vivado 2018.2.2" *) 
  ublaze_sopc_lmb_v10_0_1 dlmb
       (.LMB_ABus({NLW_dlmb_LMB_ABus_UNCONNECTED[0],Conn_ABUS[1],NLW_dlmb_LMB_ABus_UNCONNECTED[2:16],Conn_ABUS[17:29],NLW_dlmb_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(Conn_ADDRSTROBE),
        .LMB_BE(Conn_BE),
        .LMB_CE(NLW_dlmb_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_dlmb_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(microblaze_0_DLMB_READDBUS),
        .LMB_ReadStrobe(NLW_dlmb_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(microblaze_0_DLMB_READY),
        .LMB_Rst(NLW_dlmb_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_dlmb_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_dlmb_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(Conn_WRITEDBUS),
        .LMB_WriteStrobe(Conn_WRITESTROBE),
        .M_ABus({NLW_dlmb_M_ABus_UNCONNECTED[0],microblaze_0_DLMB_ABUS[1],NLW_dlmb_M_ABus_UNCONNECTED[2:16],microblaze_0_DLMB_ABUS[17:29],NLW_dlmb_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(microblaze_0_DLMB_ADDRSTROBE),
        .M_BE(microblaze_0_DLMB_BE),
        .M_DBus(microblaze_0_DLMB_WRITEDBUS),
        .M_ReadStrobe(NLW_dlmb_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(microblaze_0_DLMB_WRITESTROBE),
        .SYS_Rst(NLW_dlmb_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_dlmb_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Conn_READDBUS),
        .Sl_Ready(Conn_READY),
        .Sl_UE(NLW_dlmb_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_dlmb_Sl_Wait_UNCONNECTED[0]));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_lmb_bram_if_cntlr_0_0/ublaze_sopc_lmb_bram_if_cntlr_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* bmm_info_address_space = "byte  0x00000000 32 > ublaze_sopc ublaze_bram" *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "lmb_bram_if_cntlr,Vivado 2018.2.2" *) 
  ublaze_sopc_lmb_bram_if_cntlr_0_0 dlmb_bram_ctrl
       (.BRAM_Addr_A({NLW_dlmb_bram_ctrl_BRAM_Addr_A_UNCONNECTED[0:16],dlmb_bram_ctrl_BRAM_PORT_ADDR[17:29],NLW_dlmb_bram_ctrl_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(dlmb_bram_ctrl_BRAM_PORT_CLK),
        .BRAM_Din_A({dlmb_bram_ctrl_BRAM_PORT_DOUT[31],dlmb_bram_ctrl_BRAM_PORT_DOUT[30],dlmb_bram_ctrl_BRAM_PORT_DOUT[29],dlmb_bram_ctrl_BRAM_PORT_DOUT[28],dlmb_bram_ctrl_BRAM_PORT_DOUT[27],dlmb_bram_ctrl_BRAM_PORT_DOUT[26],dlmb_bram_ctrl_BRAM_PORT_DOUT[25],dlmb_bram_ctrl_BRAM_PORT_DOUT[24],dlmb_bram_ctrl_BRAM_PORT_DOUT[23],dlmb_bram_ctrl_BRAM_PORT_DOUT[22],dlmb_bram_ctrl_BRAM_PORT_DOUT[21],dlmb_bram_ctrl_BRAM_PORT_DOUT[20],dlmb_bram_ctrl_BRAM_PORT_DOUT[19],dlmb_bram_ctrl_BRAM_PORT_DOUT[18],dlmb_bram_ctrl_BRAM_PORT_DOUT[17],dlmb_bram_ctrl_BRAM_PORT_DOUT[16],dlmb_bram_ctrl_BRAM_PORT_DOUT[15],dlmb_bram_ctrl_BRAM_PORT_DOUT[14],dlmb_bram_ctrl_BRAM_PORT_DOUT[13],dlmb_bram_ctrl_BRAM_PORT_DOUT[12],dlmb_bram_ctrl_BRAM_PORT_DOUT[11],dlmb_bram_ctrl_BRAM_PORT_DOUT[10],dlmb_bram_ctrl_BRAM_PORT_DOUT[9],dlmb_bram_ctrl_BRAM_PORT_DOUT[8],dlmb_bram_ctrl_BRAM_PORT_DOUT[7],dlmb_bram_ctrl_BRAM_PORT_DOUT[6],dlmb_bram_ctrl_BRAM_PORT_DOUT[5],dlmb_bram_ctrl_BRAM_PORT_DOUT[4],dlmb_bram_ctrl_BRAM_PORT_DOUT[3],dlmb_bram_ctrl_BRAM_PORT_DOUT[2],dlmb_bram_ctrl_BRAM_PORT_DOUT[1],dlmb_bram_ctrl_BRAM_PORT_DOUT[0]}),
        .BRAM_Dout_A(dlmb_bram_ctrl_BRAM_PORT_DIN),
        .BRAM_EN_A(dlmb_bram_ctrl_BRAM_PORT_EN),
        .BRAM_Rst_A(dlmb_bram_ctrl_BRAM_PORT_RST),
        .BRAM_WEN_A(dlmb_bram_ctrl_BRAM_PORT_WE),
        .LMB_ABus({NLW_dlmb_bram_ctrl_LMB_ABus_UNCONNECTED[0],Conn_ABUS[1],NLW_dlmb_bram_ctrl_LMB_ABus_UNCONNECTED[2:16],Conn_ABUS[17:29],NLW_dlmb_bram_ctrl_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(Conn_ADDRSTROBE),
        .LMB_BE(Conn_BE),
        .LMB_Clk(UserClkxCO),
        .LMB_ReadStrobe(NLW_dlmb_bram_ctrl_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(proc_sys_reset_0_bus_struct_reset),
        .LMB_WriteDBus(Conn_WRITEDBUS),
        .LMB_WriteStrobe(Conn_WRITESTROBE),
        .Sl_CE(NLW_dlmb_bram_ctrl_Sl_CE_UNCONNECTED),
        .Sl_DBus(Conn_READDBUS),
        .Sl_Ready(Conn_READY),
        .Sl_UE(NLW_dlmb_bram_ctrl_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_dlmb_bram_ctrl_Sl_Wait_UNCONNECTED));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_lmb_v10_0_0/ublaze_sopc_lmb_v10_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "lmb_v10,Vivado 2018.2.2" *) 
  ublaze_sopc_lmb_v10_0_0 ilmb
       (.LMB_ABus({NLW_ilmb_LMB_ABus_UNCONNECTED[0:16],Conn1_ABUS[17:29],NLW_ilmb_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(Conn1_ADDRSTROBE),
        .LMB_BE(NLW_ilmb_LMB_BE_UNCONNECTED[0:3]),
        .LMB_CE(NLW_ilmb_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_ilmb_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(microblaze_0_ILMB_READDBUS),
        .LMB_ReadStrobe(NLW_ilmb_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(microblaze_0_ILMB_READY),
        .LMB_Rst(NLW_ilmb_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_ilmb_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_ilmb_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(Conn1_WRITEDBUS),
        .LMB_WriteStrobe(NLW_ilmb_LMB_WriteStrobe_UNCONNECTED),
        .M_ABus({NLW_ilmb_M_ABus_UNCONNECTED[0:16],microblaze_0_ILMB_ABUS[17:29],NLW_ilmb_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(microblaze_0_ILMB_ADDRSTROBE),
        .M_BE(NLW_ilmb_M_BE_UNCONNECTED[0:3]),
        .M_DBus({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .M_ReadStrobe(NLW_ilmb_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(NLW_ilmb_M_WriteStrobe_UNCONNECTED),
        .SYS_Rst(NLW_ilmb_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_ilmb_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Conn1_READDBUS),
        .Sl_Ready(Conn1_READY),
        .Sl_UE(NLW_ilmb_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_ilmb_Sl_Wait_UNCONNECTED[0]));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_lmb_bram_if_cntlr_0_1/ublaze_sopc_lmb_bram_if_cntlr_0_1.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "lmb_bram_if_cntlr,Vivado 2018.2.2" *) 
  ublaze_sopc_lmb_bram_if_cntlr_0_1 ilmb_bram_ctrl
       (.BRAM_Addr_A({NLW_ilmb_bram_ctrl_BRAM_Addr_A_UNCONNECTED[0:16],ilmb_bram_ctrl_BRAM_PORT_ADDR[17:29],NLW_ilmb_bram_ctrl_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(ilmb_bram_ctrl_BRAM_PORT_CLK),
        .BRAM_Din_A({ilmb_bram_ctrl_BRAM_PORT_DOUT[31],ilmb_bram_ctrl_BRAM_PORT_DOUT[30],ilmb_bram_ctrl_BRAM_PORT_DOUT[29],ilmb_bram_ctrl_BRAM_PORT_DOUT[28],ilmb_bram_ctrl_BRAM_PORT_DOUT[27],ilmb_bram_ctrl_BRAM_PORT_DOUT[26],ilmb_bram_ctrl_BRAM_PORT_DOUT[25],ilmb_bram_ctrl_BRAM_PORT_DOUT[24],ilmb_bram_ctrl_BRAM_PORT_DOUT[23],ilmb_bram_ctrl_BRAM_PORT_DOUT[22],ilmb_bram_ctrl_BRAM_PORT_DOUT[21],ilmb_bram_ctrl_BRAM_PORT_DOUT[20],ilmb_bram_ctrl_BRAM_PORT_DOUT[19],ilmb_bram_ctrl_BRAM_PORT_DOUT[18],ilmb_bram_ctrl_BRAM_PORT_DOUT[17],ilmb_bram_ctrl_BRAM_PORT_DOUT[16],ilmb_bram_ctrl_BRAM_PORT_DOUT[15],ilmb_bram_ctrl_BRAM_PORT_DOUT[14],ilmb_bram_ctrl_BRAM_PORT_DOUT[13],ilmb_bram_ctrl_BRAM_PORT_DOUT[12],ilmb_bram_ctrl_BRAM_PORT_DOUT[11],ilmb_bram_ctrl_BRAM_PORT_DOUT[10],ilmb_bram_ctrl_BRAM_PORT_DOUT[9],ilmb_bram_ctrl_BRAM_PORT_DOUT[8],ilmb_bram_ctrl_BRAM_PORT_DOUT[7],ilmb_bram_ctrl_BRAM_PORT_DOUT[6],ilmb_bram_ctrl_BRAM_PORT_DOUT[5],ilmb_bram_ctrl_BRAM_PORT_DOUT[4],ilmb_bram_ctrl_BRAM_PORT_DOUT[3],ilmb_bram_ctrl_BRAM_PORT_DOUT[2],ilmb_bram_ctrl_BRAM_PORT_DOUT[1],ilmb_bram_ctrl_BRAM_PORT_DOUT[0]}),
        .BRAM_Dout_A(ilmb_bram_ctrl_BRAM_PORT_DIN),
        .BRAM_EN_A(ilmb_bram_ctrl_BRAM_PORT_EN),
        .BRAM_Rst_A(ilmb_bram_ctrl_BRAM_PORT_RST),
        .BRAM_WEN_A(ilmb_bram_ctrl_BRAM_PORT_WE),
        .LMB_ABus({NLW_ilmb_bram_ctrl_LMB_ABus_UNCONNECTED[0:16],Conn1_ABUS[17:29],NLW_ilmb_bram_ctrl_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(Conn1_ADDRSTROBE),
        .LMB_BE(NLW_ilmb_bram_ctrl_LMB_BE_UNCONNECTED[0:3]),
        .LMB_Clk(UserClkxCO),
        .LMB_ReadStrobe(NLW_ilmb_bram_ctrl_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(proc_sys_reset_0_bus_struct_reset),
        .LMB_WriteDBus(Conn1_WRITEDBUS),
        .LMB_WriteStrobe(NLW_ilmb_bram_ctrl_LMB_WriteStrobe_UNCONNECTED),
        .Sl_CE(NLW_ilmb_bram_ctrl_Sl_CE_UNCONNECTED),
        .Sl_DBus(Conn1_READDBUS),
        .Sl_Ready(Conn1_READY),
        .Sl_UE(NLW_ilmb_bram_ctrl_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_ilmb_bram_ctrl_Sl_Wait_UNCONNECTED));
  (* CHECK_LICENSE_TYPE = "ublaze_sopc_xlconcat_0_0,xlconcat_v2_1_1_xlconcat,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* x_core_info = "xlconcat_v2_1_1_xlconcat,Vivado 2018.2.2" *) 
  ublaze_sopc_xlconcat_0_0 interrupt_xlconcat
       (.In0(axi_timer_interrupt),
        .In1(NLW_interrupt_xlconcat_In1_UNCONNECTED[0]),
        .dout({NLW_interrupt_xlconcat_dout_UNCONNECTED[1],interrupt_xlconcat_dout[0]}));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_axi4lite_sl_if_0_0/ublaze_sopc_axi4lite_sl_if_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "axi4lite_sl_if,Vivado 2018.2.2" *) 
  ublaze_sopc_axi4lite_sl_if_0_0 mandelbrot_regbank
       (.InterruptxSI(NLW_mandelbrot_regbank_InterruptxSI_UNCONNECTED),
        .InterruptxSO(NLW_mandelbrot_regbank_InterruptxSO_UNCONNECTED),
        .RdAddrxDO(RdAddrxDO),
        .RdDataxDI(RdDataxDI),
        .RdValidxSO(RdValidxSO),
        .SAxiARAddrxDI({NLW_mandelbrot_regbank_SAxiARAddrxDI_UNCONNECTED[31:12],axi_interconnect_M04_AXI_ARADDR[11:0]}),
        .SAxiARReadyxSO(axi_interconnect_M04_AXI_ARREADY),
        .SAxiARValidxSI(axi_interconnect_M04_AXI_ARVALID),
        .SAxiAWAddrxDI({NLW_mandelbrot_regbank_SAxiAWAddrxDI_UNCONNECTED[31:12],axi_interconnect_M04_AXI_AWADDR[11:0]}),
        .SAxiAWReadyxSO(axi_interconnect_M04_AXI_AWREADY),
        .SAxiAWValidxSI(axi_interconnect_M04_AXI_AWVALID),
        .SAxiBReadyxSI(axi_interconnect_M04_AXI_BREADY),
        .SAxiBRespxDO(NLW_mandelbrot_regbank_SAxiBRespxDO_UNCONNECTED[1:0]),
        .SAxiBValidxSO(axi_interconnect_M04_AXI_BVALID),
        .SAxiClkxCI(UserClkxCO),
        .SAxiRDataxDO(axi_interconnect_M04_AXI_RDATA),
        .SAxiRReadyxSI(axi_interconnect_M04_AXI_RREADY),
        .SAxiRRespxDO(NLW_mandelbrot_regbank_SAxiRRespxDO_UNCONNECTED[1:0]),
        .SAxiRValidxSO(axi_interconnect_M04_AXI_RVALID),
        .SAxiResetxRANI(S00_ARESETN_1),
        .SAxiWDataxDI(axi_interconnect_M04_AXI_WDATA),
        .SAxiWReadyxSO(axi_interconnect_M04_AXI_WREADY),
        .SAxiWStrbxDI(NLW_mandelbrot_regbank_SAxiWStrbxDI_UNCONNECTED[3:0]),
        .SAxiWValidxSI(axi_interconnect_M04_AXI_WVALID),
        .WrAddrxDO(WrAddrxDO),
        .WrDataxDO(WrDataxDO),
        .WrValidxSO(WrValidxSO));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_mdm_0_0/ublaze_sopc_mdm_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "MDM,Vivado 2018.2.2" *) 
  ublaze_sopc_mdm_0_0 mdm
       (.Dbg_Capture_0(mdm_MBDEBUG_0_CAPTURE),
        .Dbg_Clk_0(mdm_MBDEBUG_0_CLK),
        .Dbg_Disable_0(NLW_mdm_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Reg_En_0(mdm_MBDEBUG_0_REG_EN),
        .Dbg_Rst_0(mdm_MBDEBUG_0_RST),
        .Dbg_Shift_0(mdm_MBDEBUG_0_SHIFT),
        .Dbg_TDI_0(mdm_MBDEBUG_0_TDI),
        .Dbg_TDO_0(mdm_MBDEBUG_0_TDO),
        .Dbg_Update_0(mdm_MBDEBUG_0_UPDATE),
        .Debug_SYS_Rst(NLW_mdm_Debug_SYS_Rst_UNCONNECTED),
        .Interrupt(NLW_mdm_Interrupt_UNCONNECTED),
        .S_AXI_ACLK(UserClkxCO),
        .S_AXI_ARADDR({axi_interconnect_M00_AXI_ARADDR[3:2],NLW_mdm_S_AXI_ARADDR_UNCONNECTED[1:0]}),
        .S_AXI_ARESETN(S00_ARESETN_1),
        .S_AXI_ARREADY(axi_interconnect_M00_AXI_ARREADY),
        .S_AXI_ARVALID(axi_interconnect_M00_AXI_ARVALID),
        .S_AXI_AWADDR(NLW_mdm_S_AXI_AWADDR_UNCONNECTED[3:0]),
        .S_AXI_AWREADY(axi_interconnect_M00_AXI_AWREADY),
        .S_AXI_AWVALID(axi_interconnect_M00_AXI_AWVALID),
        .S_AXI_BREADY(axi_interconnect_M00_AXI_BREADY),
        .S_AXI_BRESP(NLW_mdm_S_AXI_BRESP_UNCONNECTED[1:0]),
        .S_AXI_BVALID(axi_interconnect_M00_AXI_BVALID),
        .S_AXI_RDATA({NLW_mdm_S_AXI_RDATA_UNCONNECTED[31:8],axi_interconnect_M00_AXI_RDATA[7:0]}),
        .S_AXI_RREADY(axi_interconnect_M00_AXI_RREADY),
        .S_AXI_RRESP(NLW_mdm_S_AXI_RRESP_UNCONNECTED[1:0]),
        .S_AXI_RVALID(axi_interconnect_M00_AXI_RVALID),
        .S_AXI_WDATA({NLW_mdm_S_AXI_WDATA_UNCONNECTED[31:8],axi_interconnect_M00_AXI_WDATA[7:0]}),
        .S_AXI_WREADY(axi_interconnect_M00_AXI_WREADY),
        .S_AXI_WSTRB(NLW_mdm_S_AXI_WSTRB_UNCONNECTED[3:0]),
        .S_AXI_WVALID(axi_interconnect_M00_AXI_WVALID));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_blk_mem_gen_0_0/ublaze_sopc_blk_mem_gen_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "blk_mem_gen_v8_4_1,Vivado 2018.2.2" *) 
  ublaze_sopc_blk_mem_gen_0_0 ublaze_bram
       (.addra({NLW_ublaze_bram_addra_UNCONNECTED[31:15],ilmb_bram_ctrl_BRAM_PORT_ADDR[17],ilmb_bram_ctrl_BRAM_PORT_ADDR[18],ilmb_bram_ctrl_BRAM_PORT_ADDR[19],ilmb_bram_ctrl_BRAM_PORT_ADDR[20],ilmb_bram_ctrl_BRAM_PORT_ADDR[21],ilmb_bram_ctrl_BRAM_PORT_ADDR[22],ilmb_bram_ctrl_BRAM_PORT_ADDR[23],ilmb_bram_ctrl_BRAM_PORT_ADDR[24],ilmb_bram_ctrl_BRAM_PORT_ADDR[25],ilmb_bram_ctrl_BRAM_PORT_ADDR[26],ilmb_bram_ctrl_BRAM_PORT_ADDR[27],ilmb_bram_ctrl_BRAM_PORT_ADDR[28],ilmb_bram_ctrl_BRAM_PORT_ADDR[29],NLW_ublaze_bram_addra_UNCONNECTED[1:0]}),
        .addrb({NLW_ublaze_bram_addrb_UNCONNECTED[31:15],dlmb_bram_ctrl_BRAM_PORT_ADDR[17],dlmb_bram_ctrl_BRAM_PORT_ADDR[18],dlmb_bram_ctrl_BRAM_PORT_ADDR[19],dlmb_bram_ctrl_BRAM_PORT_ADDR[20],dlmb_bram_ctrl_BRAM_PORT_ADDR[21],dlmb_bram_ctrl_BRAM_PORT_ADDR[22],dlmb_bram_ctrl_BRAM_PORT_ADDR[23],dlmb_bram_ctrl_BRAM_PORT_ADDR[24],dlmb_bram_ctrl_BRAM_PORT_ADDR[25],dlmb_bram_ctrl_BRAM_PORT_ADDR[26],dlmb_bram_ctrl_BRAM_PORT_ADDR[27],dlmb_bram_ctrl_BRAM_PORT_ADDR[28],dlmb_bram_ctrl_BRAM_PORT_ADDR[29],NLW_ublaze_bram_addrb_UNCONNECTED[1:0]}),
        .clka(ilmb_bram_ctrl_BRAM_PORT_CLK),
        .clkb(dlmb_bram_ctrl_BRAM_PORT_CLK),
        .dina({ilmb_bram_ctrl_BRAM_PORT_DIN[0],ilmb_bram_ctrl_BRAM_PORT_DIN[1],ilmb_bram_ctrl_BRAM_PORT_DIN[2],ilmb_bram_ctrl_BRAM_PORT_DIN[3],ilmb_bram_ctrl_BRAM_PORT_DIN[4],ilmb_bram_ctrl_BRAM_PORT_DIN[5],ilmb_bram_ctrl_BRAM_PORT_DIN[6],ilmb_bram_ctrl_BRAM_PORT_DIN[7],ilmb_bram_ctrl_BRAM_PORT_DIN[8],ilmb_bram_ctrl_BRAM_PORT_DIN[9],ilmb_bram_ctrl_BRAM_PORT_DIN[10],ilmb_bram_ctrl_BRAM_PORT_DIN[11],ilmb_bram_ctrl_BRAM_PORT_DIN[12],ilmb_bram_ctrl_BRAM_PORT_DIN[13],ilmb_bram_ctrl_BRAM_PORT_DIN[14],ilmb_bram_ctrl_BRAM_PORT_DIN[15],ilmb_bram_ctrl_BRAM_PORT_DIN[16],ilmb_bram_ctrl_BRAM_PORT_DIN[17],ilmb_bram_ctrl_BRAM_PORT_DIN[18],ilmb_bram_ctrl_BRAM_PORT_DIN[19],ilmb_bram_ctrl_BRAM_PORT_DIN[20],ilmb_bram_ctrl_BRAM_PORT_DIN[21],ilmb_bram_ctrl_BRAM_PORT_DIN[22],ilmb_bram_ctrl_BRAM_PORT_DIN[23],ilmb_bram_ctrl_BRAM_PORT_DIN[24],ilmb_bram_ctrl_BRAM_PORT_DIN[25],ilmb_bram_ctrl_BRAM_PORT_DIN[26],ilmb_bram_ctrl_BRAM_PORT_DIN[27],ilmb_bram_ctrl_BRAM_PORT_DIN[28],ilmb_bram_ctrl_BRAM_PORT_DIN[29],ilmb_bram_ctrl_BRAM_PORT_DIN[30],ilmb_bram_ctrl_BRAM_PORT_DIN[31]}),
        .dinb({dlmb_bram_ctrl_BRAM_PORT_DIN[0],dlmb_bram_ctrl_BRAM_PORT_DIN[1],dlmb_bram_ctrl_BRAM_PORT_DIN[2],dlmb_bram_ctrl_BRAM_PORT_DIN[3],dlmb_bram_ctrl_BRAM_PORT_DIN[4],dlmb_bram_ctrl_BRAM_PORT_DIN[5],dlmb_bram_ctrl_BRAM_PORT_DIN[6],dlmb_bram_ctrl_BRAM_PORT_DIN[7],dlmb_bram_ctrl_BRAM_PORT_DIN[8],dlmb_bram_ctrl_BRAM_PORT_DIN[9],dlmb_bram_ctrl_BRAM_PORT_DIN[10],dlmb_bram_ctrl_BRAM_PORT_DIN[11],dlmb_bram_ctrl_BRAM_PORT_DIN[12],dlmb_bram_ctrl_BRAM_PORT_DIN[13],dlmb_bram_ctrl_BRAM_PORT_DIN[14],dlmb_bram_ctrl_BRAM_PORT_DIN[15],dlmb_bram_ctrl_BRAM_PORT_DIN[16],dlmb_bram_ctrl_BRAM_PORT_DIN[17],dlmb_bram_ctrl_BRAM_PORT_DIN[18],dlmb_bram_ctrl_BRAM_PORT_DIN[19],dlmb_bram_ctrl_BRAM_PORT_DIN[20],dlmb_bram_ctrl_BRAM_PORT_DIN[21],dlmb_bram_ctrl_BRAM_PORT_DIN[22],dlmb_bram_ctrl_BRAM_PORT_DIN[23],dlmb_bram_ctrl_BRAM_PORT_DIN[24],dlmb_bram_ctrl_BRAM_PORT_DIN[25],dlmb_bram_ctrl_BRAM_PORT_DIN[26],dlmb_bram_ctrl_BRAM_PORT_DIN[27],dlmb_bram_ctrl_BRAM_PORT_DIN[28],dlmb_bram_ctrl_BRAM_PORT_DIN[29],dlmb_bram_ctrl_BRAM_PORT_DIN[30],dlmb_bram_ctrl_BRAM_PORT_DIN[31]}),
        .douta(ilmb_bram_ctrl_BRAM_PORT_DOUT),
        .doutb(dlmb_bram_ctrl_BRAM_PORT_DOUT),
        .ena(ilmb_bram_ctrl_BRAM_PORT_EN),
        .enb(dlmb_bram_ctrl_BRAM_PORT_EN),
        .rsta(ilmb_bram_ctrl_BRAM_PORT_RST),
        .rstb(dlmb_bram_ctrl_BRAM_PORT_RST),
        .wea({ilmb_bram_ctrl_BRAM_PORT_WE[0],ilmb_bram_ctrl_BRAM_PORT_WE[1],ilmb_bram_ctrl_BRAM_PORT_WE[2],ilmb_bram_ctrl_BRAM_PORT_WE[3]}),
        .web({dlmb_bram_ctrl_BRAM_PORT_WE[0],dlmb_bram_ctrl_BRAM_PORT_WE[1],dlmb_bram_ctrl_BRAM_PORT_WE[2],dlmb_bram_ctrl_BRAM_PORT_WE[3]}));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_microblaze_0_0/ublaze_sopc_microblaze_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* bmm_info_processor = "microblaze-le > ublaze_sopc dlmb_bram_ctrl" *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "MicroBlaze,Vivado 2018.2.2" *) 
  ublaze_sopc_microblaze_0_0 ublaze_core
       (.Byte_Enable(microblaze_0_DLMB_BE),
        .Clk(UserClkxCO),
        .DCE(NLW_ublaze_core_DCE_UNCONNECTED),
        .DReady(microblaze_0_DLMB_READY),
        .DUE(NLW_ublaze_core_DUE_UNCONNECTED),
        .DWait(NLW_ublaze_core_DWait_UNCONNECTED),
        .D_AS(microblaze_0_DLMB_ADDRSTROBE),
        .Data_Addr({NLW_ublaze_core_Data_Addr_UNCONNECTED[0],microblaze_0_DLMB_ABUS[1],NLW_ublaze_core_Data_Addr_UNCONNECTED[2:16],microblaze_0_DLMB_ABUS[17:29],NLW_ublaze_core_Data_Addr_UNCONNECTED[30:31]}),
        .Data_Read(microblaze_0_DLMB_READDBUS),
        .Data_Write(microblaze_0_DLMB_WRITEDBUS),
        .Dbg_Capture(mdm_MBDEBUG_0_CAPTURE),
        .Dbg_Clk(mdm_MBDEBUG_0_CLK),
        .Dbg_Disable(NLW_ublaze_core_Dbg_Disable_UNCONNECTED),
        .Dbg_Reg_En(mdm_MBDEBUG_0_REG_EN),
        .Dbg_Shift(mdm_MBDEBUG_0_SHIFT),
        .Dbg_TDI(mdm_MBDEBUG_0_TDI),
        .Dbg_TDO(mdm_MBDEBUG_0_TDO),
        .Dbg_Update(mdm_MBDEBUG_0_UPDATE),
        .Debug_Rst(mdm_MBDEBUG_0_RST),
        .ICE(NLW_ublaze_core_ICE_UNCONNECTED),
        .IFetch(NLW_ublaze_core_IFetch_UNCONNECTED),
        .IReady(microblaze_0_ILMB_READY),
        .IUE(NLW_ublaze_core_IUE_UNCONNECTED),
        .IWAIT(NLW_ublaze_core_IWAIT_UNCONNECTED),
        .I_AS(microblaze_0_ILMB_ADDRSTROBE),
        .Instr(microblaze_0_ILMB_READDBUS),
        .Instr_Addr({NLW_ublaze_core_Instr_Addr_UNCONNECTED[0:16],microblaze_0_ILMB_ABUS[17:29],NLW_ublaze_core_Instr_Addr_UNCONNECTED[30:31]}),
        .Interrupt(axi_intc_interrupt_INTERRUPT),
        .Interrupt_Ack(NLW_ublaze_core_Interrupt_Ack_UNCONNECTED[0:1]),
        .Interrupt_Address(NLW_ublaze_core_Interrupt_Address_UNCONNECTED[0:31]),
        .M_AXI_DP_ARADDR(S00_AXI_1_ARADDR),
        .M_AXI_DP_ARPROT(NLW_ublaze_core_M_AXI_DP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_ARREADY(S00_AXI_1_ARREADY),
        .M_AXI_DP_ARVALID(S00_AXI_1_ARVALID),
        .M_AXI_DP_AWADDR(NLW_ublaze_core_M_AXI_DP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DP_AWPROT(NLW_ublaze_core_M_AXI_DP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_AWREADY(S00_AXI_1_AWREADY),
        .M_AXI_DP_AWVALID(S00_AXI_1_AWVALID),
        .M_AXI_DP_BREADY(NLW_ublaze_core_M_AXI_DP_BREADY_UNCONNECTED),
        .M_AXI_DP_BRESP(NLW_ublaze_core_M_AXI_DP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_BVALID(S00_AXI_1_BVALID),
        .M_AXI_DP_RDATA(S00_AXI_1_RDATA),
        .M_AXI_DP_RREADY(NLW_ublaze_core_M_AXI_DP_RREADY_UNCONNECTED),
        .M_AXI_DP_RRESP(NLW_ublaze_core_M_AXI_DP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_RVALID(S00_AXI_1_RVALID),
        .M_AXI_DP_WDATA(S00_AXI_1_WDATA),
        .M_AXI_DP_WREADY(S00_AXI_1_WREADY),
        .M_AXI_DP_WSTRB(NLW_ublaze_core_M_AXI_DP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DP_WVALID(S00_AXI_1_WVALID),
        .Read_Strobe(NLW_ublaze_core_Read_Strobe_UNCONNECTED),
        .Reset(proc_sys_reset_0_mb_reset),
        .Write_Strobe(microblaze_0_DLMB_WRITESTROBE));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_clk_wiz_0_0/ublaze_sopc_clk_wiz_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  ublaze_sopc_clk_wiz_0_0 ublaze_pll
       (.UserClkxCO(UserClkxCO),
        .clk_in1(SysClkxCI),
        .locked(PllLockedxSO),
        .resetn(ResetxRNI));
  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_proc_sys_reset_0_0/ublaze_sopc_proc_sys_reset_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "proc_sys_reset,Vivado 2018.2.2" *) 
  ublaze_sopc_proc_sys_reset_0_0 ublaze_sys_reset
       (.aux_reset_in(NLW_ublaze_sys_reset_aux_reset_in_UNCONNECTED),
        .bus_struct_reset(proc_sys_reset_0_bus_struct_reset),
        .dcm_locked(PllLockedxSO),
        .ext_reset_in(ResetxRNI),
        .interconnect_aresetn(ARESETN_1),
        .mb_debug_sys_rst(NLW_ublaze_sys_reset_mb_debug_sys_rst_UNCONNECTED),
        .mb_reset(proc_sys_reset_0_mb_reset),
        .peripheral_aresetn(S00_ARESETN_1),
        .peripheral_reset(NLW_ublaze_sys_reset_peripheral_reset_UNCONNECTED[0]),
        .slowest_sync_clk(UserClkxCO));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_axi4lite_sl_if_0_0,axi4lite_sl_if,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi4lite_sl_if,Vivado 2018.2.2" *) 
(* ip_definition_source = "package_project" *) 
module ublaze_sopc_axi4lite_sl_if_0_0
   (SAxiClkxCI,
    SAxiResetxRANI,
    SAxiAWAddrxDI,
    SAxiAWValidxSI,
    SAxiAWReadyxSO,
    SAxiWDataxDI,
    SAxiWStrbxDI,
    SAxiWValidxSI,
    SAxiWReadyxSO,
    SAxiBRespxDO,
    SAxiBValidxSO,
    SAxiBReadyxSI,
    SAxiARAddrxDI,
    SAxiARValidxSI,
    SAxiARReadyxSO,
    SAxiRDataxDO,
    SAxiRRespxDO,
    SAxiRValidxSO,
    SAxiRReadyxSI,
    WrDataxDO,
    WrAddrxDO,
    WrValidxSO,
    RdDataxDI,
    RdAddrxDO,
    RdValidxSO,
    InterruptxSI,
    InterruptxSO);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 SAxiClkxCI CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME SAxiClkxCI, ASSOCIATED_RESET InterruptxSO:InterruptxSI:SAxiResetxRANI, ASSOCIATED_BUSIF AxiLitexDIO, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input SAxiClkxCI;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 SAxiResetxRANI RST" *) (* x_interface_parameter = "XIL_INTERFACENAME SAxiResetxRANI, POLARITY ACTIVE_LOW" *) input SAxiResetxRANI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO AWADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME AxiLitexDIO, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) input [31:0]SAxiAWAddrxDI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO AWVALID" *) input SAxiAWValidxSI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO AWREADY" *) output SAxiAWReadyxSO;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO WDATA" *) input [31:0]SAxiWDataxDI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO WSTRB" *) input [3:0]SAxiWStrbxDI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO WVALID" *) input SAxiWValidxSI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO WREADY" *) output SAxiWReadyxSO;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO BRESP" *) output [1:0]SAxiBRespxDO;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO BVALID" *) output SAxiBValidxSO;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO BREADY" *) input SAxiBReadyxSI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO ARADDR" *) input [31:0]SAxiARAddrxDI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO ARVALID" *) input SAxiARValidxSI;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO ARREADY" *) output SAxiARReadyxSO;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO RDATA" *) output [31:0]SAxiRDataxDO;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO RRESP" *) output [1:0]SAxiRRespxDO;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO RVALID" *) output SAxiRValidxSO;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 AxiLitexDIO RREADY" *) input SAxiRReadyxSI;
  output [31:0]WrDataxDO;
  output [11:0]WrAddrxDO;
  output WrValidxSO;
  input [31:0]RdDataxDI;
  output [11:0]RdAddrxDO;
  output RdValidxSO;
  (* x_interface_info = "xilinx.com:signal:interrupt:1.0 InterruptxSI INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME InterruptxSI, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) input InterruptxSI;
  (* x_interface_info = "xilinx.com:signal:interrupt:1.0 InterruptxSO INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME InterruptxSO, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) output InterruptxSO;

  wire [31:0]RdDataxDI;
  wire [31:0]SAxiARAddrxDI;
  wire SAxiARReadyxSO;
  wire SAxiARValidxSI;
  wire [31:0]SAxiAWAddrxDI;
  wire SAxiAWReadyxSO;
  wire SAxiAWValidxSI;
  wire SAxiBReadyxSI;
  wire SAxiBValidxSO;
  wire SAxiClkxCI;
  wire SAxiRReadyxSI;
  wire SAxiRValidxSO;
  wire SAxiResetxRANI;
  wire [31:0]SAxiWDataxDI;
  wire SAxiWReadyxSO;
  wire SAxiWValidxSI;
  wire [11:0]WrAddrxDO;

  assign RdAddrxDO[11:0] = SAxiARAddrxDI[11:0];
  assign RdValidxSO = SAxiARValidxSI;
  assign SAxiRDataxDO[31:0] = RdDataxDI;
  assign WrDataxDO[31:0] = SAxiWDataxDI;
  assign WrValidxSO = SAxiWValidxSI;
  ublaze_sopc_axi4lite_sl_if_0_0_axi4lite_sl_if U0
       (.SAxiARReadyxSO(SAxiARReadyxSO),
        .SAxiARValidxSI(SAxiARValidxSI),
        .SAxiAWAddrxDI(SAxiAWAddrxDI[11:0]),
        .SAxiAWReadyxSO(SAxiAWReadyxSO),
        .SAxiAWValidxSI(SAxiAWValidxSI),
        .SAxiBReadyxSI(SAxiBReadyxSI),
        .SAxiBValidxSO(SAxiBValidxSO),
        .SAxiClkxCI(SAxiClkxCI),
        .SAxiRReadyxSI(SAxiRReadyxSI),
        .SAxiRValidxSO(SAxiRValidxSO),
        .SAxiResetxRANI(SAxiResetxRANI),
        .SAxiWReadyxSO(SAxiWReadyxSO),
        .SAxiWValidxSI(SAxiWValidxSI),
        .WrAddrxDO(WrAddrxDO));
endmodule

(* ORIG_REF_NAME = "axi4lite_rd_chan_sl_if" *) 
module ublaze_sopc_axi4lite_sl_if_0_0_axi4lite_rd_chan_sl_if
   (SAxiARReadyxSO,
    SAxiRValidxSO,
    SAxiClkxCI,
    SAxiARReadyxS_reg_0,
    SAxiRReadyxSI,
    StateAfterResetxS,
    SAxiARValidxSI);
  output SAxiARReadyxSO;
  output SAxiRValidxSO;
  input SAxiClkxCI;
  input SAxiARReadyxS_reg_0;
  input SAxiRReadyxSI;
  input StateAfterResetxS;
  input SAxiARValidxSI;

  wire SAxiARReadyxSO;
  wire SAxiARReadyxS_i_1_n_0;
  wire SAxiARReadyxS_reg_0;
  wire SAxiARValidxSI;
  wire SAxiClkxCI;
  wire SAxiRReadyxSI;
  wire SAxiRValidxSO;
  wire SAxiRValidxS_i_1_n_0;
  wire StateAfterResetxS;

  (* \PinAttr:I0:HOLD_DETOUR  = "197" *) 
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h44FE)) 
    SAxiARReadyxS_i_1
       (.I0(SAxiARReadyxSO),
        .I1(SAxiRReadyxSI),
        .I2(StateAfterResetxS),
        .I3(SAxiARValidxSI),
        .O(SAxiARReadyxS_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    SAxiARReadyxS_reg
       (.C(SAxiClkxCI),
        .CE(1'b1),
        .CLR(SAxiARReadyxS_reg_0),
        .D(SAxiARReadyxS_i_1_n_0),
        .Q(SAxiARReadyxSO));
  (* \PinAttr:I2:HOLD_DETOUR  = "197" *) 
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7444)) 
    SAxiRValidxS_i_1
       (.I0(SAxiRReadyxSI),
        .I1(SAxiRValidxSO),
        .I2(SAxiARReadyxSO),
        .I3(SAxiARValidxSI),
        .O(SAxiRValidxS_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    SAxiRValidxS_reg
       (.C(SAxiClkxCI),
        .CE(1'b1),
        .CLR(SAxiARReadyxS_reg_0),
        .D(SAxiRValidxS_i_1_n_0),
        .Q(SAxiRValidxSO));
endmodule

(* ORIG_REF_NAME = "axi4lite_sl_if" *) 
module ublaze_sopc_axi4lite_sl_if_0_0_axi4lite_sl_if
   (WrAddrxDO,
    SAxiAWReadyxSO,
    SAxiWReadyxSO,
    SAxiBValidxSO,
    SAxiARReadyxSO,
    SAxiRValidxSO,
    SAxiAWValidxSI,
    SAxiAWAddrxDI,
    SAxiClkxCI,
    SAxiResetxRANI,
    SAxiWValidxSI,
    SAxiBReadyxSI,
    SAxiRReadyxSI,
    SAxiARValidxSI);
  output [11:0]WrAddrxDO;
  output SAxiAWReadyxSO;
  output SAxiWReadyxSO;
  output SAxiBValidxSO;
  output SAxiARReadyxSO;
  output SAxiRValidxSO;
  input SAxiAWValidxSI;
  input [11:0]SAxiAWAddrxDI;
  input SAxiClkxCI;
  input SAxiResetxRANI;
  input SAxiWValidxSI;
  input SAxiBReadyxSI;
  input SAxiRReadyxSI;
  input SAxiARValidxSI;

  wire \Axi4LiteSlIfxB.Axi4LiteWrChanSlIfxI_n_1 ;
  wire SAxiARReadyxSO;
  wire SAxiARValidxSI;
  wire [11:0]SAxiAWAddrxDI;
  wire SAxiAWReadyxSO;
  wire SAxiAWValidxSI;
  wire SAxiBReadyxSI;
  wire SAxiBValidxSO;
  wire SAxiClkxCI;
  wire SAxiRReadyxSI;
  wire SAxiRValidxSO;
  wire SAxiResetxRANI;
  wire SAxiWReadyxSO;
  wire SAxiWValidxSI;
  wire StateAfterResetxS;
  wire [11:0]WrAddrxDO;

  ublaze_sopc_axi4lite_sl_if_0_0_axi4lite_rd_chan_sl_if \Axi4LiteSlIfxB.Axi4LiteRdChanSlIfxI 
       (.SAxiARReadyxSO(SAxiARReadyxSO),
        .SAxiARReadyxS_reg_0(\Axi4LiteSlIfxB.Axi4LiteWrChanSlIfxI_n_1 ),
        .SAxiARValidxSI(SAxiARValidxSI),
        .SAxiClkxCI(SAxiClkxCI),
        .SAxiRReadyxSI(SAxiRReadyxSI),
        .SAxiRValidxSO(SAxiRValidxSO),
        .StateAfterResetxS(StateAfterResetxS));
  ublaze_sopc_axi4lite_sl_if_0_0_axi4lite_wr_chan_sl_if \Axi4LiteSlIfxB.Axi4LiteWrChanSlIfxI 
       (.SAxiAWAddrxDI(SAxiAWAddrxDI),
        .SAxiAWReadyxSO(SAxiAWReadyxSO),
        .SAxiAWValidxSI(SAxiAWValidxSI),
        .SAxiBReadyxSI(SAxiBReadyxSI),
        .SAxiBValidxSO(SAxiBValidxSO),
        .SAxiClkxCI(SAxiClkxCI),
        .SAxiResetxRANI(SAxiResetxRANI),
        .SAxiResetxRANI_0(\Axi4LiteSlIfxB.Axi4LiteWrChanSlIfxI_n_1 ),
        .SAxiWReadyxSO(SAxiWReadyxSO),
        .SAxiWValidxSI(SAxiWValidxSI),
        .StateAfterResetxS(StateAfterResetxS),
        .WrAddrxDO(WrAddrxDO));
endmodule

(* ORIG_REF_NAME = "axi4lite_wr_chan_sl_if" *) 
module ublaze_sopc_axi4lite_sl_if_0_0_axi4lite_wr_chan_sl_if
   (StateAfterResetxS,
    SAxiResetxRANI_0,
    SAxiAWReadyxSO,
    SAxiWReadyxSO,
    SAxiBValidxSO,
    WrAddrxDO,
    SAxiClkxCI,
    SAxiResetxRANI,
    SAxiWValidxSI,
    SAxiAWValidxSI,
    SAxiBReadyxSI,
    SAxiAWAddrxDI);
  output StateAfterResetxS;
  output SAxiResetxRANI_0;
  output SAxiAWReadyxSO;
  output SAxiWReadyxSO;
  output SAxiBValidxSO;
  output [11:0]WrAddrxDO;
  input SAxiClkxCI;
  input SAxiResetxRANI;
  input SAxiWValidxSI;
  input SAxiAWValidxSI;
  input SAxiBReadyxSI;
  input [11:0]SAxiAWAddrxDI;

  wire [11:0]SAxiAWAddrxDI;
  wire SAxiAWReadyxSO;
  wire SAxiAWReadyxS_i_1_n_0;
  wire SAxiAWValidxSI;
  wire SAxiBReadyxSI;
  wire SAxiBValidxSO;
  wire SAxiBValidxS_i_1_n_0;
  wire SAxiClkxCI;
  wire SAxiResetxRANI;
  wire SAxiResetxRANI_0;
  wire SAxiWReadyxSO;
  wire SAxiWReadyxS_i_1_n_0;
  wire SAxiWValidxSI;
  wire StateAfterResetxS;
  wire [11:0]WrAddrxDO;

  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[0] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[0]),
        .Q(WrAddrxDO[0]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[10] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[10]),
        .Q(WrAddrxDO[10]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[11] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[11]),
        .Q(WrAddrxDO[11]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[1] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[1]),
        .Q(WrAddrxDO[1]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[2] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[2]),
        .Q(WrAddrxDO[2]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[3] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[3]),
        .Q(WrAddrxDO[3]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[4] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[4]),
        .Q(WrAddrxDO[4]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[5] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[5]),
        .Q(WrAddrxDO[5]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[6] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[6]),
        .Q(WrAddrxDO[6]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[7] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[7]),
        .Q(WrAddrxDO[7]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[8] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[8]),
        .Q(WrAddrxDO[8]));
  FDCE #(
    .INIT(1'b0)) 
    \AddrxDP_reg[9] 
       (.C(SAxiClkxCI),
        .CE(SAxiAWValidxSI),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWAddrxDI[9]),
        .Q(WrAddrxDO[9]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'hAFAE)) 
    SAxiAWReadyxS_i_1
       (.I0(SAxiWValidxSI),
        .I1(StateAfterResetxS),
        .I2(SAxiAWValidxSI),
        .I3(SAxiAWReadyxSO),
        .O(SAxiAWReadyxS_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    SAxiAWReadyxS_i_2
       (.I0(SAxiResetxRANI),
        .O(SAxiResetxRANI_0));
  FDCE #(
    .INIT(1'b0)) 
    SAxiAWReadyxS_reg
       (.C(SAxiClkxCI),
        .CE(1'b1),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiAWReadyxS_i_1_n_0),
        .Q(SAxiAWReadyxSO));
  LUT4 #(
    .INIT(16'h7444)) 
    SAxiBValidxS_i_1
       (.I0(SAxiBReadyxSI),
        .I1(SAxiBValidxSO),
        .I2(SAxiWReadyxSO),
        .I3(SAxiWValidxSI),
        .O(SAxiBValidxS_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    SAxiBValidxS_reg
       (.C(SAxiClkxCI),
        .CE(1'b1),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiBValidxS_i_1_n_0),
        .Q(SAxiBValidxSO));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h7222)) 
    SAxiWReadyxS_i_1
       (.I0(SAxiWReadyxSO),
        .I1(SAxiWValidxSI),
        .I2(SAxiAWReadyxSO),
        .I3(SAxiAWValidxSI),
        .O(SAxiWReadyxS_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    SAxiWReadyxS_reg
       (.C(SAxiClkxCI),
        .CE(1'b1),
        .CLR(SAxiResetxRANI_0),
        .D(SAxiWReadyxS_i_1_n_0),
        .Q(SAxiWReadyxSO));
  FDPE #(
    .INIT(1'b1)) 
    StateAfterResetxS_reg
       (.C(SAxiClkxCI),
        .CE(1'b1),
        .D(1'b0),
        .PRE(SAxiResetxRANI_0),
        .Q(StateAfterResetxS));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_axi_gpio_0_0,axi_gpio,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_gpio,Vivado 2018.2.2" *) 
module ublaze_sopc_axi_gpio_0_0
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    gpio_io_o);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 S_AXI_ACLK CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXI_ACLK, ASSOCIATED_BUSIF S_AXI, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input s_axi_aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 S_AXI_ARESETN RST" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXI_ARESETN, POLARITY ACTIVE_LOW" *) input s_axi_aresetn;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 9, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) input [8:0]s_axi_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [8:0]s_axi_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* x_interface_info = "xilinx.com:interface:gpio:1.0 GPIO TRI_O" *) (* x_interface_parameter = "XIL_INTERFACENAME GPIO, BOARD.ASSOCIATED_PARAM GPIO_BOARD_INTERFACE" *) output [7:0]gpio_io_o;

  wire [7:0]gpio_io_o;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire NLW_U0_ip2intc_irpt_UNCONNECTED;
  wire [31:0]NLW_U0_gpio2_io_i_UNCONNECTED;
  wire [31:0]NLW_U0_gpio2_io_o_UNCONNECTED;
  wire [31:0]NLW_U0_gpio2_io_t_UNCONNECTED;
  wire [7:0]NLW_U0_gpio_io_i_UNCONNECTED;
  wire [7:0]NLW_U0_gpio_io_t_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [8:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [23:8]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_ALL_INPUTS = "0" *) 
  (* C_ALL_INPUTS_2 = "0" *) 
  (* C_ALL_OUTPUTS = "1" *) 
  (* C_ALL_OUTPUTS_2 = "0" *) 
  (* C_DOUT_DEFAULT = "0" *) 
  (* C_DOUT_DEFAULT_2 = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_GPIO2_WIDTH = "32" *) 
  (* C_GPIO_WIDTH = "8" *) 
  (* C_INTERRUPT_PRESENT = "0" *) 
  (* C_IS_DUAL = "0" *) 
  (* C_S_AXI_ADDR_WIDTH = "9" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_TRI_DEFAULT = "-1" *) 
  (* C_TRI_DEFAULT_2 = "-1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* ip_group = "LOGICORE" *) 
  ublaze_sopc_axi_gpio_0_0__axi_gpio U0
       (.gpio2_io_i(NLW_U0_gpio2_io_i_UNCONNECTED[31:0]),
        .gpio2_io_o(NLW_U0_gpio2_io_o_UNCONNECTED[31:0]),
        .gpio2_io_t(NLW_U0_gpio2_io_t_UNCONNECTED[31:0]),
        .gpio_io_i(NLW_U0_gpio_io_i_UNCONNECTED[7:0]),
        .gpio_io_o(gpio_io_o),
        .gpio_io_t(NLW_U0_gpio_io_t_UNCONNECTED[7:0]),
        .ip2intc_irpt(NLW_U0_ip2intc_irpt_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[8],NLW_U0_s_axi_araddr_UNCONNECTED[7:4],s_axi_araddr[3:2],NLW_U0_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[31:24],NLW_U0_s_axi_wdata_UNCONNECTED[23:8],s_axi_wdata[7:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "GPIO_Core" *) 
module ublaze_sopc_axi_gpio_0_0__GPIO_Core
   (gpio_io_o,
    ip2bus_wrack_i,
    ip2bus_rdack_i,
    gpio_io_t,
    \ip2bus_data_i_D1_reg[0] ,
    s_axi_aclk,
    SS,
    bus2ip_cs,
    bus2ip_rnw,
    E,
    D,
    \bus2ip_addr_i_reg[8] ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg );
  output [7:0]gpio_io_o;
  output ip2bus_wrack_i;
  output ip2bus_rdack_i;
  output [7:0]gpio_io_t;
  output [8:0]\ip2bus_data_i_D1_reg[0] ;
  input s_axi_aclk;
  input [0:0]SS;
  input bus2ip_cs;
  input bus2ip_rnw;
  input [0:0]E;
  input [7:0]D;
  input [0:0]\bus2ip_addr_i_reg[8] ;
  input \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;

  wire Bus_RNW_reg;
  wire [7:0]D;
  wire [0:0]E;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire GPIO_xferAck_i;
  wire Read_Reg_Rst__0;
  wire [0:0]SS;
  wire bus2ip_cs;
  wire bus2ip_rnw;
  wire [7:0]gpio_io_o;
  wire gpio_xferAck_Reg;
  wire iGPIO_xferAck__0;
  wire [8:0]\ip2bus_data_i_D1_reg[0] ;
  wire ip2bus_rdack_i;
  wire ip2bus_wrack_i;
  wire [24:31]reg1;
  wire s_axi_aclk;

  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[0].reg1_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gpio_io_o[7]),
        .Q(reg1[24]),
        .R(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[1].reg1_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gpio_io_o[6]),
        .Q(reg1[25]),
        .R(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[2].reg1_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gpio_io_o[5]),
        .Q(reg1[26]),
        .R(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[3].reg1_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gpio_io_o[4]),
        .Q(reg1[27]),
        .R(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[4].reg1_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gpio_io_o[3]),
        .Q(reg1[28]),
        .R(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[5].reg1_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gpio_io_o[2]),
        .Q(reg1[29]),
        .R(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[6].reg1_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gpio_io_o[1]),
        .Q(reg1[30]),
        .R(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[7].reg1_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gpio_io_o[0]),
        .Q(reg1[31]),
        .R(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(D[7]),
        .Q(gpio_io_o[7]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(D[6]),
        .Q(gpio_io_o[6]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(D[5]),
        .Q(gpio_io_o[5]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(D[4]),
        .Q(gpio_io_o[4]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(D[3]),
        .Q(gpio_io_o[3]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(D[2]),
        .Q(gpio_io_o[2]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[6] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(D[1]),
        .Q(gpio_io_o[1]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[7] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(D[0]),
        .Q(gpio_io_o[0]),
        .R(SS));
  LUT4 #(
    .INIT(16'hFFDF)) 
    Read_Reg_Rst
       (.I0(bus2ip_rnw),
        .I1(GPIO_xferAck_i),
        .I2(bus2ip_cs),
        .I3(gpio_xferAck_Reg),
        .O(Read_Reg_Rst__0));
  FDRE #(
    .INIT(1'b0)) 
    gpio_xferAck_Reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(GPIO_xferAck_i),
        .Q(gpio_xferAck_Reg),
        .R(SS));
  (* \PinAttr:I2:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h02)) 
    iGPIO_xferAck
       (.I0(bus2ip_cs),
        .I1(gpio_xferAck_Reg),
        .I2(GPIO_xferAck_i),
        .O(iGPIO_xferAck__0));
  FDRE #(
    .INIT(1'b0)) 
    iGPIO_xferAck_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(iGPIO_xferAck__0),
        .Q(GPIO_xferAck_i),
        .R(SS));
  LUT5 #(
    .INIT(32'h00001400)) 
    \ip2bus_data_i_D1[0]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I2(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I3(Bus_RNW_reg),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [8]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[24]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[24]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [7]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[25]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[25]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [6]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[26]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[26]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [5]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[27]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[27]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [4]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[28]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[28]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [3]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[29]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[29]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [2]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[30]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[30]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [1]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[31]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[31]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\ip2bus_data_i_D1_reg[0] [0]));
  LUT2 #(
    .INIT(4'h8)) 
    ip2bus_rdack_i_D1_i_1
       (.I0(GPIO_xferAck_i),
        .I1(bus2ip_rnw),
        .O(ip2bus_rdack_i));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ip2bus_wrack_i_D1_i_1
       (.I0(GPIO_xferAck_i),
        .I1(bus2ip_rnw),
        .O(ip2bus_wrack_i));
endmodule

(* ORIG_REF_NAME = "address_decoder" *) 
module ublaze_sopc_axi_gpio_0_0__address_decoder
   (\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ,
    E,
    \Not_Dual.gpio_OE_reg[0] ,
    s_axi_arready,
    s_axi_wready,
    D,
    Q,
    s_axi_aclk,
    \bus2ip_addr_i_reg[8] ,
    bus2ip_rnw_i_reg,
    s_axi_aresetn,
    ip2bus_rdack_i_D1,
    is_read_reg,
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] ,
    ip2bus_wrack_i_D1,
    is_write_reg,
    s_axi_wdata);
  output \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output Bus_RNW_reg;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  output [0:0]E;
  output [0:0]\Not_Dual.gpio_OE_reg[0] ;
  output s_axi_arready;
  output s_axi_wready;
  output [7:0]D;
  input Q;
  input s_axi_aclk;
  input [2:0]\bus2ip_addr_i_reg[8] ;
  input bus2ip_rnw_i_reg;
  input s_axi_aresetn;
  input ip2bus_rdack_i_D1;
  input is_read_reg;
  input [3:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] ;
  input ip2bus_wrack_i_D1;
  input is_write_reg;
  input [15:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_i_1_n_0;
  wire [7:0]D;
  wire [0:0]E;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire [3:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] ;
  wire \MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  wire Q;
  wire [2:0]\bus2ip_addr_i_reg[8] ;
  wire bus2ip_rnw_i_reg;
  wire ce_expnd_i_0;
  wire ce_expnd_i_1;
  wire ce_expnd_i_2;
  wire ce_expnd_i_3;
  wire cs_ce_clr;
  wire ip2bus_rdack_i_D1;
  wire ip2bus_wrack_i_D1;
  wire is_read_reg;
  wire is_write_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire [15:0]s_axi_wdata;
  wire s_axi_wready;

  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(bus2ip_rnw_i_reg),
        .I1(Q),
        .I2(Bus_RNW_reg),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(Bus_RNW_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_3),
        .Q(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i[1]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [0]),
        .I1(\bus2ip_addr_i_reg[8] [1]),
        .O(ce_expnd_i_2));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_2),
        .Q(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_1),
        .Q(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT3 #(
    .INIT(8'hEF)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_1 
       (.I0(s_axi_wready),
        .I1(s_axi_arready),
        .I2(s_axi_aresetn),
        .O(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_2 
       (.I0(\bus2ip_addr_i_reg[8] [1]),
        .I1(\bus2ip_addr_i_reg[8] [0]),
        .O(ce_expnd_i_0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_0),
        .Q(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .R(cs_ce_clr));
  ublaze_sopc_axi_gpio_0_0__pselect_f \MEM_DECODE_GEN[0].PER_CE_GEN[0].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[3] (\bus2ip_addr_i_reg[8] [1:0]),
        .ce_expnd_i_3(ce_expnd_i_3));
  ublaze_sopc_axi_gpio_0_0__pselect_f__parameterized1 \MEM_DECODE_GEN[0].PER_CE_GEN[2].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[3] (\bus2ip_addr_i_reg[8] [1:0]),
        .ce_expnd_i_1(ce_expnd_i_1));
  LUT5 #(
    .INIT(32'h000000E0)) 
    \MEM_DECODE_GEN[0].cs_out_i[0]_i_1 
       (.I0(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I1(Q),
        .I2(s_axi_aresetn),
        .I3(s_axi_arready),
        .I4(s_axi_wready),
        .O(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ),
        .Q(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \Not_Dual.gpio_Data_Out[0]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [2]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [0]),
        .I3(bus2ip_rnw_i_reg),
        .I4(\bus2ip_addr_i_reg[8] [1]),
        .O(E));
  LUT4 #(
    .INIT(16'hFB08)) 
    \Not_Dual.gpio_Data_Out[0]_i_2 
       (.I0(s_axi_wdata[7]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [1]),
        .I3(s_axi_wdata[15]),
        .O(D[7]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \Not_Dual.gpio_Data_Out[1]_i_1 
       (.I0(s_axi_wdata[6]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [1]),
        .I3(s_axi_wdata[14]),
        .O(D[6]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \Not_Dual.gpio_Data_Out[2]_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [1]),
        .I3(s_axi_wdata[13]),
        .O(D[5]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \Not_Dual.gpio_Data_Out[3]_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [1]),
        .I3(s_axi_wdata[12]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \Not_Dual.gpio_Data_Out[4]_i_1 
       (.I0(s_axi_wdata[3]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [1]),
        .I3(s_axi_wdata[11]),
        .O(D[3]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \Not_Dual.gpio_Data_Out[5]_i_1 
       (.I0(s_axi_wdata[2]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [1]),
        .I3(s_axi_wdata[10]),
        .O(D[2]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \Not_Dual.gpio_Data_Out[6]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [1]),
        .I3(s_axi_wdata[9]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \Not_Dual.gpio_Data_Out[7]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I2(\bus2ip_addr_i_reg[8] [1]),
        .I3(s_axi_wdata[8]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAAA)) 
    s_axi_arready_INST_0
       (.I0(ip2bus_rdack_i_D1),
        .I1(is_read_reg),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [1]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [3]),
        .I5(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [0]),
        .O(s_axi_arready));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAAA)) 
    s_axi_wready_INST_0
       (.I0(ip2bus_wrack_i_D1),
        .I1(is_write_reg),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [1]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [3]),
        .I5(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [0]),
        .O(s_axi_wready));
endmodule

(* C_ALL_INPUTS = "0" *) (* C_ALL_INPUTS_2 = "0" *) (* C_ALL_OUTPUTS = "1" *) 
(* C_ALL_OUTPUTS_2 = "0" *) (* C_DOUT_DEFAULT = "0" *) (* C_DOUT_DEFAULT_2 = "0" *) 
(* C_FAMILY = "artix7" *) (* C_GPIO2_WIDTH = "32" *) (* C_GPIO_WIDTH = "8" *) 
(* C_INTERRUPT_PRESENT = "0" *) (* C_IS_DUAL = "0" *) (* C_S_AXI_ADDR_WIDTH = "9" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* C_TRI_DEFAULT = "-1" *) (* C_TRI_DEFAULT_2 = "-1" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "axi_gpio" *) (* ip_group = "LOGICORE" *) 
module ublaze_sopc_axi_gpio_0_0__axi_gpio
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    ip2intc_irpt,
    gpio_io_i,
    gpio_io_o,
    gpio_io_t,
    gpio2_io_i,
    gpio2_io_o,
    gpio2_io_t);
  (* max_fanout = "10000" *) (* sigis = "Clk" *) input s_axi_aclk;
  (* max_fanout = "10000" *) (* sigis = "Rst" *) input s_axi_aresetn;
  input [8:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [8:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  (* sigis = "INTR_LEVEL_HIGH" *) output ip2intc_irpt;
  input [7:0]gpio_io_i;
  output [7:0]gpio_io_o;
  output [7:0]gpio_io_t;
  input [31:0]gpio2_io_i;
  output [31:0]gpio2_io_o;
  output [31:0]gpio2_io_t;

  wire AXI_LITE_IPIF_I_n_10;
  wire [0:7]DBus_Reg;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire bus2ip_cs;
  wire bus2ip_reset;
  wire bus2ip_rnw;
  wire [7:0]gpio_io_o;
  wire [0:31]ip2bus_data;
  wire [0:31]ip2bus_data_i_D1;
  wire ip2bus_rdack_i;
  wire ip2bus_rdack_i_D1;
  wire ip2bus_wrack_i;
  wire ip2bus_wrack_i_D1;
  (* MAX_FANOUT = "10000" *) (* RTL_MAX_FANOUT = "found" *) (* sigis = "Clk" *) wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  (* MAX_FANOUT = "10000" *) (* RTL_MAX_FANOUT = "found" *) (* sigis = "Rst" *) wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [30:0]\^s_axi_rdata ;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [0:0]\NLW_AXI_LITE_IPIF_I_Not_Dual.gpio_OE_reg[0]_UNCONNECTED ;
  wire [2:0]NLW_AXI_LITE_IPIF_I_s_axi_awaddr_UNCONNECTED;
  wire [0:0]\NLW_gpio_core_1_bus2ip_addr_i_reg[8]_UNCONNECTED ;
  wire [7:0]NLW_gpio_core_1_gpio_io_t_UNCONNECTED;

  assign s_axi_awready = s_axi_wready;
  assign s_axi_rdata[31] = \^s_axi_rdata [30];
  assign s_axi_rdata[30] = \^s_axi_rdata [30];
  assign s_axi_rdata[29] = \^s_axi_rdata [30];
  assign s_axi_rdata[28] = \^s_axi_rdata [30];
  assign s_axi_rdata[27] = \^s_axi_rdata [30];
  assign s_axi_rdata[26] = \^s_axi_rdata [30];
  assign s_axi_rdata[25] = \^s_axi_rdata [30];
  assign s_axi_rdata[24] = \^s_axi_rdata [30];
  assign s_axi_rdata[23] = \^s_axi_rdata [30];
  assign s_axi_rdata[22] = \^s_axi_rdata [30];
  assign s_axi_rdata[21] = \^s_axi_rdata [30];
  assign s_axi_rdata[20] = \^s_axi_rdata [30];
  assign s_axi_rdata[19] = \^s_axi_rdata [30];
  assign s_axi_rdata[18] = \^s_axi_rdata [30];
  assign s_axi_rdata[17] = \^s_axi_rdata [30];
  assign s_axi_rdata[16] = \^s_axi_rdata [30];
  assign s_axi_rdata[15] = \^s_axi_rdata [30];
  assign s_axi_rdata[14] = \^s_axi_rdata [30];
  assign s_axi_rdata[13] = \^s_axi_rdata [30];
  assign s_axi_rdata[12] = \^s_axi_rdata [30];
  assign s_axi_rdata[11] = \^s_axi_rdata [30];
  assign s_axi_rdata[10] = \^s_axi_rdata [30];
  assign s_axi_rdata[9] = \^s_axi_rdata [30];
  assign s_axi_rdata[8] = \^s_axi_rdata [30];
  assign s_axi_rdata[7:0] = \^s_axi_rdata [7:0];
  ublaze_sopc_axi_gpio_0_0__axi_lite_ipif AXI_LITE_IPIF_I
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .D({DBus_Reg[0],DBus_Reg[1],DBus_Reg[2],DBus_Reg[3],DBus_Reg[4],DBus_Reg[5],DBus_Reg[6],DBus_Reg[7]}),
        .E(AXI_LITE_IPIF_I_n_10),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .\Not_Dual.gpio_OE_reg[0] (\NLW_AXI_LITE_IPIF_I_Not_Dual.gpio_OE_reg[0]_UNCONNECTED [0]),
        .Q({ip2bus_data_i_D1[0],ip2bus_data_i_D1[24],ip2bus_data_i_D1[25],ip2bus_data_i_D1[26],ip2bus_data_i_D1[27],ip2bus_data_i_D1[28],ip2bus_data_i_D1[29],ip2bus_data_i_D1[30],ip2bus_data_i_D1[31]}),
        .bus2ip_cs(bus2ip_cs),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_rnw(bus2ip_rnw),
        .ip2bus_rdack_i_D1(ip2bus_rdack_i_D1),
        .ip2bus_wrack_i_D1(ip2bus_wrack_i_D1),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[8],s_axi_araddr[3:2]}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_AXI_LITE_IPIF_I_s_axi_awaddr_UNCONNECTED[2:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata({\^s_axi_rdata [30],\^s_axi_rdata [7:0]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[31:24],s_axi_wdata[7:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
  ublaze_sopc_axi_gpio_0_0__GPIO_Core gpio_core_1
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .D({DBus_Reg[0],DBus_Reg[1],DBus_Reg[2],DBus_Reg[3],DBus_Reg[4],DBus_Reg[5],DBus_Reg[6],DBus_Reg[7]}),
        .E(AXI_LITE_IPIF_I_n_10),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .SS(bus2ip_reset),
        .\bus2ip_addr_i_reg[8] (\NLW_gpio_core_1_bus2ip_addr_i_reg[8]_UNCONNECTED [0]),
        .bus2ip_cs(bus2ip_cs),
        .bus2ip_rnw(bus2ip_rnw),
        .gpio_io_o(gpio_io_o),
        .gpio_io_t(NLW_gpio_core_1_gpio_io_t_UNCONNECTED[7:0]),
        .\ip2bus_data_i_D1_reg[0] ({ip2bus_data[0],ip2bus_data[24],ip2bus_data[25],ip2bus_data[26],ip2bus_data[27],ip2bus_data[28],ip2bus_data[29],ip2bus_data[30],ip2bus_data[31]}),
        .ip2bus_rdack_i(ip2bus_rdack_i),
        .ip2bus_wrack_i(ip2bus_wrack_i),
        .s_axi_aclk(s_axi_aclk));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[0]),
        .Q(ip2bus_data_i_D1[0]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[24]),
        .Q(ip2bus_data_i_D1[24]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[25]),
        .Q(ip2bus_data_i_D1[25]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[26]),
        .Q(ip2bus_data_i_D1[26]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[27]),
        .Q(ip2bus_data_i_D1[27]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[28]),
        .Q(ip2bus_data_i_D1[28]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[29]),
        .Q(ip2bus_data_i_D1[29]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[30]),
        .Q(ip2bus_data_i_D1[30]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[31]),
        .Q(ip2bus_data_i_D1[31]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    ip2bus_rdack_i_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_rdack_i),
        .Q(ip2bus_rdack_i_D1),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    ip2bus_wrack_i_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_wrack_i),
        .Q(ip2bus_wrack_i_D1),
        .R(bus2ip_reset));
endmodule

(* ORIG_REF_NAME = "axi_lite_ipif" *) 
module ublaze_sopc_axi_gpio_0_0__axi_lite_ipif
   (bus2ip_reset,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    bus2ip_rnw,
    Bus_RNW_reg,
    s_axi_rvalid,
    s_axi_bvalid,
    bus2ip_cs,
    E,
    \Not_Dual.gpio_OE_reg[0] ,
    s_axi_arready,
    s_axi_wready,
    s_axi_rdata,
    D,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_bready,
    s_axi_aresetn,
    s_axi_awvalid,
    s_axi_wvalid,
    Q,
    s_axi_wdata,
    ip2bus_rdack_i_D1,
    ip2bus_wrack_i_D1,
    s_axi_araddr,
    s_axi_awaddr);
  output bus2ip_reset;
  output \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output bus2ip_rnw;
  output Bus_RNW_reg;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output bus2ip_cs;
  output [0:0]E;
  output [0:0]\Not_Dual.gpio_OE_reg[0] ;
  output s_axi_arready;
  output s_axi_wready;
  output [8:0]s_axi_rdata;
  output [7:0]D;
  input s_axi_aclk;
  input s_axi_arvalid;
  input s_axi_rready;
  input s_axi_bready;
  input s_axi_aresetn;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [8:0]Q;
  input [15:0]s_axi_wdata;
  input ip2bus_rdack_i_D1;
  input ip2bus_wrack_i_D1;
  input [2:0]s_axi_araddr;
  input [2:0]s_axi_awaddr;

  wire Bus_RNW_reg;
  wire [7:0]D;
  wire [0:0]E;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire [8:0]Q;
  wire bus2ip_cs;
  wire bus2ip_reset;
  wire bus2ip_rnw;
  wire ip2bus_rdack_i_D1;
  wire ip2bus_wrack_i_D1;
  wire s_axi_aclk;
  wire [2:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [8:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [15:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [0:0]\NLW_I_SLAVE_ATTACHMENT_Not_Dual.gpio_OE_reg[0]_UNCONNECTED ;
  wire [2:0]NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED;

  ublaze_sopc_axi_gpio_0_0__slave_attachment I_SLAVE_ATTACHMENT
       (.Bus_RNW_reg(Bus_RNW_reg),
        .Bus_RNW_reg_reg(bus2ip_rnw),
        .D(D),
        .E(E),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0] (bus2ip_cs),
        .\Not_Dual.gpio_OE_reg[0] (\NLW_I_SLAVE_ATTACHMENT_Not_Dual.gpio_OE_reg[0]_UNCONNECTED [0]),
        .Q(Q),
        .SR(bus2ip_reset),
        .ip2bus_rdack_i_D1(ip2bus_rdack_i_D1),
        .ip2bus_wrack_i_D1(ip2bus_wrack_i_D1),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED[2:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_axi_gpio_0_0__pselect_f
   (ce_expnd_i_3,
    \bus2ip_addr_i_reg[3] );
  output ce_expnd_i_3;
  input [1:0]\bus2ip_addr_i_reg[3] ;

  wire [1:0]\bus2ip_addr_i_reg[3] ;
  wire ce_expnd_i_3;

  LUT2 #(
    .INIT(4'h1)) 
    CS
       (.I0(\bus2ip_addr_i_reg[3] [0]),
        .I1(\bus2ip_addr_i_reg[3] [1]),
        .O(ce_expnd_i_3));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_axi_gpio_0_0__pselect_f__parameterized1
   (ce_expnd_i_1,
    \bus2ip_addr_i_reg[3] );
  output ce_expnd_i_1;
  input [1:0]\bus2ip_addr_i_reg[3] ;

  wire [1:0]\bus2ip_addr_i_reg[3] ;
  wire ce_expnd_i_1;

  LUT2 #(
    .INIT(4'h2)) 
    CS
       (.I0(\bus2ip_addr_i_reg[3] [1]),
        .I1(\bus2ip_addr_i_reg[3] [0]),
        .O(ce_expnd_i_1));
endmodule

(* ORIG_REF_NAME = "slave_attachment" *) 
module ublaze_sopc_axi_gpio_0_0__slave_attachment
   (SR,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg_reg,
    Bus_RNW_reg,
    s_axi_rvalid,
    s_axi_bvalid,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] ,
    E,
    \Not_Dual.gpio_OE_reg[0] ,
    s_axi_arready,
    s_axi_wready,
    s_axi_rdata,
    D,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_bready,
    s_axi_aresetn,
    s_axi_awvalid,
    s_axi_wvalid,
    Q,
    s_axi_wdata,
    ip2bus_rdack_i_D1,
    ip2bus_wrack_i_D1,
    s_axi_araddr,
    s_axi_awaddr);
  output [0:0]SR;
  output \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output Bus_RNW_reg_reg;
  output Bus_RNW_reg;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  output [0:0]E;
  output [0:0]\Not_Dual.gpio_OE_reg[0] ;
  output s_axi_arready;
  output s_axi_wready;
  output [8:0]s_axi_rdata;
  output [7:0]D;
  input s_axi_aclk;
  input s_axi_arvalid;
  input s_axi_rready;
  input s_axi_bready;
  input s_axi_aresetn;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [8:0]Q;
  input [15:0]s_axi_wdata;
  input ip2bus_rdack_i_D1;
  input ip2bus_wrack_i_D1;
  input [2:0]s_axi_araddr;
  input [2:0]s_axi_awaddr;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire [7:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire [3:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  wire [8:0]Q;
  wire [0:0]SR;
  wire [0:6]bus2ip_addr;
  wire \bus2ip_addr_i[8]_i_1_n_0 ;
  wire clear;
  wire ip2bus_rdack_i_D1;
  wire ip2bus_wrack_i_D1;
  wire is_read_i_1_n_0;
  wire is_read_reg_n_0;
  wire is_write_i_1_n_0;
  wire is_write_i_2_n_0;
  wire is_write_reg_n_0;
  wire [1:0]p_0_out;
  wire p_5_in;
  wire [3:0]plusOp;
  wire rst_i_1_n_0;
  wire s_axi_aclk;
  wire [2:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  (* RTL_KEEP = "yes" *) wire s_axi_bresp_i;
  wire s_axi_bvalid;
  wire s_axi_bvalid_i_i_1_n_0;
  wire [8:0]s_axi_rdata;
  wire s_axi_rready;
  (* RTL_KEEP = "yes" *) wire s_axi_rresp_i;
  wire s_axi_rvalid;
  wire s_axi_rvalid_i_i_1_n_0;
  wire [15:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire [1:0]state;
  wire state1__2;
  wire [0:0]\NLW_I_DECODER_Not_Dual.gpio_OE_reg[0]_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFF150015001500)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_awvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(state1__2),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(s_axi_arready),
        .I3(s_axi_rresp_i),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0800FFFF08000800)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_arvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(s_axi_wready),
        .I5(s_axi_bresp_i),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888F888FFFFF888)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(s_axi_wready),
        .I1(s_axi_bresp_i),
        .I2(s_axi_rresp_i),
        .I3(s_axi_arready),
        .I4(\FSM_onehot_state_reg_n_0_[3] ),
        .I5(state1__2),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(s_axi_bready),
        .I1(s_axi_bvalid),
        .I2(s_axi_rready),
        .I3(s_axi_rvalid),
        .O(state1__2));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(SR));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(s_axi_rresp_i),
        .R(SR));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(s_axi_bresp_i),
        .R(SR));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .R(SR));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[0]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .O(plusOp[0]));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[1]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[2]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .O(plusOp[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(clear));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_2 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [3]),
        .O(plusOp[3]));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [3]),
        .R(clear));
  ublaze_sopc_axi_gpio_0_0__address_decoder I_DECODER
       (.Bus_RNW_reg(Bus_RNW_reg),
        .D(D),
        .E(E),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] (\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 ),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 (\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .\Not_Dual.gpio_OE_reg[0] (\NLW_I_DECODER_Not_Dual.gpio_OE_reg[0]_UNCONNECTED [0]),
        .Q(start2),
        .\bus2ip_addr_i_reg[8] ({bus2ip_addr[0],bus2ip_addr[5],bus2ip_addr[6]}),
        .bus2ip_rnw_i_reg(Bus_RNW_reg_reg),
        .ip2bus_rdack_i_D1(ip2bus_rdack_i_D1),
        .ip2bus_wrack_i_D1(ip2bus_wrack_i_D1),
        .is_read_reg(is_read_reg_n_0),
        .is_write_reg(is_write_reg_n_0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready));
  LUT5 #(
    .INIT(32'h000000EA)) 
    \bus2ip_addr_i[8]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_wvalid),
        .I3(state[1]),
        .I4(state[0]),
        .O(\bus2ip_addr_i[8]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[0]),
        .Q(bus2ip_addr[6]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[1]),
        .Q(bus2ip_addr[5]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[2]),
        .Q(bus2ip_addr[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_arvalid),
        .Q(Bus_RNW_reg_reg),
        .R(SR));
  LUT5 #(
    .INIT(32'h8BBB8888)) 
    is_read_i_1
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(state1__2),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(is_read_reg_n_0),
        .O(is_read_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_read_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_read_i_1_n_0),
        .Q(is_read_reg_n_0),
        .R(SR));
  LUT6 #(
    .INIT(64'h2000FFFF20000000)) 
    is_write_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_arvalid),
        .I2(s_axi_awvalid),
        .I3(s_axi_wvalid),
        .I4(is_write_i_2_n_0),
        .I5(is_write_reg_n_0),
        .O(is_write_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFEAEAEAAAAAAAAA)) 
    is_write_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_bready),
        .I2(s_axi_bvalid),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(is_write_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_write_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_write_i_1_n_0),
        .Q(is_write_reg_n_0),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    rst_i_1
       (.I0(s_axi_aresetn),
        .O(rst_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rst_i_1_n_0),
        .Q(SR),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_bvalid_i_i_1
       (.I0(s_axi_wready),
        .I1(state[1]),
        .I2(state[0]),
        .I3(s_axi_bready),
        .I4(s_axi_bvalid),
        .O(s_axi_bvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_i_1_n_0),
        .Q(s_axi_bvalid),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[0]),
        .Q(s_axi_rdata[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[1]),
        .Q(s_axi_rdata[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[2]),
        .Q(s_axi_rdata[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[8]),
        .Q(s_axi_rdata[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[3]),
        .Q(s_axi_rdata[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[4]),
        .Q(s_axi_rdata[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[5]),
        .Q(s_axi_rdata[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[6]),
        .Q(s_axi_rdata[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Q[7]),
        .Q(s_axi_rdata[7]),
        .R(SR));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_rvalid_i_i_1
       (.I0(s_axi_arready),
        .I1(state[0]),
        .I2(state[1]),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid),
        .O(s_axi_rvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_i_1_n_0),
        .Q(s_axi_rvalid),
        .R(SR));
  LUT5 #(
    .INIT(32'h000000F8)) 
    start2_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(state[0]),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(SR));
  LUT5 #(
    .INIT(32'h77FC44FC)) 
    \state[0]_i_1 
       (.I0(state1__2),
        .I1(state[0]),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(s_axi_wready),
        .O(p_0_out[0]));
  LUT6 #(
    .INIT(64'h55FFFF0C5500FF0C)) 
    \state[1]_i_1 
       (.I0(state1__2),
        .I1(p_5_in),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(state[0]),
        .I5(s_axi_arready),
        .O(p_0_out[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_2 
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .O(p_5_in));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out[0]),
        .Q(state[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out[1]),
        .Q(state[1]),
        .R(SR));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_axi_intc_0_0,axi_intc,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_intc,Vivado 2018.2.2" *) 
module ublaze_sopc_axi_intc_0_0
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    intr,
    irq);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 s_axi_aclk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME s_axi_aclk, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input s_axi_aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 s_resetn RST" *) (* x_interface_parameter = "XIL_INTERFACENAME s_resetn, POLARITY ACTIVE_LOW" *) input s_axi_aresetn;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME s_axi, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 9, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) input [8:0]s_axi_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [8:0]s_axi_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) input s_axi_rready;
  (* x_interface_info = "xilinx.com:signal:interrupt:1.0 interrupt_input INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME interrupt_input, SENSITIVITY LEVEL_HIGH:LEVEL_HIGH, PortWidth 2" *) input [1:0]intr;
  (* x_interface_info = "xilinx.com:interface:mbinterrupt:1.0 interrupt INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME interrupt, SENSITIVITY LEVEL_HIGH, LOW_LATENCY 0" *) output irq;

  wire [1:0]intr;
  wire irq;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire NLW_U0_irq_in_UNCONNECTED;
  wire NLW_U0_processor_clk_UNCONNECTED;
  wire NLW_U0_processor_rst_UNCONNECTED;
  wire [31:0]NLW_U0_interrupt_address_UNCONNECTED;
  wire [31:0]NLW_U0_interrupt_address_in_UNCONNECTED;
  wire [1:1]NLW_U0_intr_UNCONNECTED;
  wire [1:0]NLW_U0_processor_ack_UNCONNECTED;
  wire [1:0]NLW_U0_processor_ack_out_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [8:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [31:2]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_ASYNC_INTR = "-4" *) 
  (* C_CASCADE_MASTER = "0" *) 
  (* C_DISABLE_SYNCHRONIZERS = "0" *) 
  (* C_ENABLE_ASYNC = "0" *) 
  (* C_EN_CASCADE_MODE = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_CIE = "1" *) 
  (* C_HAS_FAST = "0" *) 
  (* C_HAS_ILR = "0" *) 
  (* C_HAS_IPR = "1" *) 
  (* C_HAS_IVR = "1" *) 
  (* C_HAS_SIE = "1" *) 
  (* C_INSTANCE = "ublaze_sopc_axi_intc_0_0" *) 
  (* C_IRQ_ACTIVE = "1'b1" *) 
  (* C_IRQ_IS_LEVEL = "1" *) 
  (* C_IVAR_RESET_VALUE = "16" *) 
  (* C_KIND_OF_EDGE = "-1" *) 
  (* C_KIND_OF_INTR = "-4" *) 
  (* C_KIND_OF_LVL = "-1" *) 
  (* C_MB_CLK_NOT_CONNECTED = "1" *) 
  (* C_NUM_INTR_INPUTS = "2" *) 
  (* C_NUM_SW_INTR = "0" *) 
  (* C_NUM_SYNC_FF = "2" *) 
  (* C_S_AXI_ADDR_WIDTH = "9" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* hdl = "VHDL" *) 
  (* imp_netlist = "TRUE" *) 
  (* ip_group = "LOGICORE" *) 
  (* iptype = "PERIPHERAL" *) 
  (* run_ngcbuild = "TRUE" *) 
  (* style = "HDL" *) 
  ublaze_sopc_axi_intc_0_0__axi_intc U0
       (.interrupt_address(NLW_U0_interrupt_address_UNCONNECTED[31:0]),
        .interrupt_address_in(NLW_U0_interrupt_address_in_UNCONNECTED[31:0]),
        .intr({NLW_U0_intr_UNCONNECTED[1],intr[0]}),
        .irq(irq),
        .irq_in(NLW_U0_irq_in_UNCONNECTED),
        .processor_ack(NLW_U0_processor_ack_UNCONNECTED[1:0]),
        .processor_ack_out(NLW_U0_processor_ack_out_UNCONNECTED[1:0]),
        .processor_clk(NLW_U0_processor_clk_UNCONNECTED),
        .processor_rst(NLW_U0_processor_rst_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[8:2],NLW_U0_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({NLW_U0_s_axi_wdata_UNCONNECTED[31:2],s_axi_wdata[1:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "address_decoder" *) 
module ublaze_sopc_axi_intc_0_0__address_decoder
   (\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ,
    \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ,
    isr_en,
    s_axi_wready,
    s_axi_arready,
    ip2bus_wrack_prev2,
    ip2bus_rdack_prev2,
    D,
    Or128_vec2stdlogic19_out,
    Or128_vec2stdlogic,
    \mer_int_reg[1] ,
    \mer_int_reg[0] ,
    \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ,
    \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ,
    \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ,
    \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ,
    \REG_GEN[0].ier_reg[0] ,
    Q,
    s_axi_aclk,
    s_axi_wdata,
    s_axi_aresetn,
    \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ,
    \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ,
    p_0_in,
    ip2bus_wrack_int_d1,
    ip2bus_rdack_int_d1,
    \bus2ip_addr_i_reg[8] ,
    \bus2ip_addr_i_reg[3] ,
    \bus2ip_addr_i_reg[8]_0 ,
    \mer_int_reg[0]_0 ,
    \bus2ip_addr_i_reg[4] ,
    \mer_int_reg[1]_0 ,
    \bus2ip_addr_i_reg[4]_0 ,
    ip2bus_rdack,
    is_read_reg,
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] ,
    ip2bus_wrack,
    is_write_reg,
    mer,
    \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ,
    p_0_in5_in,
    p_0_in9_in,
    \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ,
    bus2ip_rnw_i_reg);
  output \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ;
  output \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ;
  output isr_en;
  output s_axi_wready;
  output s_axi_arready;
  output ip2bus_wrack_prev2;
  output ip2bus_rdack_prev2;
  output [2:0]D;
  output Or128_vec2stdlogic19_out;
  output Or128_vec2stdlogic;
  output \mer_int_reg[1] ;
  output \mer_int_reg[0] ;
  output \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ;
  output \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ;
  output \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ;
  output \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ;
  output \REG_GEN[0].ier_reg[0] ;
  input Q;
  input s_axi_aclk;
  input [1:0]s_axi_wdata;
  input s_axi_aresetn;
  input \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ;
  input \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ;
  input p_0_in;
  input ip2bus_wrack_int_d1;
  input ip2bus_rdack_int_d1;
  input [6:0]\bus2ip_addr_i_reg[8] ;
  input \bus2ip_addr_i_reg[3] ;
  input \bus2ip_addr_i_reg[8]_0 ;
  input \mer_int_reg[0]_0 ;
  input \bus2ip_addr_i_reg[4] ;
  input \mer_int_reg[1]_0 ;
  input \bus2ip_addr_i_reg[4]_0 ;
  input ip2bus_rdack;
  input is_read_reg;
  input [3:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] ;
  input ip2bus_wrack;
  input is_write_reg;
  input mer;
  input \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ;
  input p_0_in5_in;
  input p_0_in9_in;
  input \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ;
  input bus2ip_rnw_i_reg;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_i_1_n_0;
  wire \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ;
  wire \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ;
  wire \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ;
  wire [2:0]D;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i[0]_i_1_n_0 ;
  wire \GEN_BKEND_CE_REGISTERS[16].ce_out_i_reg_n_0_[16] ;
  wire \GEN_BKEND_CE_REGISTERS[7].ce_out_i[7]_i_1_n_0 ;
  wire [3:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] ;
  wire Or128_vec2stdlogic;
  wire Or128_vec2stdlogic19_out;
  wire Q;
  wire \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ;
  wire \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ;
  wire \REG_GEN[0].ier_reg[0] ;
  wire \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ;
  wire \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ;
  wire \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ;
  wire \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ;
  wire \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ;
  wire \bus2ip_addr_i_reg[3] ;
  wire \bus2ip_addr_i_reg[4] ;
  wire \bus2ip_addr_i_reg[4]_0 ;
  wire [6:0]\bus2ip_addr_i_reg[8] ;
  wire \bus2ip_addr_i_reg[8]_0 ;
  wire [16:16]bus2ip_rdce;
  wire bus2ip_rnw_i_reg;
  wire cs_ce_clr;
  wire ip2bus_rdack;
  wire ip2bus_rdack_int_d1;
  wire ip2bus_rdack_int_d1_i_2_n_0;
  wire ip2bus_rdack_int_d1_i_3_n_0;
  wire ip2bus_rdack_int_d1_i_4_n_0;
  wire ip2bus_rdack_int_d1_i_5_n_0;
  wire ip2bus_rdack_prev2;
  wire ip2bus_wrack;
  wire ip2bus_wrack_i_2_n_0;
  wire ip2bus_wrack_int_d1;
  wire ip2bus_wrack_int_d1_i_2_n_0;
  wire ip2bus_wrack_int_d1_i_3_n_0;
  wire ip2bus_wrack_int_d1_i_4_n_0;
  wire ip2bus_wrack_int_d1_i_5_n_0;
  wire ip2bus_wrack_prev2;
  wire is_read_reg;
  wire is_write_reg;
  wire isr_en;
  wire mer;
  wire \mer_int_reg[0] ;
  wire \mer_int_reg[0]_0 ;
  wire \mer_int_reg[1] ;
  wire \mer_int_reg[1]_0 ;
  wire p_0_in;
  wire p_0_in5_in;
  wire p_0_in9_in;
  wire p_10_in;
  wire p_10_out;
  wire p_11_in;
  wire p_11_out;
  wire p_12_in;
  wire p_12_out;
  wire p_13_in;
  wire p_13_out;
  wire p_14_in;
  wire p_14_out;
  wire p_15_in;
  wire p_15_out;
  wire p_16_in;
  wire p_17_in;
  wire p_1_out;
  wire p_2_in;
  wire p_2_out;
  wire p_3_in;
  wire p_3_out;
  wire p_4_in;
  wire p_4_out;
  wire p_5_in;
  wire p_5_out;
  wire p_6_in;
  wire p_6_out;
  wire p_7_in;
  wire p_7_out;
  wire p_8_in;
  wire p_9_in;
  wire p_9_out;
  wire pselect_hit_i_0;
  wire pselect_hit_i_1;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire \s_axi_rdata_i[31]_i_2_n_0 ;
  wire \s_axi_rdata_i[31]_i_3_n_0 ;
  wire [1:0]s_axi_wdata;
  wire s_axi_wready;

  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(bus2ip_rnw_i_reg),
        .I1(Q),
        .I2(Bus_RNW_reg),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(Bus_RNW_reg),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00004000)) 
    \CIE_GEN.CIE_BIT_GEN[0].cie[0]_i_1 
       (.I0(Bus_RNW_reg),
        .I1(p_12_in),
        .I2(s_axi_wdata[0]),
        .I3(s_axi_aresetn),
        .I4(\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ),
        .O(\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \CIE_GEN.CIE_BIT_GEN[1].cie[1]_i_1 
       (.I0(Bus_RNW_reg),
        .I1(p_12_in),
        .I2(s_axi_wdata[1]),
        .I3(s_axi_aresetn),
        .I4(p_0_in9_in),
        .O(\CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i[0]_i_1 
       (.I0(pselect_hit_i_1),
        .I1(\bus2ip_addr_i_reg[8] [3]),
        .I2(\bus2ip_addr_i_reg[8] [0]),
        .I3(\bus2ip_addr_i_reg[8] [1]),
        .I4(\bus2ip_addr_i_reg[8] [2]),
        .O(\GEN_BKEND_CE_REGISTERS[0].ce_out_i[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(\GEN_BKEND_CE_REGISTERS[0].ce_out_i[0]_i_1_n_0 ),
        .Q(p_17_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \GEN_BKEND_CE_REGISTERS[10].ce_out_i[10]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [2]),
        .I1(\bus2ip_addr_i_reg[8] [1]),
        .I2(pselect_hit_i_1),
        .I3(\bus2ip_addr_i_reg[8] [0]),
        .I4(\bus2ip_addr_i_reg[8] [3]),
        .O(p_5_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[10].ce_out_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_5_out),
        .Q(p_7_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \GEN_BKEND_CE_REGISTERS[11].ce_out_i[11]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [2]),
        .I1(\bus2ip_addr_i_reg[8] [1]),
        .I2(\bus2ip_addr_i_reg[8] [0]),
        .I3(\bus2ip_addr_i_reg[8] [3]),
        .I4(pselect_hit_i_1),
        .O(p_4_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[11].ce_out_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_4_out),
        .Q(p_6_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \GEN_BKEND_CE_REGISTERS[12].ce_out_i[12]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [1]),
        .I1(\bus2ip_addr_i_reg[8] [2]),
        .I2(pselect_hit_i_1),
        .I3(\bus2ip_addr_i_reg[8] [0]),
        .I4(\bus2ip_addr_i_reg[8] [3]),
        .O(p_3_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[12].ce_out_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_3_out),
        .Q(p_5_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \GEN_BKEND_CE_REGISTERS[13].ce_out_i[13]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [1]),
        .I1(pselect_hit_i_1),
        .I2(\bus2ip_addr_i_reg[8] [0]),
        .I3(\bus2ip_addr_i_reg[8] [3]),
        .I4(\bus2ip_addr_i_reg[8] [2]),
        .O(p_2_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[13].ce_out_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_2_out),
        .Q(p_4_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \GEN_BKEND_CE_REGISTERS[14].ce_out_i[14]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [0]),
        .I1(\bus2ip_addr_i_reg[8] [1]),
        .I2(pselect_hit_i_1),
        .I3(\bus2ip_addr_i_reg[8] [3]),
        .I4(\bus2ip_addr_i_reg[8] [2]),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[14].ce_out_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_1_out),
        .Q(p_3_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \GEN_BKEND_CE_REGISTERS[15].ce_out_i[15]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [3]),
        .I1(\bus2ip_addr_i_reg[8] [1]),
        .I2(\bus2ip_addr_i_reg[8] [0]),
        .I3(pselect_hit_i_1),
        .I4(\bus2ip_addr_i_reg[8] [2]),
        .O(p_15_out));
  LUT4 #(
    .INIT(16'h0010)) 
    \GEN_BKEND_CE_REGISTERS[15].ce_out_i[15]_i_2 
       (.I0(\bus2ip_addr_i_reg[8] [4]),
        .I1(\bus2ip_addr_i_reg[8] [6]),
        .I2(Q),
        .I3(\bus2ip_addr_i_reg[8] [5]),
        .O(pselect_hit_i_1));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[15].ce_out_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_15_out),
        .Q(p_2_in),
        .R(cs_ce_clr));
  LUT3 #(
    .INIT(8'hEF)) 
    \GEN_BKEND_CE_REGISTERS[16].ce_out_i[16]_i_1 
       (.I0(s_axi_wready),
        .I1(s_axi_arready),
        .I2(s_axi_aresetn),
        .O(cs_ce_clr));
  LUT2 #(
    .INIT(4'h4)) 
    \GEN_BKEND_CE_REGISTERS[16].ce_out_i[16]_i_2 
       (.I0(\bus2ip_addr_i_reg[8] [5]),
        .I1(\bus2ip_addr_i_reg[8] [6]),
        .O(pselect_hit_i_0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[16].ce_out_i_reg[16] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(pselect_hit_i_0),
        .Q(\GEN_BKEND_CE_REGISTERS[16].ce_out_i_reg_n_0_[16] ),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i[1]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [0]),
        .I1(\bus2ip_addr_i_reg[8] [2]),
        .I2(pselect_hit_i_1),
        .I3(\bus2ip_addr_i_reg[8] [3]),
        .I4(\bus2ip_addr_i_reg[8] [1]),
        .O(p_14_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_14_out),
        .Q(p_16_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i[2]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [1]),
        .I1(\bus2ip_addr_i_reg[8] [2]),
        .I2(pselect_hit_i_1),
        .I3(\bus2ip_addr_i_reg[8] [3]),
        .I4(\bus2ip_addr_i_reg[8] [0]),
        .O(p_13_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_13_out),
        .Q(p_15_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [3]),
        .I1(\bus2ip_addr_i_reg[8] [1]),
        .I2(\bus2ip_addr_i_reg[8] [0]),
        .I3(\bus2ip_addr_i_reg[8] [2]),
        .I4(pselect_hit_i_1),
        .O(p_12_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_12_out),
        .Q(p_14_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \GEN_BKEND_CE_REGISTERS[4].ce_out_i[4]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [2]),
        .I1(\bus2ip_addr_i_reg[8] [0]),
        .I2(pselect_hit_i_1),
        .I3(\bus2ip_addr_i_reg[8] [3]),
        .I4(\bus2ip_addr_i_reg[8] [1]),
        .O(p_11_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_11_out),
        .Q(p_13_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i[5]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [3]),
        .I1(\bus2ip_addr_i_reg[8] [2]),
        .I2(\bus2ip_addr_i_reg[8] [0]),
        .I3(\bus2ip_addr_i_reg[8] [1]),
        .I4(pselect_hit_i_1),
        .O(p_10_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_10_out),
        .Q(p_12_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \GEN_BKEND_CE_REGISTERS[6].ce_out_i[6]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [3]),
        .I1(\bus2ip_addr_i_reg[8] [1]),
        .I2(\bus2ip_addr_i_reg[8] [2]),
        .I3(\bus2ip_addr_i_reg[8] [0]),
        .I4(pselect_hit_i_1),
        .O(p_9_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[6].ce_out_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_9_out),
        .Q(p_11_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \GEN_BKEND_CE_REGISTERS[7].ce_out_i[7]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [1]),
        .I1(\bus2ip_addr_i_reg[8] [0]),
        .I2(pselect_hit_i_1),
        .I3(\bus2ip_addr_i_reg[8] [2]),
        .I4(\bus2ip_addr_i_reg[8] [3]),
        .O(\GEN_BKEND_CE_REGISTERS[7].ce_out_i[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(\GEN_BKEND_CE_REGISTERS[7].ce_out_i[7]_i_1_n_0 ),
        .Q(p_10_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \GEN_BKEND_CE_REGISTERS[8].ce_out_i[8]_i_1 
       (.I0(pselect_hit_i_1),
        .I1(\bus2ip_addr_i_reg[8] [2]),
        .I2(\bus2ip_addr_i_reg[8] [3]),
        .I3(\bus2ip_addr_i_reg[8] [1]),
        .I4(\bus2ip_addr_i_reg[8] [0]),
        .O(p_7_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_7_out),
        .Q(p_9_in),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \GEN_BKEND_CE_REGISTERS[9].ce_out_i[9]_i_1 
       (.I0(\bus2ip_addr_i_reg[8] [2]),
        .I1(pselect_hit_i_1),
        .I2(\bus2ip_addr_i_reg[8] [0]),
        .I3(\bus2ip_addr_i_reg[8] [1]),
        .I4(\bus2ip_addr_i_reg[8] [3]),
        .O(p_6_out));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[9].ce_out_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(p_6_out),
        .Q(p_8_in),
        .R(cs_ce_clr));
  LUT5 #(
    .INIT(32'h00000800)) 
    \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar[0]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(p_14_in),
        .I2(Bus_RNW_reg),
        .I3(s_axi_aresetn),
        .I4(\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ),
        .O(\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ));
  LUT2 #(
    .INIT(4'h2)) 
    \REG_GEN[0].ier[0]_i_2 
       (.I0(p_15_in),
        .I1(Bus_RNW_reg),
        .O(\REG_GEN[0].ier_reg[0] ));
  LUT3 #(
    .INIT(8'hBA)) 
    \REG_GEN[0].isr[0]_i_2 
       (.I0(p_0_in),
        .I1(Bus_RNW_reg),
        .I2(p_17_in),
        .O(isr_en));
  LUT5 #(
    .INIT(32'h00000800)) 
    \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar[1]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(p_14_in),
        .I2(Bus_RNW_reg),
        .I3(s_axi_aresetn),
        .I4(p_0_in5_in),
        .O(\REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \SIE_GEN.SIE_BIT_GEN[0].sie[0]_i_1 
       (.I0(Bus_RNW_reg),
        .I1(p_13_in),
        .I2(s_axi_wdata[0]),
        .I3(s_axi_aresetn),
        .I4(\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ),
        .O(\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \SIE_GEN.SIE_BIT_GEN[1].sie[1]_i_1 
       (.I0(Bus_RNW_reg),
        .I1(p_13_in),
        .I2(s_axi_wdata[1]),
        .I3(s_axi_aresetn),
        .I4(\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ),
        .O(\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    ip2bus_rdack_i_1
       (.I0(ip2bus_rdack_int_d1_i_5_n_0),
        .I1(ip2bus_rdack_int_d1_i_4_n_0),
        .I2(ip2bus_rdack_int_d1_i_3_n_0),
        .I3(ip2bus_rdack_int_d1_i_2_n_0),
        .I4(bus2ip_rdce),
        .I5(ip2bus_rdack_int_d1),
        .O(ip2bus_rdack_prev2));
  LUT2 #(
    .INIT(4'h8)) 
    ip2bus_rdack_i_2
       (.I0(p_17_in),
        .I1(Bus_RNW_reg),
        .O(bus2ip_rdce));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF8)) 
    ip2bus_rdack_int_d1_i_1
       (.I0(Bus_RNW_reg),
        .I1(p_17_in),
        .I2(ip2bus_rdack_int_d1_i_2_n_0),
        .I3(ip2bus_rdack_int_d1_i_3_n_0),
        .I4(ip2bus_rdack_int_d1_i_4_n_0),
        .I5(ip2bus_rdack_int_d1_i_5_n_0),
        .O(Or128_vec2stdlogic19_out));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    ip2bus_rdack_int_d1_i_2
       (.I0(p_7_in),
        .I1(p_8_in),
        .I2(p_5_in),
        .I3(Bus_RNW_reg),
        .I4(p_6_in),
        .O(ip2bus_rdack_int_d1_i_2_n_0));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    ip2bus_rdack_int_d1_i_3
       (.I0(p_3_in),
        .I1(p_4_in),
        .I2(\GEN_BKEND_CE_REGISTERS[16].ce_out_i_reg_n_0_[16] ),
        .I3(Bus_RNW_reg),
        .I4(p_2_in),
        .O(ip2bus_rdack_int_d1_i_3_n_0));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    ip2bus_rdack_int_d1_i_4
       (.I0(p_15_in),
        .I1(p_16_in),
        .I2(p_13_in),
        .I3(Bus_RNW_reg),
        .I4(p_14_in),
        .O(ip2bus_rdack_int_d1_i_4_n_0));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    ip2bus_rdack_int_d1_i_5
       (.I0(p_11_in),
        .I1(p_12_in),
        .I2(p_9_in),
        .I3(Bus_RNW_reg),
        .I4(p_10_in),
        .O(ip2bus_rdack_int_d1_i_5_n_0));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    ip2bus_wrack_i_1
       (.I0(ip2bus_wrack_int_d1_i_5_n_0),
        .I1(ip2bus_wrack_int_d1_i_4_n_0),
        .I2(ip2bus_wrack_int_d1_i_3_n_0),
        .I3(ip2bus_wrack_int_d1_i_2_n_0),
        .I4(ip2bus_wrack_i_2_n_0),
        .I5(ip2bus_wrack_int_d1),
        .O(ip2bus_wrack_prev2));
  LUT2 #(
    .INIT(4'h2)) 
    ip2bus_wrack_i_2
       (.I0(p_17_in),
        .I1(Bus_RNW_reg),
        .O(ip2bus_wrack_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    ip2bus_wrack_int_d1_i_1
       (.I0(Bus_RNW_reg),
        .I1(p_17_in),
        .I2(ip2bus_wrack_int_d1_i_2_n_0),
        .I3(ip2bus_wrack_int_d1_i_3_n_0),
        .I4(ip2bus_wrack_int_d1_i_4_n_0),
        .I5(ip2bus_wrack_int_d1_i_5_n_0),
        .O(Or128_vec2stdlogic));
  LUT5 #(
    .INIT(32'h00FF00FE)) 
    ip2bus_wrack_int_d1_i_2
       (.I0(p_7_in),
        .I1(p_8_in),
        .I2(p_5_in),
        .I3(Bus_RNW_reg),
        .I4(p_6_in),
        .O(ip2bus_wrack_int_d1_i_2_n_0));
  LUT5 #(
    .INIT(32'h00FF00FE)) 
    ip2bus_wrack_int_d1_i_3
       (.I0(p_3_in),
        .I1(p_4_in),
        .I2(\GEN_BKEND_CE_REGISTERS[16].ce_out_i_reg_n_0_[16] ),
        .I3(Bus_RNW_reg),
        .I4(p_2_in),
        .O(ip2bus_wrack_int_d1_i_3_n_0));
  LUT5 #(
    .INIT(32'h00FF00FE)) 
    ip2bus_wrack_int_d1_i_4
       (.I0(p_15_in),
        .I1(p_16_in),
        .I2(p_13_in),
        .I3(Bus_RNW_reg),
        .I4(p_14_in),
        .O(ip2bus_wrack_int_d1_i_4_n_0));
  LUT5 #(
    .INIT(32'h00FF00FE)) 
    ip2bus_wrack_int_d1_i_5
       (.I0(p_11_in),
        .I1(p_12_in),
        .I2(p_9_in),
        .I3(Bus_RNW_reg),
        .I4(p_10_in),
        .O(ip2bus_wrack_int_d1_i_5_n_0));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mer_int[0]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(p_10_in),
        .I2(Bus_RNW_reg),
        .I3(mer),
        .O(\mer_int_reg[0] ));
  LUT4 #(
    .INIT(16'hFF20)) 
    \mer_int[1]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(Bus_RNW_reg),
        .I2(p_10_in),
        .I3(p_0_in),
        .O(\mer_int_reg[1] ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAAA)) 
    s_axi_arready_INST_0
       (.I0(ip2bus_rdack),
        .I1(is_read_reg),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [1]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [3]),
        .I5(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [0]),
        .O(s_axi_arready));
  LUT6 #(
    .INIT(64'h0E000E0E0E000000)) 
    \s_axi_rdata_i[0]_i_1 
       (.I0(\s_axi_rdata_i[31]_i_2_n_0 ),
        .I1(\s_axi_rdata_i[31]_i_3_n_0 ),
        .I2(\bus2ip_addr_i_reg[8]_0 ),
        .I3(\mer_int_reg[0]_0 ),
        .I4(\bus2ip_addr_i_reg[8] [0]),
        .I5(\bus2ip_addr_i_reg[4] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0E000E0E0E000000)) 
    \s_axi_rdata_i[1]_i_1 
       (.I0(\s_axi_rdata_i[31]_i_2_n_0 ),
        .I1(\s_axi_rdata_i[31]_i_3_n_0 ),
        .I2(\bus2ip_addr_i_reg[8]_0 ),
        .I3(\mer_int_reg[1]_0 ),
        .I4(\bus2ip_addr_i_reg[8] [0]),
        .I5(\bus2ip_addr_i_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000000E00000000)) 
    \s_axi_rdata_i[31]_i_1 
       (.I0(\s_axi_rdata_i[31]_i_2_n_0 ),
        .I1(\s_axi_rdata_i[31]_i_3_n_0 ),
        .I2(\bus2ip_addr_i_reg[8] [6]),
        .I3(\bus2ip_addr_i_reg[8] [4]),
        .I4(\bus2ip_addr_i_reg[8] [5]),
        .I5(\bus2ip_addr_i_reg[3] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    \s_axi_rdata_i[31]_i_2 
       (.I0(p_11_in),
        .I1(p_10_in),
        .I2(p_16_in),
        .I3(Bus_RNW_reg),
        .I4(p_15_in),
        .O(\s_axi_rdata_i[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF0E0)) 
    \s_axi_rdata_i[31]_i_3 
       (.I0(p_17_in),
        .I1(p_9_in),
        .I2(Bus_RNW_reg),
        .I3(p_8_in),
        .O(\s_axi_rdata_i[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAAA)) 
    s_axi_wready_INST_0
       (.I0(ip2bus_wrack),
        .I1(is_write_reg),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [1]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [3]),
        .I5(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] [0]),
        .O(s_axi_wready));
endmodule

(* C_ASYNC_INTR = "-4" *) (* C_CASCADE_MASTER = "0" *) (* C_DISABLE_SYNCHRONIZERS = "0" *) 
(* C_ENABLE_ASYNC = "0" *) (* C_EN_CASCADE_MODE = "0" *) (* C_FAMILY = "artix7" *) 
(* C_HAS_CIE = "1" *) (* C_HAS_FAST = "0" *) (* C_HAS_ILR = "0" *) 
(* C_HAS_IPR = "1" *) (* C_HAS_IVR = "1" *) (* C_HAS_SIE = "1" *) 
(* C_INSTANCE = "ublaze_sopc_axi_intc_0_0" *) (* C_IRQ_ACTIVE = "1'b1" *) (* C_IRQ_IS_LEVEL = "1" *) 
(* C_IVAR_RESET_VALUE = "16" *) (* C_KIND_OF_EDGE = "-1" *) (* C_KIND_OF_INTR = "-4" *) 
(* C_KIND_OF_LVL = "-1" *) (* C_MB_CLK_NOT_CONNECTED = "1" *) (* C_NUM_INTR_INPUTS = "2" *) 
(* C_NUM_SW_INTR = "0" *) (* C_NUM_SYNC_FF = "2" *) (* C_S_AXI_ADDR_WIDTH = "9" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* ORIG_REF_NAME = "axi_intc" *) (* hdl = "VHDL" *) 
(* imp_netlist = "TRUE" *) (* ip_group = "LOGICORE" *) (* iptype = "PERIPHERAL" *) 
(* run_ngcbuild = "TRUE" *) (* style = "HDL" *) 
module ublaze_sopc_axi_intc_0_0__axi_intc
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    intr,
    processor_clk,
    processor_rst,
    irq,
    processor_ack,
    interrupt_address,
    irq_in,
    interrupt_address_in,
    processor_ack_out);
  (* max_fanout = "10000" *) (* sigis = "Clk" *) input s_axi_aclk;
  (* max_fanout = "10000" *) (* sigis = "Rstn" *) input s_axi_aresetn;
  input [8:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [8:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  (* BUFFER_TYPE = "none" *) input [1:0]intr;
  input processor_clk;
  input processor_rst;
  output irq;
  input [1:0]processor_ack;
  output [31:0]interrupt_address;
  input irq_in;
  input [31:0]interrupt_address_in;
  output [1:0]processor_ack_out;

  wire AXI_LITE_IPIF_I_n_13;
  wire AXI_LITE_IPIF_I_n_14;
  wire AXI_LITE_IPIF_I_n_15;
  wire AXI_LITE_IPIF_I_n_16;
  wire AXI_LITE_IPIF_I_n_17;
  wire AXI_LITE_IPIF_I_n_18;
  wire AXI_LITE_IPIF_I_n_19;
  wire AXI_LITE_IPIF_I_n_4;
  wire AXI_LITE_IPIF_I_n_5;
  wire INTC_CORE_I_n_0;
  wire INTC_CORE_I_n_1;
  wire INTC_CORE_I_n_13;
  wire INTC_CORE_I_n_15;
  wire INTC_CORE_I_n_2;
  wire INTC_CORE_I_n_5;
  wire INTC_CORE_I_n_7;
  wire INTC_CORE_I_n_8;
  wire INTC_CORE_I_n_9;
  wire Or128_vec2stdlogic;
  wire Or128_vec2stdlogic19_out;
  wire [1:0]intr;
  wire ip2bus_rdack;
  wire ip2bus_rdack_int_d1;
  wire ip2bus_rdack_prev2;
  wire ip2bus_wrack;
  wire ip2bus_wrack_int_d1;
  wire ip2bus_wrack_prev2;
  wire [1:0]ipr;
  wire irq;
  wire isr_en;
  wire mer;
  wire p_0_in;
  wire p_0_in1_in;
  wire p_0_in5_in;
  wire p_0_in9_in;
  wire p_1_in2_in;
  (* MAX_FANOUT = "10000" *) (* RTL_MAX_FANOUT = "found" *) (* sigis = "Clk" *) wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  (* MAX_FANOUT = "10000" *) (* RTL_MAX_FANOUT = "found" *) (* sigis = "Rstn" *) wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [30:0]\^s_axi_rdata ;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [6:0]NLW_AXI_LITE_IPIF_I_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_AXI_LITE_IPIF_I_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_AXI_LITE_IPIF_I_s_axi_rresp_UNCONNECTED;
  wire [3:0]NLW_AXI_LITE_IPIF_I_s_axi_wstrb_UNCONNECTED;
  wire [1:1]NLW_INTC_CORE_I_intr_UNCONNECTED;

  assign s_axi_awready = s_axi_wready;
  assign s_axi_rdata[31] = \^s_axi_rdata [30];
  assign s_axi_rdata[30] = \^s_axi_rdata [30];
  assign s_axi_rdata[29] = \^s_axi_rdata [30];
  assign s_axi_rdata[28] = \^s_axi_rdata [30];
  assign s_axi_rdata[27] = \^s_axi_rdata [30];
  assign s_axi_rdata[26] = \^s_axi_rdata [30];
  assign s_axi_rdata[25] = \^s_axi_rdata [30];
  assign s_axi_rdata[24] = \^s_axi_rdata [30];
  assign s_axi_rdata[23] = \^s_axi_rdata [30];
  assign s_axi_rdata[22] = \^s_axi_rdata [30];
  assign s_axi_rdata[21] = \^s_axi_rdata [30];
  assign s_axi_rdata[20] = \^s_axi_rdata [30];
  assign s_axi_rdata[19] = \^s_axi_rdata [30];
  assign s_axi_rdata[18] = \^s_axi_rdata [30];
  assign s_axi_rdata[17] = \^s_axi_rdata [30];
  assign s_axi_rdata[16] = \^s_axi_rdata [30];
  assign s_axi_rdata[15] = \^s_axi_rdata [30];
  assign s_axi_rdata[14] = \^s_axi_rdata [30];
  assign s_axi_rdata[13] = \^s_axi_rdata [30];
  assign s_axi_rdata[12] = \^s_axi_rdata [30];
  assign s_axi_rdata[11] = \^s_axi_rdata [30];
  assign s_axi_rdata[10] = \^s_axi_rdata [30];
  assign s_axi_rdata[9] = \^s_axi_rdata [30];
  assign s_axi_rdata[8] = \^s_axi_rdata [30];
  assign s_axi_rdata[7] = \^s_axi_rdata [30];
  assign s_axi_rdata[6] = \^s_axi_rdata [30];
  assign s_axi_rdata[5] = \^s_axi_rdata [30];
  assign s_axi_rdata[4] = \^s_axi_rdata [30];
  assign s_axi_rdata[3] = \^s_axi_rdata [30];
  assign s_axi_rdata[2] = \^s_axi_rdata [30];
  assign s_axi_rdata[1:0] = \^s_axi_rdata [1:0];
  ublaze_sopc_axi_intc_0_0__axi_lite_ipif AXI_LITE_IPIF_I
       (.\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] (AXI_LITE_IPIF_I_n_18),
        .\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 (INTC_CORE_I_n_9),
        .\CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] (AXI_LITE_IPIF_I_n_17),
        .\IVR_GEN.ivr_reg[0] (INTC_CORE_I_n_13),
        .\IVR_GEN.ivr_reg[1] (INTC_CORE_I_n_1),
        .Or128_vec2stdlogic(Or128_vec2stdlogic),
        .Or128_vec2stdlogic19_out(Or128_vec2stdlogic19_out),
        .Q(ipr),
        .\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] (AXI_LITE_IPIF_I_n_15),
        .\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 (INTC_CORE_I_n_2),
        .\REG_GEN[0].ier_reg[0] (AXI_LITE_IPIF_I_n_19),
        .\REG_GEN[0].ier_reg[0]_0 (INTC_CORE_I_n_15),
        .\REG_GEN[0].isr_reg[0] (INTC_CORE_I_n_5),
        .\REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] (AXI_LITE_IPIF_I_n_16),
        .\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] (AXI_LITE_IPIF_I_n_4),
        .\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 (INTC_CORE_I_n_7),
        .\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] (AXI_LITE_IPIF_I_n_5),
        .\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 (INTC_CORE_I_n_8),
        .SR(INTC_CORE_I_n_0),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_rdack_int_d1(ip2bus_rdack_int_d1),
        .ip2bus_rdack_prev2(ip2bus_rdack_prev2),
        .ip2bus_wrack(ip2bus_wrack),
        .ip2bus_wrack_int_d1(ip2bus_wrack_int_d1),
        .ip2bus_wrack_prev2(ip2bus_wrack_prev2),
        .isr_en(isr_en),
        .mer(mer),
        .\mer_int_reg[0] (AXI_LITE_IPIF_I_n_14),
        .\mer_int_reg[1] (AXI_LITE_IPIF_I_n_13),
        .p_0_in(p_0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in9_in(p_0_in9_in),
        .p_1_in2_in(p_1_in2_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[8:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_AXI_LITE_IPIF_I_s_axi_awaddr_UNCONNECTED[6:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_AXI_LITE_IPIF_I_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata({\^s_axi_rdata [30],\^s_axi_rdata [1:0]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_AXI_LITE_IPIF_I_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata[1:0]),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_AXI_LITE_IPIF_I_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid));
  ublaze_sopc_axi_intc_0_0__intc_core INTC_CORE_I
       (.Bus_RNW_reg_reg(AXI_LITE_IPIF_I_n_13),
        .Bus_RNW_reg_reg_0(AXI_LITE_IPIF_I_n_4),
        .Bus_RNW_reg_reg_1(AXI_LITE_IPIF_I_n_5),
        .Bus_RNW_reg_reg_2(AXI_LITE_IPIF_I_n_18),
        .Bus_RNW_reg_reg_3(AXI_LITE_IPIF_I_n_17),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] (AXI_LITE_IPIF_I_n_19),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] (AXI_LITE_IPIF_I_n_15),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3]_0 (AXI_LITE_IPIF_I_n_16),
        .\GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg[7] (AXI_LITE_IPIF_I_n_14),
        .\INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr_reg[0]_0 (INTC_CORE_I_n_2),
        .Q(ipr),
        .\REG_GEN[0].ier_reg[0]_0 (INTC_CORE_I_n_7),
        .\REG_GEN[0].ier_reg[0]_1 (INTC_CORE_I_n_9),
        .\REG_GEN[0].ier_reg[0]_2 (INTC_CORE_I_n_15),
        .\REG_GEN[0].isr_reg[0]_0 (INTC_CORE_I_n_5),
        .\REG_GEN[1].ier_reg[1]_0 (INTC_CORE_I_n_8),
        .SR(INTC_CORE_I_n_0),
        .intr({NLW_INTC_CORE_I_intr_UNCONNECTED[1],intr[0]}),
        .irq(irq),
        .isr_en(isr_en),
        .mer(mer),
        .p_0_in(p_0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in9_in(p_0_in9_in),
        .p_1_in2_in(p_1_in2_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .\s_axi_rdata_i_reg[0] (INTC_CORE_I_n_13),
        .\s_axi_rdata_i_reg[1] (INTC_CORE_I_n_1),
        .s_axi_wdata(s_axi_wdata[1:0]));
  FDRE #(
    .INIT(1'b0)) 
    ip2bus_rdack_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Or128_vec2stdlogic19_out),
        .Q(ip2bus_rdack_int_d1),
        .R(INTC_CORE_I_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ip2bus_rdack_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_rdack_prev2),
        .Q(ip2bus_rdack),
        .R(INTC_CORE_I_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ip2bus_wrack_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Or128_vec2stdlogic),
        .Q(ip2bus_wrack_int_d1),
        .R(INTC_CORE_I_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ip2bus_wrack_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_wrack_prev2),
        .Q(ip2bus_wrack),
        .R(INTC_CORE_I_n_0));
endmodule

(* ORIG_REF_NAME = "axi_lite_ipif" *) 
module ublaze_sopc_axi_intc_0_0__axi_lite_ipif
   (s_axi_rresp,
    s_axi_rvalid,
    s_axi_bvalid,
    s_axi_bresp,
    \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ,
    \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ,
    isr_en,
    s_axi_wready,
    s_axi_arready,
    ip2bus_wrack_prev2,
    ip2bus_rdack_prev2,
    Or128_vec2stdlogic19_out,
    Or128_vec2stdlogic,
    \mer_int_reg[1] ,
    \mer_int_reg[0] ,
    \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ,
    \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ,
    \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ,
    \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ,
    \REG_GEN[0].ier_reg[0] ,
    s_axi_rdata,
    SR,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_aresetn,
    \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ,
    \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ,
    p_0_in,
    s_axi_awvalid,
    s_axi_wvalid,
    ip2bus_wrack_int_d1,
    ip2bus_rdack_int_d1,
    \IVR_GEN.ivr_reg[0] ,
    \IVR_GEN.ivr_reg[1] ,
    s_axi_bready,
    s_axi_rready,
    ip2bus_rdack,
    ip2bus_wrack,
    mer,
    Q,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_wstrb,
    \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ,
    p_0_in5_in,
    \REG_GEN[0].isr_reg[0] ,
    \REG_GEN[0].ier_reg[0]_0 ,
    p_1_in2_in,
    p_0_in1_in,
    p_0_in9_in,
    \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 );
  output [0:0]s_axi_rresp;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output [0:0]s_axi_bresp;
  output \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ;
  output \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ;
  output isr_en;
  output s_axi_wready;
  output s_axi_arready;
  output ip2bus_wrack_prev2;
  output ip2bus_rdack_prev2;
  output Or128_vec2stdlogic19_out;
  output Or128_vec2stdlogic;
  output \mer_int_reg[1] ;
  output \mer_int_reg[0] ;
  output \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ;
  output \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ;
  output \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ;
  output \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ;
  output \REG_GEN[0].ier_reg[0] ;
  output [2:0]s_axi_rdata;
  input [0:0]SR;
  input s_axi_aclk;
  input s_axi_arvalid;
  input [1:0]s_axi_wdata;
  input s_axi_aresetn;
  input \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ;
  input \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ;
  input p_0_in;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input ip2bus_wrack_int_d1;
  input ip2bus_rdack_int_d1;
  input \IVR_GEN.ivr_reg[0] ;
  input \IVR_GEN.ivr_reg[1] ;
  input s_axi_bready;
  input s_axi_rready;
  input ip2bus_rdack;
  input ip2bus_wrack;
  input mer;
  input [1:0]Q;
  input [6:0]s_axi_araddr;
  input [6:0]s_axi_awaddr;
  input [3:0]s_axi_wstrb;
  input \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ;
  input p_0_in5_in;
  input \REG_GEN[0].isr_reg[0] ;
  input \REG_GEN[0].ier_reg[0]_0 ;
  input p_1_in2_in;
  input p_0_in1_in;
  input p_0_in9_in;
  input \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ;

  wire \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ;
  wire \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ;
  wire \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ;
  wire \IVR_GEN.ivr_reg[0] ;
  wire \IVR_GEN.ivr_reg[1] ;
  wire Or128_vec2stdlogic;
  wire Or128_vec2stdlogic19_out;
  wire [1:0]Q;
  wire \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ;
  wire \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ;
  wire \REG_GEN[0].ier_reg[0] ;
  wire \REG_GEN[0].ier_reg[0]_0 ;
  wire \REG_GEN[0].isr_reg[0] ;
  wire \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ;
  wire \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ;
  wire \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ;
  wire \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ;
  wire \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ;
  wire [0:0]SR;
  wire ip2bus_rdack;
  wire ip2bus_rdack_int_d1;
  wire ip2bus_rdack_prev2;
  wire ip2bus_wrack;
  wire ip2bus_wrack_int_d1;
  wire ip2bus_wrack_prev2;
  wire isr_en;
  wire mer;
  wire \mer_int_reg[0] ;
  wire \mer_int_reg[1] ;
  wire p_0_in;
  wire p_0_in1_in;
  wire p_0_in5_in;
  wire p_0_in9_in;
  wire p_1_in2_in;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [2:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [1:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [6:0]NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED;
  wire [3:0]NLW_I_SLAVE_ATTACHMENT_s_axi_wstrb_UNCONNECTED;

  ublaze_sopc_axi_intc_0_0__slave_attachment I_SLAVE_ATTACHMENT
       (.\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] (\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ),
        .\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 (\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ),
        .\CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] (\CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ),
        .\IVR_GEN.ivr_reg[0] (\IVR_GEN.ivr_reg[0] ),
        .\IVR_GEN.ivr_reg[1] (\IVR_GEN.ivr_reg[1] ),
        .Or128_vec2stdlogic(Or128_vec2stdlogic),
        .Or128_vec2stdlogic19_out(Or128_vec2stdlogic19_out),
        .Q(Q),
        .\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] (\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ),
        .\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 (\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ),
        .\REG_GEN[0].ier_reg[0] (\REG_GEN[0].ier_reg[0] ),
        .\REG_GEN[0].ier_reg[0]_0 (\REG_GEN[0].ier_reg[0]_0 ),
        .\REG_GEN[0].isr_reg[0] (\REG_GEN[0].isr_reg[0] ),
        .\REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] (\REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ),
        .\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] (\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ),
        .\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 (\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ),
        .\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] (\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ),
        .\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 (\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ),
        .SR(SR),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_rdack_int_d1(ip2bus_rdack_int_d1),
        .ip2bus_rdack_prev2(ip2bus_rdack_prev2),
        .ip2bus_wrack(ip2bus_wrack),
        .ip2bus_wrack_int_d1(ip2bus_wrack_int_d1),
        .ip2bus_wrack_prev2(ip2bus_wrack_prev2),
        .isr_en(isr_en),
        .mer(mer),
        .\mer_int_reg[0] (\mer_int_reg[0] ),
        .\mer_int_reg[1] (\mer_int_reg[1] ),
        .p_0_in(p_0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in9_in(p_0_in9_in),
        .p_1_in2_in(p_1_in2_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED[6:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_I_SLAVE_ATTACHMENT_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "intc_core" *) 
module ublaze_sopc_axi_intc_0_0__intc_core
   (SR,
    \s_axi_rdata_i_reg[1] ,
    \INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr_reg[0]_0 ,
    p_0_in5_in,
    p_0_in,
    \REG_GEN[0].isr_reg[0]_0 ,
    p_1_in2_in,
    \REG_GEN[0].ier_reg[0]_0 ,
    \REG_GEN[1].ier_reg[1]_0 ,
    \REG_GEN[0].ier_reg[0]_1 ,
    p_0_in9_in,
    mer,
    irq,
    \s_axi_rdata_i_reg[0] ,
    p_0_in1_in,
    \REG_GEN[0].ier_reg[0]_2 ,
    Q,
    s_axi_aclk,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] ,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3]_0 ,
    Bus_RNW_reg_reg,
    Bus_RNW_reg_reg_0,
    Bus_RNW_reg_reg_1,
    Bus_RNW_reg_reg_2,
    Bus_RNW_reg_reg_3,
    \GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg[7] ,
    s_axi_aresetn,
    isr_en,
    s_axi_wdata,
    intr,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] );
  output [0:0]SR;
  output \s_axi_rdata_i_reg[1] ;
  output \INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr_reg[0]_0 ;
  output p_0_in5_in;
  output p_0_in;
  output \REG_GEN[0].isr_reg[0]_0 ;
  output p_1_in2_in;
  output \REG_GEN[0].ier_reg[0]_0 ;
  output \REG_GEN[1].ier_reg[1]_0 ;
  output \REG_GEN[0].ier_reg[0]_1 ;
  output p_0_in9_in;
  output mer;
  output irq;
  output \s_axi_rdata_i_reg[0] ;
  output p_0_in1_in;
  output \REG_GEN[0].ier_reg[0]_2 ;
  output [1:0]Q;
  input s_axi_aclk;
  input \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] ;
  input \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3]_0 ;
  input Bus_RNW_reg_reg;
  input Bus_RNW_reg_reg_0;
  input Bus_RNW_reg_reg_1;
  input Bus_RNW_reg_reg_2;
  input Bus_RNW_reg_reg_3;
  input \GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg[7] ;
  input s_axi_aresetn;
  input isr_en;
  input [1:0]s_axi_wdata;
  input [1:0]intr;
  input \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ;

  wire Bus_RNW_reg_reg;
  wire Bus_RNW_reg_reg_0;
  wire Bus_RNW_reg_reg_1;
  wire Bus_RNW_reg_reg_2;
  wire Bus_RNW_reg_reg_3;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg[7] ;
  wire \INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr[0]_i_1_n_0 ;
  wire \INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr_reg[0]_0 ;
  wire \INTR_DETECT_GEN[1].LVL_DETECT_GEN.hw_intr[1]_i_1_n_0 ;
  wire \IPR_GEN.ipr[0]_i_1_n_0 ;
  wire \IPR_GEN.ipr[1]_i_1_n_0 ;
  wire \IRQ_LEVEL_GEN.IRQ_LEVEL_NORMAL_ON_AXI_CLK_GEN.Irq_i_1_n_0 ;
  wire \IVR_GEN.ivr[0]_i_1_n_0 ;
  wire \IVR_GEN.ivr[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire \REG_GEN[0].ier[0]_i_1_n_0 ;
  wire \REG_GEN[0].ier_reg[0]_0 ;
  wire \REG_GEN[0].ier_reg[0]_1 ;
  wire \REG_GEN[0].ier_reg[0]_2 ;
  wire \REG_GEN[0].isr[0]_i_1_n_0 ;
  wire \REG_GEN[0].isr[0]_i_3_n_0 ;
  wire \REG_GEN[0].isr_reg[0]_0 ;
  wire \REG_GEN[1].ier[1]_i_1_n_0 ;
  wire \REG_GEN[1].ier_reg[1]_0 ;
  wire \REG_GEN[1].isr[1]_i_1_n_0 ;
  wire \REG_GEN[1].isr[1]_i_2_n_0 ;
  wire [0:0]SR;
  wire [1:0]hw_intr;
  wire [1:0]intr;
  wire irq;
  wire irq_gen;
  wire irq_gen_i;
  wire isr_en;
  wire mer;
  wire p_0_in;
  wire p_0_in1_in;
  wire p_0_in5_in;
  wire p_0_in9_in;
  wire p_1_in2_in;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire \s_axi_rdata_i_reg[0] ;
  wire \s_axi_rdata_i_reg[1] ;
  wire [1:0]s_axi_wdata;

  FDRE #(
    .INIT(1'b0)) 
    \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_reg_2),
        .Q(\REG_GEN[0].ier_reg[0]_1 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_reg_3),
        .Q(p_0_in9_in),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00E0)) 
    \INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr[0]_i_1 
       (.I0(hw_intr[0]),
        .I1(intr[0]),
        .I2(s_axi_aresetn),
        .I3(\INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr_reg[0]_0 ),
        .O(\INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr[0]_i_1_n_0 ),
        .Q(hw_intr[0]),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \INTR_DETECT_GEN[1].LVL_DETECT_GEN.hw_intr[1]_i_1 
       (.I0(hw_intr[1]),
        .I1(s_axi_aresetn),
        .I2(p_0_in5_in),
        .O(\INTR_DETECT_GEN[1].LVL_DETECT_GEN.hw_intr[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INTR_DETECT_GEN[1].LVL_DETECT_GEN.hw_intr_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\INTR_DETECT_GEN[1].LVL_DETECT_GEN.hw_intr[1]_i_1_n_0 ),
        .Q(hw_intr[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \IPR_GEN.ipr[0]_i_1 
       (.I0(\REG_GEN[0].isr_reg[0]_0 ),
        .I1(\REG_GEN[0].ier_reg[0]_2 ),
        .O(\IPR_GEN.ipr[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \IPR_GEN.ipr[1]_i_1 
       (.I0(p_1_in2_in),
        .I1(p_0_in1_in),
        .O(\IPR_GEN.ipr[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \IPR_GEN.ipr_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IPR_GEN.ipr[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \IPR_GEN.ipr_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IPR_GEN.ipr[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'hE000)) 
    \IRQ_LEVEL_GEN.IRQ_LEVEL_NORMAL_ON_AXI_CLK_GEN.Irq_i_1 
       (.I0(irq),
        .I1(mer),
        .I2(irq_gen),
        .I3(s_axi_aresetn),
        .O(\IRQ_LEVEL_GEN.IRQ_LEVEL_NORMAL_ON_AXI_CLK_GEN.Irq_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \IRQ_LEVEL_GEN.IRQ_LEVEL_NORMAL_ON_AXI_CLK_GEN.Irq_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IRQ_LEVEL_GEN.IRQ_LEVEL_NORMAL_ON_AXI_CLK_GEN.Irq_i_1_n_0 ),
        .Q(irq),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h7F)) 
    \IVR_GEN.ivr[0]_i_1 
       (.I0(s_axi_aresetn),
        .I1(\REG_GEN[0].ier_reg[0]_2 ),
        .I2(\REG_GEN[0].isr_reg[0]_0 ),
        .O(\IVR_GEN.ivr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0777)) 
    \IVR_GEN.ivr[1]_i_1 
       (.I0(p_1_in2_in),
        .I1(p_0_in1_in),
        .I2(\REG_GEN[0].isr_reg[0]_0 ),
        .I3(\REG_GEN[0].ier_reg[0]_2 ),
        .O(\IVR_GEN.ivr[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \IVR_GEN.ivr_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IVR_GEN.ivr[0]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[0] ),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \IVR_GEN.ivr_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IVR_GEN.ivr[1]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[1] ),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] ),
        .Q(\INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr_reg[0]_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000FECE0000)) 
    \REG_GEN[0].ier[0]_i_1 
       (.I0(\REG_GEN[0].ier_reg[0]_2 ),
        .I1(\REG_GEN[0].ier_reg[0]_0 ),
        .I2(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ),
        .I3(s_axi_wdata[0]),
        .I4(s_axi_aresetn),
        .I5(\REG_GEN[0].ier_reg[0]_1 ),
        .O(\REG_GEN[0].ier[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \REG_GEN[0].ier_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\REG_GEN[0].ier[0]_i_1_n_0 ),
        .Q(\REG_GEN[0].ier_reg[0]_2 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \REG_GEN[0].isr[0]_i_1 
       (.I0(\REG_GEN[0].isr_reg[0]_0 ),
        .I1(isr_en),
        .I2(s_axi_wdata[0]),
        .I3(p_0_in),
        .I4(hw_intr[0]),
        .I5(\REG_GEN[0].isr[0]_i_3_n_0 ),
        .O(\REG_GEN[0].isr[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \REG_GEN[0].isr[0]_i_3 
       (.I0(\INTR_DETECT_GEN[0].LVL_DETECT_GEN.hw_intr_reg[0]_0 ),
        .I1(s_axi_aresetn),
        .O(\REG_GEN[0].isr[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \REG_GEN[0].isr_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\REG_GEN[0].isr[0]_i_1_n_0 ),
        .Q(\REG_GEN[0].isr_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3]_0 ),
        .Q(p_0_in5_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000FECE0000)) 
    \REG_GEN[1].ier[1]_i_1 
       (.I0(p_0_in1_in),
        .I1(\REG_GEN[1].ier_reg[1]_0 ),
        .I2(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ),
        .I3(s_axi_wdata[1]),
        .I4(s_axi_aresetn),
        .I5(p_0_in9_in),
        .O(\REG_GEN[1].ier[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \REG_GEN[1].ier_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\REG_GEN[1].ier[1]_i_1_n_0 ),
        .Q(p_0_in1_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \REG_GEN[1].isr[1]_i_1 
       (.I0(p_1_in2_in),
        .I1(isr_en),
        .I2(s_axi_wdata[1]),
        .I3(p_0_in),
        .I4(hw_intr[1]),
        .I5(\REG_GEN[1].isr[1]_i_2_n_0 ),
        .O(\REG_GEN[1].isr[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \REG_GEN[1].isr[1]_i_2 
       (.I0(p_0_in5_in),
        .I1(s_axi_aresetn),
        .O(\REG_GEN[1].isr[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \REG_GEN[1].isr_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\REG_GEN[1].isr[1]_i_1_n_0 ),
        .Q(p_1_in2_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_reg_0),
        .Q(\REG_GEN[0].ier_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_reg_1),
        .Q(\REG_GEN[1].ier_reg[1]_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    irq_gen_i_1
       (.I0(\REG_GEN[0].ier_reg[0]_2 ),
        .I1(\REG_GEN[0].isr_reg[0]_0 ),
        .I2(p_0_in1_in),
        .I3(p_1_in2_in),
        .O(irq_gen_i));
  FDRE #(
    .INIT(1'b0)) 
    irq_gen_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(irq_gen_i),
        .Q(irq_gen),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mer_int_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg[7] ),
        .Q(mer),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mer_int_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_reg),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    rst_i_1
       (.I0(s_axi_aresetn),
        .O(SR));
endmodule

(* ORIG_REF_NAME = "slave_attachment" *) 
module ublaze_sopc_axi_intc_0_0__slave_attachment
   (s_axi_rresp,
    s_axi_rvalid,
    s_axi_bvalid,
    s_axi_bresp,
    \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ,
    \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ,
    isr_en,
    s_axi_wready,
    s_axi_arready,
    ip2bus_wrack_prev2,
    ip2bus_rdack_prev2,
    Or128_vec2stdlogic19_out,
    Or128_vec2stdlogic,
    \mer_int_reg[1] ,
    \mer_int_reg[0] ,
    \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ,
    \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ,
    \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ,
    \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ,
    \REG_GEN[0].ier_reg[0] ,
    s_axi_rdata,
    SR,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_aresetn,
    \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ,
    \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ,
    p_0_in,
    s_axi_awvalid,
    s_axi_wvalid,
    ip2bus_wrack_int_d1,
    ip2bus_rdack_int_d1,
    \IVR_GEN.ivr_reg[0] ,
    \IVR_GEN.ivr_reg[1] ,
    s_axi_bready,
    s_axi_rready,
    ip2bus_rdack,
    ip2bus_wrack,
    mer,
    Q,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_wstrb,
    \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ,
    p_0_in5_in,
    \REG_GEN[0].isr_reg[0] ,
    \REG_GEN[0].ier_reg[0]_0 ,
    p_1_in2_in,
    p_0_in1_in,
    p_0_in9_in,
    \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 );
  output [0:0]s_axi_rresp;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output [0:0]s_axi_bresp;
  output \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ;
  output \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ;
  output isr_en;
  output s_axi_wready;
  output s_axi_arready;
  output ip2bus_wrack_prev2;
  output ip2bus_rdack_prev2;
  output Or128_vec2stdlogic19_out;
  output Or128_vec2stdlogic;
  output \mer_int_reg[1] ;
  output \mer_int_reg[0] ;
  output \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ;
  output \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ;
  output \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ;
  output \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ;
  output \REG_GEN[0].ier_reg[0] ;
  output [2:0]s_axi_rdata;
  input [0:0]SR;
  input s_axi_aclk;
  input s_axi_arvalid;
  input [1:0]s_axi_wdata;
  input s_axi_aresetn;
  input \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ;
  input \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ;
  input p_0_in;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input ip2bus_wrack_int_d1;
  input ip2bus_rdack_int_d1;
  input \IVR_GEN.ivr_reg[0] ;
  input \IVR_GEN.ivr_reg[1] ;
  input s_axi_bready;
  input s_axi_rready;
  input ip2bus_rdack;
  input ip2bus_wrack;
  input mer;
  input [1:0]Q;
  input [6:0]s_axi_araddr;
  input [6:0]s_axi_awaddr;
  input [3:0]s_axi_wstrb;
  input \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ;
  input p_0_in5_in;
  input \REG_GEN[0].isr_reg[0] ;
  input \REG_GEN[0].ier_reg[0]_0 ;
  input p_1_in2_in;
  input p_0_in1_in;
  input p_0_in9_in;
  input \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ;

  wire \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ;
  wire \CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ;
  wire \CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[3] ;
  wire [3:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 ;
  wire [31:0]IP2Bus_Data;
  wire \IVR_GEN.ivr_reg[0] ;
  wire \IVR_GEN.ivr_reg[1] ;
  wire Or128_vec2stdlogic;
  wire Or128_vec2stdlogic19_out;
  wire [1:0]Q;
  wire \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ;
  wire \REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ;
  wire \REG_GEN[0].ier_reg[0] ;
  wire \REG_GEN[0].ier_reg[0]_0 ;
  wire \REG_GEN[0].isr_reg[0] ;
  wire \REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ;
  wire \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ;
  wire \SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ;
  wire \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ;
  wire \SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ;
  wire [0:0]SR;
  wire [8:2]bus2ip_addr;
  wire \bus2ip_addr_i[8]_i_1_n_0 ;
  wire bus2ip_rnw_i_reg_n_0;
  wire clear;
  wire ip2bus_rdack;
  wire ip2bus_rdack_int_d1;
  wire ip2bus_rdack_prev2;
  wire ip2bus_wrack;
  wire ip2bus_wrack_int_d1;
  wire ip2bus_wrack_prev2;
  wire is_read_i_1_n_0;
  wire is_read_reg_n_0;
  wire is_write_i_1_n_0;
  wire is_write_i_2_n_0;
  wire is_write_reg_n_0;
  wire isr_en;
  wire mer;
  wire \mer_int_reg[0] ;
  wire \mer_int_reg[1] ;
  wire p_0_in;
  wire p_0_in1_in;
  wire p_0_in5_in;
  wire p_0_in9_in;
  wire p_1_in2_in;
  wire p_5_in;
  wire [3:0]plusOp;
  wire rst;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  (* RTL_KEEP = "yes" *) wire s_axi_bresp_i;
  wire s_axi_bvalid;
  wire s_axi_bvalid_i_i_1_n_0;
  wire [2:0]s_axi_rdata;
  wire \s_axi_rdata_i[0]_i_2_n_0 ;
  wire \s_axi_rdata_i[0]_i_3_n_0 ;
  wire \s_axi_rdata_i[1]_i_2_n_0 ;
  wire \s_axi_rdata_i[1]_i_3_n_0 ;
  wire \s_axi_rdata_i[1]_i_4_n_0 ;
  wire \s_axi_rdata_i[31]_i_4_n_0 ;
  wire s_axi_rready;
  (* RTL_KEEP = "yes" *) wire s_axi_rresp_i;
  wire s_axi_rvalid;
  wire s_axi_rvalid_i_i_1_n_0;
  wire [1:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire [1:0]state;
  wire state1__2;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;

  LUT6 #(
    .INIT(64'hFFFF150015001500)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_awvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(state1__2),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(s_axi_arready),
        .I3(s_axi_rresp_i),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0800FFFF08000800)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_arvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(s_axi_wready),
        .I5(s_axi_bresp_i),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888F888FFFFF888)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(s_axi_wready),
        .I1(s_axi_bresp_i),
        .I2(s_axi_rresp_i),
        .I3(s_axi_arready),
        .I4(\FSM_onehot_state_reg_n_0_[3] ),
        .I5(state1__2),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(s_axi_bready),
        .I1(s_axi_bvalid),
        .I2(s_axi_rready),
        .I3(s_axi_rvalid),
        .O(state1__2));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(s_axi_rresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(s_axi_bresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .R(rst));
  (* \PinAttr:I0:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[0]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .O(plusOp[0]));
  (* \PinAttr:I0:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[1]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[2]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .O(plusOp[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(clear));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_2 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [3]),
        .O(plusOp[3]));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [3]),
        .R(clear));
  ublaze_sopc_axi_intc_0_0__address_decoder I_DECODER
       (.\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] (\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0] ),
        .\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 (\CIE_GEN.CIE_BIT_GEN[0].cie_reg[0]_0 ),
        .\CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] (\CIE_GEN.CIE_BIT_GEN[1].cie_reg[1] ),
        .D({IP2Bus_Data[31],IP2Bus_Data[1:0]}),
        .\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] (\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 ),
        .Or128_vec2stdlogic(Or128_vec2stdlogic),
        .Or128_vec2stdlogic19_out(Or128_vec2stdlogic19_out),
        .Q(start2),
        .\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] (\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0] ),
        .\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 (\REG_GEN[0].IAR_NORMAL_MODE_GEN.iar_reg[0]_0 ),
        .\REG_GEN[0].ier_reg[0] (\REG_GEN[0].ier_reg[0] ),
        .\REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] (\REG_GEN[1].IAR_NORMAL_MODE_GEN.iar_reg[1] ),
        .\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] (\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0] ),
        .\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 (\SIE_GEN.SIE_BIT_GEN[0].sie_reg[0]_0 ),
        .\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] (\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1] ),
        .\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 (\SIE_GEN.SIE_BIT_GEN[1].sie_reg[1]_0 ),
        .\bus2ip_addr_i_reg[3] (\s_axi_rdata_i[31]_i_4_n_0 ),
        .\bus2ip_addr_i_reg[4] (\s_axi_rdata_i[0]_i_3_n_0 ),
        .\bus2ip_addr_i_reg[4]_0 (\s_axi_rdata_i[1]_i_4_n_0 ),
        .\bus2ip_addr_i_reg[8] (bus2ip_addr),
        .\bus2ip_addr_i_reg[8]_0 (\s_axi_rdata_i[1]_i_2_n_0 ),
        .bus2ip_rnw_i_reg(bus2ip_rnw_i_reg_n_0),
        .ip2bus_rdack(ip2bus_rdack),
        .ip2bus_rdack_int_d1(ip2bus_rdack_int_d1),
        .ip2bus_rdack_prev2(ip2bus_rdack_prev2),
        .ip2bus_wrack(ip2bus_wrack),
        .ip2bus_wrack_int_d1(ip2bus_wrack_int_d1),
        .ip2bus_wrack_prev2(ip2bus_wrack_prev2),
        .is_read_reg(is_read_reg_n_0),
        .is_write_reg(is_write_reg_n_0),
        .isr_en(isr_en),
        .mer(mer),
        .\mer_int_reg[0] (\mer_int_reg[0] ),
        .\mer_int_reg[0]_0 (\s_axi_rdata_i[0]_i_2_n_0 ),
        .\mer_int_reg[1] (\mer_int_reg[1] ),
        .\mer_int_reg[1]_0 (\s_axi_rdata_i[1]_i_3_n_0 ),
        .p_0_in(p_0_in),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in9_in(p_0_in9_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready));
  LUT5 #(
    .INIT(32'h000000EA)) 
    \bus2ip_addr_i[8]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_wvalid),
        .I3(state[1]),
        .I4(state[0]),
        .O(\bus2ip_addr_i[8]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[0]),
        .Q(bus2ip_addr[2]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[1]),
        .Q(bus2ip_addr[3]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[2]),
        .Q(bus2ip_addr[4]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[3]),
        .Q(bus2ip_addr[5]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[4]),
        .Q(bus2ip_addr[6]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[5]),
        .Q(bus2ip_addr[7]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[6]),
        .Q(bus2ip_addr[8]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_arvalid),
        .Q(bus2ip_rnw_i_reg_n_0),
        .R(rst));
  LUT5 #(
    .INIT(32'h8BBB8888)) 
    is_read_i_1
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(state1__2),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(is_read_reg_n_0),
        .O(is_read_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_read_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_read_i_1_n_0),
        .Q(is_read_reg_n_0),
        .R(rst));
  LUT6 #(
    .INIT(64'h2000FFFF20000000)) 
    is_write_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_arvalid),
        .I2(s_axi_awvalid),
        .I3(s_axi_wvalid),
        .I4(is_write_i_2_n_0),
        .I5(is_write_reg_n_0),
        .O(is_write_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFEAEAEAAAAAAAAA)) 
    is_write_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_bready),
        .I2(s_axi_bvalid),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(is_write_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_write_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_write_i_1_n_0),
        .Q(is_write_reg_n_0),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(SR),
        .Q(rst),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_bvalid_i_i_1
       (.I0(s_axi_wready),
        .I1(state[1]),
        .I2(state[0]),
        .I3(s_axi_bready),
        .I4(s_axi_bvalid),
        .O(s_axi_bvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_i_1_n_0),
        .Q(s_axi_bvalid),
        .R(rst));
  LUT5 #(
    .INIT(32'h03038380)) 
    \s_axi_rdata_i[0]_i_2 
       (.I0(mer),
        .I1(bus2ip_addr[3]),
        .I2(bus2ip_addr[4]),
        .I3(Q[0]),
        .I4(bus2ip_addr[5]),
        .O(\s_axi_rdata_i[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F4A45404)) 
    \s_axi_rdata_i[0]_i_3 
       (.I0(bus2ip_addr[4]),
        .I1(\REG_GEN[0].isr_reg[0] ),
        .I2(bus2ip_addr[3]),
        .I3(\REG_GEN[0].ier_reg[0]_0 ),
        .I4(\IVR_GEN.ivr_reg[0] ),
        .I5(bus2ip_addr[5]),
        .O(\s_axi_rdata_i[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \s_axi_rdata_i[1]_i_2 
       (.I0(bus2ip_addr[8]),
        .I1(bus2ip_addr[6]),
        .I2(bus2ip_addr[7]),
        .O(\s_axi_rdata_i[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h03038380)) 
    \s_axi_rdata_i[1]_i_3 
       (.I0(p_0_in),
        .I1(bus2ip_addr[3]),
        .I2(bus2ip_addr[4]),
        .I3(Q[1]),
        .I4(bus2ip_addr[5]),
        .O(\s_axi_rdata_i[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F4A45404)) 
    \s_axi_rdata_i[1]_i_4 
       (.I0(bus2ip_addr[4]),
        .I1(p_1_in2_in),
        .I2(bus2ip_addr[3]),
        .I3(p_0_in1_in),
        .I4(\IVR_GEN.ivr_reg[1] ),
        .I5(bus2ip_addr[5]),
        .O(\s_axi_rdata_i[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0240004000400040)) 
    \s_axi_rdata_i[31]_i_4 
       (.I0(bus2ip_addr[3]),
        .I1(bus2ip_addr[2]),
        .I2(bus2ip_addr[5]),
        .I3(bus2ip_addr[4]),
        .I4(\IVR_GEN.ivr_reg[0] ),
        .I5(\IVR_GEN.ivr_reg[1] ),
        .O(\s_axi_rdata_i[31]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(IP2Bus_Data[0]),
        .Q(s_axi_rdata[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(IP2Bus_Data[1]),
        .Q(s_axi_rdata[1]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(IP2Bus_Data[31]),
        .Q(s_axi_rdata[2]),
        .R(rst));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_rvalid_i_i_1
       (.I0(s_axi_arready),
        .I1(state[0]),
        .I2(state[1]),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid),
        .O(s_axi_rvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_i_1_n_0),
        .Q(s_axi_rvalid),
        .R(rst));
  LUT5 #(
    .INIT(32'h000000F8)) 
    start2_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(state[0]),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(rst));
  LUT5 #(
    .INIT(32'h77FC44FC)) 
    \state[0]_i_1 
       (.I0(state1__2),
        .I1(state[0]),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(s_axi_wready),
        .O(\state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h55FFFF0C5500FF0C)) 
    \state[1]_i_1 
       (.I0(state1__2),
        .I1(p_5_in),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(state[0]),
        .I5(s_axi_arready),
        .O(\state[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_2 
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .O(p_5_in));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(rst));
endmodule

module ublaze_sopc_axi_interconnect_0_0
   (ACLK,
    ARESETN,
    M00_ACLK,
    M00_ARESETN,
    M00_AXI_araddr,
    M00_AXI_arready,
    M00_AXI_arvalid,
    M00_AXI_awaddr,
    M00_AXI_awready,
    M00_AXI_awvalid,
    M00_AXI_bready,
    M00_AXI_bresp,
    M00_AXI_bvalid,
    M00_AXI_rdata,
    M00_AXI_rready,
    M00_AXI_rresp,
    M00_AXI_rvalid,
    M00_AXI_wdata,
    M00_AXI_wready,
    M00_AXI_wstrb,
    M00_AXI_wvalid,
    M01_ACLK,
    M01_ARESETN,
    M01_AXI_araddr,
    M01_AXI_arready,
    M01_AXI_arvalid,
    M01_AXI_awaddr,
    M01_AXI_awready,
    M01_AXI_awvalid,
    M01_AXI_bready,
    M01_AXI_bresp,
    M01_AXI_bvalid,
    M01_AXI_rdata,
    M01_AXI_rready,
    M01_AXI_rresp,
    M01_AXI_rvalid,
    M01_AXI_wdata,
    M01_AXI_wready,
    M01_AXI_wstrb,
    M01_AXI_wvalid,
    M02_ACLK,
    M02_ARESETN,
    M02_AXI_araddr,
    M02_AXI_arready,
    M02_AXI_arvalid,
    M02_AXI_awaddr,
    M02_AXI_awready,
    M02_AXI_awvalid,
    M02_AXI_bready,
    M02_AXI_bresp,
    M02_AXI_bvalid,
    M02_AXI_rdata,
    M02_AXI_rready,
    M02_AXI_rresp,
    M02_AXI_rvalid,
    M02_AXI_wdata,
    M02_AXI_wready,
    M02_AXI_wstrb,
    M02_AXI_wvalid,
    M03_ACLK,
    M03_ARESETN,
    M03_AXI_araddr,
    M03_AXI_arready,
    M03_AXI_arvalid,
    M03_AXI_awaddr,
    M03_AXI_awready,
    M03_AXI_awvalid,
    M03_AXI_bready,
    M03_AXI_bresp,
    M03_AXI_bvalid,
    M03_AXI_rdata,
    M03_AXI_rready,
    M03_AXI_rresp,
    M03_AXI_rvalid,
    M03_AXI_wdata,
    M03_AXI_wready,
    M03_AXI_wstrb,
    M03_AXI_wvalid,
    M04_ACLK,
    M04_ARESETN,
    M04_AXI_araddr,
    M04_AXI_arready,
    M04_AXI_arvalid,
    M04_AXI_awaddr,
    M04_AXI_awready,
    M04_AXI_awvalid,
    M04_AXI_bready,
    M04_AXI_bresp,
    M04_AXI_bvalid,
    M04_AXI_rdata,
    M04_AXI_rready,
    M04_AXI_rresp,
    M04_AXI_rvalid,
    M04_AXI_wdata,
    M04_AXI_wready,
    M04_AXI_wstrb,
    M04_AXI_wvalid,
    S00_ACLK,
    S00_ARESETN,
    S00_AXI_araddr,
    S00_AXI_arprot,
    S00_AXI_arready,
    S00_AXI_arvalid,
    S00_AXI_awaddr,
    S00_AXI_awprot,
    S00_AXI_awready,
    S00_AXI_awvalid,
    S00_AXI_bready,
    S00_AXI_bresp,
    S00_AXI_bvalid,
    S00_AXI_rdata,
    S00_AXI_rready,
    S00_AXI_rresp,
    S00_AXI_rvalid,
    S00_AXI_wdata,
    S00_AXI_wready,
    S00_AXI_wstrb,
    S00_AXI_wvalid);
  input ACLK;
  input ARESETN;
  input M00_ACLK;
  input M00_ARESETN;
  output [31:0]M00_AXI_araddr;
  input M00_AXI_arready;
  output M00_AXI_arvalid;
  output [31:0]M00_AXI_awaddr;
  input M00_AXI_awready;
  output M00_AXI_awvalid;
  output M00_AXI_bready;
  input [1:0]M00_AXI_bresp;
  input M00_AXI_bvalid;
  input [31:0]M00_AXI_rdata;
  output M00_AXI_rready;
  input [1:0]M00_AXI_rresp;
  input M00_AXI_rvalid;
  output [31:0]M00_AXI_wdata;
  input M00_AXI_wready;
  output [3:0]M00_AXI_wstrb;
  output M00_AXI_wvalid;
  input M01_ACLK;
  input M01_ARESETN;
  output [31:0]M01_AXI_araddr;
  input M01_AXI_arready;
  output M01_AXI_arvalid;
  output [31:0]M01_AXI_awaddr;
  input M01_AXI_awready;
  output M01_AXI_awvalid;
  output M01_AXI_bready;
  input [1:0]M01_AXI_bresp;
  input M01_AXI_bvalid;
  input [31:0]M01_AXI_rdata;
  output M01_AXI_rready;
  input [1:0]M01_AXI_rresp;
  input M01_AXI_rvalid;
  output [31:0]M01_AXI_wdata;
  input M01_AXI_wready;
  output [3:0]M01_AXI_wstrb;
  output M01_AXI_wvalid;
  input M02_ACLK;
  input M02_ARESETN;
  output [31:0]M02_AXI_araddr;
  input M02_AXI_arready;
  output M02_AXI_arvalid;
  output [31:0]M02_AXI_awaddr;
  input M02_AXI_awready;
  output M02_AXI_awvalid;
  output M02_AXI_bready;
  input [1:0]M02_AXI_bresp;
  input M02_AXI_bvalid;
  input [31:0]M02_AXI_rdata;
  output M02_AXI_rready;
  input [1:0]M02_AXI_rresp;
  input M02_AXI_rvalid;
  output [31:0]M02_AXI_wdata;
  input M02_AXI_wready;
  output [3:0]M02_AXI_wstrb;
  output M02_AXI_wvalid;
  input M03_ACLK;
  input M03_ARESETN;
  output [31:0]M03_AXI_araddr;
  input M03_AXI_arready;
  output M03_AXI_arvalid;
  output [31:0]M03_AXI_awaddr;
  input M03_AXI_awready;
  output M03_AXI_awvalid;
  output M03_AXI_bready;
  input [1:0]M03_AXI_bresp;
  input M03_AXI_bvalid;
  input [31:0]M03_AXI_rdata;
  output M03_AXI_rready;
  input [1:0]M03_AXI_rresp;
  input M03_AXI_rvalid;
  output [31:0]M03_AXI_wdata;
  input M03_AXI_wready;
  output [3:0]M03_AXI_wstrb;
  output M03_AXI_wvalid;
  input M04_ACLK;
  input M04_ARESETN;
  output [31:0]M04_AXI_araddr;
  input M04_AXI_arready;
  output M04_AXI_arvalid;
  output [31:0]M04_AXI_awaddr;
  input M04_AXI_awready;
  output M04_AXI_awvalid;
  output M04_AXI_bready;
  input [1:0]M04_AXI_bresp;
  input M04_AXI_bvalid;
  input [31:0]M04_AXI_rdata;
  output M04_AXI_rready;
  input [1:0]M04_AXI_rresp;
  input M04_AXI_rvalid;
  output [31:0]M04_AXI_wdata;
  input M04_AXI_wready;
  output [3:0]M04_AXI_wstrb;
  output M04_AXI_wvalid;
  input S00_ACLK;
  input S00_ARESETN;
  input [31:0]S00_AXI_araddr;
  input [2:0]S00_AXI_arprot;
  output [0:0]S00_AXI_arready;
  input [0:0]S00_AXI_arvalid;
  input [31:0]S00_AXI_awaddr;
  input [2:0]S00_AXI_awprot;
  output [0:0]S00_AXI_awready;
  input [0:0]S00_AXI_awvalid;
  input [0:0]S00_AXI_bready;
  output [1:0]S00_AXI_bresp;
  output [0:0]S00_AXI_bvalid;
  output [31:0]S00_AXI_rdata;
  input [0:0]S00_AXI_rready;
  output [1:0]S00_AXI_rresp;
  output [0:0]S00_AXI_rvalid;
  input [31:0]S00_AXI_wdata;
  output [0:0]S00_AXI_wready;
  input [3:0]S00_AXI_wstrb;
  input [0:0]S00_AXI_wvalid;

  wire ACLK;
  wire ARESETN;
  wire [31:0]M00_AXI_araddr;
  wire M00_AXI_arready;
  wire M00_AXI_arvalid;
  wire M00_AXI_awready;
  wire M00_AXI_awvalid;
  wire M00_AXI_bready;
  wire M00_AXI_bvalid;
  wire [31:0]M00_AXI_rdata;
  wire M00_AXI_rready;
  wire M00_AXI_rvalid;
  wire [31:0]M00_AXI_wdata;
  wire M00_AXI_wready;
  wire M00_AXI_wvalid;
  wire [31:0]M01_AXI_araddr;
  wire M01_AXI_arready;
  wire M01_AXI_arvalid;
  wire M01_AXI_awready;
  wire M01_AXI_awvalid;
  wire M01_AXI_bready;
  wire M01_AXI_bvalid;
  wire [31:0]M01_AXI_rdata;
  wire M01_AXI_rready;
  wire M01_AXI_rvalid;
  wire [31:0]M01_AXI_wdata;
  wire M01_AXI_wready;
  wire M01_AXI_wvalid;
  wire [31:0]M02_AXI_araddr;
  wire M02_AXI_arready;
  wire M02_AXI_arvalid;
  wire M02_AXI_awready;
  wire M02_AXI_awvalid;
  wire M02_AXI_bready;
  wire M02_AXI_bvalid;
  wire [31:0]M02_AXI_rdata;
  wire M02_AXI_rready;
  wire M02_AXI_rvalid;
  wire [31:0]M02_AXI_wdata;
  wire M02_AXI_wready;
  wire M02_AXI_wvalid;
  wire [31:0]M03_AXI_araddr;
  wire M03_AXI_arready;
  wire M03_AXI_arvalid;
  wire M03_AXI_awready;
  wire M03_AXI_awvalid;
  wire M03_AXI_bready;
  wire M03_AXI_bvalid;
  wire [31:0]M03_AXI_rdata;
  wire M03_AXI_rready;
  wire M03_AXI_rvalid;
  wire [31:0]M03_AXI_wdata;
  wire M03_AXI_wready;
  wire M03_AXI_wvalid;
  wire [31:0]M04_AXI_araddr;
  wire M04_AXI_arready;
  wire M04_AXI_arvalid;
  wire [31:0]M04_AXI_awaddr;
  wire M04_AXI_awready;
  wire M04_AXI_awvalid;
  wire M04_AXI_bready;
  wire M04_AXI_bvalid;
  wire [31:0]M04_AXI_rdata;
  wire M04_AXI_rready;
  wire M04_AXI_rvalid;
  wire [31:0]M04_AXI_wdata;
  wire M04_AXI_wready;
  wire M04_AXI_wvalid;
  wire [31:0]S00_AXI_araddr;
  wire [0:0]S00_AXI_arready;
  wire [0:0]S00_AXI_arvalid;
  wire [0:0]S00_AXI_awready;
  wire [0:0]S00_AXI_awvalid;
  wire [0:0]S00_AXI_bvalid;
  wire [31:0]S00_AXI_rdata;
  wire [0:0]S00_AXI_rvalid;
  wire [31:0]S00_AXI_wdata;
  wire [0:0]S00_AXI_wready;
  wire [0:0]S00_AXI_wvalid;
  wire [159:0]NLW_xbar_m_axi_araddr_UNCONNECTED;
  wire [14:0]NLW_xbar_m_axi_arprot_UNCONNECTED;
  wire [159:0]NLW_xbar_m_axi_awaddr_UNCONNECTED;
  wire [14:0]NLW_xbar_m_axi_awprot_UNCONNECTED;
  wire [9:0]NLW_xbar_m_axi_bresp_UNCONNECTED;
  wire [31:8]NLW_xbar_m_axi_rdata_UNCONNECTED;
  wire [9:0]NLW_xbar_m_axi_rresp_UNCONNECTED;
  wire [127:8]NLW_xbar_m_axi_wdata_UNCONNECTED;
  wire [19:0]NLW_xbar_m_axi_wstrb_UNCONNECTED;
  wire [2:0]NLW_xbar_s_axi_arprot_UNCONNECTED;
  wire [31:0]NLW_xbar_s_axi_awaddr_UNCONNECTED;
  wire [2:0]NLW_xbar_s_axi_awprot_UNCONNECTED;
  wire [0:0]NLW_xbar_s_axi_bready_UNCONNECTED;
  wire [1:0]NLW_xbar_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_xbar_s_axi_rready_UNCONNECTED;
  wire [1:0]NLW_xbar_s_axi_rresp_UNCONNECTED;
  wire [3:0]NLW_xbar_s_axi_wstrb_UNCONNECTED;

  (* IMPORTED_FROM = "/home/xilinx/lpsc_mandelbrot_blazevic/Mandelbrot/ips/vivado/ublaze/2018.2/ublaze.srcs/sources_1/bd/ublaze_sopc/ip/ublaze_sopc_xbar_0/ublaze_sopc_xbar_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* syn_black_box = "TRUE" *) 
  (* x_core_info = "axi_crossbar_v2_1_18_axi_crossbar,Vivado 2018.2.2" *) 
  ublaze_sopc_xbar_0 xbar
       (.aclk(ACLK),
        .aresetn(ARESETN),
        .m_axi_araddr({NLW_xbar_m_axi_araddr_UNCONNECTED[159:140],M04_AXI_araddr[11:0],NLW_xbar_m_axi_araddr_UNCONNECTED[127:105],M03_AXI_araddr[8:2],NLW_xbar_m_axi_araddr_UNCONNECTED[97:69],M02_AXI_araddr[4:2],NLW_xbar_m_axi_araddr_UNCONNECTED[65:41],M01_AXI_araddr[8],NLW_xbar_m_axi_araddr_UNCONNECTED[39:36],M01_AXI_araddr[3:2],NLW_xbar_m_axi_araddr_UNCONNECTED[33:4],M00_AXI_araddr[3:2],NLW_xbar_m_axi_araddr_UNCONNECTED[1:0]}),
        .m_axi_arprot(NLW_xbar_m_axi_arprot_UNCONNECTED[14:0]),
        .m_axi_arready({M04_AXI_arready,M03_AXI_arready,M02_AXI_arready,M01_AXI_arready,M00_AXI_arready}),
        .m_axi_arvalid({M04_AXI_arvalid,M03_AXI_arvalid,M02_AXI_arvalid,M01_AXI_arvalid,M00_AXI_arvalid}),
        .m_axi_awaddr({NLW_xbar_m_axi_awaddr_UNCONNECTED[159:140],M04_AXI_awaddr[11:0],NLW_xbar_m_axi_awaddr_UNCONNECTED[127:0]}),
        .m_axi_awprot(NLW_xbar_m_axi_awprot_UNCONNECTED[14:0]),
        .m_axi_awready({M04_AXI_awready,M03_AXI_awready,M02_AXI_awready,M01_AXI_awready,M00_AXI_awready}),
        .m_axi_awvalid({M04_AXI_awvalid,M03_AXI_awvalid,M02_AXI_awvalid,M01_AXI_awvalid,M00_AXI_awvalid}),
        .m_axi_bready({M04_AXI_bready,M03_AXI_bready,M02_AXI_bready,M01_AXI_bready,M00_AXI_bready}),
        .m_axi_bresp(NLW_xbar_m_axi_bresp_UNCONNECTED[9:0]),
        .m_axi_bvalid({M04_AXI_bvalid,M03_AXI_bvalid,M02_AXI_bvalid,M01_AXI_bvalid,M00_AXI_bvalid}),
        .m_axi_rdata({M04_AXI_rdata,M03_AXI_rdata,M02_AXI_rdata,M01_AXI_rdata,NLW_xbar_m_axi_rdata_UNCONNECTED[31:8],M00_AXI_rdata[7:0]}),
        .m_axi_rready({M04_AXI_rready,M03_AXI_rready,M02_AXI_rready,M01_AXI_rready,M00_AXI_rready}),
        .m_axi_rresp(NLW_xbar_m_axi_rresp_UNCONNECTED[9:0]),
        .m_axi_rvalid({M04_AXI_rvalid,M03_AXI_rvalid,M02_AXI_rvalid,M01_AXI_rvalid,M00_AXI_rvalid}),
        .m_axi_wdata({M04_AXI_wdata,NLW_xbar_m_axi_wdata_UNCONNECTED[127:98],M03_AXI_wdata[1:0],M02_AXI_wdata,M01_AXI_wdata[31:24],NLW_xbar_m_axi_wdata_UNCONNECTED[55:40],M01_AXI_wdata[7:0],NLW_xbar_m_axi_wdata_UNCONNECTED[31:8],M00_AXI_wdata[7:0]}),
        .m_axi_wready({M04_AXI_wready,M03_AXI_wready,M02_AXI_wready,M01_AXI_wready,M00_AXI_wready}),
        .m_axi_wstrb(NLW_xbar_m_axi_wstrb_UNCONNECTED[19:0]),
        .m_axi_wvalid({M04_AXI_wvalid,M03_AXI_wvalid,M02_AXI_wvalid,M01_AXI_wvalid,M00_AXI_wvalid}),
        .s_axi_araddr(S00_AXI_araddr),
        .s_axi_arprot(NLW_xbar_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arready(S00_AXI_arready),
        .s_axi_arvalid(S00_AXI_arvalid),
        .s_axi_awaddr(NLW_xbar_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awprot(NLW_xbar_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awready(S00_AXI_awready),
        .s_axi_awvalid(S00_AXI_awvalid),
        .s_axi_bready(NLW_xbar_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bresp(NLW_xbar_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(S00_AXI_bvalid),
        .s_axi_rdata(S00_AXI_rdata),
        .s_axi_rready(NLW_xbar_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rresp(NLW_xbar_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(S00_AXI_rvalid),
        .s_axi_wdata(S00_AXI_wdata),
        .s_axi_wready(S00_AXI_wready),
        .s_axi_wstrb(NLW_xbar_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(S00_AXI_wvalid));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_axi_timer_0_0,axi_timer,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_timer,Vivado 2018.2.2" *) 
module ublaze_sopc_axi_timer_0_0
   (capturetrig0,
    capturetrig1,
    generateout0,
    generateout1,
    pwm0,
    interrupt,
    freeze,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready);
  input capturetrig0;
  input capturetrig1;
  output generateout0;
  output generateout1;
  output pwm0;
  (* x_interface_info = "xilinx.com:signal:interrupt:1.0 INTERRUPT INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME INTERRUPT, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) output interrupt;
  input freeze;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 S_AXI_ACLK CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXI_ACLK, ASSOCIATED_BUSIF S_AXI, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input s_axi_aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 S_AXI_RST RST" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXI_RST, POLARITY ACTIVE_LOW" *) input s_axi_aresetn;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 5, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) input [4:0]s_axi_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [4:0]s_axi_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;

  wire capturetrig0;
  wire capturetrig1;
  wire freeze;
  wire interrupt;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire NLW_U0_generateout0_UNCONNECTED;
  wire NLW_U0_generateout1_UNCONNECTED;
  wire NLW_U0_pwm0_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [4:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_COUNT_WIDTH = "32" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_GEN0_ASSERT = "1'b1" *) 
  (* C_GEN1_ASSERT = "1'b1" *) 
  (* C_ONE_TIMER_ONLY = "0" *) 
  (* C_S_AXI_ADDR_WIDTH = "5" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_TRIG0_ASSERT = "1'b1" *) 
  (* C_TRIG1_ASSERT = "1'b1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  ublaze_sopc_axi_timer_0_0__axi_timer U0
       (.capturetrig0(capturetrig0),
        .capturetrig1(capturetrig1),
        .freeze(freeze),
        .generateout0(NLW_U0_generateout0_UNCONNECTED),
        .generateout1(NLW_U0_generateout1_UNCONNECTED),
        .interrupt(interrupt),
        .pwm0(NLW_U0_pwm0_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[4:2],NLW_U0_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[4:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "address_decoder" *) 
module ublaze_sopc_axi_timer_0_0__address_decoder
   (\TCSR1_GENERATE[24].TCSR1_FF_I ,
    READ_DONE0_I,
    \TCSR1_GENERATE[24].TCSR1_FF_I_0 ,
    \TCSR1_GENERATE[24].TCSR1_FF_I_1 ,
    s_axi_wready,
    s_axi_arready,
    D,
    \FSM_onehot_state_reg[3] ,
    pair0_Select,
    \LOAD_REG_GEN[7].LOAD_REG_I ,
    bus2ip_wrce,
    \LOAD_REG_GEN[31].LOAD_REG_I ,
    \LOAD_REG_GEN[30].LOAD_REG_I ,
    \LOAD_REG_GEN[29].LOAD_REG_I ,
    \LOAD_REG_GEN[28].LOAD_REG_I ,
    \LOAD_REG_GEN[27].LOAD_REG_I ,
    \LOAD_REG_GEN[26].LOAD_REG_I ,
    \LOAD_REG_GEN[25].LOAD_REG_I ,
    \LOAD_REG_GEN[24].LOAD_REG_I ,
    \LOAD_REG_GEN[23].LOAD_REG_I ,
    \LOAD_REG_GEN[22].LOAD_REG_I ,
    \LOAD_REG_GEN[21].LOAD_REG_I ,
    \LOAD_REG_GEN[20].LOAD_REG_I ,
    \LOAD_REG_GEN[19].LOAD_REG_I ,
    \LOAD_REG_GEN[18].LOAD_REG_I ,
    \LOAD_REG_GEN[17].LOAD_REG_I ,
    \LOAD_REG_GEN[16].LOAD_REG_I ,
    \LOAD_REG_GEN[15].LOAD_REG_I ,
    \LOAD_REG_GEN[14].LOAD_REG_I ,
    \LOAD_REG_GEN[13].LOAD_REG_I ,
    \LOAD_REG_GEN[12].LOAD_REG_I ,
    \LOAD_REG_GEN[11].LOAD_REG_I ,
    \LOAD_REG_GEN[10].LOAD_REG_I ,
    \LOAD_REG_GEN[9].LOAD_REG_I ,
    \LOAD_REG_GEN[8].LOAD_REG_I ,
    \LOAD_REG_GEN[7].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[6].LOAD_REG_I ,
    \LOAD_REG_GEN[5].LOAD_REG_I ,
    \LOAD_REG_GEN[4].LOAD_REG_I ,
    \LOAD_REG_GEN[3].LOAD_REG_I ,
    \LOAD_REG_GEN[2].LOAD_REG_I ,
    \LOAD_REG_GEN[1].LOAD_REG_I ,
    D_0,
    \LOAD_REG_GEN[31].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[30].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[29].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[28].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[27].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[26].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[25].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[24].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[23].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[22].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[21].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[20].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[19].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[18].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[17].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[16].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[15].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[14].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[13].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[12].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[11].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[10].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[9].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[8].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[7].LOAD_REG_I_1 ,
    \LOAD_REG_GEN[6].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[5].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[4].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[3].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[2].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[1].LOAD_REG_I_0 ,
    D_1,
    s_axi_rvalid_i_reg,
    s_axi_rvalid_i_reg_0,
    s_axi_rvalid_i_reg_1,
    \s_axi_rdata_i_reg[0] ,
    \s_axi_rdata_i_reg[31] ,
    \s_axi_rdata_i_reg[30] ,
    \s_axi_rdata_i_reg[29] ,
    \s_axi_rdata_i_reg[28] ,
    \s_axi_rdata_i_reg[27] ,
    \s_axi_rdata_i_reg[26] ,
    \s_axi_rdata_i_reg[25] ,
    \s_axi_rdata_i_reg[24] ,
    \s_axi_rdata_i_reg[23] ,
    \s_axi_rdata_i_reg[22] ,
    \s_axi_rdata_i_reg[21] ,
    \s_axi_rdata_i_reg[20] ,
    \s_axi_rdata_i_reg[19] ,
    \s_axi_rdata_i_reg[18] ,
    \s_axi_rdata_i_reg[17] ,
    \s_axi_rdata_i_reg[16] ,
    \s_axi_rdata_i_reg[15] ,
    \s_axi_rdata_i_reg[14] ,
    \s_axi_rdata_i_reg[13] ,
    \s_axi_rdata_i_reg[12] ,
    \s_axi_rdata_i_reg[11] ,
    \s_axi_rdata_i_reg[0]_0 ,
    \s_axi_rdata_i_reg[0]_1 ,
    s_axi_rvalid_i_reg_2,
    s_axi_bvalid_i_reg,
    READ_DONE0_I_0,
    READ_DONE1_I,
    \TCSR0_GENERATE[23].TCSR0_FF_I ,
    \TCSR1_GENERATE[23].TCSR1_FF_I ,
    Q,
    s_axi_aclk,
    s_axi_aresetn,
    \state_reg[1] ,
    s_axi_arvalid,
    s_axi_rvalid_i_reg_3,
    out,
    s_axi_wvalid,
    s_axi_awvalid,
    is_write_reg,
    s_axi_wdata,
    read_Mux_In,
    s_axi_awvalid_0,
    is_read_reg,
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] ,
    s_axi_rready,
    s_axi_rvalid_i_reg_4,
    s_axi_bready,
    s_axi_bvalid_i_reg_0,
    D_2,
    read_done1,
    bus2ip_rnw_i,
    \bus2ip_addr_i_reg[4] );
  output \TCSR1_GENERATE[24].TCSR1_FF_I ;
  output READ_DONE0_I;
  output \TCSR1_GENERATE[24].TCSR1_FF_I_0 ;
  output \TCSR1_GENERATE[24].TCSR1_FF_I_1 ;
  output s_axi_wready;
  output s_axi_arready;
  output [1:0]D;
  output [2:0]\FSM_onehot_state_reg[3] ;
  output pair0_Select;
  output \LOAD_REG_GEN[7].LOAD_REG_I ;
  output [1:0]bus2ip_wrce;
  output \LOAD_REG_GEN[31].LOAD_REG_I ;
  output \LOAD_REG_GEN[30].LOAD_REG_I ;
  output \LOAD_REG_GEN[29].LOAD_REG_I ;
  output \LOAD_REG_GEN[28].LOAD_REG_I ;
  output \LOAD_REG_GEN[27].LOAD_REG_I ;
  output \LOAD_REG_GEN[26].LOAD_REG_I ;
  output \LOAD_REG_GEN[25].LOAD_REG_I ;
  output \LOAD_REG_GEN[24].LOAD_REG_I ;
  output \LOAD_REG_GEN[23].LOAD_REG_I ;
  output \LOAD_REG_GEN[22].LOAD_REG_I ;
  output \LOAD_REG_GEN[21].LOAD_REG_I ;
  output \LOAD_REG_GEN[20].LOAD_REG_I ;
  output \LOAD_REG_GEN[19].LOAD_REG_I ;
  output \LOAD_REG_GEN[18].LOAD_REG_I ;
  output \LOAD_REG_GEN[17].LOAD_REG_I ;
  output \LOAD_REG_GEN[16].LOAD_REG_I ;
  output \LOAD_REG_GEN[15].LOAD_REG_I ;
  output \LOAD_REG_GEN[14].LOAD_REG_I ;
  output \LOAD_REG_GEN[13].LOAD_REG_I ;
  output \LOAD_REG_GEN[12].LOAD_REG_I ;
  output \LOAD_REG_GEN[11].LOAD_REG_I ;
  output \LOAD_REG_GEN[10].LOAD_REG_I ;
  output \LOAD_REG_GEN[9].LOAD_REG_I ;
  output \LOAD_REG_GEN[8].LOAD_REG_I ;
  output \LOAD_REG_GEN[7].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[6].LOAD_REG_I ;
  output \LOAD_REG_GEN[5].LOAD_REG_I ;
  output \LOAD_REG_GEN[4].LOAD_REG_I ;
  output \LOAD_REG_GEN[3].LOAD_REG_I ;
  output \LOAD_REG_GEN[2].LOAD_REG_I ;
  output \LOAD_REG_GEN[1].LOAD_REG_I ;
  output D_0;
  output \LOAD_REG_GEN[31].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[30].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[29].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[28].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[27].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[26].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[25].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[24].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[23].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[22].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[21].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[20].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[19].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[18].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[17].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[16].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[15].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[14].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[13].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[12].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[11].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[10].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[9].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[8].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[7].LOAD_REG_I_1 ;
  output \LOAD_REG_GEN[6].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[5].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[4].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[3].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[2].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[1].LOAD_REG_I_0 ;
  output D_1;
  output s_axi_rvalid_i_reg;
  output s_axi_rvalid_i_reg_0;
  output s_axi_rvalid_i_reg_1;
  output \s_axi_rdata_i_reg[0] ;
  output \s_axi_rdata_i_reg[31] ;
  output \s_axi_rdata_i_reg[30] ;
  output \s_axi_rdata_i_reg[29] ;
  output \s_axi_rdata_i_reg[28] ;
  output \s_axi_rdata_i_reg[27] ;
  output \s_axi_rdata_i_reg[26] ;
  output \s_axi_rdata_i_reg[25] ;
  output \s_axi_rdata_i_reg[24] ;
  output \s_axi_rdata_i_reg[23] ;
  output \s_axi_rdata_i_reg[22] ;
  output \s_axi_rdata_i_reg[21] ;
  output \s_axi_rdata_i_reg[20] ;
  output \s_axi_rdata_i_reg[19] ;
  output \s_axi_rdata_i_reg[18] ;
  output \s_axi_rdata_i_reg[17] ;
  output \s_axi_rdata_i_reg[16] ;
  output \s_axi_rdata_i_reg[15] ;
  output \s_axi_rdata_i_reg[14] ;
  output \s_axi_rdata_i_reg[13] ;
  output \s_axi_rdata_i_reg[12] ;
  output \s_axi_rdata_i_reg[11] ;
  output \s_axi_rdata_i_reg[0]_0 ;
  output \s_axi_rdata_i_reg[0]_1 ;
  output s_axi_rvalid_i_reg_2;
  output s_axi_bvalid_i_reg;
  output READ_DONE0_I_0;
  output READ_DONE1_I;
  output \TCSR0_GENERATE[23].TCSR0_FF_I ;
  output \TCSR1_GENERATE[23].TCSR1_FF_I ;
  input Q;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [1:0]\state_reg[1] ;
  input s_axi_arvalid;
  input s_axi_rvalid_i_reg_3;
  input [3:0]out;
  input s_axi_wvalid;
  input s_axi_awvalid;
  input is_write_reg;
  input [31:0]s_axi_wdata;
  input [85:0]read_Mux_In;
  input s_axi_awvalid_0;
  input is_read_reg;
  input [5:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] ;
  input s_axi_rready;
  input s_axi_rvalid_i_reg_4;
  input s_axi_bready;
  input s_axi_bvalid_i_reg_0;
  input D_2;
  input read_done1;
  input bus2ip_rnw_i;
  input [2:0]\bus2ip_addr_i_reg[4] ;

  wire Bus_RNW_reg_i_1_n_0;
  wire [1:0]D;
  wire D_0;
  wire D_1;
  wire D_2;
  wire [2:0]\FSM_onehot_state_reg[3] ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[6].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg ;
  wire [5:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] ;
  wire \LOAD_REG_GEN[10].LOAD_REG_I ;
  wire \LOAD_REG_GEN[10].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[11].LOAD_REG_I ;
  wire \LOAD_REG_GEN[11].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[12].LOAD_REG_I ;
  wire \LOAD_REG_GEN[12].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[13].LOAD_REG_I ;
  wire \LOAD_REG_GEN[13].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[14].LOAD_REG_I ;
  wire \LOAD_REG_GEN[14].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[15].LOAD_REG_I ;
  wire \LOAD_REG_GEN[15].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[16].LOAD_REG_I ;
  wire \LOAD_REG_GEN[16].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[17].LOAD_REG_I ;
  wire \LOAD_REG_GEN[17].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[18].LOAD_REG_I ;
  wire \LOAD_REG_GEN[18].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[19].LOAD_REG_I ;
  wire \LOAD_REG_GEN[19].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[1].LOAD_REG_I ;
  wire \LOAD_REG_GEN[1].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[21].LOAD_REG_I ;
  wire \LOAD_REG_GEN[21].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[22].LOAD_REG_I ;
  wire \LOAD_REG_GEN[22].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[23].LOAD_REG_I ;
  wire \LOAD_REG_GEN[23].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[24].LOAD_REG_I ;
  wire \LOAD_REG_GEN[24].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[25].LOAD_REG_I ;
  wire \LOAD_REG_GEN[25].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[26].LOAD_REG_I ;
  wire \LOAD_REG_GEN[26].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[27].LOAD_REG_I ;
  wire \LOAD_REG_GEN[27].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[28].LOAD_REG_I ;
  wire \LOAD_REG_GEN[28].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[29].LOAD_REG_I ;
  wire \LOAD_REG_GEN[29].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[2].LOAD_REG_I ;
  wire \LOAD_REG_GEN[2].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[30].LOAD_REG_I ;
  wire \LOAD_REG_GEN[30].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[31].LOAD_REG_I ;
  wire \LOAD_REG_GEN[31].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[3].LOAD_REG_I ;
  wire \LOAD_REG_GEN[3].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[4].LOAD_REG_I ;
  wire \LOAD_REG_GEN[4].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[5].LOAD_REG_I ;
  wire \LOAD_REG_GEN[5].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[6].LOAD_REG_I ;
  wire \LOAD_REG_GEN[6].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I_1 ;
  wire \LOAD_REG_GEN[8].LOAD_REG_I ;
  wire \LOAD_REG_GEN[8].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[9].LOAD_REG_I ;
  wire \LOAD_REG_GEN[9].LOAD_REG_I_0 ;
  wire Q;
  wire READ_DONE0_I;
  wire READ_DONE0_I_0;
  wire READ_DONE1_I;
  wire \TCSR0_GENERATE[23].TCSR0_FF_I ;
  wire \TCSR1_GENERATE[23].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[24].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[24].TCSR1_FF_I_0 ;
  wire \TCSR1_GENERATE[24].TCSR1_FF_I_1 ;
  wire [2:0]\bus2ip_addr_i_reg[4] ;
  wire bus2ip_rnw_i;
  wire [1:0]bus2ip_wrce;
  wire ce_expnd_i_0;
  wire ce_expnd_i_1;
  wire ce_expnd_i_2;
  wire ce_expnd_i_3;
  wire ce_expnd_i_5;
  wire ce_expnd_i_6;
  wire ce_expnd_i_7;
  wire cs_ce_clr;
  wire is_read_reg;
  wire is_write_reg;
  wire [3:0]out;
  wire pair0_Select;
  wire [85:0]read_Mux_In;
  wire read_done1;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arready_INST_0_i_1_n_0;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_awvalid_0;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire s_axi_bvalid_i_reg_0;
  wire \s_axi_rdata_i_reg[0] ;
  wire \s_axi_rdata_i_reg[0]_0 ;
  wire \s_axi_rdata_i_reg[0]_1 ;
  wire \s_axi_rdata_i_reg[11] ;
  wire \s_axi_rdata_i_reg[12] ;
  wire \s_axi_rdata_i_reg[13] ;
  wire \s_axi_rdata_i_reg[14] ;
  wire \s_axi_rdata_i_reg[15] ;
  wire \s_axi_rdata_i_reg[16] ;
  wire \s_axi_rdata_i_reg[17] ;
  wire \s_axi_rdata_i_reg[18] ;
  wire \s_axi_rdata_i_reg[19] ;
  wire \s_axi_rdata_i_reg[20] ;
  wire \s_axi_rdata_i_reg[21] ;
  wire \s_axi_rdata_i_reg[22] ;
  wire \s_axi_rdata_i_reg[23] ;
  wire \s_axi_rdata_i_reg[24] ;
  wire \s_axi_rdata_i_reg[25] ;
  wire \s_axi_rdata_i_reg[26] ;
  wire \s_axi_rdata_i_reg[27] ;
  wire \s_axi_rdata_i_reg[28] ;
  wire \s_axi_rdata_i_reg[29] ;
  wire \s_axi_rdata_i_reg[30] ;
  wire \s_axi_rdata_i_reg[31] ;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire s_axi_rvalid_i_reg_0;
  wire s_axi_rvalid_i_reg_1;
  wire s_axi_rvalid_i_reg_2;
  wire s_axi_rvalid_i_reg_3;
  wire s_axi_rvalid_i_reg_4;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wready_INST_0_i_1_n_0;
  wire s_axi_wready_INST_0_i_4_n_0;
  wire s_axi_wready_INST_0_i_5_n_0;
  wire s_axi_wvalid;
  wire [1:0]\state_reg[1] ;

  (* \PinAttr:I2:HOLD_DETOUR  = "178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(bus2ip_rnw_i),
        .I1(Q),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(out[0]),
        .I1(s_axi_arvalid),
        .I2(s_axi_arready),
        .I3(out[1]),
        .O(\FSM_onehot_state_reg[3] [0]));
  LUT6 #(
    .INIT(64'h4000FFFF40004000)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(s_axi_arvalid),
        .I1(out[0]),
        .I2(s_axi_wvalid),
        .I3(s_axi_awvalid),
        .I4(s_axi_wready),
        .I5(out[2]),
        .O(\FSM_onehot_state_reg[3] [1]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(s_axi_wready),
        .I1(out[2]),
        .I2(out[3]),
        .I3(s_axi_rvalid_i_reg_3),
        .I4(out[1]),
        .I5(s_axi_arready),
        .O(\FSM_onehot_state_reg[3] [2]));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[84]),
        .O(\s_axi_rdata_i_reg[31] ));
  LUT2 #(
    .INIT(4'h7)) 
    \GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_2 
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\s_axi_rdata_i_reg[0] ));
  LUT2 #(
    .INIT(4'h7)) 
    \GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_3 
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I1(\GEN_BKEND_CE_REGISTERS[6].ce_out_i_reg ),
        .O(\s_axi_rdata_i_reg[0]_1 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[74]),
        .O(\s_axi_rdata_i_reg[21] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[73]),
        .O(\s_axi_rdata_i_reg[20] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[72]),
        .O(\s_axi_rdata_i_reg[19] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[71]),
        .O(\s_axi_rdata_i_reg[18] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[70]),
        .O(\s_axi_rdata_i_reg[17] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[69]),
        .O(\s_axi_rdata_i_reg[16] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[68]),
        .O(\s_axi_rdata_i_reg[15] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[67]),
        .O(\s_axi_rdata_i_reg[14] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[66]),
        .O(\s_axi_rdata_i_reg[13] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[65]),
        .O(\s_axi_rdata_i_reg[12] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[83]),
        .O(\s_axi_rdata_i_reg[30] ));
  LUT5 #(
    .INIT(32'h0F7F7F7F)) 
    \GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[64]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(\TCSR1_GENERATE[24].TCSR1_FF_I_0 ),
        .I4(read_Mux_In[85]),
        .O(\s_axi_rdata_i_reg[11] ));
  LUT2 #(
    .INIT(4'h7)) 
    \GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_2 
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I1(READ_DONE0_I),
        .O(\s_axi_rdata_i_reg[0]_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[82]),
        .O(\s_axi_rdata_i_reg[29] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[81]),
        .O(\s_axi_rdata_i_reg[28] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[80]),
        .O(\s_axi_rdata_i_reg[27] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[79]),
        .O(\s_axi_rdata_i_reg[26] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[78]),
        .O(\s_axi_rdata_i_reg[25] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[77]),
        .O(\s_axi_rdata_i_reg[24] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[76]),
        .O(\s_axi_rdata_i_reg[23] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(read_Mux_In[75]),
        .O(\s_axi_rdata_i_reg[22] ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_7),
        .Q(\TCSR1_GENERATE[24].TCSR1_FF_I_0 ),
        .R(cs_ce_clr));
  LUT3 #(
    .INIT(8'h10)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i[1]_i_1 
       (.I0(\bus2ip_addr_i_reg[4] [2]),
        .I1(\bus2ip_addr_i_reg[4] [1]),
        .I2(\bus2ip_addr_i_reg[4] [0]),
        .O(ce_expnd_i_6));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_6),
        .Q(READ_DONE0_I),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_5),
        .Q(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_3),
        .Q(\TCSR1_GENERATE[24].TCSR1_FF_I ),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_2),
        .Q(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[6].ce_out_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_1),
        .Q(\GEN_BKEND_CE_REGISTERS[6].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT3 #(
    .INIT(8'hFB)) 
    \GEN_BKEND_CE_REGISTERS[7].ce_out_i[7]_i_1 
       (.I0(s_axi_wready),
        .I1(s_axi_aresetn),
        .I2(s_axi_arready),
        .O(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_0),
        .Q(\GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_2 
       (.I0(s_axi_wdata[31]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[63]),
        .O(D_0));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_2__0 
       (.I0(s_axi_wdata[31]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[31]),
        .O(D_1));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[10].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[21]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[53]),
        .O(\LOAD_REG_GEN[10].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[10].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[21]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[21]),
        .O(\LOAD_REG_GEN[10].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[11].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[20]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[52]),
        .O(\LOAD_REG_GEN[11].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[11].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[20]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[20]),
        .O(\LOAD_REG_GEN[11].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[12].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[19]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[51]),
        .O(\LOAD_REG_GEN[12].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[12].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[19]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[19]),
        .O(\LOAD_REG_GEN[12].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[13].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[18]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[50]),
        .O(\LOAD_REG_GEN[13].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[13].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[18]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[18]),
        .O(\LOAD_REG_GEN[13].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[14].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[17]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[49]),
        .O(\LOAD_REG_GEN[14].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[14].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[17]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[17]),
        .O(\LOAD_REG_GEN[14].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[15].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[16]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[48]),
        .O(\LOAD_REG_GEN[15].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[15].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[16]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[16]),
        .O(\LOAD_REG_GEN[15].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[16].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[15]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[47]),
        .O(\LOAD_REG_GEN[16].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[16].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[15]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[15]),
        .O(\LOAD_REG_GEN[16].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[17].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[14]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[46]),
        .O(\LOAD_REG_GEN[17].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[17].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[14]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[14]),
        .O(\LOAD_REG_GEN[17].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[18].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[13]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[45]),
        .O(\LOAD_REG_GEN[18].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[18].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[13]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[13]),
        .O(\LOAD_REG_GEN[18].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[19].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[12]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[44]),
        .O(\LOAD_REG_GEN[19].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[19].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[12]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[12]),
        .O(\LOAD_REG_GEN[19].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[1].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[30]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[62]),
        .O(\LOAD_REG_GEN[1].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[1].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[30]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[30]),
        .O(\LOAD_REG_GEN[1].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[20].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[11]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[43]),
        .O(\LOAD_REG_GEN[20].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[20].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[11]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[11]),
        .O(\LOAD_REG_GEN[20].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[21].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[10]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[42]),
        .O(\LOAD_REG_GEN[21].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[21].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[10]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[10]),
        .O(\LOAD_REG_GEN[21].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[22].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[9]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[41]),
        .O(\LOAD_REG_GEN[22].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[22].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[9]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[9]),
        .O(\LOAD_REG_GEN[22].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[23].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[8]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[40]),
        .O(\LOAD_REG_GEN[23].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[23].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[8]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[8]),
        .O(\LOAD_REG_GEN[23].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[24].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[7]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[39]),
        .O(\LOAD_REG_GEN[24].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[24].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[7]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[7]),
        .O(\LOAD_REG_GEN[24].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[25].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[6]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[38]),
        .O(\LOAD_REG_GEN[25].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[25].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[6]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[6]),
        .O(\LOAD_REG_GEN[25].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[26].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[37]),
        .O(\LOAD_REG_GEN[26].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[26].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[5]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[5]),
        .O(\LOAD_REG_GEN[26].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[27].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[36]),
        .O(\LOAD_REG_GEN[27].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[27].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[4]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[4]),
        .O(\LOAD_REG_GEN[27].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[28].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[3]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[35]),
        .O(\LOAD_REG_GEN[28].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[28].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[3]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[3]),
        .O(\LOAD_REG_GEN[28].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[29].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[2]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[34]),
        .O(\LOAD_REG_GEN[29].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[29].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[2]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[2]),
        .O(\LOAD_REG_GEN[29].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[2].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[29]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[61]),
        .O(\LOAD_REG_GEN[2].LOAD_REG_I ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[2].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[29]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[29]),
        .O(\LOAD_REG_GEN[2].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[30].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[33]),
        .O(\LOAD_REG_GEN[30].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[30].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[1]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[1]),
        .O(\LOAD_REG_GEN[30].LOAD_REG_I_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[31].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[32]),
        .O(\LOAD_REG_GEN[31].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[31].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[0]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[0]),
        .O(\LOAD_REG_GEN[31].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[3].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[28]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[60]),
        .O(\LOAD_REG_GEN[3].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[3].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[28]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[28]),
        .O(\LOAD_REG_GEN[3].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[4].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[27]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[59]),
        .O(\LOAD_REG_GEN[4].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[4].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[27]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[27]),
        .O(\LOAD_REG_GEN[4].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[5].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[26]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[58]),
        .O(\LOAD_REG_GEN[5].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[5].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[26]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[26]),
        .O(\LOAD_REG_GEN[5].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[6].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[25]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[57]),
        .O(\LOAD_REG_GEN[6].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[6].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[25]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[25]),
        .O(\LOAD_REG_GEN[6].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[7].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[24]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[56]),
        .O(\LOAD_REG_GEN[7].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[7].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[24]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[24]),
        .O(\LOAD_REG_GEN[7].LOAD_REG_I_1 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[8].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[23]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[55]),
        .O(\LOAD_REG_GEN[8].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[8].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[23]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[23]),
        .O(\LOAD_REG_GEN[8].LOAD_REG_I_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[9].LOAD_REG_I_i_1 
       (.I0(s_axi_wdata[22]),
        .I1(READ_DONE0_I),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[54]),
        .O(\LOAD_REG_GEN[9].LOAD_REG_I ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \LOAD_REG_GEN[9].LOAD_REG_I_i_1__0 
       (.I0(s_axi_wdata[22]),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(read_Mux_In[22]),
        .O(\LOAD_REG_GEN[9].LOAD_REG_I_0 ));
  ublaze_sopc_axi_timer_0_0__pselect_f \MEM_DECODE_GEN[0].PER_CE_GEN[0].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[4] (\bus2ip_addr_i_reg[4] ),
        .ce_expnd_i_7(ce_expnd_i_7));
  ublaze_sopc_axi_timer_0_0__pselect_f__parameterized1 \MEM_DECODE_GEN[0].PER_CE_GEN[2].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[4] (\bus2ip_addr_i_reg[4] ),
        .ce_expnd_i_5(ce_expnd_i_5));
  ublaze_sopc_axi_timer_0_0__pselect_f__parameterized3 \MEM_DECODE_GEN[0].PER_CE_GEN[4].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[4] (\bus2ip_addr_i_reg[4] ),
        .ce_expnd_i_3(ce_expnd_i_3));
  ublaze_sopc_axi_timer_0_0__pselect_f__parameterized4 \MEM_DECODE_GEN[0].PER_CE_GEN[5].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[4] (\bus2ip_addr_i_reg[4] ),
        .ce_expnd_i_2(ce_expnd_i_2));
  ublaze_sopc_axi_timer_0_0__pselect_f__parameterized5 \MEM_DECODE_GEN[0].PER_CE_GEN[6].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[4] (\bus2ip_addr_i_reg[4] ),
        .ce_expnd_i_1(ce_expnd_i_1));
  ublaze_sopc_axi_timer_0_0__pselect_f__parameterized6 \MEM_DECODE_GEN[0].PER_CE_GEN[7].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[4] (\bus2ip_addr_i_reg[4] ),
        .ce_expnd_i_0(ce_expnd_i_0));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'hE)) 
    READ_DONE0_I_i_2
       (.I0(READ_DONE0_I),
        .I1(D_2),
        .O(READ_DONE0_I_0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'hE)) 
    READ_DONE1_I_i_2
       (.I0(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I1(read_done1),
        .O(READ_DONE1_I));
  LUT2 #(
    .INIT(4'h2)) 
    \TCSR0_GENERATE[20].TCSR0_FF_I_i_1 
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_0 ),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .O(bus2ip_wrce[1]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \TCSR0_GENERATE[23].TCSR0_FF_I_i_1 
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_0 ),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(s_axi_wdata[8]),
        .I3(s_axi_aresetn),
        .O(\TCSR0_GENERATE[23].TCSR0_FF_I ));
  LUT2 #(
    .INIT(4'h2)) 
    \TCSR1_GENERATE[22].TCSR1_FF_I_i_1 
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I ),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .O(bus2ip_wrce[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \TCSR1_GENERATE[23].TCSR1_FF_I_i_1 
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I ),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(s_axi_wdata[8]),
        .I3(s_axi_aresetn),
        .O(\TCSR1_GENERATE[23].TCSR1_FF_I ));
  LUT6 #(
    .INIT(64'hF4FFFFFFFFFFFFFF)) 
    s_axi_arready_INST_0
       (.I0(s_axi_wready_INST_0_i_1_n_0),
        .I1(is_read_reg),
        .I2(s_axi_arready_INST_0_i_1_n_0),
        .I3(s_axi_rvalid_i_reg),
        .I4(s_axi_rvalid_i_reg_0),
        .I5(s_axi_rvalid_i_reg_1),
        .O(s_axi_arready));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    s_axi_arready_INST_0_i_1
       (.I0(\GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[6].ce_out_i_reg ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(READ_DONE0_I),
        .O(s_axi_arready_INST_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    s_axi_arready_INST_0_i_2
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I1(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .O(s_axi_rvalid_i_reg));
  LUT2 #(
    .INIT(4'h7)) 
    s_axi_arready_INST_0_i_3
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I ),
        .O(s_axi_rvalid_i_reg_0));
  LUT2 #(
    .INIT(4'h7)) 
    s_axi_arready_INST_0_i_4
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_0 ),
        .O(s_axi_rvalid_i_reg_1));
  LUT5 #(
    .INIT(32'h75553000)) 
    s_axi_bvalid_i_i_1
       (.I0(s_axi_bready),
        .I1(\state_reg[1] [0]),
        .I2(\state_reg[1] [1]),
        .I3(s_axi_wready),
        .I4(s_axi_bvalid_i_reg_0),
        .O(s_axi_bvalid_i_reg));
  LUT5 #(
    .INIT(32'h75553000)) 
    s_axi_rvalid_i_i_1
       (.I0(s_axi_rready),
        .I1(\state_reg[1] [1]),
        .I2(\state_reg[1] [0]),
        .I3(s_axi_arready),
        .I4(s_axi_rvalid_i_reg_4),
        .O(s_axi_rvalid_i_reg_2));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    s_axi_wready_INST_0
       (.I0(s_axi_wready_INST_0_i_1_n_0),
        .I1(is_write_reg),
        .I2(pair0_Select),
        .I3(\LOAD_REG_GEN[7].LOAD_REG_I ),
        .I4(s_axi_wready_INST_0_i_4_n_0),
        .I5(s_axi_wready_INST_0_i_5_n_0),
        .O(s_axi_wready));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    s_axi_wready_INST_0_i_1
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] [1]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] [5]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] [3]),
        .I5(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] [4]),
        .O(s_axi_wready_INST_0_i_1_n_0));
  (* \PinAttr:I1:HOLD_DETOUR  = "178" *) 
  LUT3 #(
    .INIT(8'h32)) 
    s_axi_wready_INST_0_i_2
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_0 ),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I2(\TCSR1_GENERATE[24].TCSR1_FF_I ),
        .O(pair0_Select));
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0_i_3
       (.I0(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg ),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .O(\LOAD_REG_GEN[7].LOAD_REG_I ));
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0_i_4
       (.I0(READ_DONE0_I),
        .I1(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .O(s_axi_wready_INST_0_i_4_n_0));
  LUT4 #(
    .INIT(16'h5554)) 
    s_axi_wready_INST_0_i_5
       (.I0(\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I2(\GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg ),
        .I3(\GEN_BKEND_CE_REGISTERS[6].ce_out_i_reg ),
        .O(s_axi_wready_INST_0_i_5_n_0));
  LUT5 #(
    .INIT(32'hFBF83B38)) 
    \state[0]_i_1 
       (.I0(s_axi_wready),
        .I1(\state_reg[1] [1]),
        .I2(\state_reg[1] [0]),
        .I3(s_axi_arvalid),
        .I4(s_axi_rvalid_i_reg_3),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hEECFEECC22CF22CC)) 
    \state[1]_i_1 
       (.I0(s_axi_arready),
        .I1(\state_reg[1] [1]),
        .I2(s_axi_arvalid),
        .I3(\state_reg[1] [0]),
        .I4(s_axi_awvalid_0),
        .I5(s_axi_rvalid_i_reg_3),
        .O(D[1]));
endmodule

(* ORIG_REF_NAME = "axi_lite_ipif" *) 
module ublaze_sopc_axi_timer_0_0__axi_lite_ipif
   (\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    s_axi_rvalid,
    s_axi_bvalid,
    s_axi_wready,
    s_axi_arready,
    pair0_Select,
    \LOAD_REG_GEN[7].LOAD_REG_I ,
    bus2ip_wrce,
    \LOAD_REG_GEN[31].LOAD_REG_I ,
    \LOAD_REG_GEN[30].LOAD_REG_I ,
    \LOAD_REG_GEN[29].LOAD_REG_I ,
    \LOAD_REG_GEN[28].LOAD_REG_I ,
    \LOAD_REG_GEN[27].LOAD_REG_I ,
    \LOAD_REG_GEN[26].LOAD_REG_I ,
    \LOAD_REG_GEN[25].LOAD_REG_I ,
    \LOAD_REG_GEN[24].LOAD_REG_I ,
    \LOAD_REG_GEN[23].LOAD_REG_I ,
    \LOAD_REG_GEN[22].LOAD_REG_I ,
    \LOAD_REG_GEN[21].LOAD_REG_I ,
    \LOAD_REG_GEN[20].LOAD_REG_I ,
    \LOAD_REG_GEN[19].LOAD_REG_I ,
    \LOAD_REG_GEN[18].LOAD_REG_I ,
    \LOAD_REG_GEN[17].LOAD_REG_I ,
    \LOAD_REG_GEN[16].LOAD_REG_I ,
    \LOAD_REG_GEN[15].LOAD_REG_I ,
    \LOAD_REG_GEN[14].LOAD_REG_I ,
    \LOAD_REG_GEN[13].LOAD_REG_I ,
    \LOAD_REG_GEN[12].LOAD_REG_I ,
    \LOAD_REG_GEN[11].LOAD_REG_I ,
    \LOAD_REG_GEN[10].LOAD_REG_I ,
    \LOAD_REG_GEN[9].LOAD_REG_I ,
    \LOAD_REG_GEN[8].LOAD_REG_I ,
    \LOAD_REG_GEN[7].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[6].LOAD_REG_I ,
    \LOAD_REG_GEN[5].LOAD_REG_I ,
    \LOAD_REG_GEN[4].LOAD_REG_I ,
    \LOAD_REG_GEN[3].LOAD_REG_I ,
    \LOAD_REG_GEN[2].LOAD_REG_I ,
    \LOAD_REG_GEN[1].LOAD_REG_I ,
    D_0,
    \LOAD_REG_GEN[31].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[30].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[29].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[28].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[27].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[26].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[25].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[24].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[23].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[22].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[21].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[20].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[19].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[18].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[17].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[16].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[15].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[14].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[13].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[12].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[11].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[10].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[9].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[8].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[7].LOAD_REG_I_1 ,
    \LOAD_REG_GEN[6].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[5].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[4].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[3].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[2].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[1].LOAD_REG_I_0 ,
    D_1,
    s_axi_rvalid_i_reg,
    s_axi_rvalid_i_reg_0,
    s_axi_rvalid_i_reg_1,
    \s_axi_rdata_i_reg[0] ,
    \s_axi_rdata_i_reg[31] ,
    \s_axi_rdata_i_reg[30] ,
    \s_axi_rdata_i_reg[29] ,
    \s_axi_rdata_i_reg[28] ,
    \s_axi_rdata_i_reg[27] ,
    \s_axi_rdata_i_reg[26] ,
    \s_axi_rdata_i_reg[25] ,
    \s_axi_rdata_i_reg[24] ,
    \s_axi_rdata_i_reg[23] ,
    \s_axi_rdata_i_reg[22] ,
    \s_axi_rdata_i_reg[21] ,
    \s_axi_rdata_i_reg[20] ,
    \s_axi_rdata_i_reg[19] ,
    \s_axi_rdata_i_reg[18] ,
    \s_axi_rdata_i_reg[17] ,
    \s_axi_rdata_i_reg[16] ,
    \s_axi_rdata_i_reg[15] ,
    \s_axi_rdata_i_reg[14] ,
    \s_axi_rdata_i_reg[13] ,
    \s_axi_rdata_i_reg[12] ,
    \s_axi_rdata_i_reg[11] ,
    \s_axi_rdata_i_reg[0]_0 ,
    \s_axi_rdata_i_reg[0]_1 ,
    READ_DONE0_I,
    READ_DONE1_I,
    \TCSR0_GENERATE[23].TCSR0_FF_I ,
    \TCSR1_GENERATE[23].TCSR1_FF_I ,
    s_axi_rdata,
    bus2ip_reset,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_aresetn,
    s_axi_wvalid,
    s_axi_awvalid,
    s_axi_wdata,
    read_Mux_In,
    s_axi_rready,
    s_axi_bready,
    s_axi_araddr,
    s_axi_awaddr,
    D_2,
    read_done1,
    D);
  output \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output Bus_RNW_reg;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output s_axi_wready;
  output s_axi_arready;
  output pair0_Select;
  output \LOAD_REG_GEN[7].LOAD_REG_I ;
  output [1:0]bus2ip_wrce;
  output \LOAD_REG_GEN[31].LOAD_REG_I ;
  output \LOAD_REG_GEN[30].LOAD_REG_I ;
  output \LOAD_REG_GEN[29].LOAD_REG_I ;
  output \LOAD_REG_GEN[28].LOAD_REG_I ;
  output \LOAD_REG_GEN[27].LOAD_REG_I ;
  output \LOAD_REG_GEN[26].LOAD_REG_I ;
  output \LOAD_REG_GEN[25].LOAD_REG_I ;
  output \LOAD_REG_GEN[24].LOAD_REG_I ;
  output \LOAD_REG_GEN[23].LOAD_REG_I ;
  output \LOAD_REG_GEN[22].LOAD_REG_I ;
  output \LOAD_REG_GEN[21].LOAD_REG_I ;
  output \LOAD_REG_GEN[20].LOAD_REG_I ;
  output \LOAD_REG_GEN[19].LOAD_REG_I ;
  output \LOAD_REG_GEN[18].LOAD_REG_I ;
  output \LOAD_REG_GEN[17].LOAD_REG_I ;
  output \LOAD_REG_GEN[16].LOAD_REG_I ;
  output \LOAD_REG_GEN[15].LOAD_REG_I ;
  output \LOAD_REG_GEN[14].LOAD_REG_I ;
  output \LOAD_REG_GEN[13].LOAD_REG_I ;
  output \LOAD_REG_GEN[12].LOAD_REG_I ;
  output \LOAD_REG_GEN[11].LOAD_REG_I ;
  output \LOAD_REG_GEN[10].LOAD_REG_I ;
  output \LOAD_REG_GEN[9].LOAD_REG_I ;
  output \LOAD_REG_GEN[8].LOAD_REG_I ;
  output \LOAD_REG_GEN[7].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[6].LOAD_REG_I ;
  output \LOAD_REG_GEN[5].LOAD_REG_I ;
  output \LOAD_REG_GEN[4].LOAD_REG_I ;
  output \LOAD_REG_GEN[3].LOAD_REG_I ;
  output \LOAD_REG_GEN[2].LOAD_REG_I ;
  output \LOAD_REG_GEN[1].LOAD_REG_I ;
  output D_0;
  output \LOAD_REG_GEN[31].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[30].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[29].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[28].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[27].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[26].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[25].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[24].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[23].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[22].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[21].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[20].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[19].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[18].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[17].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[16].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[15].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[14].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[13].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[12].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[11].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[10].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[9].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[8].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[7].LOAD_REG_I_1 ;
  output \LOAD_REG_GEN[6].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[5].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[4].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[3].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[2].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[1].LOAD_REG_I_0 ;
  output D_1;
  output s_axi_rvalid_i_reg;
  output s_axi_rvalid_i_reg_0;
  output s_axi_rvalid_i_reg_1;
  output \s_axi_rdata_i_reg[0] ;
  output \s_axi_rdata_i_reg[31] ;
  output \s_axi_rdata_i_reg[30] ;
  output \s_axi_rdata_i_reg[29] ;
  output \s_axi_rdata_i_reg[28] ;
  output \s_axi_rdata_i_reg[27] ;
  output \s_axi_rdata_i_reg[26] ;
  output \s_axi_rdata_i_reg[25] ;
  output \s_axi_rdata_i_reg[24] ;
  output \s_axi_rdata_i_reg[23] ;
  output \s_axi_rdata_i_reg[22] ;
  output \s_axi_rdata_i_reg[21] ;
  output \s_axi_rdata_i_reg[20] ;
  output \s_axi_rdata_i_reg[19] ;
  output \s_axi_rdata_i_reg[18] ;
  output \s_axi_rdata_i_reg[17] ;
  output \s_axi_rdata_i_reg[16] ;
  output \s_axi_rdata_i_reg[15] ;
  output \s_axi_rdata_i_reg[14] ;
  output \s_axi_rdata_i_reg[13] ;
  output \s_axi_rdata_i_reg[12] ;
  output \s_axi_rdata_i_reg[11] ;
  output \s_axi_rdata_i_reg[0]_0 ;
  output \s_axi_rdata_i_reg[0]_1 ;
  output READ_DONE0_I;
  output READ_DONE1_I;
  output \TCSR0_GENERATE[23].TCSR0_FF_I ;
  output \TCSR1_GENERATE[23].TCSR1_FF_I ;
  output [31:0]s_axi_rdata;
  input bus2ip_reset;
  input s_axi_aclk;
  input s_axi_arvalid;
  input s_axi_aresetn;
  input s_axi_wvalid;
  input s_axi_awvalid;
  input [31:0]s_axi_wdata;
  input [85:0]read_Mux_In;
  input s_axi_rready;
  input s_axi_bready;
  input [2:0]s_axi_araddr;
  input [2:0]s_axi_awaddr;
  input D_2;
  input read_done1;
  input [31:0]D;

  wire Bus_RNW_reg;
  wire [31:0]D;
  wire D_0;
  wire D_1;
  wire D_2;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ;
  wire \LOAD_REG_GEN[10].LOAD_REG_I ;
  wire \LOAD_REG_GEN[10].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[11].LOAD_REG_I ;
  wire \LOAD_REG_GEN[11].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[12].LOAD_REG_I ;
  wire \LOAD_REG_GEN[12].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[13].LOAD_REG_I ;
  wire \LOAD_REG_GEN[13].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[14].LOAD_REG_I ;
  wire \LOAD_REG_GEN[14].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[15].LOAD_REG_I ;
  wire \LOAD_REG_GEN[15].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[16].LOAD_REG_I ;
  wire \LOAD_REG_GEN[16].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[17].LOAD_REG_I ;
  wire \LOAD_REG_GEN[17].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[18].LOAD_REG_I ;
  wire \LOAD_REG_GEN[18].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[19].LOAD_REG_I ;
  wire \LOAD_REG_GEN[19].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[1].LOAD_REG_I ;
  wire \LOAD_REG_GEN[1].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[21].LOAD_REG_I ;
  wire \LOAD_REG_GEN[21].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[22].LOAD_REG_I ;
  wire \LOAD_REG_GEN[22].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[23].LOAD_REG_I ;
  wire \LOAD_REG_GEN[23].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[24].LOAD_REG_I ;
  wire \LOAD_REG_GEN[24].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[25].LOAD_REG_I ;
  wire \LOAD_REG_GEN[25].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[26].LOAD_REG_I ;
  wire \LOAD_REG_GEN[26].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[27].LOAD_REG_I ;
  wire \LOAD_REG_GEN[27].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[28].LOAD_REG_I ;
  wire \LOAD_REG_GEN[28].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[29].LOAD_REG_I ;
  wire \LOAD_REG_GEN[29].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[2].LOAD_REG_I ;
  wire \LOAD_REG_GEN[2].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[30].LOAD_REG_I ;
  wire \LOAD_REG_GEN[30].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[31].LOAD_REG_I ;
  wire \LOAD_REG_GEN[31].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[3].LOAD_REG_I ;
  wire \LOAD_REG_GEN[3].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[4].LOAD_REG_I ;
  wire \LOAD_REG_GEN[4].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[5].LOAD_REG_I ;
  wire \LOAD_REG_GEN[5].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[6].LOAD_REG_I ;
  wire \LOAD_REG_GEN[6].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I_1 ;
  wire \LOAD_REG_GEN[8].LOAD_REG_I ;
  wire \LOAD_REG_GEN[8].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[9].LOAD_REG_I ;
  wire \LOAD_REG_GEN[9].LOAD_REG_I_0 ;
  wire READ_DONE0_I;
  wire READ_DONE1_I;
  wire \TCSR0_GENERATE[23].TCSR0_FF_I ;
  wire \TCSR1_GENERATE[23].TCSR1_FF_I ;
  wire bus2ip_reset;
  wire [1:0]bus2ip_wrce;
  wire pair0_Select;
  wire [85:0]read_Mux_In;
  wire read_done1;
  wire s_axi_aclk;
  wire [2:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire \s_axi_rdata_i_reg[0] ;
  wire \s_axi_rdata_i_reg[0]_0 ;
  wire \s_axi_rdata_i_reg[0]_1 ;
  wire \s_axi_rdata_i_reg[11] ;
  wire \s_axi_rdata_i_reg[12] ;
  wire \s_axi_rdata_i_reg[13] ;
  wire \s_axi_rdata_i_reg[14] ;
  wire \s_axi_rdata_i_reg[15] ;
  wire \s_axi_rdata_i_reg[16] ;
  wire \s_axi_rdata_i_reg[17] ;
  wire \s_axi_rdata_i_reg[18] ;
  wire \s_axi_rdata_i_reg[19] ;
  wire \s_axi_rdata_i_reg[20] ;
  wire \s_axi_rdata_i_reg[21] ;
  wire \s_axi_rdata_i_reg[22] ;
  wire \s_axi_rdata_i_reg[23] ;
  wire \s_axi_rdata_i_reg[24] ;
  wire \s_axi_rdata_i_reg[25] ;
  wire \s_axi_rdata_i_reg[26] ;
  wire \s_axi_rdata_i_reg[27] ;
  wire \s_axi_rdata_i_reg[28] ;
  wire \s_axi_rdata_i_reg[29] ;
  wire \s_axi_rdata_i_reg[30] ;
  wire \s_axi_rdata_i_reg[31] ;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_rvalid_i_reg;
  wire s_axi_rvalid_i_reg_0;
  wire s_axi_rvalid_i_reg_1;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [2:0]NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED;

  ublaze_sopc_axi_timer_0_0__slave_attachment I_SLAVE_ATTACHMENT
       (.D(D),
        .D_0(D_0),
        .D_1(D_1),
        .D_2(D_2),
        .\LOAD_REG_GEN[10].LOAD_REG_I (\LOAD_REG_GEN[10].LOAD_REG_I ),
        .\LOAD_REG_GEN[10].LOAD_REG_I_0 (\LOAD_REG_GEN[10].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[11].LOAD_REG_I (\LOAD_REG_GEN[11].LOAD_REG_I ),
        .\LOAD_REG_GEN[11].LOAD_REG_I_0 (\LOAD_REG_GEN[11].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[12].LOAD_REG_I (\LOAD_REG_GEN[12].LOAD_REG_I ),
        .\LOAD_REG_GEN[12].LOAD_REG_I_0 (\LOAD_REG_GEN[12].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[13].LOAD_REG_I (\LOAD_REG_GEN[13].LOAD_REG_I ),
        .\LOAD_REG_GEN[13].LOAD_REG_I_0 (\LOAD_REG_GEN[13].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[14].LOAD_REG_I (\LOAD_REG_GEN[14].LOAD_REG_I ),
        .\LOAD_REG_GEN[14].LOAD_REG_I_0 (\LOAD_REG_GEN[14].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[15].LOAD_REG_I (\LOAD_REG_GEN[15].LOAD_REG_I ),
        .\LOAD_REG_GEN[15].LOAD_REG_I_0 (\LOAD_REG_GEN[15].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[16].LOAD_REG_I (\LOAD_REG_GEN[16].LOAD_REG_I ),
        .\LOAD_REG_GEN[16].LOAD_REG_I_0 (\LOAD_REG_GEN[16].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[17].LOAD_REG_I (\LOAD_REG_GEN[17].LOAD_REG_I ),
        .\LOAD_REG_GEN[17].LOAD_REG_I_0 (\LOAD_REG_GEN[17].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[18].LOAD_REG_I (\LOAD_REG_GEN[18].LOAD_REG_I ),
        .\LOAD_REG_GEN[18].LOAD_REG_I_0 (\LOAD_REG_GEN[18].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[19].LOAD_REG_I (\LOAD_REG_GEN[19].LOAD_REG_I ),
        .\LOAD_REG_GEN[19].LOAD_REG_I_0 (\LOAD_REG_GEN[19].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[1].LOAD_REG_I (\LOAD_REG_GEN[1].LOAD_REG_I ),
        .\LOAD_REG_GEN[1].LOAD_REG_I_0 (\LOAD_REG_GEN[1].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[20].LOAD_REG_I (\LOAD_REG_GEN[20].LOAD_REG_I ),
        .\LOAD_REG_GEN[20].LOAD_REG_I_0 (\LOAD_REG_GEN[20].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[21].LOAD_REG_I (\LOAD_REG_GEN[21].LOAD_REG_I ),
        .\LOAD_REG_GEN[21].LOAD_REG_I_0 (\LOAD_REG_GEN[21].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[22].LOAD_REG_I (\LOAD_REG_GEN[22].LOAD_REG_I ),
        .\LOAD_REG_GEN[22].LOAD_REG_I_0 (\LOAD_REG_GEN[22].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[23].LOAD_REG_I (\LOAD_REG_GEN[23].LOAD_REG_I ),
        .\LOAD_REG_GEN[23].LOAD_REG_I_0 (\LOAD_REG_GEN[23].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[24].LOAD_REG_I (\LOAD_REG_GEN[24].LOAD_REG_I ),
        .\LOAD_REG_GEN[24].LOAD_REG_I_0 (\LOAD_REG_GEN[24].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[25].LOAD_REG_I (\LOAD_REG_GEN[25].LOAD_REG_I ),
        .\LOAD_REG_GEN[25].LOAD_REG_I_0 (\LOAD_REG_GEN[25].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[26].LOAD_REG_I (\LOAD_REG_GEN[26].LOAD_REG_I ),
        .\LOAD_REG_GEN[26].LOAD_REG_I_0 (\LOAD_REG_GEN[26].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[27].LOAD_REG_I (\LOAD_REG_GEN[27].LOAD_REG_I ),
        .\LOAD_REG_GEN[27].LOAD_REG_I_0 (\LOAD_REG_GEN[27].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[28].LOAD_REG_I (\LOAD_REG_GEN[28].LOAD_REG_I ),
        .\LOAD_REG_GEN[28].LOAD_REG_I_0 (\LOAD_REG_GEN[28].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[29].LOAD_REG_I (\LOAD_REG_GEN[29].LOAD_REG_I ),
        .\LOAD_REG_GEN[29].LOAD_REG_I_0 (\LOAD_REG_GEN[29].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[2].LOAD_REG_I (\LOAD_REG_GEN[2].LOAD_REG_I ),
        .\LOAD_REG_GEN[2].LOAD_REG_I_0 (\LOAD_REG_GEN[2].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[30].LOAD_REG_I (\LOAD_REG_GEN[30].LOAD_REG_I ),
        .\LOAD_REG_GEN[30].LOAD_REG_I_0 (\LOAD_REG_GEN[30].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[31].LOAD_REG_I (\LOAD_REG_GEN[31].LOAD_REG_I ),
        .\LOAD_REG_GEN[31].LOAD_REG_I_0 (\LOAD_REG_GEN[31].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[3].LOAD_REG_I (\LOAD_REG_GEN[3].LOAD_REG_I ),
        .\LOAD_REG_GEN[3].LOAD_REG_I_0 (\LOAD_REG_GEN[3].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[4].LOAD_REG_I (\LOAD_REG_GEN[4].LOAD_REG_I ),
        .\LOAD_REG_GEN[4].LOAD_REG_I_0 (\LOAD_REG_GEN[4].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[5].LOAD_REG_I (\LOAD_REG_GEN[5].LOAD_REG_I ),
        .\LOAD_REG_GEN[5].LOAD_REG_I_0 (\LOAD_REG_GEN[5].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[6].LOAD_REG_I (\LOAD_REG_GEN[6].LOAD_REG_I ),
        .\LOAD_REG_GEN[6].LOAD_REG_I_0 (\LOAD_REG_GEN[6].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[7].LOAD_REG_I (\LOAD_REG_GEN[7].LOAD_REG_I ),
        .\LOAD_REG_GEN[7].LOAD_REG_I_0 (\LOAD_REG_GEN[7].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[7].LOAD_REG_I_1 (\LOAD_REG_GEN[7].LOAD_REG_I_1 ),
        .\LOAD_REG_GEN[8].LOAD_REG_I (\LOAD_REG_GEN[8].LOAD_REG_I ),
        .\LOAD_REG_GEN[8].LOAD_REG_I_0 (\LOAD_REG_GEN[8].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[9].LOAD_REG_I (\LOAD_REG_GEN[9].LOAD_REG_I ),
        .\LOAD_REG_GEN[9].LOAD_REG_I_0 (\LOAD_REG_GEN[9].LOAD_REG_I_0 ),
        .READ_DONE0_I(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .READ_DONE0_I_0(READ_DONE0_I),
        .READ_DONE1_I(READ_DONE1_I),
        .\TCSR0_GENERATE[23].TCSR0_FF_I (\TCSR0_GENERATE[23].TCSR0_FF_I ),
        .\TCSR1_GENERATE[23].TCSR1_FF_I (\TCSR1_GENERATE[23].TCSR1_FF_I ),
        .\TCSR1_GENERATE[24].TCSR1_FF_I (\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ),
        .\TCSR1_GENERATE[24].TCSR1_FF_I_0 (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\TCSR1_GENERATE[24].TCSR1_FF_I_1 (Bus_RNW_reg),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_wrce(bus2ip_wrce),
        .pair0_Select(pair0_Select),
        .read_Mux_In(read_Mux_In),
        .read_done1(read_done1),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED[2:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .\s_axi_rdata_i_reg[0]_0 (\s_axi_rdata_i_reg[0] ),
        .\s_axi_rdata_i_reg[0]_1 (\s_axi_rdata_i_reg[0]_0 ),
        .\s_axi_rdata_i_reg[0]_2 (\s_axi_rdata_i_reg[0]_1 ),
        .\s_axi_rdata_i_reg[11]_0 (\s_axi_rdata_i_reg[11] ),
        .\s_axi_rdata_i_reg[12]_0 (\s_axi_rdata_i_reg[12] ),
        .\s_axi_rdata_i_reg[13]_0 (\s_axi_rdata_i_reg[13] ),
        .\s_axi_rdata_i_reg[14]_0 (\s_axi_rdata_i_reg[14] ),
        .\s_axi_rdata_i_reg[15]_0 (\s_axi_rdata_i_reg[15] ),
        .\s_axi_rdata_i_reg[16]_0 (\s_axi_rdata_i_reg[16] ),
        .\s_axi_rdata_i_reg[17]_0 (\s_axi_rdata_i_reg[17] ),
        .\s_axi_rdata_i_reg[18]_0 (\s_axi_rdata_i_reg[18] ),
        .\s_axi_rdata_i_reg[19]_0 (\s_axi_rdata_i_reg[19] ),
        .\s_axi_rdata_i_reg[20]_0 (\s_axi_rdata_i_reg[20] ),
        .\s_axi_rdata_i_reg[21]_0 (\s_axi_rdata_i_reg[21] ),
        .\s_axi_rdata_i_reg[22]_0 (\s_axi_rdata_i_reg[22] ),
        .\s_axi_rdata_i_reg[23]_0 (\s_axi_rdata_i_reg[23] ),
        .\s_axi_rdata_i_reg[24]_0 (\s_axi_rdata_i_reg[24] ),
        .\s_axi_rdata_i_reg[25]_0 (\s_axi_rdata_i_reg[25] ),
        .\s_axi_rdata_i_reg[26]_0 (\s_axi_rdata_i_reg[26] ),
        .\s_axi_rdata_i_reg[27]_0 (\s_axi_rdata_i_reg[27] ),
        .\s_axi_rdata_i_reg[28]_0 (\s_axi_rdata_i_reg[28] ),
        .\s_axi_rdata_i_reg[29]_0 (\s_axi_rdata_i_reg[29] ),
        .\s_axi_rdata_i_reg[30]_0 (\s_axi_rdata_i_reg[30] ),
        .\s_axi_rdata_i_reg[31]_0 (\s_axi_rdata_i_reg[31] ),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_rvalid_i_reg_0(s_axi_rvalid_i_reg),
        .s_axi_rvalid_i_reg_1(s_axi_rvalid_i_reg_0),
        .s_axi_rvalid_i_reg_2(s_axi_rvalid_i_reg_1),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* C_COUNT_WIDTH = "32" *) (* C_FAMILY = "artix7" *) (* C_GEN0_ASSERT = "1'b1" *) 
(* C_GEN1_ASSERT = "1'b1" *) (* C_ONE_TIMER_ONLY = "0" *) (* C_S_AXI_ADDR_WIDTH = "5" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* C_TRIG0_ASSERT = "1'b1" *) (* C_TRIG1_ASSERT = "1'b1" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "axi_timer" *) 
module ublaze_sopc_axi_timer_0_0__axi_timer
   (capturetrig0,
    capturetrig1,
    generateout0,
    generateout1,
    pwm0,
    interrupt,
    freeze,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready);
  input capturetrig0;
  input capturetrig1;
  output generateout0;
  output generateout1;
  output pwm0;
  output interrupt;
  input freeze;
  (* max_fanout = "10000" *) input s_axi_aclk;
  (* max_fanout = "10000" *) input s_axi_aresetn;
  input [4:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [4:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;

  wire AXI4_LITE_I_n_100;
  wire AXI4_LITE_I_n_101;
  wire AXI4_LITE_I_n_102;
  wire AXI4_LITE_I_n_103;
  wire AXI4_LITE_I_n_104;
  wire AXI4_LITE_I_n_105;
  wire AXI4_LITE_I_n_106;
  wire AXI4_LITE_I_n_12;
  wire AXI4_LITE_I_n_13;
  wire AXI4_LITE_I_n_14;
  wire AXI4_LITE_I_n_15;
  wire AXI4_LITE_I_n_16;
  wire AXI4_LITE_I_n_17;
  wire AXI4_LITE_I_n_18;
  wire AXI4_LITE_I_n_19;
  wire AXI4_LITE_I_n_20;
  wire AXI4_LITE_I_n_21;
  wire AXI4_LITE_I_n_22;
  wire AXI4_LITE_I_n_23;
  wire AXI4_LITE_I_n_24;
  wire AXI4_LITE_I_n_25;
  wire AXI4_LITE_I_n_26;
  wire AXI4_LITE_I_n_27;
  wire AXI4_LITE_I_n_28;
  wire AXI4_LITE_I_n_29;
  wire AXI4_LITE_I_n_30;
  wire AXI4_LITE_I_n_31;
  wire AXI4_LITE_I_n_32;
  wire AXI4_LITE_I_n_33;
  wire AXI4_LITE_I_n_34;
  wire AXI4_LITE_I_n_35;
  wire AXI4_LITE_I_n_36;
  wire AXI4_LITE_I_n_37;
  wire AXI4_LITE_I_n_38;
  wire AXI4_LITE_I_n_39;
  wire AXI4_LITE_I_n_40;
  wire AXI4_LITE_I_n_41;
  wire AXI4_LITE_I_n_42;
  wire AXI4_LITE_I_n_44;
  wire AXI4_LITE_I_n_45;
  wire AXI4_LITE_I_n_46;
  wire AXI4_LITE_I_n_47;
  wire AXI4_LITE_I_n_48;
  wire AXI4_LITE_I_n_49;
  wire AXI4_LITE_I_n_50;
  wire AXI4_LITE_I_n_51;
  wire AXI4_LITE_I_n_52;
  wire AXI4_LITE_I_n_53;
  wire AXI4_LITE_I_n_54;
  wire AXI4_LITE_I_n_55;
  wire AXI4_LITE_I_n_56;
  wire AXI4_LITE_I_n_57;
  wire AXI4_LITE_I_n_58;
  wire AXI4_LITE_I_n_59;
  wire AXI4_LITE_I_n_60;
  wire AXI4_LITE_I_n_61;
  wire AXI4_LITE_I_n_62;
  wire AXI4_LITE_I_n_63;
  wire AXI4_LITE_I_n_64;
  wire AXI4_LITE_I_n_65;
  wire AXI4_LITE_I_n_66;
  wire AXI4_LITE_I_n_67;
  wire AXI4_LITE_I_n_68;
  wire AXI4_LITE_I_n_69;
  wire AXI4_LITE_I_n_70;
  wire AXI4_LITE_I_n_71;
  wire AXI4_LITE_I_n_72;
  wire AXI4_LITE_I_n_73;
  wire AXI4_LITE_I_n_74;
  wire AXI4_LITE_I_n_76;
  wire AXI4_LITE_I_n_77;
  wire AXI4_LITE_I_n_78;
  wire AXI4_LITE_I_n_79;
  wire AXI4_LITE_I_n_80;
  wire AXI4_LITE_I_n_81;
  wire AXI4_LITE_I_n_82;
  wire AXI4_LITE_I_n_83;
  wire AXI4_LITE_I_n_84;
  wire AXI4_LITE_I_n_85;
  wire AXI4_LITE_I_n_86;
  wire AXI4_LITE_I_n_87;
  wire AXI4_LITE_I_n_88;
  wire AXI4_LITE_I_n_89;
  wire AXI4_LITE_I_n_9;
  wire AXI4_LITE_I_n_90;
  wire AXI4_LITE_I_n_91;
  wire AXI4_LITE_I_n_92;
  wire AXI4_LITE_I_n_93;
  wire AXI4_LITE_I_n_94;
  wire AXI4_LITE_I_n_95;
  wire AXI4_LITE_I_n_96;
  wire AXI4_LITE_I_n_97;
  wire AXI4_LITE_I_n_98;
  wire AXI4_LITE_I_n_99;
  wire \COUNTER_0_I/D ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I/D ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ;
  wire \TIMER_CONTROL_I/D ;
  wire \TIMER_CONTROL_I/pair0_Select ;
  wire \TIMER_CONTROL_I/read_done1 ;
  wire bus2ip_reset;
  wire [0:4]bus2ip_wrce;
  wire capturetrig0;
  wire capturetrig1;
  wire freeze;
  wire interrupt;
  wire [0:31]ip2bus_data;
  wire [20:191]read_Mux_In;
  (* MAX_FANOUT = "10000" *) (* RTL_MAX_FANOUT = "found" *) wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  (* MAX_FANOUT = "10000" *) (* RTL_MAX_FANOUT = "found" *) wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [2:0]NLW_AXI4_LITE_I_s_axi_awaddr_UNCONNECTED;
  wire NLW_TC_CORE_I_generateout0_UNCONNECTED;
  wire NLW_TC_CORE_I_generateout1_UNCONNECTED;
  wire NLW_TC_CORE_I_pwm0_UNCONNECTED;

  assign s_axi_awready = s_axi_wready;
  ublaze_sopc_axi_timer_0_0__axi_lite_ipif AXI4_LITE_I
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .D({ip2bus_data[0],ip2bus_data[1],ip2bus_data[2],ip2bus_data[3],ip2bus_data[4],ip2bus_data[5],ip2bus_data[6],ip2bus_data[7],ip2bus_data[8],ip2bus_data[9],ip2bus_data[10],ip2bus_data[11],ip2bus_data[12],ip2bus_data[13],ip2bus_data[14],ip2bus_data[15],ip2bus_data[16],ip2bus_data[17],ip2bus_data[18],ip2bus_data[19],ip2bus_data[20],ip2bus_data[21],ip2bus_data[22],ip2bus_data[23],ip2bus_data[24],ip2bus_data[25],ip2bus_data[26],ip2bus_data[27],ip2bus_data[28],ip2bus_data[29],ip2bus_data[30],ip2bus_data[31]}),
        .D_0(\COUNTER_0_I/D ),
        .D_1(\GEN_SECOND_TIMER.COUNTER_1_I/D ),
        .D_2(\TIMER_CONTROL_I/D ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ),
        .\LOAD_REG_GEN[10].LOAD_REG_I (AXI4_LITE_I_n_33),
        .\LOAD_REG_GEN[10].LOAD_REG_I_0 (AXI4_LITE_I_n_65),
        .\LOAD_REG_GEN[11].LOAD_REG_I (AXI4_LITE_I_n_32),
        .\LOAD_REG_GEN[11].LOAD_REG_I_0 (AXI4_LITE_I_n_64),
        .\LOAD_REG_GEN[12].LOAD_REG_I (AXI4_LITE_I_n_31),
        .\LOAD_REG_GEN[12].LOAD_REG_I_0 (AXI4_LITE_I_n_63),
        .\LOAD_REG_GEN[13].LOAD_REG_I (AXI4_LITE_I_n_30),
        .\LOAD_REG_GEN[13].LOAD_REG_I_0 (AXI4_LITE_I_n_62),
        .\LOAD_REG_GEN[14].LOAD_REG_I (AXI4_LITE_I_n_29),
        .\LOAD_REG_GEN[14].LOAD_REG_I_0 (AXI4_LITE_I_n_61),
        .\LOAD_REG_GEN[15].LOAD_REG_I (AXI4_LITE_I_n_28),
        .\LOAD_REG_GEN[15].LOAD_REG_I_0 (AXI4_LITE_I_n_60),
        .\LOAD_REG_GEN[16].LOAD_REG_I (AXI4_LITE_I_n_27),
        .\LOAD_REG_GEN[16].LOAD_REG_I_0 (AXI4_LITE_I_n_59),
        .\LOAD_REG_GEN[17].LOAD_REG_I (AXI4_LITE_I_n_26),
        .\LOAD_REG_GEN[17].LOAD_REG_I_0 (AXI4_LITE_I_n_58),
        .\LOAD_REG_GEN[18].LOAD_REG_I (AXI4_LITE_I_n_25),
        .\LOAD_REG_GEN[18].LOAD_REG_I_0 (AXI4_LITE_I_n_57),
        .\LOAD_REG_GEN[19].LOAD_REG_I (AXI4_LITE_I_n_24),
        .\LOAD_REG_GEN[19].LOAD_REG_I_0 (AXI4_LITE_I_n_56),
        .\LOAD_REG_GEN[1].LOAD_REG_I (AXI4_LITE_I_n_42),
        .\LOAD_REG_GEN[1].LOAD_REG_I_0 (AXI4_LITE_I_n_74),
        .\LOAD_REG_GEN[20].LOAD_REG_I (AXI4_LITE_I_n_23),
        .\LOAD_REG_GEN[20].LOAD_REG_I_0 (AXI4_LITE_I_n_55),
        .\LOAD_REG_GEN[21].LOAD_REG_I (AXI4_LITE_I_n_22),
        .\LOAD_REG_GEN[21].LOAD_REG_I_0 (AXI4_LITE_I_n_54),
        .\LOAD_REG_GEN[22].LOAD_REG_I (AXI4_LITE_I_n_21),
        .\LOAD_REG_GEN[22].LOAD_REG_I_0 (AXI4_LITE_I_n_53),
        .\LOAD_REG_GEN[23].LOAD_REG_I (AXI4_LITE_I_n_20),
        .\LOAD_REG_GEN[23].LOAD_REG_I_0 (AXI4_LITE_I_n_52),
        .\LOAD_REG_GEN[24].LOAD_REG_I (AXI4_LITE_I_n_19),
        .\LOAD_REG_GEN[24].LOAD_REG_I_0 (AXI4_LITE_I_n_51),
        .\LOAD_REG_GEN[25].LOAD_REG_I (AXI4_LITE_I_n_18),
        .\LOAD_REG_GEN[25].LOAD_REG_I_0 (AXI4_LITE_I_n_50),
        .\LOAD_REG_GEN[26].LOAD_REG_I (AXI4_LITE_I_n_17),
        .\LOAD_REG_GEN[26].LOAD_REG_I_0 (AXI4_LITE_I_n_49),
        .\LOAD_REG_GEN[27].LOAD_REG_I (AXI4_LITE_I_n_16),
        .\LOAD_REG_GEN[27].LOAD_REG_I_0 (AXI4_LITE_I_n_48),
        .\LOAD_REG_GEN[28].LOAD_REG_I (AXI4_LITE_I_n_15),
        .\LOAD_REG_GEN[28].LOAD_REG_I_0 (AXI4_LITE_I_n_47),
        .\LOAD_REG_GEN[29].LOAD_REG_I (AXI4_LITE_I_n_14),
        .\LOAD_REG_GEN[29].LOAD_REG_I_0 (AXI4_LITE_I_n_46),
        .\LOAD_REG_GEN[2].LOAD_REG_I (AXI4_LITE_I_n_41),
        .\LOAD_REG_GEN[2].LOAD_REG_I_0 (AXI4_LITE_I_n_73),
        .\LOAD_REG_GEN[30].LOAD_REG_I (AXI4_LITE_I_n_13),
        .\LOAD_REG_GEN[30].LOAD_REG_I_0 (AXI4_LITE_I_n_45),
        .\LOAD_REG_GEN[31].LOAD_REG_I (AXI4_LITE_I_n_12),
        .\LOAD_REG_GEN[31].LOAD_REG_I_0 (AXI4_LITE_I_n_44),
        .\LOAD_REG_GEN[3].LOAD_REG_I (AXI4_LITE_I_n_40),
        .\LOAD_REG_GEN[3].LOAD_REG_I_0 (AXI4_LITE_I_n_72),
        .\LOAD_REG_GEN[4].LOAD_REG_I (AXI4_LITE_I_n_39),
        .\LOAD_REG_GEN[4].LOAD_REG_I_0 (AXI4_LITE_I_n_71),
        .\LOAD_REG_GEN[5].LOAD_REG_I (AXI4_LITE_I_n_38),
        .\LOAD_REG_GEN[5].LOAD_REG_I_0 (AXI4_LITE_I_n_70),
        .\LOAD_REG_GEN[6].LOAD_REG_I (AXI4_LITE_I_n_37),
        .\LOAD_REG_GEN[6].LOAD_REG_I_0 (AXI4_LITE_I_n_69),
        .\LOAD_REG_GEN[7].LOAD_REG_I (AXI4_LITE_I_n_9),
        .\LOAD_REG_GEN[7].LOAD_REG_I_0 (AXI4_LITE_I_n_36),
        .\LOAD_REG_GEN[7].LOAD_REG_I_1 (AXI4_LITE_I_n_68),
        .\LOAD_REG_GEN[8].LOAD_REG_I (AXI4_LITE_I_n_35),
        .\LOAD_REG_GEN[8].LOAD_REG_I_0 (AXI4_LITE_I_n_67),
        .\LOAD_REG_GEN[9].LOAD_REG_I (AXI4_LITE_I_n_34),
        .\LOAD_REG_GEN[9].LOAD_REG_I_0 (AXI4_LITE_I_n_66),
        .READ_DONE0_I(AXI4_LITE_I_n_103),
        .READ_DONE1_I(AXI4_LITE_I_n_104),
        .\TCSR0_GENERATE[23].TCSR0_FF_I (AXI4_LITE_I_n_105),
        .\TCSR1_GENERATE[23].TCSR1_FF_I (AXI4_LITE_I_n_106),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_wrce({bus2ip_wrce[0],bus2ip_wrce[4]}),
        .pair0_Select(\TIMER_CONTROL_I/pair0_Select ),
        .read_Mux_In({read_Mux_In[20],read_Mux_In[64],read_Mux_In[65],read_Mux_In[66],read_Mux_In[67],read_Mux_In[68],read_Mux_In[69],read_Mux_In[70],read_Mux_In[71],read_Mux_In[72],read_Mux_In[73],read_Mux_In[74],read_Mux_In[75],read_Mux_In[76],read_Mux_In[77],read_Mux_In[78],read_Mux_In[79],read_Mux_In[80],read_Mux_In[81],read_Mux_In[82],read_Mux_In[83],read_Mux_In[84],read_Mux_In[128],read_Mux_In[129],read_Mux_In[130],read_Mux_In[131],read_Mux_In[132],read_Mux_In[133],read_Mux_In[134],read_Mux_In[135],read_Mux_In[136],read_Mux_In[137],read_Mux_In[138],read_Mux_In[139],read_Mux_In[140],read_Mux_In[141],read_Mux_In[142],read_Mux_In[143],read_Mux_In[144],read_Mux_In[145],read_Mux_In[146],read_Mux_In[147],read_Mux_In[148],read_Mux_In[149],read_Mux_In[150],read_Mux_In[151],read_Mux_In[152],read_Mux_In[153],read_Mux_In[154],read_Mux_In[155],read_Mux_In[156],read_Mux_In[157],read_Mux_In[158],read_Mux_In[159],read_Mux_In[160],read_Mux_In[161],read_Mux_In[162],read_Mux_In[163],read_Mux_In[164],read_Mux_In[165],read_Mux_In[166],read_Mux_In[167],read_Mux_In[168],read_Mux_In[169],read_Mux_In[170],read_Mux_In[171],read_Mux_In[172],read_Mux_In[173],read_Mux_In[174],read_Mux_In[175],read_Mux_In[176],read_Mux_In[177],read_Mux_In[178],read_Mux_In[179],read_Mux_In[180],read_Mux_In[181],read_Mux_In[182],read_Mux_In[183],read_Mux_In[184],read_Mux_In[185],read_Mux_In[186],read_Mux_In[187],read_Mux_In[188],read_Mux_In[189],read_Mux_In[190],read_Mux_In[191]}),
        .read_done1(\TIMER_CONTROL_I/read_done1 ),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[4:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_AXI4_LITE_I_s_axi_awaddr_UNCONNECTED[2:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .\s_axi_rdata_i_reg[0] (AXI4_LITE_I_n_79),
        .\s_axi_rdata_i_reg[0]_0 (AXI4_LITE_I_n_101),
        .\s_axi_rdata_i_reg[0]_1 (AXI4_LITE_I_n_102),
        .\s_axi_rdata_i_reg[11] (AXI4_LITE_I_n_100),
        .\s_axi_rdata_i_reg[12] (AXI4_LITE_I_n_99),
        .\s_axi_rdata_i_reg[13] (AXI4_LITE_I_n_98),
        .\s_axi_rdata_i_reg[14] (AXI4_LITE_I_n_97),
        .\s_axi_rdata_i_reg[15] (AXI4_LITE_I_n_96),
        .\s_axi_rdata_i_reg[16] (AXI4_LITE_I_n_95),
        .\s_axi_rdata_i_reg[17] (AXI4_LITE_I_n_94),
        .\s_axi_rdata_i_reg[18] (AXI4_LITE_I_n_93),
        .\s_axi_rdata_i_reg[19] (AXI4_LITE_I_n_92),
        .\s_axi_rdata_i_reg[20] (AXI4_LITE_I_n_91),
        .\s_axi_rdata_i_reg[21] (AXI4_LITE_I_n_90),
        .\s_axi_rdata_i_reg[22] (AXI4_LITE_I_n_89),
        .\s_axi_rdata_i_reg[23] (AXI4_LITE_I_n_88),
        .\s_axi_rdata_i_reg[24] (AXI4_LITE_I_n_87),
        .\s_axi_rdata_i_reg[25] (AXI4_LITE_I_n_86),
        .\s_axi_rdata_i_reg[26] (AXI4_LITE_I_n_85),
        .\s_axi_rdata_i_reg[27] (AXI4_LITE_I_n_84),
        .\s_axi_rdata_i_reg[28] (AXI4_LITE_I_n_83),
        .\s_axi_rdata_i_reg[29] (AXI4_LITE_I_n_82),
        .\s_axi_rdata_i_reg[30] (AXI4_LITE_I_n_81),
        .\s_axi_rdata_i_reg[31] (AXI4_LITE_I_n_80),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_rvalid_i_reg(AXI4_LITE_I_n_76),
        .s_axi_rvalid_i_reg_0(AXI4_LITE_I_n_77),
        .s_axi_rvalid_i_reg_1(AXI4_LITE_I_n_78),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
  ublaze_sopc_axi_timer_0_0__tc_core TC_CORE_I
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .Bus_RNW_reg_reg(AXI4_LITE_I_n_79),
        .Bus_RNW_reg_reg_0(AXI4_LITE_I_n_76),
        .Bus_RNW_reg_reg_1(AXI4_LITE_I_n_102),
        .Bus_RNW_reg_reg_2(AXI4_LITE_I_n_77),
        .Bus_RNW_reg_reg_3(AXI4_LITE_I_n_101),
        .Bus_RNW_reg_reg_4(AXI4_LITE_I_n_78),
        .D({ip2bus_data[0],ip2bus_data[1],ip2bus_data[2],ip2bus_data[3],ip2bus_data[4],ip2bus_data[5],ip2bus_data[6],ip2bus_data[7],ip2bus_data[8],ip2bus_data[9],ip2bus_data[10],ip2bus_data[11],ip2bus_data[12],ip2bus_data[13],ip2bus_data[14],ip2bus_data[15],ip2bus_data[16],ip2bus_data[17],ip2bus_data[18],ip2bus_data[19],ip2bus_data[20],ip2bus_data[21],ip2bus_data[22],ip2bus_data[23],ip2bus_data[24],ip2bus_data[25],ip2bus_data[26],ip2bus_data[27],ip2bus_data[28],ip2bus_data[29],ip2bus_data[30],ip2bus_data[31]}),
        .D_0(\TIMER_CONTROL_I/D ),
        .D_1(\COUNTER_0_I/D ),
        .D_2(\GEN_SECOND_TIMER.COUNTER_1_I/D ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (AXI4_LITE_I_n_105),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (AXI4_LITE_I_n_80),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 (AXI4_LITE_I_n_81),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 (AXI4_LITE_I_n_82),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 (AXI4_LITE_I_n_91),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 (AXI4_LITE_I_n_92),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 (AXI4_LITE_I_n_93),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 (AXI4_LITE_I_n_94),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 (AXI4_LITE_I_n_95),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 (AXI4_LITE_I_n_96),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 (AXI4_LITE_I_n_97),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 (AXI4_LITE_I_n_98),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 (AXI4_LITE_I_n_99),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 (AXI4_LITE_I_n_42),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 (AXI4_LITE_I_n_83),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 (AXI4_LITE_I_n_41),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 (AXI4_LITE_I_n_40),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 (AXI4_LITE_I_n_39),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 (AXI4_LITE_I_n_38),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 (AXI4_LITE_I_n_37),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 (AXI4_LITE_I_n_36),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 (AXI4_LITE_I_n_35),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 (AXI4_LITE_I_n_34),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 (AXI4_LITE_I_n_33),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 (AXI4_LITE_I_n_32),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 (AXI4_LITE_I_n_84),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_30 (AXI4_LITE_I_n_31),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_31 (AXI4_LITE_I_n_30),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_32 (AXI4_LITE_I_n_29),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_33 (AXI4_LITE_I_n_28),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_34 (AXI4_LITE_I_n_27),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_35 (AXI4_LITE_I_n_26),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_36 (AXI4_LITE_I_n_25),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_37 (AXI4_LITE_I_n_24),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_38 (AXI4_LITE_I_n_23),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_39 (AXI4_LITE_I_n_22),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 (AXI4_LITE_I_n_85),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_40 (AXI4_LITE_I_n_21),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_41 (AXI4_LITE_I_n_20),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_42 (AXI4_LITE_I_n_19),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_43 (AXI4_LITE_I_n_18),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_44 (AXI4_LITE_I_n_17),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_45 (AXI4_LITE_I_n_16),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_46 (AXI4_LITE_I_n_15),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_47 (AXI4_LITE_I_n_14),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_48 (AXI4_LITE_I_n_13),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_49 (AXI4_LITE_I_n_12),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 (AXI4_LITE_I_n_86),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_50 (AXI4_LITE_I_n_103),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 (AXI4_LITE_I_n_87),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 (AXI4_LITE_I_n_88),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 (AXI4_LITE_I_n_89),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 (AXI4_LITE_I_n_90),
        .\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] (AXI4_LITE_I_n_106),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] (AXI4_LITE_I_n_74),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 (AXI4_LITE_I_n_73),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 (AXI4_LITE_I_n_72),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 (AXI4_LITE_I_n_63),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 (AXI4_LITE_I_n_62),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 (AXI4_LITE_I_n_61),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 (AXI4_LITE_I_n_60),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 (AXI4_LITE_I_n_59),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 (AXI4_LITE_I_n_58),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 (AXI4_LITE_I_n_57),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 (AXI4_LITE_I_n_56),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 (AXI4_LITE_I_n_55),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 (AXI4_LITE_I_n_54),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 (AXI4_LITE_I_n_71),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 (AXI4_LITE_I_n_53),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 (AXI4_LITE_I_n_52),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 (AXI4_LITE_I_n_51),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 (AXI4_LITE_I_n_50),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 (AXI4_LITE_I_n_49),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 (AXI4_LITE_I_n_48),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 (AXI4_LITE_I_n_47),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 (AXI4_LITE_I_n_46),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 (AXI4_LITE_I_n_45),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 (AXI4_LITE_I_n_44),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 (AXI4_LITE_I_n_70),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_30 (AXI4_LITE_I_n_104),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_31 (AXI4_LITE_I_n_9),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 (AXI4_LITE_I_n_69),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 (AXI4_LITE_I_n_68),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 (AXI4_LITE_I_n_67),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 (AXI4_LITE_I_n_66),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 (AXI4_LITE_I_n_65),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 (AXI4_LITE_I_n_64),
        .\INFERRED_GEN.icount_out_reg[0] ({read_Mux_In[20],read_Mux_In[64],read_Mux_In[65],read_Mux_In[66],read_Mux_In[67],read_Mux_In[68],read_Mux_In[69],read_Mux_In[70],read_Mux_In[71],read_Mux_In[72],read_Mux_In[73],read_Mux_In[74],read_Mux_In[75],read_Mux_In[76],read_Mux_In[77],read_Mux_In[78],read_Mux_In[79],read_Mux_In[80],read_Mux_In[81],read_Mux_In[82],read_Mux_In[83],read_Mux_In[84],read_Mux_In[128],read_Mux_In[129],read_Mux_In[130],read_Mux_In[131],read_Mux_In[132],read_Mux_In[133],read_Mux_In[134],read_Mux_In[135],read_Mux_In[136],read_Mux_In[137],read_Mux_In[138],read_Mux_In[139],read_Mux_In[140],read_Mux_In[141],read_Mux_In[142],read_Mux_In[143],read_Mux_In[144],read_Mux_In[145],read_Mux_In[146],read_Mux_In[147],read_Mux_In[148],read_Mux_In[149],read_Mux_In[150],read_Mux_In[151],read_Mux_In[152],read_Mux_In[153],read_Mux_In[154],read_Mux_In[155],read_Mux_In[156],read_Mux_In[157],read_Mux_In[158],read_Mux_In[159],read_Mux_In[160],read_Mux_In[161],read_Mux_In[162],read_Mux_In[163],read_Mux_In[164],read_Mux_In[165],read_Mux_In[166],read_Mux_In[167],read_Mux_In[168],read_Mux_In[169],read_Mux_In[170],read_Mux_In[171],read_Mux_In[172],read_Mux_In[173],read_Mux_In[174],read_Mux_In[175],read_Mux_In[176],read_Mux_In[177],read_Mux_In[178],read_Mux_In[179],read_Mux_In[180],read_Mux_In[181],read_Mux_In[182],read_Mux_In[183],read_Mux_In[184],read_Mux_In[185],read_Mux_In[186],read_Mux_In[187],read_Mux_In[188],read_Mux_In[189],read_Mux_In[190],read_Mux_In[191]}),
        .\LOAD_REG_GEN[20].LOAD_REG_I (AXI4_LITE_I_n_100),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_wrce({bus2ip_wrce[0],bus2ip_wrce[4]}),
        .capturetrig0(capturetrig0),
        .capturetrig1(capturetrig1),
        .freeze(freeze),
        .generateout0(NLW_TC_CORE_I_generateout0_UNCONNECTED),
        .generateout1(NLW_TC_CORE_I_generateout1_UNCONNECTED),
        .interrupt(interrupt),
        .pair0_Select(\TIMER_CONTROL_I/pair0_Select ),
        .pwm0(NLW_TC_CORE_I_pwm0_UNCONNECTED),
        .read_done1(\TIMER_CONTROL_I/read_done1 ),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata({s_axi_wdata[11:9],s_axi_wdata[7:0]}));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module ublaze_sopc_axi_timer_0_0__cdc_sync
   (captureTrig0_d0,
    read_Mux_In,
    capturetrig0,
    s_axi_aclk);
  output captureTrig0_d0;
  input [0:0]read_Mux_In;
  input capturetrig0;
  input s_axi_aclk;

  wire CaptureTrig0_int;
  wire captureTrig0_d0;
  wire capturetrig0;
  wire [0:0]read_Mux_In;
  wire s_axi_aclk;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(capturetrig0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(CaptureTrig0_int),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    captureTrig0_d_i_1
       (.I0(CaptureTrig0_int),
        .I1(read_Mux_In),
        .O(captureTrig0_d0));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module ublaze_sopc_axi_timer_0_0__cdc_sync_1
   (captureTrig1_d0,
    read_Mux_In,
    capturetrig1,
    s_axi_aclk);
  output captureTrig1_d0;
  input [0:0]read_Mux_In;
  input capturetrig1;
  input s_axi_aclk;

  wire CaptureTrig1_int;
  wire captureTrig1_d0;
  wire capturetrig1;
  wire [0:0]read_Mux_In;
  wire s_axi_aclk;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(capturetrig1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(CaptureTrig1_int),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    captureTrig1_d_i_1
       (.I0(CaptureTrig1_int),
        .I1(read_Mux_In),
        .O(captureTrig1_d0));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module ublaze_sopc_axi_timer_0_0__cdc_sync_2
   (\INFERRED_GEN.icount_out_reg[0] ,
    \INFERRED_GEN.icount_out_reg[0]_0 ,
    S,
    \INFERRED_GEN.icount_out_reg[4] ,
    \INFERRED_GEN.icount_out_reg[32] ,
    generateOutPre0,
    \TCSR1_GENERATE[26].TCSR1_FF_I ,
    \TCSR0_GENERATE[20].TCSR0_FF_I ,
    read_Mux_In,
    \TCSR0_GENERATE[20].TCSR0_FF_I_0 ,
    \TCSR0_GENERATE[31].TCSR0_FF_I ,
    \TCSR0_GENERATE[22].TCSR0_FF_I ,
    \TCSR0_GENERATE[26].TCSR0_FF_I ,
    \INFERRED_GEN.icount_out_reg[32]_0 ,
    counter_TC,
    \INFERRED_GEN.icount_out_reg[1] ,
    freeze,
    s_axi_aclk);
  output \INFERRED_GEN.icount_out_reg[0] ;
  output \INFERRED_GEN.icount_out_reg[0]_0 ;
  output [0:0]S;
  output [0:0]\INFERRED_GEN.icount_out_reg[4] ;
  input \INFERRED_GEN.icount_out_reg[32] ;
  input generateOutPre0;
  input \TCSR1_GENERATE[26].TCSR1_FF_I ;
  input \TCSR0_GENERATE[20].TCSR0_FF_I ;
  input [5:0]read_Mux_In;
  input \TCSR0_GENERATE[20].TCSR0_FF_I_0 ;
  input \TCSR0_GENERATE[31].TCSR0_FF_I ;
  input \TCSR0_GENERATE[22].TCSR0_FF_I ;
  input \TCSR0_GENERATE[26].TCSR0_FF_I ;
  input \INFERRED_GEN.icount_out_reg[32]_0 ;
  input [0:0]counter_TC;
  input [1:0]\INFERRED_GEN.icount_out_reg[1] ;
  input freeze;
  input s_axi_aclk;

  wire Freeze_int;
  wire \INFERRED_GEN.icount_out[31]_i_3__0_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_4_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_5_n_0 ;
  wire \INFERRED_GEN.icount_out_reg[0] ;
  wire \INFERRED_GEN.icount_out_reg[0]_0 ;
  wire [1:0]\INFERRED_GEN.icount_out_reg[1] ;
  wire \INFERRED_GEN.icount_out_reg[32] ;
  wire \INFERRED_GEN.icount_out_reg[32]_0 ;
  wire [0:0]\INFERRED_GEN.icount_out_reg[4] ;
  wire [0:0]S;
  wire \TCSR0_GENERATE[20].TCSR0_FF_I ;
  wire \TCSR0_GENERATE[20].TCSR0_FF_I_0 ;
  wire \TCSR0_GENERATE[22].TCSR0_FF_I ;
  wire \TCSR0_GENERATE[26].TCSR0_FF_I ;
  wire \TCSR0_GENERATE[31].TCSR0_FF_I ;
  wire \TCSR1_GENERATE[26].TCSR1_FF_I ;
  wire [0:0]counter_TC;
  wire freeze;
  wire generateOutPre0;
  wire icount_out0_carry_i_6__0_n_0;
  wire icount_out0_carry_i_6_n_0;
  wire [5:0]read_Mux_In;
  wire s_axi_aclk;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(freeze),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(Freeze_int),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF22F2)) 
    \INFERRED_GEN.icount_out[31]_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[32] ),
        .I1(\INFERRED_GEN.icount_out[31]_i_4_n_0 ),
        .I2(generateOutPre0),
        .I3(\INFERRED_GEN.icount_out[31]_i_5_n_0 ),
        .I4(\TCSR1_GENERATE[26].TCSR1_FF_I ),
        .I5(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .O(\INFERRED_GEN.icount_out_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF5755575F)) 
    \INFERRED_GEN.icount_out[31]_i_1__0 
       (.I0(\INFERRED_GEN.icount_out[31]_i_5_n_0 ),
        .I1(\INFERRED_GEN.icount_out[31]_i_3__0_n_0 ),
        .I2(\TCSR0_GENERATE[20].TCSR0_FF_I_0 ),
        .I3(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I4(\TCSR0_GENERATE[22].TCSR0_FF_I ),
        .I5(\TCSR0_GENERATE[26].TCSR0_FF_I ),
        .O(\INFERRED_GEN.icount_out_reg[0]_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.icount_out[31]_i_3__0 
       (.I0(Freeze_int),
        .I1(read_Mux_In[5]),
        .O(\INFERRED_GEN.icount_out[31]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'hFB)) 
    \INFERRED_GEN.icount_out[31]_i_4 
       (.I0(Freeze_int),
        .I1(read_Mux_In[1]),
        .I2(\TCSR0_GENERATE[20].TCSR0_FF_I_0 ),
        .O(\INFERRED_GEN.icount_out[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF04FFFFFFFFFF)) 
    \INFERRED_GEN.icount_out[31]_i_5 
       (.I0(read_Mux_In[2]),
        .I1(counter_TC),
        .I2(read_Mux_In[4]),
        .I3(\TCSR0_GENERATE[20].TCSR0_FF_I_0 ),
        .I4(Freeze_int),
        .I5(read_Mux_In[5]),
        .O(\INFERRED_GEN.icount_out[31]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h656AAAAA)) 
    icount_out0_carry_i_5
       (.I0(\INFERRED_GEN.icount_out_reg[1] [0]),
        .I1(read_Mux_In[3]),
        .I2(\TCSR0_GENERATE[20].TCSR0_FF_I_0 ),
        .I3(read_Mux_In[0]),
        .I4(icount_out0_carry_i_6_n_0),
        .O(S));
  LUT3 #(
    .INIT(8'h6A)) 
    icount_out0_carry_i_5__0
       (.I0(\INFERRED_GEN.icount_out_reg[1] [1]),
        .I1(icount_out0_carry_i_6__0_n_0),
        .I2(read_Mux_In[3]),
        .O(\INFERRED_GEN.icount_out_reg[4] ));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    icount_out0_carry_i_6
       (.I0(\INFERRED_GEN.icount_out[31]_i_5_n_0 ),
        .I1(generateOutPre0),
        .I2(Freeze_int),
        .I3(read_Mux_In[1]),
        .I4(\TCSR0_GENERATE[20].TCSR0_FF_I_0 ),
        .I5(\INFERRED_GEN.icount_out_reg[32] ),
        .O(icount_out0_carry_i_6_n_0));
  LUT5 #(
    .INIT(32'h0400FFFF)) 
    icount_out0_carry_i_6__0
       (.I0(\TCSR0_GENERATE[20].TCSR0_FF_I_0 ),
        .I1(read_Mux_In[5]),
        .I2(Freeze_int),
        .I3(\INFERRED_GEN.icount_out_reg[32]_0 ),
        .I4(\INFERRED_GEN.icount_out[31]_i_5_n_0 ),
        .O(icount_out0_carry_i_6__0_n_0));
endmodule

(* ORIG_REF_NAME = "count_module" *) 
module ublaze_sopc_axi_timer_0_0__count_module
   (\INFERRED_GEN.icount_out_reg[31] ,
    read_Mux_In,
    counter_TC,
    generateOutPre00,
    s_axi_aresetn_0,
    CE,
    D_1,
    s_axi_aclk,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 ,
    \TCSR0_GENERATE[20].TCSR0_FF_I ,
    S,
    s_axi_aresetn,
    \TCSR0_GENERATE[31].TCSR0_FF_I ,
    Q);
  output [52:0]\INFERRED_GEN.icount_out_reg[31] ;
  output [10:0]read_Mux_In;
  output [0:0]counter_TC;
  output generateOutPre00;
  input s_axi_aresetn_0;
  input CE;
  input D_1;
  input s_axi_aclk;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 ;
  input \TCSR0_GENERATE[20].TCSR0_FF_I ;
  input [0:0]S;
  input s_axi_aresetn;
  input \TCSR0_GENERATE[31].TCSR0_FF_I ;
  input [0:0]Q;

  wire CE;
  wire D_1;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ;
  wire [52:0]\INFERRED_GEN.icount_out_reg[31] ;
  wire [0:0]Q;
  wire [0:0]S;
  wire \TCSR0_GENERATE[20].TCSR0_FF_I ;
  wire \TCSR0_GENERATE[31].TCSR0_FF_I ;
  wire [0:0]counter_TC;
  wire generateOutPre00;
  wire [10:0]read_Mux_In;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_aresetn_0;

  ublaze_sopc_axi_timer_0_0__counter_f_3 COUNTER_I
       (.\LOAD_REG_GEN[0].LOAD_REG_I (\INFERRED_GEN.icount_out_reg[31] [31:0]),
        .\LOAD_REG_GEN[0].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[31] [52:32]),
        .Q(Q),
        .S(S),
        .\TCSR0_GENERATE[20].TCSR0_FF_I (\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .\TCSR0_GENERATE[31].TCSR0_FF_I (\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .counter_TC(counter_TC),
        .generateOutPre00(generateOutPre00),
        .read_Mux_In(read_Mux_In),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_aresetn_0(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[0].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(D_1),
        .Q(\INFERRED_GEN.icount_out_reg[31] [52]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[10].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [42]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[11].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [41]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[12].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [40]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[13].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [39]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[14].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [38]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[15].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [37]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[16].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [36]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[17].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [35]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[18].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [34]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[19].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [33]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[1].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [51]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[20].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [32]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[21].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 ),
        .Q(read_Mux_In[10]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[22].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 ),
        .Q(read_Mux_In[9]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[23].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 ),
        .Q(read_Mux_In[8]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[24].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 ),
        .Q(read_Mux_In[7]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[25].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 ),
        .Q(read_Mux_In[6]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[26].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 ),
        .Q(read_Mux_In[5]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[27].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 ),
        .Q(read_Mux_In[4]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[28].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 ),
        .Q(read_Mux_In[3]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[29].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 ),
        .Q(read_Mux_In[2]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[2].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [50]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[30].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 ),
        .Q(read_Mux_In[1]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[31].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 ),
        .Q(read_Mux_In[0]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[3].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [49]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[4].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [48]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[5].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [47]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[6].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [46]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[7].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [45]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[8].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [44]),
        .R(s_axi_aresetn_0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[9].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ),
        .Q(\INFERRED_GEN.icount_out_reg[31] [43]),
        .R(s_axi_aresetn_0));
endmodule

(* ORIG_REF_NAME = "count_module" *) 
module ublaze_sopc_axi_timer_0_0__count_module_0
   (\INFERRED_GEN.icount_out_reg[31] ,
    \LOAD_REG_GEN[0].LOAD_REG_I_0 ,
    DI,
    \LOAD_REG_GEN[4].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[8].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[12].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[16].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[20].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[24].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[28].LOAD_REG_I_0 ,
    \INFERRED_GEN.icount_out_reg[0] ,
    counter_TC,
    generateOutPre10,
    \s_axi_rdata_i_reg[0] ,
    \s_axi_rdata_i_reg[31] ,
    \s_axi_rdata_i_reg[30] ,
    \s_axi_rdata_i_reg[29] ,
    \s_axi_rdata_i_reg[28] ,
    \s_axi_rdata_i_reg[27] ,
    \s_axi_rdata_i_reg[24] ,
    \s_axi_rdata_i_reg[19] ,
    \s_axi_rdata_i_reg[18] ,
    \s_axi_rdata_i_reg[17] ,
    \s_axi_rdata_i_reg[16] ,
    \s_axi_rdata_i_reg[15] ,
    \s_axi_rdata_i_reg[14] ,
    \s_axi_rdata_i_reg[12] ,
    \s_axi_rdata_i_reg[11] ,
    \s_axi_rdata_i_reg[8] ,
    \s_axi_rdata_i_reg[7] ,
    \s_axi_rdata_i_reg[6] ,
    \s_axi_rdata_i_reg[2] ,
    \s_axi_rdata_i_reg[1] ,
    \s_axi_rdata_i_reg[26] ,
    \s_axi_rdata_i_reg[25] ,
    \s_axi_rdata_i_reg[23] ,
    \s_axi_rdata_i_reg[22] ,
    \s_axi_rdata_i_reg[21] ,
    \s_axi_rdata_i_reg[20] ,
    \s_axi_rdata_i_reg[13] ,
    \s_axi_rdata_i_reg[10] ,
    \s_axi_rdata_i_reg[9] ,
    \s_axi_rdata_i_reg[5] ,
    \s_axi_rdata_i_reg[4] ,
    \s_axi_rdata_i_reg[3] ,
    CE,
    D_2,
    s_axi_aclk,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 ,
    generateOutPre0_reg,
    S,
    s_axi_aresetn,
    \TCSR0_GENERATE[31].TCSR0_FF_I ,
    Q,
    \INFERRED_GEN.icount_out_reg[31]_0 ,
    Bus_RNW_reg_reg,
    Bus_RNW_reg_reg_0,
    Bus_RNW_reg_reg_1);
  output \INFERRED_GEN.icount_out_reg[31] ;
  output \LOAD_REG_GEN[0].LOAD_REG_I_0 ;
  output [2:0]DI;
  output [3:0]\LOAD_REG_GEN[4].LOAD_REG_I_0 ;
  output [3:0]\LOAD_REG_GEN[8].LOAD_REG_I_0 ;
  output [3:0]\LOAD_REG_GEN[12].LOAD_REG_I_0 ;
  output [3:0]\LOAD_REG_GEN[16].LOAD_REG_I_0 ;
  output [3:0]\LOAD_REG_GEN[20].LOAD_REG_I_0 ;
  output [3:0]\LOAD_REG_GEN[24].LOAD_REG_I_0 ;
  output [2:0]\LOAD_REG_GEN[28].LOAD_REG_I_0 ;
  output \INFERRED_GEN.icount_out_reg[0] ;
  output [0:0]counter_TC;
  output generateOutPre10;
  output \s_axi_rdata_i_reg[0] ;
  output \s_axi_rdata_i_reg[31] ;
  output \s_axi_rdata_i_reg[30] ;
  output \s_axi_rdata_i_reg[29] ;
  output \s_axi_rdata_i_reg[28] ;
  output \s_axi_rdata_i_reg[27] ;
  output \s_axi_rdata_i_reg[24] ;
  output \s_axi_rdata_i_reg[19] ;
  output \s_axi_rdata_i_reg[18] ;
  output \s_axi_rdata_i_reg[17] ;
  output \s_axi_rdata_i_reg[16] ;
  output \s_axi_rdata_i_reg[15] ;
  output \s_axi_rdata_i_reg[14] ;
  output \s_axi_rdata_i_reg[12] ;
  output \s_axi_rdata_i_reg[11] ;
  output \s_axi_rdata_i_reg[8] ;
  output \s_axi_rdata_i_reg[7] ;
  output \s_axi_rdata_i_reg[6] ;
  output \s_axi_rdata_i_reg[2] ;
  output \s_axi_rdata_i_reg[1] ;
  output \s_axi_rdata_i_reg[26] ;
  output \s_axi_rdata_i_reg[25] ;
  output \s_axi_rdata_i_reg[23] ;
  output \s_axi_rdata_i_reg[22] ;
  output \s_axi_rdata_i_reg[21] ;
  output \s_axi_rdata_i_reg[20] ;
  output \s_axi_rdata_i_reg[13] ;
  output \s_axi_rdata_i_reg[10] ;
  output \s_axi_rdata_i_reg[9] ;
  output \s_axi_rdata_i_reg[5] ;
  output \s_axi_rdata_i_reg[4] ;
  output \s_axi_rdata_i_reg[3] ;
  input CE;
  input D_2;
  input s_axi_aclk;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 ;
  input generateOutPre0_reg;
  input [0:0]S;
  input s_axi_aresetn;
  input \TCSR0_GENERATE[31].TCSR0_FF_I ;
  input [0:0]Q;
  input [31:0]\INFERRED_GEN.icount_out_reg[31]_0 ;
  input Bus_RNW_reg_reg;
  input Bus_RNW_reg_reg_0;
  input Bus_RNW_reg_reg_1;

  wire Bus_RNW_reg_reg;
  wire Bus_RNW_reg_reg_0;
  wire Bus_RNW_reg_reg_1;
  wire CE;
  wire [2:0]DI;
  wire D_2;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 ;
  wire \INFERRED_GEN.icount_out_reg[0] ;
  wire \INFERRED_GEN.icount_out_reg[31] ;
  wire [31:0]\INFERRED_GEN.icount_out_reg[31]_0 ;
  wire \LOAD_REG_GEN[0].LOAD_REG_I_0 ;
  wire [3:0]\LOAD_REG_GEN[12].LOAD_REG_I_0 ;
  wire [3:0]\LOAD_REG_GEN[16].LOAD_REG_I_0 ;
  wire [3:0]\LOAD_REG_GEN[20].LOAD_REG_I_0 ;
  wire [3:0]\LOAD_REG_GEN[24].LOAD_REG_I_0 ;
  wire [2:0]\LOAD_REG_GEN[28].LOAD_REG_I_0 ;
  wire [3:0]\LOAD_REG_GEN[4].LOAD_REG_I_0 ;
  wire [3:0]\LOAD_REG_GEN[8].LOAD_REG_I_0 ;
  wire [0:0]Q;
  wire [0:0]S;
  wire \TCSR0_GENERATE[31].TCSR0_FF_I ;
  wire [0:0]counter_TC;
  wire generateOutPre0_reg;
  wire generateOutPre10;
  wire [96:127]read_Mux_In;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire \s_axi_rdata_i_reg[0] ;
  wire \s_axi_rdata_i_reg[10] ;
  wire \s_axi_rdata_i_reg[11] ;
  wire \s_axi_rdata_i_reg[12] ;
  wire \s_axi_rdata_i_reg[13] ;
  wire \s_axi_rdata_i_reg[14] ;
  wire \s_axi_rdata_i_reg[15] ;
  wire \s_axi_rdata_i_reg[16] ;
  wire \s_axi_rdata_i_reg[17] ;
  wire \s_axi_rdata_i_reg[18] ;
  wire \s_axi_rdata_i_reg[19] ;
  wire \s_axi_rdata_i_reg[1] ;
  wire \s_axi_rdata_i_reg[20] ;
  wire \s_axi_rdata_i_reg[21] ;
  wire \s_axi_rdata_i_reg[22] ;
  wire \s_axi_rdata_i_reg[23] ;
  wire \s_axi_rdata_i_reg[24] ;
  wire \s_axi_rdata_i_reg[25] ;
  wire \s_axi_rdata_i_reg[26] ;
  wire \s_axi_rdata_i_reg[27] ;
  wire \s_axi_rdata_i_reg[28] ;
  wire \s_axi_rdata_i_reg[29] ;
  wire \s_axi_rdata_i_reg[2] ;
  wire \s_axi_rdata_i_reg[30] ;
  wire \s_axi_rdata_i_reg[31] ;
  wire \s_axi_rdata_i_reg[3] ;
  wire \s_axi_rdata_i_reg[4] ;
  wire \s_axi_rdata_i_reg[5] ;
  wire \s_axi_rdata_i_reg[6] ;
  wire \s_axi_rdata_i_reg[7] ;
  wire \s_axi_rdata_i_reg[8] ;
  wire \s_axi_rdata_i_reg[9] ;

  ublaze_sopc_axi_timer_0_0__counter_f COUNTER_I
       (.Bus_RNW_reg_reg(Bus_RNW_reg_reg),
        .Bus_RNW_reg_reg_0(Bus_RNW_reg_reg_0),
        .Bus_RNW_reg_reg_1(Bus_RNW_reg_reg_1),
        .\INFERRED_GEN.icount_out_reg[0]_0 (\INFERRED_GEN.icount_out_reg[0] ),
        .\INFERRED_GEN.icount_out_reg[31]_0 (\INFERRED_GEN.icount_out_reg[31] ),
        .\INFERRED_GEN.icount_out_reg[31]_1 (\INFERRED_GEN.icount_out_reg[31]_0 ),
        .\LOAD_REG_GEN[0].LOAD_REG_I (\LOAD_REG_GEN[0].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[10].LOAD_REG_I (\LOAD_REG_GEN[8].LOAD_REG_I_0 [1]),
        .\LOAD_REG_GEN[11].LOAD_REG_I (\LOAD_REG_GEN[8].LOAD_REG_I_0 [0]),
        .\LOAD_REG_GEN[12].LOAD_REG_I (\LOAD_REG_GEN[12].LOAD_REG_I_0 [3]),
        .\LOAD_REG_GEN[13].LOAD_REG_I (\LOAD_REG_GEN[12].LOAD_REG_I_0 [2]),
        .\LOAD_REG_GEN[14].LOAD_REG_I (\LOAD_REG_GEN[12].LOAD_REG_I_0 [1]),
        .\LOAD_REG_GEN[15].LOAD_REG_I (\LOAD_REG_GEN[12].LOAD_REG_I_0 [0]),
        .\LOAD_REG_GEN[16].LOAD_REG_I (\LOAD_REG_GEN[16].LOAD_REG_I_0 [3]),
        .\LOAD_REG_GEN[17].LOAD_REG_I (\LOAD_REG_GEN[16].LOAD_REG_I_0 [2]),
        .\LOAD_REG_GEN[18].LOAD_REG_I (\LOAD_REG_GEN[16].LOAD_REG_I_0 [1]),
        .\LOAD_REG_GEN[19].LOAD_REG_I (\LOAD_REG_GEN[16].LOAD_REG_I_0 [0]),
        .\LOAD_REG_GEN[1].LOAD_REG_I (DI[2]),
        .\LOAD_REG_GEN[20].LOAD_REG_I (\LOAD_REG_GEN[20].LOAD_REG_I_0 [3]),
        .\LOAD_REG_GEN[21].LOAD_REG_I (\LOAD_REG_GEN[20].LOAD_REG_I_0 [2]),
        .\LOAD_REG_GEN[22].LOAD_REG_I (\LOAD_REG_GEN[20].LOAD_REG_I_0 [1]),
        .\LOAD_REG_GEN[23].LOAD_REG_I (\LOAD_REG_GEN[20].LOAD_REG_I_0 [0]),
        .\LOAD_REG_GEN[24].LOAD_REG_I (\LOAD_REG_GEN[24].LOAD_REG_I_0 [3]),
        .\LOAD_REG_GEN[25].LOAD_REG_I (\LOAD_REG_GEN[24].LOAD_REG_I_0 [2]),
        .\LOAD_REG_GEN[26].LOAD_REG_I (\LOAD_REG_GEN[24].LOAD_REG_I_0 [1]),
        .\LOAD_REG_GEN[27].LOAD_REG_I (\LOAD_REG_GEN[24].LOAD_REG_I_0 [0]),
        .\LOAD_REG_GEN[28].LOAD_REG_I (\LOAD_REG_GEN[28].LOAD_REG_I_0 [2]),
        .\LOAD_REG_GEN[29].LOAD_REG_I (\LOAD_REG_GEN[28].LOAD_REG_I_0 [1]),
        .\LOAD_REG_GEN[2].LOAD_REG_I (DI[1]),
        .\LOAD_REG_GEN[30].LOAD_REG_I (\LOAD_REG_GEN[28].LOAD_REG_I_0 [0]),
        .\LOAD_REG_GEN[3].LOAD_REG_I (DI[0]),
        .\LOAD_REG_GEN[4].LOAD_REG_I (\LOAD_REG_GEN[4].LOAD_REG_I_0 [3]),
        .\LOAD_REG_GEN[5].LOAD_REG_I (\LOAD_REG_GEN[4].LOAD_REG_I_0 [2]),
        .\LOAD_REG_GEN[6].LOAD_REG_I (\LOAD_REG_GEN[4].LOAD_REG_I_0 [1]),
        .\LOAD_REG_GEN[7].LOAD_REG_I (\LOAD_REG_GEN[4].LOAD_REG_I_0 [0]),
        .\LOAD_REG_GEN[8].LOAD_REG_I (\LOAD_REG_GEN[8].LOAD_REG_I_0 [3]),
        .\LOAD_REG_GEN[9].LOAD_REG_I (\LOAD_REG_GEN[8].LOAD_REG_I_0 [2]),
        .Q(Q),
        .S(S),
        .\TCSR0_GENERATE[31].TCSR0_FF_I (\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .counter_TC(counter_TC),
        .generateOutPre0_reg(generateOutPre0_reg),
        .generateOutPre10(generateOutPre10),
        .read_Mux_In({read_Mux_In[96],read_Mux_In[97],read_Mux_In[98],read_Mux_In[99],read_Mux_In[100],read_Mux_In[101],read_Mux_In[102],read_Mux_In[103],read_Mux_In[104],read_Mux_In[105],read_Mux_In[106],read_Mux_In[107],read_Mux_In[108],read_Mux_In[109],read_Mux_In[110],read_Mux_In[111],read_Mux_In[112],read_Mux_In[113],read_Mux_In[114],read_Mux_In[115],read_Mux_In[116],read_Mux_In[117],read_Mux_In[118],read_Mux_In[119],read_Mux_In[120],read_Mux_In[121],read_Mux_In[122],read_Mux_In[123],read_Mux_In[124],read_Mux_In[125],read_Mux_In[126],read_Mux_In[127]}),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .\s_axi_rdata_i_reg[0] (\s_axi_rdata_i_reg[0] ),
        .\s_axi_rdata_i_reg[10] (\s_axi_rdata_i_reg[10] ),
        .\s_axi_rdata_i_reg[11] (\s_axi_rdata_i_reg[11] ),
        .\s_axi_rdata_i_reg[12] (\s_axi_rdata_i_reg[12] ),
        .\s_axi_rdata_i_reg[13] (\s_axi_rdata_i_reg[13] ),
        .\s_axi_rdata_i_reg[14] (\s_axi_rdata_i_reg[14] ),
        .\s_axi_rdata_i_reg[15] (\s_axi_rdata_i_reg[15] ),
        .\s_axi_rdata_i_reg[16] (\s_axi_rdata_i_reg[16] ),
        .\s_axi_rdata_i_reg[17] (\s_axi_rdata_i_reg[17] ),
        .\s_axi_rdata_i_reg[18] (\s_axi_rdata_i_reg[18] ),
        .\s_axi_rdata_i_reg[19] (\s_axi_rdata_i_reg[19] ),
        .\s_axi_rdata_i_reg[1] (\s_axi_rdata_i_reg[1] ),
        .\s_axi_rdata_i_reg[20] (\s_axi_rdata_i_reg[20] ),
        .\s_axi_rdata_i_reg[21] (\s_axi_rdata_i_reg[21] ),
        .\s_axi_rdata_i_reg[22] (\s_axi_rdata_i_reg[22] ),
        .\s_axi_rdata_i_reg[23] (\s_axi_rdata_i_reg[23] ),
        .\s_axi_rdata_i_reg[24] (\s_axi_rdata_i_reg[24] ),
        .\s_axi_rdata_i_reg[25] (\s_axi_rdata_i_reg[25] ),
        .\s_axi_rdata_i_reg[26] (\s_axi_rdata_i_reg[26] ),
        .\s_axi_rdata_i_reg[27] (\s_axi_rdata_i_reg[27] ),
        .\s_axi_rdata_i_reg[28] (\s_axi_rdata_i_reg[28] ),
        .\s_axi_rdata_i_reg[29] (\s_axi_rdata_i_reg[29] ),
        .\s_axi_rdata_i_reg[2] (\s_axi_rdata_i_reg[2] ),
        .\s_axi_rdata_i_reg[30] (\s_axi_rdata_i_reg[30] ),
        .\s_axi_rdata_i_reg[31] (\s_axi_rdata_i_reg[31] ),
        .\s_axi_rdata_i_reg[3] (\s_axi_rdata_i_reg[3] ),
        .\s_axi_rdata_i_reg[4] (\s_axi_rdata_i_reg[4] ),
        .\s_axi_rdata_i_reg[5] (\s_axi_rdata_i_reg[5] ),
        .\s_axi_rdata_i_reg[6] (\s_axi_rdata_i_reg[6] ),
        .\s_axi_rdata_i_reg[7] (\s_axi_rdata_i_reg[7] ),
        .\s_axi_rdata_i_reg[8] (\s_axi_rdata_i_reg[8] ),
        .\s_axi_rdata_i_reg[9] (\s_axi_rdata_i_reg[9] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[0].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(D_2),
        .Q(read_Mux_In[96]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[10].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 ),
        .Q(read_Mux_In[106]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[11].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 ),
        .Q(read_Mux_In[107]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[12].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 ),
        .Q(read_Mux_In[108]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[13].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 ),
        .Q(read_Mux_In[109]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[14].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 ),
        .Q(read_Mux_In[110]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[15].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 ),
        .Q(read_Mux_In[111]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[16].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 ),
        .Q(read_Mux_In[112]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[17].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 ),
        .Q(read_Mux_In[113]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[18].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 ),
        .Q(read_Mux_In[114]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[19].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 ),
        .Q(read_Mux_In[115]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[1].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ),
        .Q(read_Mux_In[97]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[20].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 ),
        .Q(read_Mux_In[116]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[21].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 ),
        .Q(read_Mux_In[117]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[22].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 ),
        .Q(read_Mux_In[118]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[23].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 ),
        .Q(read_Mux_In[119]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[24].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 ),
        .Q(read_Mux_In[120]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[25].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 ),
        .Q(read_Mux_In[121]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[26].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 ),
        .Q(read_Mux_In[122]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[27].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 ),
        .Q(read_Mux_In[123]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[28].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 ),
        .Q(read_Mux_In[124]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[29].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 ),
        .Q(read_Mux_In[125]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[2].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ),
        .Q(read_Mux_In[98]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[30].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 ),
        .Q(read_Mux_In[126]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[31].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 ),
        .Q(read_Mux_In[127]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[3].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 ),
        .Q(read_Mux_In[99]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[4].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 ),
        .Q(read_Mux_In[100]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[5].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 ),
        .Q(read_Mux_In[101]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[6].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 ),
        .Q(read_Mux_In[102]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[7].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 ),
        .Q(read_Mux_In[103]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[8].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 ),
        .Q(read_Mux_In[104]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \LOAD_REG_GEN[9].LOAD_REG_I 
       (.C(s_axi_aclk),
        .CE(CE),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 ),
        .Q(read_Mux_In[105]),
        .R(\INFERRED_GEN.icount_out_reg[31] ));
endmodule

(* ORIG_REF_NAME = "counter_f" *) 
module ublaze_sopc_axi_timer_0_0__counter_f
   (\LOAD_REG_GEN[0].LOAD_REG_I ,
    \INFERRED_GEN.icount_out_reg[31]_0 ,
    \LOAD_REG_GEN[1].LOAD_REG_I ,
    \LOAD_REG_GEN[2].LOAD_REG_I ,
    \LOAD_REG_GEN[3].LOAD_REG_I ,
    \LOAD_REG_GEN[4].LOAD_REG_I ,
    \LOAD_REG_GEN[5].LOAD_REG_I ,
    \LOAD_REG_GEN[6].LOAD_REG_I ,
    \LOAD_REG_GEN[7].LOAD_REG_I ,
    \LOAD_REG_GEN[8].LOAD_REG_I ,
    \LOAD_REG_GEN[9].LOAD_REG_I ,
    \LOAD_REG_GEN[10].LOAD_REG_I ,
    \LOAD_REG_GEN[11].LOAD_REG_I ,
    \LOAD_REG_GEN[12].LOAD_REG_I ,
    \LOAD_REG_GEN[13].LOAD_REG_I ,
    \LOAD_REG_GEN[14].LOAD_REG_I ,
    \LOAD_REG_GEN[15].LOAD_REG_I ,
    \LOAD_REG_GEN[16].LOAD_REG_I ,
    \LOAD_REG_GEN[17].LOAD_REG_I ,
    \LOAD_REG_GEN[18].LOAD_REG_I ,
    \LOAD_REG_GEN[19].LOAD_REG_I ,
    \LOAD_REG_GEN[20].LOAD_REG_I ,
    \LOAD_REG_GEN[21].LOAD_REG_I ,
    \LOAD_REG_GEN[22].LOAD_REG_I ,
    \LOAD_REG_GEN[23].LOAD_REG_I ,
    \LOAD_REG_GEN[24].LOAD_REG_I ,
    \LOAD_REG_GEN[25].LOAD_REG_I ,
    \LOAD_REG_GEN[26].LOAD_REG_I ,
    \LOAD_REG_GEN[27].LOAD_REG_I ,
    \LOAD_REG_GEN[28].LOAD_REG_I ,
    \LOAD_REG_GEN[29].LOAD_REG_I ,
    \LOAD_REG_GEN[30].LOAD_REG_I ,
    \INFERRED_GEN.icount_out_reg[0]_0 ,
    counter_TC,
    generateOutPre10,
    \s_axi_rdata_i_reg[0] ,
    \s_axi_rdata_i_reg[31] ,
    \s_axi_rdata_i_reg[30] ,
    \s_axi_rdata_i_reg[29] ,
    \s_axi_rdata_i_reg[28] ,
    \s_axi_rdata_i_reg[27] ,
    \s_axi_rdata_i_reg[24] ,
    \s_axi_rdata_i_reg[19] ,
    \s_axi_rdata_i_reg[18] ,
    \s_axi_rdata_i_reg[17] ,
    \s_axi_rdata_i_reg[16] ,
    \s_axi_rdata_i_reg[15] ,
    \s_axi_rdata_i_reg[14] ,
    \s_axi_rdata_i_reg[12] ,
    \s_axi_rdata_i_reg[11] ,
    \s_axi_rdata_i_reg[8] ,
    \s_axi_rdata_i_reg[7] ,
    \s_axi_rdata_i_reg[6] ,
    \s_axi_rdata_i_reg[2] ,
    \s_axi_rdata_i_reg[1] ,
    \s_axi_rdata_i_reg[26] ,
    \s_axi_rdata_i_reg[25] ,
    \s_axi_rdata_i_reg[23] ,
    \s_axi_rdata_i_reg[22] ,
    \s_axi_rdata_i_reg[21] ,
    \s_axi_rdata_i_reg[20] ,
    \s_axi_rdata_i_reg[13] ,
    \s_axi_rdata_i_reg[10] ,
    \s_axi_rdata_i_reg[9] ,
    \s_axi_rdata_i_reg[5] ,
    \s_axi_rdata_i_reg[4] ,
    \s_axi_rdata_i_reg[3] ,
    generateOutPre0_reg,
    s_axi_aclk,
    S,
    s_axi_aresetn,
    \TCSR0_GENERATE[31].TCSR0_FF_I ,
    Q,
    \INFERRED_GEN.icount_out_reg[31]_1 ,
    Bus_RNW_reg_reg,
    read_Mux_In,
    Bus_RNW_reg_reg_0,
    Bus_RNW_reg_reg_1);
  output \LOAD_REG_GEN[0].LOAD_REG_I ;
  output \INFERRED_GEN.icount_out_reg[31]_0 ;
  output \LOAD_REG_GEN[1].LOAD_REG_I ;
  output \LOAD_REG_GEN[2].LOAD_REG_I ;
  output \LOAD_REG_GEN[3].LOAD_REG_I ;
  output \LOAD_REG_GEN[4].LOAD_REG_I ;
  output \LOAD_REG_GEN[5].LOAD_REG_I ;
  output \LOAD_REG_GEN[6].LOAD_REG_I ;
  output \LOAD_REG_GEN[7].LOAD_REG_I ;
  output \LOAD_REG_GEN[8].LOAD_REG_I ;
  output \LOAD_REG_GEN[9].LOAD_REG_I ;
  output \LOAD_REG_GEN[10].LOAD_REG_I ;
  output \LOAD_REG_GEN[11].LOAD_REG_I ;
  output \LOAD_REG_GEN[12].LOAD_REG_I ;
  output \LOAD_REG_GEN[13].LOAD_REG_I ;
  output \LOAD_REG_GEN[14].LOAD_REG_I ;
  output \LOAD_REG_GEN[15].LOAD_REG_I ;
  output \LOAD_REG_GEN[16].LOAD_REG_I ;
  output \LOAD_REG_GEN[17].LOAD_REG_I ;
  output \LOAD_REG_GEN[18].LOAD_REG_I ;
  output \LOAD_REG_GEN[19].LOAD_REG_I ;
  output \LOAD_REG_GEN[20].LOAD_REG_I ;
  output \LOAD_REG_GEN[21].LOAD_REG_I ;
  output \LOAD_REG_GEN[22].LOAD_REG_I ;
  output \LOAD_REG_GEN[23].LOAD_REG_I ;
  output \LOAD_REG_GEN[24].LOAD_REG_I ;
  output \LOAD_REG_GEN[25].LOAD_REG_I ;
  output \LOAD_REG_GEN[26].LOAD_REG_I ;
  output \LOAD_REG_GEN[27].LOAD_REG_I ;
  output \LOAD_REG_GEN[28].LOAD_REG_I ;
  output \LOAD_REG_GEN[29].LOAD_REG_I ;
  output \LOAD_REG_GEN[30].LOAD_REG_I ;
  output \INFERRED_GEN.icount_out_reg[0]_0 ;
  output [0:0]counter_TC;
  output generateOutPre10;
  output \s_axi_rdata_i_reg[0] ;
  output \s_axi_rdata_i_reg[31] ;
  output \s_axi_rdata_i_reg[30] ;
  output \s_axi_rdata_i_reg[29] ;
  output \s_axi_rdata_i_reg[28] ;
  output \s_axi_rdata_i_reg[27] ;
  output \s_axi_rdata_i_reg[24] ;
  output \s_axi_rdata_i_reg[19] ;
  output \s_axi_rdata_i_reg[18] ;
  output \s_axi_rdata_i_reg[17] ;
  output \s_axi_rdata_i_reg[16] ;
  output \s_axi_rdata_i_reg[15] ;
  output \s_axi_rdata_i_reg[14] ;
  output \s_axi_rdata_i_reg[12] ;
  output \s_axi_rdata_i_reg[11] ;
  output \s_axi_rdata_i_reg[8] ;
  output \s_axi_rdata_i_reg[7] ;
  output \s_axi_rdata_i_reg[6] ;
  output \s_axi_rdata_i_reg[2] ;
  output \s_axi_rdata_i_reg[1] ;
  output \s_axi_rdata_i_reg[26] ;
  output \s_axi_rdata_i_reg[25] ;
  output \s_axi_rdata_i_reg[23] ;
  output \s_axi_rdata_i_reg[22] ;
  output \s_axi_rdata_i_reg[21] ;
  output \s_axi_rdata_i_reg[20] ;
  output \s_axi_rdata_i_reg[13] ;
  output \s_axi_rdata_i_reg[10] ;
  output \s_axi_rdata_i_reg[9] ;
  output \s_axi_rdata_i_reg[5] ;
  output \s_axi_rdata_i_reg[4] ;
  output \s_axi_rdata_i_reg[3] ;
  input generateOutPre0_reg;
  input s_axi_aclk;
  input [0:0]S;
  input s_axi_aresetn;
  input \TCSR0_GENERATE[31].TCSR0_FF_I ;
  input [0:0]Q;
  input [31:0]\INFERRED_GEN.icount_out_reg[31]_1 ;
  input Bus_RNW_reg_reg;
  input [31:0]read_Mux_In;
  input Bus_RNW_reg_reg_0;
  input Bus_RNW_reg_reg_1;

  wire Bus_RNW_reg_reg;
  wire Bus_RNW_reg_reg_0;
  wire Bus_RNW_reg_reg_1;
  wire \INFERRED_GEN.icount_out[0]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[10]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[11]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[12]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[13]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[14]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[15]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[16]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[17]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[18]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[19]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[1]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[20]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[21]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[22]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[23]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[24]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[25]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[26]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[27]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[28]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[29]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[2]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[30]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_2_n_0 ;
  wire \INFERRED_GEN.icount_out[32]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[3]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[4]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[5]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[6]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[7]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[8]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out[9]_i_1_n_0 ;
  wire \INFERRED_GEN.icount_out_reg[0]_0 ;
  wire \INFERRED_GEN.icount_out_reg[31]_0 ;
  wire [31:0]\INFERRED_GEN.icount_out_reg[31]_1 ;
  wire \LOAD_REG_GEN[0].LOAD_REG_I ;
  wire \LOAD_REG_GEN[10].LOAD_REG_I ;
  wire \LOAD_REG_GEN[11].LOAD_REG_I ;
  wire \LOAD_REG_GEN[12].LOAD_REG_I ;
  wire \LOAD_REG_GEN[13].LOAD_REG_I ;
  wire \LOAD_REG_GEN[14].LOAD_REG_I ;
  wire \LOAD_REG_GEN[15].LOAD_REG_I ;
  wire \LOAD_REG_GEN[16].LOAD_REG_I ;
  wire \LOAD_REG_GEN[17].LOAD_REG_I ;
  wire \LOAD_REG_GEN[18].LOAD_REG_I ;
  wire \LOAD_REG_GEN[19].LOAD_REG_I ;
  wire \LOAD_REG_GEN[1].LOAD_REG_I ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I ;
  wire \LOAD_REG_GEN[21].LOAD_REG_I ;
  wire \LOAD_REG_GEN[22].LOAD_REG_I ;
  wire \LOAD_REG_GEN[23].LOAD_REG_I ;
  wire \LOAD_REG_GEN[24].LOAD_REG_I ;
  wire \LOAD_REG_GEN[25].LOAD_REG_I ;
  wire \LOAD_REG_GEN[26].LOAD_REG_I ;
  wire \LOAD_REG_GEN[27].LOAD_REG_I ;
  wire \LOAD_REG_GEN[28].LOAD_REG_I ;
  wire \LOAD_REG_GEN[29].LOAD_REG_I ;
  wire \LOAD_REG_GEN[2].LOAD_REG_I ;
  wire \LOAD_REG_GEN[30].LOAD_REG_I ;
  wire \LOAD_REG_GEN[3].LOAD_REG_I ;
  wire \LOAD_REG_GEN[4].LOAD_REG_I ;
  wire \LOAD_REG_GEN[5].LOAD_REG_I ;
  wire \LOAD_REG_GEN[6].LOAD_REG_I ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I ;
  wire \LOAD_REG_GEN[8].LOAD_REG_I ;
  wire \LOAD_REG_GEN[9].LOAD_REG_I ;
  wire [0:0]Q;
  wire [0:0]S;
  wire \TCSR0_GENERATE[31].TCSR0_FF_I ;
  wire [0:0]counter_TC;
  wire generateOutPre0_reg;
  wire generateOutPre10;
  wire icount_out0_carry__0_i_1_n_0;
  wire icount_out0_carry__0_i_2_n_0;
  wire icount_out0_carry__0_i_3_n_0;
  wire icount_out0_carry__0_i_4_n_0;
  wire icount_out0_carry__0_n_0;
  wire icount_out0_carry__0_n_4;
  wire icount_out0_carry__0_n_5;
  wire icount_out0_carry__0_n_6;
  wire icount_out0_carry__0_n_7;
  wire icount_out0_carry__1_i_1_n_0;
  wire icount_out0_carry__1_i_2_n_0;
  wire icount_out0_carry__1_i_3_n_0;
  wire icount_out0_carry__1_i_4_n_0;
  wire icount_out0_carry__1_n_0;
  wire icount_out0_carry__1_n_4;
  wire icount_out0_carry__1_n_5;
  wire icount_out0_carry__1_n_6;
  wire icount_out0_carry__1_n_7;
  wire icount_out0_carry__2_i_1_n_0;
  wire icount_out0_carry__2_i_2_n_0;
  wire icount_out0_carry__2_i_3_n_0;
  wire icount_out0_carry__2_i_4_n_0;
  wire icount_out0_carry__2_n_0;
  wire icount_out0_carry__2_n_4;
  wire icount_out0_carry__2_n_5;
  wire icount_out0_carry__2_n_6;
  wire icount_out0_carry__2_n_7;
  wire icount_out0_carry__3_i_1_n_0;
  wire icount_out0_carry__3_i_2_n_0;
  wire icount_out0_carry__3_i_3_n_0;
  wire icount_out0_carry__3_i_4_n_0;
  wire icount_out0_carry__3_n_0;
  wire icount_out0_carry__3_n_4;
  wire icount_out0_carry__3_n_5;
  wire icount_out0_carry__3_n_6;
  wire icount_out0_carry__3_n_7;
  wire icount_out0_carry__4_i_1_n_0;
  wire icount_out0_carry__4_i_2_n_0;
  wire icount_out0_carry__4_i_3_n_0;
  wire icount_out0_carry__4_i_4_n_0;
  wire icount_out0_carry__4_n_0;
  wire icount_out0_carry__4_n_4;
  wire icount_out0_carry__4_n_5;
  wire icount_out0_carry__4_n_6;
  wire icount_out0_carry__4_n_7;
  wire icount_out0_carry__5_i_1_n_0;
  wire icount_out0_carry__5_i_2_n_0;
  wire icount_out0_carry__5_i_3_n_0;
  wire icount_out0_carry__5_i_4_n_0;
  wire icount_out0_carry__5_n_0;
  wire icount_out0_carry__5_n_4;
  wire icount_out0_carry__5_n_5;
  wire icount_out0_carry__5_n_6;
  wire icount_out0_carry__5_n_7;
  wire icount_out0_carry__6_i_1_n_0;
  wire icount_out0_carry__6_i_2_n_0;
  wire icount_out0_carry__6_i_3_n_0;
  wire icount_out0_carry__6_i_4_n_0;
  wire icount_out0_carry__6_n_4;
  wire icount_out0_carry__6_n_5;
  wire icount_out0_carry__6_n_6;
  wire icount_out0_carry__6_n_7;
  wire icount_out0_carry_i_1_n_0;
  wire icount_out0_carry_i_2_n_0;
  wire icount_out0_carry_i_3_n_0;
  wire icount_out0_carry_i_4_n_0;
  wire icount_out0_carry_n_0;
  wire icount_out0_carry_n_4;
  wire icount_out0_carry_n_5;
  wire icount_out0_carry_n_6;
  wire icount_out0_carry_n_7;
  wire [31:0]read_Mux_In;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire \s_axi_rdata_i_reg[0] ;
  wire \s_axi_rdata_i_reg[10] ;
  wire \s_axi_rdata_i_reg[11] ;
  wire \s_axi_rdata_i_reg[12] ;
  wire \s_axi_rdata_i_reg[13] ;
  wire \s_axi_rdata_i_reg[14] ;
  wire \s_axi_rdata_i_reg[15] ;
  wire \s_axi_rdata_i_reg[16] ;
  wire \s_axi_rdata_i_reg[17] ;
  wire \s_axi_rdata_i_reg[18] ;
  wire \s_axi_rdata_i_reg[19] ;
  wire \s_axi_rdata_i_reg[1] ;
  wire \s_axi_rdata_i_reg[20] ;
  wire \s_axi_rdata_i_reg[21] ;
  wire \s_axi_rdata_i_reg[22] ;
  wire \s_axi_rdata_i_reg[23] ;
  wire \s_axi_rdata_i_reg[24] ;
  wire \s_axi_rdata_i_reg[25] ;
  wire \s_axi_rdata_i_reg[26] ;
  wire \s_axi_rdata_i_reg[27] ;
  wire \s_axi_rdata_i_reg[28] ;
  wire \s_axi_rdata_i_reg[29] ;
  wire \s_axi_rdata_i_reg[2] ;
  wire \s_axi_rdata_i_reg[30] ;
  wire \s_axi_rdata_i_reg[31] ;
  wire \s_axi_rdata_i_reg[3] ;
  wire \s_axi_rdata_i_reg[4] ;
  wire \s_axi_rdata_i_reg[5] ;
  wire \s_axi_rdata_i_reg[6] ;
  wire \s_axi_rdata_i_reg[7] ;
  wire \s_axi_rdata_i_reg[8] ;
  wire \s_axi_rdata_i_reg[9] ;
  wire [2:0]NLW_icount_out0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_icount_out0_carry__6_CO_UNCONNECTED;

  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [31]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[31]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[0].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[31] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\LOAD_REG_GEN[10].LOAD_REG_I ),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [21]),
        .I3(Bus_RNW_reg_reg),
        .I4(read_Mux_In[21]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[21] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\LOAD_REG_GEN[11].LOAD_REG_I ),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [20]),
        .I3(Bus_RNW_reg_reg),
        .I4(read_Mux_In[20]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[20] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [19]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[19]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[12].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[19] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [18]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[18]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[13].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[18] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [17]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[17]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[14].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[17] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [16]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[15].LOAD_REG_I ),
        .I3(Bus_RNW_reg_reg_1),
        .I4(read_Mux_In[16]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[16] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [15]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[15]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[16].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[15] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [14]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[17].LOAD_REG_I ),
        .I3(Bus_RNW_reg_reg_1),
        .I4(read_Mux_In[14]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[14] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\LOAD_REG_GEN[18].LOAD_REG_I ),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [13]),
        .I3(Bus_RNW_reg_reg),
        .I4(read_Mux_In[13]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[13] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [12]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[12]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[19].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[12] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [30]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[1].LOAD_REG_I ),
        .I3(Bus_RNW_reg_reg_1),
        .I4(read_Mux_In[30]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[30] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [11]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[11]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[20].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[11] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[10]),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [10]),
        .I3(Bus_RNW_reg_reg),
        .I4(\LOAD_REG_GEN[21].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[10] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\LOAD_REG_GEN[22].LOAD_REG_I ),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [9]),
        .I3(Bus_RNW_reg_reg),
        .I4(read_Mux_In[9]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[9] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [8]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[8]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[23].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[8] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [7]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[7]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[24].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[7] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [6]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[6]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[25].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[6] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[5]),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\LOAD_REG_GEN[26].LOAD_REG_I ),
        .I3(Bus_RNW_reg_reg_1),
        .I4(\INFERRED_GEN.icount_out_reg[31]_1 [5]),
        .I5(Bus_RNW_reg_reg),
        .O(\s_axi_rdata_i_reg[5] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[4]),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\LOAD_REG_GEN[27].LOAD_REG_I ),
        .I3(Bus_RNW_reg_reg_1),
        .I4(\INFERRED_GEN.icount_out_reg[31]_1 [4]),
        .I5(Bus_RNW_reg_reg),
        .O(\s_axi_rdata_i_reg[4] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[3]),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [3]),
        .I3(Bus_RNW_reg_reg),
        .I4(\LOAD_REG_GEN[28].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[3] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [2]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[2]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[29].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[2] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [29]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[2].LOAD_REG_I ),
        .I3(Bus_RNW_reg_reg_1),
        .I4(read_Mux_In[29]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[29] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [1]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[1]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[30].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[1] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [0]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[0]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\INFERRED_GEN.icount_out_reg[0]_0 ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[0] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [28]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[28]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[3].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[28] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [27]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[27]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[4].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[27] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\LOAD_REG_GEN[5].LOAD_REG_I ),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [26]),
        .I3(Bus_RNW_reg_reg),
        .I4(read_Mux_In[26]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[26] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\LOAD_REG_GEN[6].LOAD_REG_I ),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [25]),
        .I3(Bus_RNW_reg_reg),
        .I4(read_Mux_In[25]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[25] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\INFERRED_GEN.icount_out_reg[31]_1 [24]),
        .I1(Bus_RNW_reg_reg),
        .I2(read_Mux_In[24]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(\LOAD_REG_GEN[7].LOAD_REG_I ),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[24] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\LOAD_REG_GEN[8].LOAD_REG_I ),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [23]),
        .I3(Bus_RNW_reg_reg),
        .I4(read_Mux_In[23]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[23] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[1].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(\LOAD_REG_GEN[9].LOAD_REG_I ),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\INFERRED_GEN.icount_out_reg[31]_1 [22]),
        .I3(Bus_RNW_reg_reg),
        .I4(read_Mux_In[22]),
        .I5(Bus_RNW_reg_reg_0),
        .O(\s_axi_rdata_i_reg[22] ));
  LUT1 #(
    .INIT(2'h1)) 
    GenerateOut0_i_1
       (.I0(s_axi_aresetn),
        .O(\INFERRED_GEN.icount_out_reg[31]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \INFERRED_GEN.icount_out[0]_i_1 
       (.I0(read_Mux_In[0]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(\INFERRED_GEN.icount_out_reg[0]_0 ),
        .O(\INFERRED_GEN.icount_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[10]_i_1 
       (.I0(read_Mux_In[10]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__1_n_6),
        .O(\INFERRED_GEN.icount_out[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[11]_i_1 
       (.I0(read_Mux_In[11]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__1_n_5),
        .O(\INFERRED_GEN.icount_out[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[12]_i_1 
       (.I0(read_Mux_In[12]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__1_n_4),
        .O(\INFERRED_GEN.icount_out[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[13]_i_1 
       (.I0(read_Mux_In[13]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__2_n_7),
        .O(\INFERRED_GEN.icount_out[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[14]_i_1 
       (.I0(read_Mux_In[14]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__2_n_6),
        .O(\INFERRED_GEN.icount_out[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[15]_i_1 
       (.I0(read_Mux_In[15]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__2_n_5),
        .O(\INFERRED_GEN.icount_out[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[16]_i_1 
       (.I0(read_Mux_In[16]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__2_n_4),
        .O(\INFERRED_GEN.icount_out[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[17]_i_1 
       (.I0(read_Mux_In[17]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__3_n_7),
        .O(\INFERRED_GEN.icount_out[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[18]_i_1 
       (.I0(read_Mux_In[18]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__3_n_6),
        .O(\INFERRED_GEN.icount_out[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[19]_i_1 
       (.I0(read_Mux_In[19]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__3_n_5),
        .O(\INFERRED_GEN.icount_out[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[1]_i_1 
       (.I0(read_Mux_In[1]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry_n_7),
        .O(\INFERRED_GEN.icount_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[20]_i_1 
       (.I0(read_Mux_In[20]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__3_n_4),
        .O(\INFERRED_GEN.icount_out[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[21]_i_1 
       (.I0(read_Mux_In[21]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__4_n_7),
        .O(\INFERRED_GEN.icount_out[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[22]_i_1 
       (.I0(read_Mux_In[22]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__4_n_6),
        .O(\INFERRED_GEN.icount_out[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[23]_i_1 
       (.I0(read_Mux_In[23]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__4_n_5),
        .O(\INFERRED_GEN.icount_out[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[24]_i_1 
       (.I0(read_Mux_In[24]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__4_n_4),
        .O(\INFERRED_GEN.icount_out[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[25]_i_1 
       (.I0(read_Mux_In[25]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__5_n_7),
        .O(\INFERRED_GEN.icount_out[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[26]_i_1 
       (.I0(read_Mux_In[26]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__5_n_6),
        .O(\INFERRED_GEN.icount_out[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[27]_i_1 
       (.I0(read_Mux_In[27]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__5_n_5),
        .O(\INFERRED_GEN.icount_out[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[28]_i_1 
       (.I0(read_Mux_In[28]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__5_n_4),
        .O(\INFERRED_GEN.icount_out[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[29]_i_1 
       (.I0(read_Mux_In[29]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__6_n_7),
        .O(\INFERRED_GEN.icount_out[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[2]_i_1 
       (.I0(read_Mux_In[2]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry_n_6),
        .O(\INFERRED_GEN.icount_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[30]_i_1 
       (.I0(read_Mux_In[30]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__6_n_6),
        .O(\INFERRED_GEN.icount_out[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[31]_i_2 
       (.I0(read_Mux_In[31]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__6_n_5),
        .O(\INFERRED_GEN.icount_out[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000B800)) 
    \INFERRED_GEN.icount_out[32]_i_1 
       (.I0(icount_out0_carry__6_n_4),
        .I1(generateOutPre0_reg),
        .I2(counter_TC),
        .I3(s_axi_aresetn),
        .I4(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .O(\INFERRED_GEN.icount_out[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[3]_i_1 
       (.I0(read_Mux_In[3]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry_n_5),
        .O(\INFERRED_GEN.icount_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[4]_i_1 
       (.I0(read_Mux_In[4]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry_n_4),
        .O(\INFERRED_GEN.icount_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[5]_i_1 
       (.I0(read_Mux_In[5]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__0_n_7),
        .O(\INFERRED_GEN.icount_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[6]_i_1 
       (.I0(read_Mux_In[6]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__0_n_6),
        .O(\INFERRED_GEN.icount_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[7]_i_1 
       (.I0(read_Mux_In[7]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__0_n_5),
        .O(\INFERRED_GEN.icount_out[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[8]_i_1 
       (.I0(read_Mux_In[8]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__0_n_4),
        .O(\INFERRED_GEN.icount_out[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[9]_i_1 
       (.I0(read_Mux_In[9]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__1_n_7),
        .O(\INFERRED_GEN.icount_out[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[0] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[0]_i_1_n_0 ),
        .Q(\INFERRED_GEN.icount_out_reg[0]_0 ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[10] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[10]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[21].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[11] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[11]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[20].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[12] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[12]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[19].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[13] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[13]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[18].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[14] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[14]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[17].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[15] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[15]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[16].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[16] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[16]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[15].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[17] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[17]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[14].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[18] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[18]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[13].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[19] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[19]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[12].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[1] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[1]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[30].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[20] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[20]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[11].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[21] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[21]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[10].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[22] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[22]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[9].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[23] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[23]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[8].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[24] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[24]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[7].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[25] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[25]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[6].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[26] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[26]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[5].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[27] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[27]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[4].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[28] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[28]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[3].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[29] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[29]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[2].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[2] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[2]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[29].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[30] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[30]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[1].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[31] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[31]_i_2_n_0 ),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[32] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\INFERRED_GEN.icount_out[32]_i_1_n_0 ),
        .Q(counter_TC),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[3] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[3]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[28].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[4] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[4]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[27].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[5] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[5]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[26].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[6] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[6]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[25].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[7] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[7]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[24].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[8] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[8]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[23].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[9] 
       (.C(s_axi_aclk),
        .CE(generateOutPre0_reg),
        .D(\INFERRED_GEN.icount_out[9]_i_1_n_0 ),
        .Q(\LOAD_REG_GEN[22].LOAD_REG_I ),
        .R(\INFERRED_GEN.icount_out_reg[31]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    generateOutPre1_i_1
       (.I0(counter_TC),
        .I1(Q),
        .O(generateOutPre10));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry
       (.CI(1'b0),
        .CO({icount_out0_carry_n_0,NLW_icount_out0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(\INFERRED_GEN.icount_out_reg[0]_0 ),
        .DI({\LOAD_REG_GEN[28].LOAD_REG_I ,\LOAD_REG_GEN[29].LOAD_REG_I ,\LOAD_REG_GEN[30].LOAD_REG_I ,icount_out0_carry_i_1_n_0}),
        .O({icount_out0_carry_n_4,icount_out0_carry_n_5,icount_out0_carry_n_6,icount_out0_carry_n_7}),
        .S({icount_out0_carry_i_2_n_0,icount_out0_carry_i_3_n_0,icount_out0_carry_i_4_n_0,S}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__0
       (.CI(icount_out0_carry_n_0),
        .CO({icount_out0_carry__0_n_0,NLW_icount_out0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\LOAD_REG_GEN[24].LOAD_REG_I ,\LOAD_REG_GEN[25].LOAD_REG_I ,\LOAD_REG_GEN[26].LOAD_REG_I ,\LOAD_REG_GEN[27].LOAD_REG_I }),
        .O({icount_out0_carry__0_n_4,icount_out0_carry__0_n_5,icount_out0_carry__0_n_6,icount_out0_carry__0_n_7}),
        .S({icount_out0_carry__0_i_1_n_0,icount_out0_carry__0_i_2_n_0,icount_out0_carry__0_i_3_n_0,icount_out0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__0_i_1
       (.I0(\LOAD_REG_GEN[24].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[23].LOAD_REG_I ),
        .O(icount_out0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__0_i_2
       (.I0(\LOAD_REG_GEN[25].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[24].LOAD_REG_I ),
        .O(icount_out0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__0_i_3
       (.I0(\LOAD_REG_GEN[26].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[25].LOAD_REG_I ),
        .O(icount_out0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__0_i_4
       (.I0(\LOAD_REG_GEN[27].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[26].LOAD_REG_I ),
        .O(icount_out0_carry__0_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__1
       (.CI(icount_out0_carry__0_n_0),
        .CO({icount_out0_carry__1_n_0,NLW_icount_out0_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\LOAD_REG_GEN[20].LOAD_REG_I ,\LOAD_REG_GEN[21].LOAD_REG_I ,\LOAD_REG_GEN[22].LOAD_REG_I ,\LOAD_REG_GEN[23].LOAD_REG_I }),
        .O({icount_out0_carry__1_n_4,icount_out0_carry__1_n_5,icount_out0_carry__1_n_6,icount_out0_carry__1_n_7}),
        .S({icount_out0_carry__1_i_1_n_0,icount_out0_carry__1_i_2_n_0,icount_out0_carry__1_i_3_n_0,icount_out0_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__1_i_1
       (.I0(\LOAD_REG_GEN[20].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[19].LOAD_REG_I ),
        .O(icount_out0_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__1_i_2
       (.I0(\LOAD_REG_GEN[21].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[20].LOAD_REG_I ),
        .O(icount_out0_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__1_i_3
       (.I0(\LOAD_REG_GEN[22].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[21].LOAD_REG_I ),
        .O(icount_out0_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__1_i_4
       (.I0(\LOAD_REG_GEN[23].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[22].LOAD_REG_I ),
        .O(icount_out0_carry__1_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__2
       (.CI(icount_out0_carry__1_n_0),
        .CO({icount_out0_carry__2_n_0,NLW_icount_out0_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\LOAD_REG_GEN[16].LOAD_REG_I ,\LOAD_REG_GEN[17].LOAD_REG_I ,\LOAD_REG_GEN[18].LOAD_REG_I ,\LOAD_REG_GEN[19].LOAD_REG_I }),
        .O({icount_out0_carry__2_n_4,icount_out0_carry__2_n_5,icount_out0_carry__2_n_6,icount_out0_carry__2_n_7}),
        .S({icount_out0_carry__2_i_1_n_0,icount_out0_carry__2_i_2_n_0,icount_out0_carry__2_i_3_n_0,icount_out0_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__2_i_1
       (.I0(\LOAD_REG_GEN[16].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[15].LOAD_REG_I ),
        .O(icount_out0_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__2_i_2
       (.I0(\LOAD_REG_GEN[17].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[16].LOAD_REG_I ),
        .O(icount_out0_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__2_i_3
       (.I0(\LOAD_REG_GEN[18].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[17].LOAD_REG_I ),
        .O(icount_out0_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__2_i_4
       (.I0(\LOAD_REG_GEN[19].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[18].LOAD_REG_I ),
        .O(icount_out0_carry__2_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__3
       (.CI(icount_out0_carry__2_n_0),
        .CO({icount_out0_carry__3_n_0,NLW_icount_out0_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\LOAD_REG_GEN[12].LOAD_REG_I ,\LOAD_REG_GEN[13].LOAD_REG_I ,\LOAD_REG_GEN[14].LOAD_REG_I ,\LOAD_REG_GEN[15].LOAD_REG_I }),
        .O({icount_out0_carry__3_n_4,icount_out0_carry__3_n_5,icount_out0_carry__3_n_6,icount_out0_carry__3_n_7}),
        .S({icount_out0_carry__3_i_1_n_0,icount_out0_carry__3_i_2_n_0,icount_out0_carry__3_i_3_n_0,icount_out0_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__3_i_1
       (.I0(\LOAD_REG_GEN[12].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[11].LOAD_REG_I ),
        .O(icount_out0_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__3_i_2
       (.I0(\LOAD_REG_GEN[13].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[12].LOAD_REG_I ),
        .O(icount_out0_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__3_i_3
       (.I0(\LOAD_REG_GEN[14].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[13].LOAD_REG_I ),
        .O(icount_out0_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__3_i_4
       (.I0(\LOAD_REG_GEN[15].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[14].LOAD_REG_I ),
        .O(icount_out0_carry__3_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__4
       (.CI(icount_out0_carry__3_n_0),
        .CO({icount_out0_carry__4_n_0,NLW_icount_out0_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\LOAD_REG_GEN[8].LOAD_REG_I ,\LOAD_REG_GEN[9].LOAD_REG_I ,\LOAD_REG_GEN[10].LOAD_REG_I ,\LOAD_REG_GEN[11].LOAD_REG_I }),
        .O({icount_out0_carry__4_n_4,icount_out0_carry__4_n_5,icount_out0_carry__4_n_6,icount_out0_carry__4_n_7}),
        .S({icount_out0_carry__4_i_1_n_0,icount_out0_carry__4_i_2_n_0,icount_out0_carry__4_i_3_n_0,icount_out0_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__4_i_1
       (.I0(\LOAD_REG_GEN[8].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[7].LOAD_REG_I ),
        .O(icount_out0_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__4_i_2
       (.I0(\LOAD_REG_GEN[9].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[8].LOAD_REG_I ),
        .O(icount_out0_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__4_i_3
       (.I0(\LOAD_REG_GEN[10].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[9].LOAD_REG_I ),
        .O(icount_out0_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__4_i_4
       (.I0(\LOAD_REG_GEN[11].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[10].LOAD_REG_I ),
        .O(icount_out0_carry__4_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__5
       (.CI(icount_out0_carry__4_n_0),
        .CO({icount_out0_carry__5_n_0,NLW_icount_out0_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\LOAD_REG_GEN[4].LOAD_REG_I ,\LOAD_REG_GEN[5].LOAD_REG_I ,\LOAD_REG_GEN[6].LOAD_REG_I ,\LOAD_REG_GEN[7].LOAD_REG_I }),
        .O({icount_out0_carry__5_n_4,icount_out0_carry__5_n_5,icount_out0_carry__5_n_6,icount_out0_carry__5_n_7}),
        .S({icount_out0_carry__5_i_1_n_0,icount_out0_carry__5_i_2_n_0,icount_out0_carry__5_i_3_n_0,icount_out0_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__5_i_1
       (.I0(\LOAD_REG_GEN[4].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[3].LOAD_REG_I ),
        .O(icount_out0_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__5_i_2
       (.I0(\LOAD_REG_GEN[5].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[4].LOAD_REG_I ),
        .O(icount_out0_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__5_i_3
       (.I0(\LOAD_REG_GEN[6].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[5].LOAD_REG_I ),
        .O(icount_out0_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__5_i_4
       (.I0(\LOAD_REG_GEN[7].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[6].LOAD_REG_I ),
        .O(icount_out0_carry__5_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__6
       (.CI(icount_out0_carry__5_n_0),
        .CO(NLW_icount_out0_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\LOAD_REG_GEN[1].LOAD_REG_I ,\LOAD_REG_GEN[2].LOAD_REG_I ,\LOAD_REG_GEN[3].LOAD_REG_I }),
        .O({icount_out0_carry__6_n_4,icount_out0_carry__6_n_5,icount_out0_carry__6_n_6,icount_out0_carry__6_n_7}),
        .S({icount_out0_carry__6_i_1_n_0,icount_out0_carry__6_i_2_n_0,icount_out0_carry__6_i_3_n_0,icount_out0_carry__6_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    icount_out0_carry__6_i_1
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I ),
        .O(icount_out0_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__6_i_2
       (.I0(\LOAD_REG_GEN[1].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I ),
        .O(icount_out0_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__6_i_3
       (.I0(\LOAD_REG_GEN[2].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[1].LOAD_REG_I ),
        .O(icount_out0_carry__6_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__6_i_4
       (.I0(\LOAD_REG_GEN[3].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[2].LOAD_REG_I ),
        .O(icount_out0_carry__6_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    icount_out0_carry_i_1
       (.I0(\LOAD_REG_GEN[30].LOAD_REG_I ),
        .O(icount_out0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry_i_2
       (.I0(\LOAD_REG_GEN[28].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[27].LOAD_REG_I ),
        .O(icount_out0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry_i_3
       (.I0(\LOAD_REG_GEN[29].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[28].LOAD_REG_I ),
        .O(icount_out0_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry_i_4
       (.I0(\LOAD_REG_GEN[30].LOAD_REG_I ),
        .I1(\LOAD_REG_GEN[29].LOAD_REG_I ),
        .O(icount_out0_carry_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "counter_f" *) 
module ublaze_sopc_axi_timer_0_0__counter_f_3
   (\LOAD_REG_GEN[0].LOAD_REG_I ,
    counter_TC,
    generateOutPre00,
    s_axi_aresetn_0,
    \TCSR0_GENERATE[20].TCSR0_FF_I ,
    s_axi_aclk,
    S,
    s_axi_aresetn,
    \TCSR0_GENERATE[31].TCSR0_FF_I ,
    Q,
    read_Mux_In,
    \LOAD_REG_GEN[0].LOAD_REG_I_0 );
  output [31:0]\LOAD_REG_GEN[0].LOAD_REG_I ;
  output [0:0]counter_TC;
  output generateOutPre00;
  input s_axi_aresetn_0;
  input \TCSR0_GENERATE[20].TCSR0_FF_I ;
  input s_axi_aclk;
  input [0:0]S;
  input s_axi_aresetn;
  input \TCSR0_GENERATE[31].TCSR0_FF_I ;
  input [0:0]Q;
  input [10:0]read_Mux_In;
  input [20:0]\LOAD_REG_GEN[0].LOAD_REG_I_0 ;

  wire \INFERRED_GEN.icount_out[32]_i_1__0_n_0 ;
  wire [31:0]\LOAD_REG_GEN[0].LOAD_REG_I ;
  wire [20:0]\LOAD_REG_GEN[0].LOAD_REG_I_0 ;
  wire [0:0]Q;
  wire [0:0]S;
  wire \TCSR0_GENERATE[20].TCSR0_FF_I ;
  wire \TCSR0_GENERATE[31].TCSR0_FF_I ;
  wire [0:0]counter_TC;
  wire generateOutPre00;
  wire icount_out0_carry__0_i_1__0_n_0;
  wire icount_out0_carry__0_i_2__0_n_0;
  wire icount_out0_carry__0_i_3__0_n_0;
  wire icount_out0_carry__0_i_4__0_n_0;
  wire icount_out0_carry__0_n_0;
  wire icount_out0_carry__0_n_4;
  wire icount_out0_carry__0_n_5;
  wire icount_out0_carry__0_n_6;
  wire icount_out0_carry__0_n_7;
  wire icount_out0_carry__1_i_1__0_n_0;
  wire icount_out0_carry__1_i_2__0_n_0;
  wire icount_out0_carry__1_i_3__0_n_0;
  wire icount_out0_carry__1_i_4__0_n_0;
  wire icount_out0_carry__1_n_0;
  wire icount_out0_carry__1_n_4;
  wire icount_out0_carry__1_n_5;
  wire icount_out0_carry__1_n_6;
  wire icount_out0_carry__1_n_7;
  wire icount_out0_carry__2_i_1__0_n_0;
  wire icount_out0_carry__2_i_2__0_n_0;
  wire icount_out0_carry__2_i_3__0_n_0;
  wire icount_out0_carry__2_i_4__0_n_0;
  wire icount_out0_carry__2_n_0;
  wire icount_out0_carry__2_n_4;
  wire icount_out0_carry__2_n_5;
  wire icount_out0_carry__2_n_6;
  wire icount_out0_carry__2_n_7;
  wire icount_out0_carry__3_i_1__0_n_0;
  wire icount_out0_carry__3_i_2__0_n_0;
  wire icount_out0_carry__3_i_3__0_n_0;
  wire icount_out0_carry__3_i_4__0_n_0;
  wire icount_out0_carry__3_n_0;
  wire icount_out0_carry__3_n_4;
  wire icount_out0_carry__3_n_5;
  wire icount_out0_carry__3_n_6;
  wire icount_out0_carry__3_n_7;
  wire icount_out0_carry__4_i_1__0_n_0;
  wire icount_out0_carry__4_i_2__0_n_0;
  wire icount_out0_carry__4_i_3__0_n_0;
  wire icount_out0_carry__4_i_4__0_n_0;
  wire icount_out0_carry__4_n_0;
  wire icount_out0_carry__4_n_4;
  wire icount_out0_carry__4_n_5;
  wire icount_out0_carry__4_n_6;
  wire icount_out0_carry__4_n_7;
  wire icount_out0_carry__5_i_1__0_n_0;
  wire icount_out0_carry__5_i_2__0_n_0;
  wire icount_out0_carry__5_i_3__0_n_0;
  wire icount_out0_carry__5_i_4__0_n_0;
  wire icount_out0_carry__5_n_0;
  wire icount_out0_carry__5_n_4;
  wire icount_out0_carry__5_n_5;
  wire icount_out0_carry__5_n_6;
  wire icount_out0_carry__5_n_7;
  wire icount_out0_carry__6_i_1__0_n_0;
  wire icount_out0_carry__6_i_2__0_n_0;
  wire icount_out0_carry__6_i_3__0_n_0;
  wire icount_out0_carry__6_i_4__0_n_0;
  wire icount_out0_carry__6_n_4;
  wire icount_out0_carry__6_n_5;
  wire icount_out0_carry__6_n_6;
  wire icount_out0_carry__6_n_7;
  wire icount_out0_carry_i_1__0_n_0;
  wire icount_out0_carry_i_2__0_n_0;
  wire icount_out0_carry_i_3__0_n_0;
  wire icount_out0_carry_i_4__0_n_0;
  wire icount_out0_carry_n_0;
  wire icount_out0_carry_n_4;
  wire icount_out0_carry_n_5;
  wire icount_out0_carry_n_6;
  wire icount_out0_carry_n_7;
  wire [31:0]p_1_in;
  wire [10:0]read_Mux_In;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_aresetn_0;
  wire [2:0]NLW_icount_out0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_icount_out0_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_icount_out0_carry__6_CO_UNCONNECTED;

  (* \PinAttr:I2:HOLD_DETOUR  = "180" *) 
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \INFERRED_GEN.icount_out[0]_i_1__0 
       (.I0(read_Mux_In[0]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(\LOAD_REG_GEN[0].LOAD_REG_I [0]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[10]_i_1__0 
       (.I0(read_Mux_In[10]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__1_n_6),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[11]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [0]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__1_n_5),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[12]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [1]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__1_n_4),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[13]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [2]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__2_n_7),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[14]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [3]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__2_n_6),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[15]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [4]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__2_n_5),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[16]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [5]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__2_n_4),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[17]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [6]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__3_n_7),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[18]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [7]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__3_n_6),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[19]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [8]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__3_n_5),
        .O(p_1_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[1]_i_1__0 
       (.I0(read_Mux_In[1]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry_n_7),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[20]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [9]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__3_n_4),
        .O(p_1_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[21]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [10]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__4_n_7),
        .O(p_1_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[22]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [11]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__4_n_6),
        .O(p_1_in[22]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[23]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [12]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__4_n_5),
        .O(p_1_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[24]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [13]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__4_n_4),
        .O(p_1_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[25]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [14]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__5_n_7),
        .O(p_1_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[26]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [15]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__5_n_6),
        .O(p_1_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[27]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [16]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__5_n_5),
        .O(p_1_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[28]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [17]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__5_n_4),
        .O(p_1_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[29]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [18]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__6_n_7),
        .O(p_1_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[2]_i_1__0 
       (.I0(read_Mux_In[2]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry_n_6),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[30]_i_1__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [19]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__6_n_6),
        .O(p_1_in[30]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[31]_i_2__0 
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_0 [20]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__6_n_5),
        .O(p_1_in[31]));
  LUT5 #(
    .INIT(32'h0000B800)) 
    \INFERRED_GEN.icount_out[32]_i_1__0 
       (.I0(icount_out0_carry__6_n_4),
        .I1(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .I2(counter_TC),
        .I3(s_axi_aresetn),
        .I4(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .O(\INFERRED_GEN.icount_out[32]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[3]_i_1__0 
       (.I0(read_Mux_In[3]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry_n_5),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[4]_i_1__0 
       (.I0(read_Mux_In[4]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry_n_4),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[5]_i_1__0 
       (.I0(read_Mux_In[5]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__0_n_7),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[6]_i_1__0 
       (.I0(read_Mux_In[6]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__0_n_6),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[7]_i_1__0 
       (.I0(read_Mux_In[7]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__0_n_5),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[8]_i_1__0 
       (.I0(read_Mux_In[8]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__0_n_4),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \INFERRED_GEN.icount_out[9]_i_1__0 
       (.I0(read_Mux_In[9]),
        .I1(\TCSR0_GENERATE[31].TCSR0_FF_I ),
        .I2(icount_out0_carry__1_n_7),
        .O(p_1_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[0] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[0]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [0]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[10] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[10]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [10]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[11] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[11]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [11]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[12] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[12]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [12]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[13] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[13]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [13]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[14] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[14]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [14]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[15] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[15]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [15]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[16] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[16]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [16]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[17] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[17]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [17]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[18] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[18]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [18]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[19] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[19]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [19]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[1] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[1]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [1]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[20] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[20]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [20]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[21] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[21]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [21]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[22] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[22]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [22]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[23] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[23]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [23]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[24] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[24]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [24]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[25] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[25]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [25]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[26] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[26]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [26]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[27] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[27]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [27]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[28] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[28]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [28]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[29] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[29]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [29]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[2] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[2]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [2]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[30] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[30]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [30]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[31] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[31]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [31]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[32] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\INFERRED_GEN.icount_out[32]_i_1__0_n_0 ),
        .Q(counter_TC),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[3] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[3]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [3]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[4] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[4]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [4]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[5] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[5]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [5]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[6] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[6]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [6]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[7] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[7]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [7]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[8] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[8]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [8]),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.icount_out_reg[9] 
       (.C(s_axi_aclk),
        .CE(\TCSR0_GENERATE[20].TCSR0_FF_I ),
        .D(p_1_in[9]),
        .Q(\LOAD_REG_GEN[0].LOAD_REG_I [9]),
        .R(s_axi_aresetn_0));
  LUT2 #(
    .INIT(4'h2)) 
    generateOutPre0_i_1
       (.I0(counter_TC),
        .I1(Q),
        .O(generateOutPre00));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry
       (.CI(1'b0),
        .CO({icount_out0_carry_n_0,NLW_icount_out0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(\LOAD_REG_GEN[0].LOAD_REG_I [0]),
        .DI({\LOAD_REG_GEN[0].LOAD_REG_I [3:1],icount_out0_carry_i_1__0_n_0}),
        .O({icount_out0_carry_n_4,icount_out0_carry_n_5,icount_out0_carry_n_6,icount_out0_carry_n_7}),
        .S({icount_out0_carry_i_2__0_n_0,icount_out0_carry_i_3__0_n_0,icount_out0_carry_i_4__0_n_0,S}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__0
       (.CI(icount_out0_carry_n_0),
        .CO({icount_out0_carry__0_n_0,NLW_icount_out0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(\LOAD_REG_GEN[0].LOAD_REG_I [7:4]),
        .O({icount_out0_carry__0_n_4,icount_out0_carry__0_n_5,icount_out0_carry__0_n_6,icount_out0_carry__0_n_7}),
        .S({icount_out0_carry__0_i_1__0_n_0,icount_out0_carry__0_i_2__0_n_0,icount_out0_carry__0_i_3__0_n_0,icount_out0_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__0_i_1__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [7]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [8]),
        .O(icount_out0_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__0_i_2__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [6]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [7]),
        .O(icount_out0_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__0_i_3__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [5]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [6]),
        .O(icount_out0_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__0_i_4__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [4]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [5]),
        .O(icount_out0_carry__0_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__1
       (.CI(icount_out0_carry__0_n_0),
        .CO({icount_out0_carry__1_n_0,NLW_icount_out0_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(\LOAD_REG_GEN[0].LOAD_REG_I [11:8]),
        .O({icount_out0_carry__1_n_4,icount_out0_carry__1_n_5,icount_out0_carry__1_n_6,icount_out0_carry__1_n_7}),
        .S({icount_out0_carry__1_i_1__0_n_0,icount_out0_carry__1_i_2__0_n_0,icount_out0_carry__1_i_3__0_n_0,icount_out0_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__1_i_1__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [11]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [12]),
        .O(icount_out0_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__1_i_2__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [10]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [11]),
        .O(icount_out0_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__1_i_3__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [9]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [10]),
        .O(icount_out0_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__1_i_4__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [8]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [9]),
        .O(icount_out0_carry__1_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__2
       (.CI(icount_out0_carry__1_n_0),
        .CO({icount_out0_carry__2_n_0,NLW_icount_out0_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(\LOAD_REG_GEN[0].LOAD_REG_I [15:12]),
        .O({icount_out0_carry__2_n_4,icount_out0_carry__2_n_5,icount_out0_carry__2_n_6,icount_out0_carry__2_n_7}),
        .S({icount_out0_carry__2_i_1__0_n_0,icount_out0_carry__2_i_2__0_n_0,icount_out0_carry__2_i_3__0_n_0,icount_out0_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__2_i_1__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [15]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [16]),
        .O(icount_out0_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__2_i_2__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [14]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [15]),
        .O(icount_out0_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__2_i_3__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [13]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [14]),
        .O(icount_out0_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__2_i_4__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [12]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [13]),
        .O(icount_out0_carry__2_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__3
       (.CI(icount_out0_carry__2_n_0),
        .CO({icount_out0_carry__3_n_0,NLW_icount_out0_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(\LOAD_REG_GEN[0].LOAD_REG_I [19:16]),
        .O({icount_out0_carry__3_n_4,icount_out0_carry__3_n_5,icount_out0_carry__3_n_6,icount_out0_carry__3_n_7}),
        .S({icount_out0_carry__3_i_1__0_n_0,icount_out0_carry__3_i_2__0_n_0,icount_out0_carry__3_i_3__0_n_0,icount_out0_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__3_i_1__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [19]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [20]),
        .O(icount_out0_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__3_i_2__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [18]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [19]),
        .O(icount_out0_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__3_i_3__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [17]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [18]),
        .O(icount_out0_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__3_i_4__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [16]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [17]),
        .O(icount_out0_carry__3_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__4
       (.CI(icount_out0_carry__3_n_0),
        .CO({icount_out0_carry__4_n_0,NLW_icount_out0_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(\LOAD_REG_GEN[0].LOAD_REG_I [23:20]),
        .O({icount_out0_carry__4_n_4,icount_out0_carry__4_n_5,icount_out0_carry__4_n_6,icount_out0_carry__4_n_7}),
        .S({icount_out0_carry__4_i_1__0_n_0,icount_out0_carry__4_i_2__0_n_0,icount_out0_carry__4_i_3__0_n_0,icount_out0_carry__4_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__4_i_1__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [23]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [24]),
        .O(icount_out0_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__4_i_2__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [22]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [23]),
        .O(icount_out0_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__4_i_3__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [21]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [22]),
        .O(icount_out0_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__4_i_4__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [20]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [21]),
        .O(icount_out0_carry__4_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__5
       (.CI(icount_out0_carry__4_n_0),
        .CO({icount_out0_carry__5_n_0,NLW_icount_out0_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(\LOAD_REG_GEN[0].LOAD_REG_I [27:24]),
        .O({icount_out0_carry__5_n_4,icount_out0_carry__5_n_5,icount_out0_carry__5_n_6,icount_out0_carry__5_n_7}),
        .S({icount_out0_carry__5_i_1__0_n_0,icount_out0_carry__5_i_2__0_n_0,icount_out0_carry__5_i_3__0_n_0,icount_out0_carry__5_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__5_i_1__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [27]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [28]),
        .O(icount_out0_carry__5_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__5_i_2__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [26]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [27]),
        .O(icount_out0_carry__5_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__5_i_3__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [25]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [26]),
        .O(icount_out0_carry__5_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__5_i_4__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [24]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [25]),
        .O(icount_out0_carry__5_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 icount_out0_carry__6
       (.CI(icount_out0_carry__5_n_0),
        .CO(NLW_icount_out0_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\LOAD_REG_GEN[0].LOAD_REG_I [30:28]}),
        .O({icount_out0_carry__6_n_4,icount_out0_carry__6_n_5,icount_out0_carry__6_n_6,icount_out0_carry__6_n_7}),
        .S({icount_out0_carry__6_i_1__0_n_0,icount_out0_carry__6_i_2__0_n_0,icount_out0_carry__6_i_3__0_n_0,icount_out0_carry__6_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    icount_out0_carry__6_i_1__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [31]),
        .O(icount_out0_carry__6_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__6_i_2__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [30]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [31]),
        .O(icount_out0_carry__6_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__6_i_3__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [29]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [30]),
        .O(icount_out0_carry__6_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry__6_i_4__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [28]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [29]),
        .O(icount_out0_carry__6_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    icount_out0_carry_i_1__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [1]),
        .O(icount_out0_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry_i_2__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [3]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [4]),
        .O(icount_out0_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry_i_3__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [2]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [3]),
        .O(icount_out0_carry_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    icount_out0_carry_i_4__0
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I [1]),
        .I1(\LOAD_REG_GEN[0].LOAD_REG_I [2]),
        .O(icount_out0_carry_i_4__0_n_0));
endmodule

(* ORIG_REF_NAME = "mux_onehot_f" *) 
module ublaze_sopc_axi_timer_0_0__mux_onehot_f
   (D,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    \INFERRED_GEN.icount_out_reg[31] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ,
    \INFERRED_GEN.icount_out_reg[30] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ,
    \INFERRED_GEN.icount_out_reg[29] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ,
    \INFERRED_GEN.icount_out_reg[28] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ,
    \INFERRED_GEN.icount_out_reg[27] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ,
    \INFERRED_GEN.icount_out_reg[26] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ,
    \INFERRED_GEN.icount_out_reg[25] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ,
    \INFERRED_GEN.icount_out_reg[24] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ,
    \INFERRED_GEN.icount_out_reg[23] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ,
    \INFERRED_GEN.icount_out_reg[22] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ,
    \INFERRED_GEN.icount_out_reg[21] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ,
    \INFERRED_GEN.icount_out_reg[20] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ,
    \INFERRED_GEN.icount_out_reg[19] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ,
    \INFERRED_GEN.icount_out_reg[18] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ,
    \INFERRED_GEN.icount_out_reg[17] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ,
    \INFERRED_GEN.icount_out_reg[16] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ,
    \INFERRED_GEN.icount_out_reg[15] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ,
    \INFERRED_GEN.icount_out_reg[14] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ,
    \INFERRED_GEN.icount_out_reg[13] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ,
    \INFERRED_GEN.icount_out_reg[12] ,
    \LOAD_REG_GEN[20].LOAD_REG_I ,
    \INFERRED_GEN.icount_out_reg[11] ,
    \TCSR1_GENERATE[21].TCSR1_FF_I ,
    \LOAD_REG_GEN[21].LOAD_REG_I ,
    \TCSR1_GENERATE[22].TCSR1_FF_I ,
    \INFERRED_GEN.icount_out_reg[9] ,
    \TCSR0_GENERATE[23].TCSR0_FF_I ,
    \INFERRED_GEN.icount_out_reg[8] ,
    \TCSR1_GENERATE[24].TCSR1_FF_I ,
    \INFERRED_GEN.icount_out_reg[7] ,
    \TCSR1_GENERATE[25].TCSR1_FF_I ,
    \INFERRED_GEN.icount_out_reg[6] ,
    \TCSR0_GENERATE[26].TCSR0_FF_I ,
    \LOAD_REG_GEN[26].LOAD_REG_I ,
    \TCSR0_GENERATE[27].TCSR0_FF_I ,
    \LOAD_REG_GEN[27].LOAD_REG_I ,
    \TCSR1_GENERATE[28].TCSR1_FF_I ,
    \LOAD_REG_GEN[28].LOAD_REG_I ,
    \TCSR1_GENERATE[29].TCSR1_FF_I ,
    \INFERRED_GEN.icount_out_reg[2] ,
    \TCSR1_GENERATE[30].TCSR1_FF_I ,
    \INFERRED_GEN.icount_out_reg[1] ,
    \TCSR1_GENERATE[31].TCSR1_FF_I ,
    \INFERRED_GEN.icount_out_reg[0] );
  output [31:0]D;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input \INFERRED_GEN.icount_out_reg[31] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  input \INFERRED_GEN.icount_out_reg[30] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ;
  input \INFERRED_GEN.icount_out_reg[29] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ;
  input \INFERRED_GEN.icount_out_reg[28] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ;
  input \INFERRED_GEN.icount_out_reg[27] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ;
  input \INFERRED_GEN.icount_out_reg[26] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ;
  input \INFERRED_GEN.icount_out_reg[25] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ;
  input \INFERRED_GEN.icount_out_reg[24] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ;
  input \INFERRED_GEN.icount_out_reg[23] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ;
  input \INFERRED_GEN.icount_out_reg[22] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ;
  input \INFERRED_GEN.icount_out_reg[21] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ;
  input \INFERRED_GEN.icount_out_reg[20] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ;
  input \INFERRED_GEN.icount_out_reg[19] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ;
  input \INFERRED_GEN.icount_out_reg[18] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ;
  input \INFERRED_GEN.icount_out_reg[17] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ;
  input \INFERRED_GEN.icount_out_reg[16] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ;
  input \INFERRED_GEN.icount_out_reg[15] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ;
  input \INFERRED_GEN.icount_out_reg[14] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ;
  input \INFERRED_GEN.icount_out_reg[13] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ;
  input \INFERRED_GEN.icount_out_reg[12] ;
  input \LOAD_REG_GEN[20].LOAD_REG_I ;
  input \INFERRED_GEN.icount_out_reg[11] ;
  input \TCSR1_GENERATE[21].TCSR1_FF_I ;
  input \LOAD_REG_GEN[21].LOAD_REG_I ;
  input \TCSR1_GENERATE[22].TCSR1_FF_I ;
  input \INFERRED_GEN.icount_out_reg[9] ;
  input \TCSR0_GENERATE[23].TCSR0_FF_I ;
  input \INFERRED_GEN.icount_out_reg[8] ;
  input \TCSR1_GENERATE[24].TCSR1_FF_I ;
  input \INFERRED_GEN.icount_out_reg[7] ;
  input \TCSR1_GENERATE[25].TCSR1_FF_I ;
  input \INFERRED_GEN.icount_out_reg[6] ;
  input \TCSR0_GENERATE[26].TCSR0_FF_I ;
  input \LOAD_REG_GEN[26].LOAD_REG_I ;
  input \TCSR0_GENERATE[27].TCSR0_FF_I ;
  input \LOAD_REG_GEN[27].LOAD_REG_I ;
  input \TCSR1_GENERATE[28].TCSR1_FF_I ;
  input \LOAD_REG_GEN[28].LOAD_REG_I ;
  input \TCSR1_GENERATE[29].TCSR1_FF_I ;
  input \INFERRED_GEN.icount_out_reg[2] ;
  input \TCSR1_GENERATE[30].TCSR1_FF_I ;
  input \INFERRED_GEN.icount_out_reg[1] ;
  input \TCSR1_GENERATE[31].TCSR1_FF_I ;
  input \INFERRED_GEN.icount_out_reg[0] ;

  wire [31:0]D;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ;
  wire \INFERRED_GEN.icount_out_reg[0] ;
  wire \INFERRED_GEN.icount_out_reg[11] ;
  wire \INFERRED_GEN.icount_out_reg[12] ;
  wire \INFERRED_GEN.icount_out_reg[13] ;
  wire \INFERRED_GEN.icount_out_reg[14] ;
  wire \INFERRED_GEN.icount_out_reg[15] ;
  wire \INFERRED_GEN.icount_out_reg[16] ;
  wire \INFERRED_GEN.icount_out_reg[17] ;
  wire \INFERRED_GEN.icount_out_reg[18] ;
  wire \INFERRED_GEN.icount_out_reg[19] ;
  wire \INFERRED_GEN.icount_out_reg[1] ;
  wire \INFERRED_GEN.icount_out_reg[20] ;
  wire \INFERRED_GEN.icount_out_reg[21] ;
  wire \INFERRED_GEN.icount_out_reg[22] ;
  wire \INFERRED_GEN.icount_out_reg[23] ;
  wire \INFERRED_GEN.icount_out_reg[24] ;
  wire \INFERRED_GEN.icount_out_reg[25] ;
  wire \INFERRED_GEN.icount_out_reg[26] ;
  wire \INFERRED_GEN.icount_out_reg[27] ;
  wire \INFERRED_GEN.icount_out_reg[28] ;
  wire \INFERRED_GEN.icount_out_reg[29] ;
  wire \INFERRED_GEN.icount_out_reg[2] ;
  wire \INFERRED_GEN.icount_out_reg[30] ;
  wire \INFERRED_GEN.icount_out_reg[31] ;
  wire \INFERRED_GEN.icount_out_reg[6] ;
  wire \INFERRED_GEN.icount_out_reg[7] ;
  wire \INFERRED_GEN.icount_out_reg[8] ;
  wire \INFERRED_GEN.icount_out_reg[9] ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I ;
  wire \LOAD_REG_GEN[21].LOAD_REG_I ;
  wire \LOAD_REG_GEN[26].LOAD_REG_I ;
  wire \LOAD_REG_GEN[27].LOAD_REG_I ;
  wire \LOAD_REG_GEN[28].LOAD_REG_I ;
  wire \TCSR0_GENERATE[23].TCSR0_FF_I ;
  wire \TCSR0_GENERATE[26].TCSR0_FF_I ;
  wire \TCSR0_GENERATE[27].TCSR0_FF_I ;
  wire \TCSR1_GENERATE[21].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[22].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[24].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[25].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[28].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[29].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[30].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[31].TCSR1_FF_I ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED ;

  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[31],\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[0].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[31] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[21],\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[10].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[21] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[20],\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[11].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[20] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[19],\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[12].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[19] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[18],\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[13].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[18] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[17],\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[14].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[17] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[16],\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[15].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[16] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[15],\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[16].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[15] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[14],\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[17].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[14] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[13],\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[18].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[13] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[12],\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[19].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[12] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[30],\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[1].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[30] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[11],\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[20].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[11] ,\LOAD_REG_GEN[20].LOAD_REG_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[10],\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\LOAD_REG_GEN[21].LOAD_REG_I ,\TCSR1_GENERATE[21].TCSR1_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[9],\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[9] ,\TCSR1_GENERATE[22].TCSR1_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[8],\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[8] ,\TCSR0_GENERATE[23].TCSR0_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[7],\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[7] ,\TCSR1_GENERATE[24].TCSR1_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[6],\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[6] ,\TCSR1_GENERATE[25].TCSR1_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[5],\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\LOAD_REG_GEN[26].LOAD_REG_I ,\TCSR0_GENERATE[26].TCSR0_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[4],\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\LOAD_REG_GEN[27].LOAD_REG_I ,\TCSR0_GENERATE[27].TCSR0_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[3],\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\LOAD_REG_GEN[28].LOAD_REG_I ,\TCSR1_GENERATE[28].TCSR1_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[2],\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[2] ,\TCSR1_GENERATE[29].TCSR1_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[29],\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[2].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[29] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[1],\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[1] ,\TCSR1_GENERATE[30].TCSR1_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[0],\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[0] ,\TCSR1_GENERATE[31].TCSR1_FF_I }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[28],\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[3].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[28] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[27],\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[4].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[27] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[26],\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[5].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[26] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[25],\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[6].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[25] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[24],\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[7].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[24] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[23],\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[8].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[23] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4 
       (.CI(1'b0),
        .CO({\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [3:2],D[22],\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_DI_UNCONNECTED [3:2],1'b1,1'b1}),
        .O(\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_GEN.DATA_WIDTH_GEN[9].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_CARRY4_S_UNCONNECTED [3:2],\INFERRED_GEN.icount_out_reg[22] ,\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 }));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_axi_timer_0_0__pselect_f
   (ce_expnd_i_7,
    \bus2ip_addr_i_reg[4] );
  output ce_expnd_i_7;
  input [2:0]\bus2ip_addr_i_reg[4] ;

  wire [2:0]\bus2ip_addr_i_reg[4] ;
  wire ce_expnd_i_7;

  LUT3 #(
    .INIT(8'h01)) 
    CS
       (.I0(\bus2ip_addr_i_reg[4] [2]),
        .I1(\bus2ip_addr_i_reg[4] [1]),
        .I2(\bus2ip_addr_i_reg[4] [0]),
        .O(ce_expnd_i_7));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_axi_timer_0_0__pselect_f__parameterized1
   (ce_expnd_i_5,
    \bus2ip_addr_i_reg[4] );
  output ce_expnd_i_5;
  input [2:0]\bus2ip_addr_i_reg[4] ;

  wire [2:0]\bus2ip_addr_i_reg[4] ;
  wire ce_expnd_i_5;

  LUT3 #(
    .INIT(8'h10)) 
    CS
       (.I0(\bus2ip_addr_i_reg[4] [2]),
        .I1(\bus2ip_addr_i_reg[4] [0]),
        .I2(\bus2ip_addr_i_reg[4] [1]),
        .O(ce_expnd_i_5));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_axi_timer_0_0__pselect_f__parameterized3
   (ce_expnd_i_3,
    \bus2ip_addr_i_reg[4] );
  output ce_expnd_i_3;
  input [2:0]\bus2ip_addr_i_reg[4] ;

  wire [2:0]\bus2ip_addr_i_reg[4] ;
  wire ce_expnd_i_3;

  LUT3 #(
    .INIT(8'h10)) 
    CS
       (.I0(\bus2ip_addr_i_reg[4] [1]),
        .I1(\bus2ip_addr_i_reg[4] [0]),
        .I2(\bus2ip_addr_i_reg[4] [2]),
        .O(ce_expnd_i_3));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_axi_timer_0_0__pselect_f__parameterized4
   (ce_expnd_i_2,
    \bus2ip_addr_i_reg[4] );
  output ce_expnd_i_2;
  input [2:0]\bus2ip_addr_i_reg[4] ;

  wire [2:0]\bus2ip_addr_i_reg[4] ;
  wire ce_expnd_i_2;

  LUT3 #(
    .INIT(8'h40)) 
    CS
       (.I0(\bus2ip_addr_i_reg[4] [1]),
        .I1(\bus2ip_addr_i_reg[4] [2]),
        .I2(\bus2ip_addr_i_reg[4] [0]),
        .O(ce_expnd_i_2));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_axi_timer_0_0__pselect_f__parameterized5
   (ce_expnd_i_1,
    \bus2ip_addr_i_reg[4] );
  output ce_expnd_i_1;
  input [2:0]\bus2ip_addr_i_reg[4] ;

  wire [2:0]\bus2ip_addr_i_reg[4] ;
  wire ce_expnd_i_1;

  LUT3 #(
    .INIT(8'h40)) 
    CS
       (.I0(\bus2ip_addr_i_reg[4] [0]),
        .I1(\bus2ip_addr_i_reg[4] [2]),
        .I2(\bus2ip_addr_i_reg[4] [1]),
        .O(ce_expnd_i_1));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_axi_timer_0_0__pselect_f__parameterized6
   (ce_expnd_i_0,
    \bus2ip_addr_i_reg[4] );
  output ce_expnd_i_0;
  input [2:0]\bus2ip_addr_i_reg[4] ;

  wire [2:0]\bus2ip_addr_i_reg[4] ;
  wire ce_expnd_i_0;

  (* \PinAttr:I0:HOLD_DETOUR  = "178" *) 
  LUT3 #(
    .INIT(8'h80)) 
    CS
       (.I0(\bus2ip_addr_i_reg[4] [1]),
        .I1(\bus2ip_addr_i_reg[4] [0]),
        .I2(\bus2ip_addr_i_reg[4] [2]),
        .O(ce_expnd_i_0));
endmodule

(* ORIG_REF_NAME = "slave_attachment" *) 
module ublaze_sopc_axi_timer_0_0__slave_attachment
   (\TCSR1_GENERATE[24].TCSR1_FF_I ,
    READ_DONE0_I,
    \TCSR1_GENERATE[24].TCSR1_FF_I_0 ,
    \TCSR1_GENERATE[24].TCSR1_FF_I_1 ,
    s_axi_rvalid,
    s_axi_bvalid,
    s_axi_wready,
    s_axi_arready,
    pair0_Select,
    \LOAD_REG_GEN[7].LOAD_REG_I ,
    bus2ip_wrce,
    \LOAD_REG_GEN[31].LOAD_REG_I ,
    \LOAD_REG_GEN[30].LOAD_REG_I ,
    \LOAD_REG_GEN[29].LOAD_REG_I ,
    \LOAD_REG_GEN[28].LOAD_REG_I ,
    \LOAD_REG_GEN[27].LOAD_REG_I ,
    \LOAD_REG_GEN[26].LOAD_REG_I ,
    \LOAD_REG_GEN[25].LOAD_REG_I ,
    \LOAD_REG_GEN[24].LOAD_REG_I ,
    \LOAD_REG_GEN[23].LOAD_REG_I ,
    \LOAD_REG_GEN[22].LOAD_REG_I ,
    \LOAD_REG_GEN[21].LOAD_REG_I ,
    \LOAD_REG_GEN[20].LOAD_REG_I ,
    \LOAD_REG_GEN[19].LOAD_REG_I ,
    \LOAD_REG_GEN[18].LOAD_REG_I ,
    \LOAD_REG_GEN[17].LOAD_REG_I ,
    \LOAD_REG_GEN[16].LOAD_REG_I ,
    \LOAD_REG_GEN[15].LOAD_REG_I ,
    \LOAD_REG_GEN[14].LOAD_REG_I ,
    \LOAD_REG_GEN[13].LOAD_REG_I ,
    \LOAD_REG_GEN[12].LOAD_REG_I ,
    \LOAD_REG_GEN[11].LOAD_REG_I ,
    \LOAD_REG_GEN[10].LOAD_REG_I ,
    \LOAD_REG_GEN[9].LOAD_REG_I ,
    \LOAD_REG_GEN[8].LOAD_REG_I ,
    \LOAD_REG_GEN[7].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[6].LOAD_REG_I ,
    \LOAD_REG_GEN[5].LOAD_REG_I ,
    \LOAD_REG_GEN[4].LOAD_REG_I ,
    \LOAD_REG_GEN[3].LOAD_REG_I ,
    \LOAD_REG_GEN[2].LOAD_REG_I ,
    \LOAD_REG_GEN[1].LOAD_REG_I ,
    D_0,
    \LOAD_REG_GEN[31].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[30].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[29].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[28].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[27].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[26].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[25].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[24].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[23].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[22].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[21].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[20].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[19].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[18].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[17].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[16].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[15].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[14].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[13].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[12].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[11].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[10].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[9].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[8].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[7].LOAD_REG_I_1 ,
    \LOAD_REG_GEN[6].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[5].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[4].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[3].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[2].LOAD_REG_I_0 ,
    \LOAD_REG_GEN[1].LOAD_REG_I_0 ,
    D_1,
    s_axi_rvalid_i_reg_0,
    s_axi_rvalid_i_reg_1,
    s_axi_rvalid_i_reg_2,
    \s_axi_rdata_i_reg[0]_0 ,
    \s_axi_rdata_i_reg[31]_0 ,
    \s_axi_rdata_i_reg[30]_0 ,
    \s_axi_rdata_i_reg[29]_0 ,
    \s_axi_rdata_i_reg[28]_0 ,
    \s_axi_rdata_i_reg[27]_0 ,
    \s_axi_rdata_i_reg[26]_0 ,
    \s_axi_rdata_i_reg[25]_0 ,
    \s_axi_rdata_i_reg[24]_0 ,
    \s_axi_rdata_i_reg[23]_0 ,
    \s_axi_rdata_i_reg[22]_0 ,
    \s_axi_rdata_i_reg[21]_0 ,
    \s_axi_rdata_i_reg[20]_0 ,
    \s_axi_rdata_i_reg[19]_0 ,
    \s_axi_rdata_i_reg[18]_0 ,
    \s_axi_rdata_i_reg[17]_0 ,
    \s_axi_rdata_i_reg[16]_0 ,
    \s_axi_rdata_i_reg[15]_0 ,
    \s_axi_rdata_i_reg[14]_0 ,
    \s_axi_rdata_i_reg[13]_0 ,
    \s_axi_rdata_i_reg[12]_0 ,
    \s_axi_rdata_i_reg[11]_0 ,
    \s_axi_rdata_i_reg[0]_1 ,
    \s_axi_rdata_i_reg[0]_2 ,
    READ_DONE0_I_0,
    READ_DONE1_I,
    \TCSR0_GENERATE[23].TCSR0_FF_I ,
    \TCSR1_GENERATE[23].TCSR1_FF_I ,
    s_axi_rdata,
    bus2ip_reset,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_aresetn,
    s_axi_wvalid,
    s_axi_awvalid,
    s_axi_wdata,
    read_Mux_In,
    s_axi_rready,
    s_axi_bready,
    s_axi_araddr,
    s_axi_awaddr,
    D_2,
    read_done1,
    D);
  output \TCSR1_GENERATE[24].TCSR1_FF_I ;
  output READ_DONE0_I;
  output \TCSR1_GENERATE[24].TCSR1_FF_I_0 ;
  output \TCSR1_GENERATE[24].TCSR1_FF_I_1 ;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output s_axi_wready;
  output s_axi_arready;
  output pair0_Select;
  output \LOAD_REG_GEN[7].LOAD_REG_I ;
  output [1:0]bus2ip_wrce;
  output \LOAD_REG_GEN[31].LOAD_REG_I ;
  output \LOAD_REG_GEN[30].LOAD_REG_I ;
  output \LOAD_REG_GEN[29].LOAD_REG_I ;
  output \LOAD_REG_GEN[28].LOAD_REG_I ;
  output \LOAD_REG_GEN[27].LOAD_REG_I ;
  output \LOAD_REG_GEN[26].LOAD_REG_I ;
  output \LOAD_REG_GEN[25].LOAD_REG_I ;
  output \LOAD_REG_GEN[24].LOAD_REG_I ;
  output \LOAD_REG_GEN[23].LOAD_REG_I ;
  output \LOAD_REG_GEN[22].LOAD_REG_I ;
  output \LOAD_REG_GEN[21].LOAD_REG_I ;
  output \LOAD_REG_GEN[20].LOAD_REG_I ;
  output \LOAD_REG_GEN[19].LOAD_REG_I ;
  output \LOAD_REG_GEN[18].LOAD_REG_I ;
  output \LOAD_REG_GEN[17].LOAD_REG_I ;
  output \LOAD_REG_GEN[16].LOAD_REG_I ;
  output \LOAD_REG_GEN[15].LOAD_REG_I ;
  output \LOAD_REG_GEN[14].LOAD_REG_I ;
  output \LOAD_REG_GEN[13].LOAD_REG_I ;
  output \LOAD_REG_GEN[12].LOAD_REG_I ;
  output \LOAD_REG_GEN[11].LOAD_REG_I ;
  output \LOAD_REG_GEN[10].LOAD_REG_I ;
  output \LOAD_REG_GEN[9].LOAD_REG_I ;
  output \LOAD_REG_GEN[8].LOAD_REG_I ;
  output \LOAD_REG_GEN[7].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[6].LOAD_REG_I ;
  output \LOAD_REG_GEN[5].LOAD_REG_I ;
  output \LOAD_REG_GEN[4].LOAD_REG_I ;
  output \LOAD_REG_GEN[3].LOAD_REG_I ;
  output \LOAD_REG_GEN[2].LOAD_REG_I ;
  output \LOAD_REG_GEN[1].LOAD_REG_I ;
  output D_0;
  output \LOAD_REG_GEN[31].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[30].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[29].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[28].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[27].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[26].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[25].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[24].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[23].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[22].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[21].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[20].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[19].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[18].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[17].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[16].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[15].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[14].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[13].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[12].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[11].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[10].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[9].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[8].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[7].LOAD_REG_I_1 ;
  output \LOAD_REG_GEN[6].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[5].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[4].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[3].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[2].LOAD_REG_I_0 ;
  output \LOAD_REG_GEN[1].LOAD_REG_I_0 ;
  output D_1;
  output s_axi_rvalid_i_reg_0;
  output s_axi_rvalid_i_reg_1;
  output s_axi_rvalid_i_reg_2;
  output \s_axi_rdata_i_reg[0]_0 ;
  output \s_axi_rdata_i_reg[31]_0 ;
  output \s_axi_rdata_i_reg[30]_0 ;
  output \s_axi_rdata_i_reg[29]_0 ;
  output \s_axi_rdata_i_reg[28]_0 ;
  output \s_axi_rdata_i_reg[27]_0 ;
  output \s_axi_rdata_i_reg[26]_0 ;
  output \s_axi_rdata_i_reg[25]_0 ;
  output \s_axi_rdata_i_reg[24]_0 ;
  output \s_axi_rdata_i_reg[23]_0 ;
  output \s_axi_rdata_i_reg[22]_0 ;
  output \s_axi_rdata_i_reg[21]_0 ;
  output \s_axi_rdata_i_reg[20]_0 ;
  output \s_axi_rdata_i_reg[19]_0 ;
  output \s_axi_rdata_i_reg[18]_0 ;
  output \s_axi_rdata_i_reg[17]_0 ;
  output \s_axi_rdata_i_reg[16]_0 ;
  output \s_axi_rdata_i_reg[15]_0 ;
  output \s_axi_rdata_i_reg[14]_0 ;
  output \s_axi_rdata_i_reg[13]_0 ;
  output \s_axi_rdata_i_reg[12]_0 ;
  output \s_axi_rdata_i_reg[11]_0 ;
  output \s_axi_rdata_i_reg[0]_1 ;
  output \s_axi_rdata_i_reg[0]_2 ;
  output READ_DONE0_I_0;
  output READ_DONE1_I;
  output \TCSR0_GENERATE[23].TCSR0_FF_I ;
  output \TCSR1_GENERATE[23].TCSR1_FF_I ;
  output [31:0]s_axi_rdata;
  input bus2ip_reset;
  input s_axi_aclk;
  input s_axi_arvalid;
  input s_axi_aresetn;
  input s_axi_wvalid;
  input s_axi_awvalid;
  input [31:0]s_axi_wdata;
  input [85:0]read_Mux_In;
  input s_axi_rready;
  input s_axi_bready;
  input [2:0]s_axi_araddr;
  input [2:0]s_axi_awaddr;
  input D_2;
  input read_done1;
  input [31:0]D;

  wire [31:0]D;
  wire D_0;
  wire D_1;
  wire D_2;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1_n_0 ;
  wire [5:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 ;
  wire I_DECODER_n_10;
  wire I_DECODER_n_106;
  wire I_DECODER_n_107;
  wire I_DECODER_n_6;
  wire I_DECODER_n_7;
  wire I_DECODER_n_8;
  wire I_DECODER_n_9;
  wire \LOAD_REG_GEN[10].LOAD_REG_I ;
  wire \LOAD_REG_GEN[10].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[11].LOAD_REG_I ;
  wire \LOAD_REG_GEN[11].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[12].LOAD_REG_I ;
  wire \LOAD_REG_GEN[12].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[13].LOAD_REG_I ;
  wire \LOAD_REG_GEN[13].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[14].LOAD_REG_I ;
  wire \LOAD_REG_GEN[14].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[15].LOAD_REG_I ;
  wire \LOAD_REG_GEN[15].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[16].LOAD_REG_I ;
  wire \LOAD_REG_GEN[16].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[17].LOAD_REG_I ;
  wire \LOAD_REG_GEN[17].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[18].LOAD_REG_I ;
  wire \LOAD_REG_GEN[18].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[19].LOAD_REG_I ;
  wire \LOAD_REG_GEN[19].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[1].LOAD_REG_I ;
  wire \LOAD_REG_GEN[1].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[21].LOAD_REG_I ;
  wire \LOAD_REG_GEN[21].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[22].LOAD_REG_I ;
  wire \LOAD_REG_GEN[22].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[23].LOAD_REG_I ;
  wire \LOAD_REG_GEN[23].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[24].LOAD_REG_I ;
  wire \LOAD_REG_GEN[24].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[25].LOAD_REG_I ;
  wire \LOAD_REG_GEN[25].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[26].LOAD_REG_I ;
  wire \LOAD_REG_GEN[26].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[27].LOAD_REG_I ;
  wire \LOAD_REG_GEN[27].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[28].LOAD_REG_I ;
  wire \LOAD_REG_GEN[28].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[29].LOAD_REG_I ;
  wire \LOAD_REG_GEN[29].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[2].LOAD_REG_I ;
  wire \LOAD_REG_GEN[2].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[30].LOAD_REG_I ;
  wire \LOAD_REG_GEN[30].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[31].LOAD_REG_I ;
  wire \LOAD_REG_GEN[31].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[3].LOAD_REG_I ;
  wire \LOAD_REG_GEN[3].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[4].LOAD_REG_I ;
  wire \LOAD_REG_GEN[4].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[5].LOAD_REG_I ;
  wire \LOAD_REG_GEN[5].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[6].LOAD_REG_I ;
  wire \LOAD_REG_GEN[6].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[7].LOAD_REG_I_1 ;
  wire \LOAD_REG_GEN[8].LOAD_REG_I ;
  wire \LOAD_REG_GEN[8].LOAD_REG_I_0 ;
  wire \LOAD_REG_GEN[9].LOAD_REG_I ;
  wire \LOAD_REG_GEN[9].LOAD_REG_I_0 ;
  wire READ_DONE0_I;
  wire READ_DONE0_I_0;
  wire READ_DONE1_I;
  wire \TCSR0_GENERATE[23].TCSR0_FF_I ;
  wire \TCSR1_GENERATE[23].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[24].TCSR1_FF_I ;
  wire \TCSR1_GENERATE[24].TCSR1_FF_I_0 ;
  wire \TCSR1_GENERATE[24].TCSR1_FF_I_1 ;
  wire [0:2]bus2ip_addr;
  wire \bus2ip_addr_i[4]_i_1_n_0 ;
  wire bus2ip_reset;
  wire bus2ip_rnw_i;
  wire [1:0]bus2ip_wrce;
  wire is_read_i_1_n_0;
  wire is_read_reg_n_0;
  wire is_write_i_1_n_0;
  wire is_write_i_2_n_0;
  wire is_write_reg_n_0;
  wire pair0_Select;
  wire [5:0]plusOp;
  wire [85:0]read_Mux_In;
  wire read_done1;
  wire rst;
  wire s_axi_aclk;
  wire [2:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  (* RTL_KEEP = "yes" *) wire s_axi_bresp_i;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire \s_axi_rdata_i_reg[0]_0 ;
  wire \s_axi_rdata_i_reg[0]_1 ;
  wire \s_axi_rdata_i_reg[0]_2 ;
  wire \s_axi_rdata_i_reg[11]_0 ;
  wire \s_axi_rdata_i_reg[12]_0 ;
  wire \s_axi_rdata_i_reg[13]_0 ;
  wire \s_axi_rdata_i_reg[14]_0 ;
  wire \s_axi_rdata_i_reg[15]_0 ;
  wire \s_axi_rdata_i_reg[16]_0 ;
  wire \s_axi_rdata_i_reg[17]_0 ;
  wire \s_axi_rdata_i_reg[18]_0 ;
  wire \s_axi_rdata_i_reg[19]_0 ;
  wire \s_axi_rdata_i_reg[20]_0 ;
  wire \s_axi_rdata_i_reg[21]_0 ;
  wire \s_axi_rdata_i_reg[22]_0 ;
  wire \s_axi_rdata_i_reg[23]_0 ;
  wire \s_axi_rdata_i_reg[24]_0 ;
  wire \s_axi_rdata_i_reg[25]_0 ;
  wire \s_axi_rdata_i_reg[26]_0 ;
  wire \s_axi_rdata_i_reg[27]_0 ;
  wire \s_axi_rdata_i_reg[28]_0 ;
  wire \s_axi_rdata_i_reg[29]_0 ;
  wire \s_axi_rdata_i_reg[30]_0 ;
  wire \s_axi_rdata_i_reg[31]_0 ;
  wire s_axi_rready;
  (* RTL_KEEP = "yes" *) wire s_axi_rresp_i;
  wire s_axi_rvalid;
  wire s_axi_rvalid_i_reg_0;
  wire s_axi_rvalid_i_reg_1;
  wire s_axi_rvalid_i_reg_2;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire [1:0]state;
  wire \state[1]_i_2_n_0 ;

  LUT6 #(
    .INIT(64'h44444F444F444F44)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state[3]_i_2_n_0 ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(s_axi_arvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(s_axi_wvalid),
        .I5(s_axi_awvalid),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0777)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(s_axi_rvalid),
        .I1(s_axi_rready),
        .I2(s_axi_bvalid),
        .I3(s_axi_bready),
        .O(\FSM_onehot_state[3]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_10),
        .Q(s_axi_rresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_9),
        .Q(s_axi_bresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_8),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .R(rst));
  LUT1 #(
    .INIT(2'h1)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[0]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .O(plusOp[0]));
  (* \PinAttr:I1:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[1]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .O(plusOp[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[2]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[4]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [4]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [3]),
        .O(plusOp[4]));
  LUT2 #(
    .INIT(4'h9)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_2 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [5]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [3]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .I4(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .I5(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [4]),
        .O(plusOp[5]));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [0]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [1]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [2]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [3]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [4]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 [5]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[5]_i_1_n_0 ));
  ublaze_sopc_axi_timer_0_0__address_decoder I_DECODER
       (.D({I_DECODER_n_6,I_DECODER_n_7}),
        .D_0(D_0),
        .D_1(D_1),
        .D_2(D_2),
        .\FSM_onehot_state_reg[3] ({I_DECODER_n_8,I_DECODER_n_9,I_DECODER_n_10}),
        .\INCLUDE_DPHASE_TIMER.dpto_cnt_reg[5] (\INCLUDE_DPHASE_TIMER.dpto_cnt_reg__0 ),
        .\LOAD_REG_GEN[10].LOAD_REG_I (\LOAD_REG_GEN[10].LOAD_REG_I ),
        .\LOAD_REG_GEN[10].LOAD_REG_I_0 (\LOAD_REG_GEN[10].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[11].LOAD_REG_I (\LOAD_REG_GEN[11].LOAD_REG_I ),
        .\LOAD_REG_GEN[11].LOAD_REG_I_0 (\LOAD_REG_GEN[11].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[12].LOAD_REG_I (\LOAD_REG_GEN[12].LOAD_REG_I ),
        .\LOAD_REG_GEN[12].LOAD_REG_I_0 (\LOAD_REG_GEN[12].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[13].LOAD_REG_I (\LOAD_REG_GEN[13].LOAD_REG_I ),
        .\LOAD_REG_GEN[13].LOAD_REG_I_0 (\LOAD_REG_GEN[13].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[14].LOAD_REG_I (\LOAD_REG_GEN[14].LOAD_REG_I ),
        .\LOAD_REG_GEN[14].LOAD_REG_I_0 (\LOAD_REG_GEN[14].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[15].LOAD_REG_I (\LOAD_REG_GEN[15].LOAD_REG_I ),
        .\LOAD_REG_GEN[15].LOAD_REG_I_0 (\LOAD_REG_GEN[15].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[16].LOAD_REG_I (\LOAD_REG_GEN[16].LOAD_REG_I ),
        .\LOAD_REG_GEN[16].LOAD_REG_I_0 (\LOAD_REG_GEN[16].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[17].LOAD_REG_I (\LOAD_REG_GEN[17].LOAD_REG_I ),
        .\LOAD_REG_GEN[17].LOAD_REG_I_0 (\LOAD_REG_GEN[17].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[18].LOAD_REG_I (\LOAD_REG_GEN[18].LOAD_REG_I ),
        .\LOAD_REG_GEN[18].LOAD_REG_I_0 (\LOAD_REG_GEN[18].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[19].LOAD_REG_I (\LOAD_REG_GEN[19].LOAD_REG_I ),
        .\LOAD_REG_GEN[19].LOAD_REG_I_0 (\LOAD_REG_GEN[19].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[1].LOAD_REG_I (\LOAD_REG_GEN[1].LOAD_REG_I ),
        .\LOAD_REG_GEN[1].LOAD_REG_I_0 (\LOAD_REG_GEN[1].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[20].LOAD_REG_I (\LOAD_REG_GEN[20].LOAD_REG_I ),
        .\LOAD_REG_GEN[20].LOAD_REG_I_0 (\LOAD_REG_GEN[20].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[21].LOAD_REG_I (\LOAD_REG_GEN[21].LOAD_REG_I ),
        .\LOAD_REG_GEN[21].LOAD_REG_I_0 (\LOAD_REG_GEN[21].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[22].LOAD_REG_I (\LOAD_REG_GEN[22].LOAD_REG_I ),
        .\LOAD_REG_GEN[22].LOAD_REG_I_0 (\LOAD_REG_GEN[22].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[23].LOAD_REG_I (\LOAD_REG_GEN[23].LOAD_REG_I ),
        .\LOAD_REG_GEN[23].LOAD_REG_I_0 (\LOAD_REG_GEN[23].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[24].LOAD_REG_I (\LOAD_REG_GEN[24].LOAD_REG_I ),
        .\LOAD_REG_GEN[24].LOAD_REG_I_0 (\LOAD_REG_GEN[24].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[25].LOAD_REG_I (\LOAD_REG_GEN[25].LOAD_REG_I ),
        .\LOAD_REG_GEN[25].LOAD_REG_I_0 (\LOAD_REG_GEN[25].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[26].LOAD_REG_I (\LOAD_REG_GEN[26].LOAD_REG_I ),
        .\LOAD_REG_GEN[26].LOAD_REG_I_0 (\LOAD_REG_GEN[26].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[27].LOAD_REG_I (\LOAD_REG_GEN[27].LOAD_REG_I ),
        .\LOAD_REG_GEN[27].LOAD_REG_I_0 (\LOAD_REG_GEN[27].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[28].LOAD_REG_I (\LOAD_REG_GEN[28].LOAD_REG_I ),
        .\LOAD_REG_GEN[28].LOAD_REG_I_0 (\LOAD_REG_GEN[28].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[29].LOAD_REG_I (\LOAD_REG_GEN[29].LOAD_REG_I ),
        .\LOAD_REG_GEN[29].LOAD_REG_I_0 (\LOAD_REG_GEN[29].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[2].LOAD_REG_I (\LOAD_REG_GEN[2].LOAD_REG_I ),
        .\LOAD_REG_GEN[2].LOAD_REG_I_0 (\LOAD_REG_GEN[2].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[30].LOAD_REG_I (\LOAD_REG_GEN[30].LOAD_REG_I ),
        .\LOAD_REG_GEN[30].LOAD_REG_I_0 (\LOAD_REG_GEN[30].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[31].LOAD_REG_I (\LOAD_REG_GEN[31].LOAD_REG_I ),
        .\LOAD_REG_GEN[31].LOAD_REG_I_0 (\LOAD_REG_GEN[31].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[3].LOAD_REG_I (\LOAD_REG_GEN[3].LOAD_REG_I ),
        .\LOAD_REG_GEN[3].LOAD_REG_I_0 (\LOAD_REG_GEN[3].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[4].LOAD_REG_I (\LOAD_REG_GEN[4].LOAD_REG_I ),
        .\LOAD_REG_GEN[4].LOAD_REG_I_0 (\LOAD_REG_GEN[4].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[5].LOAD_REG_I (\LOAD_REG_GEN[5].LOAD_REG_I ),
        .\LOAD_REG_GEN[5].LOAD_REG_I_0 (\LOAD_REG_GEN[5].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[6].LOAD_REG_I (\LOAD_REG_GEN[6].LOAD_REG_I ),
        .\LOAD_REG_GEN[6].LOAD_REG_I_0 (\LOAD_REG_GEN[6].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[7].LOAD_REG_I (\LOAD_REG_GEN[7].LOAD_REG_I ),
        .\LOAD_REG_GEN[7].LOAD_REG_I_0 (\LOAD_REG_GEN[7].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[7].LOAD_REG_I_1 (\LOAD_REG_GEN[7].LOAD_REG_I_1 ),
        .\LOAD_REG_GEN[8].LOAD_REG_I (\LOAD_REG_GEN[8].LOAD_REG_I ),
        .\LOAD_REG_GEN[8].LOAD_REG_I_0 (\LOAD_REG_GEN[8].LOAD_REG_I_0 ),
        .\LOAD_REG_GEN[9].LOAD_REG_I (\LOAD_REG_GEN[9].LOAD_REG_I ),
        .\LOAD_REG_GEN[9].LOAD_REG_I_0 (\LOAD_REG_GEN[9].LOAD_REG_I_0 ),
        .Q(start2),
        .READ_DONE0_I(READ_DONE0_I),
        .READ_DONE0_I_0(READ_DONE0_I_0),
        .READ_DONE1_I(READ_DONE1_I),
        .\TCSR0_GENERATE[23].TCSR0_FF_I (\TCSR0_GENERATE[23].TCSR0_FF_I ),
        .\TCSR1_GENERATE[23].TCSR1_FF_I (\TCSR1_GENERATE[23].TCSR1_FF_I ),
        .\TCSR1_GENERATE[24].TCSR1_FF_I (\TCSR1_GENERATE[24].TCSR1_FF_I ),
        .\TCSR1_GENERATE[24].TCSR1_FF_I_0 (\TCSR1_GENERATE[24].TCSR1_FF_I_0 ),
        .\TCSR1_GENERATE[24].TCSR1_FF_I_1 (\TCSR1_GENERATE[24].TCSR1_FF_I_1 ),
        .\bus2ip_addr_i_reg[4] ({bus2ip_addr[0],bus2ip_addr[1],bus2ip_addr[2]}),
        .bus2ip_rnw_i(bus2ip_rnw_i),
        .bus2ip_wrce(bus2ip_wrce),
        .is_read_reg(is_read_reg_n_0),
        .is_write_reg(is_write_reg_n_0),
        .out({\FSM_onehot_state_reg_n_0_[3] ,s_axi_bresp_i,s_axi_rresp_i,\FSM_onehot_state_reg_n_0_[0] }),
        .pair0_Select(pair0_Select),
        .read_Mux_In(read_Mux_In),
        .read_done1(read_done1),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_awvalid_0(\state[1]_i_2_n_0 ),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid_i_reg(I_DECODER_n_107),
        .s_axi_bvalid_i_reg_0(s_axi_bvalid),
        .\s_axi_rdata_i_reg[0] (\s_axi_rdata_i_reg[0]_0 ),
        .\s_axi_rdata_i_reg[0]_0 (\s_axi_rdata_i_reg[0]_1 ),
        .\s_axi_rdata_i_reg[0]_1 (\s_axi_rdata_i_reg[0]_2 ),
        .\s_axi_rdata_i_reg[11] (\s_axi_rdata_i_reg[11]_0 ),
        .\s_axi_rdata_i_reg[12] (\s_axi_rdata_i_reg[12]_0 ),
        .\s_axi_rdata_i_reg[13] (\s_axi_rdata_i_reg[13]_0 ),
        .\s_axi_rdata_i_reg[14] (\s_axi_rdata_i_reg[14]_0 ),
        .\s_axi_rdata_i_reg[15] (\s_axi_rdata_i_reg[15]_0 ),
        .\s_axi_rdata_i_reg[16] (\s_axi_rdata_i_reg[16]_0 ),
        .\s_axi_rdata_i_reg[17] (\s_axi_rdata_i_reg[17]_0 ),
        .\s_axi_rdata_i_reg[18] (\s_axi_rdata_i_reg[18]_0 ),
        .\s_axi_rdata_i_reg[19] (\s_axi_rdata_i_reg[19]_0 ),
        .\s_axi_rdata_i_reg[20] (\s_axi_rdata_i_reg[20]_0 ),
        .\s_axi_rdata_i_reg[21] (\s_axi_rdata_i_reg[21]_0 ),
        .\s_axi_rdata_i_reg[22] (\s_axi_rdata_i_reg[22]_0 ),
        .\s_axi_rdata_i_reg[23] (\s_axi_rdata_i_reg[23]_0 ),
        .\s_axi_rdata_i_reg[24] (\s_axi_rdata_i_reg[24]_0 ),
        .\s_axi_rdata_i_reg[25] (\s_axi_rdata_i_reg[25]_0 ),
        .\s_axi_rdata_i_reg[26] (\s_axi_rdata_i_reg[26]_0 ),
        .\s_axi_rdata_i_reg[27] (\s_axi_rdata_i_reg[27]_0 ),
        .\s_axi_rdata_i_reg[28] (\s_axi_rdata_i_reg[28]_0 ),
        .\s_axi_rdata_i_reg[29] (\s_axi_rdata_i_reg[29]_0 ),
        .\s_axi_rdata_i_reg[30] (\s_axi_rdata_i_reg[30]_0 ),
        .\s_axi_rdata_i_reg[31] (\s_axi_rdata_i_reg[31]_0 ),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid_i_reg(s_axi_rvalid_i_reg_0),
        .s_axi_rvalid_i_reg_0(s_axi_rvalid_i_reg_1),
        .s_axi_rvalid_i_reg_1(s_axi_rvalid_i_reg_2),
        .s_axi_rvalid_i_reg_2(I_DECODER_n_106),
        .s_axi_rvalid_i_reg_3(\FSM_onehot_state[3]_i_2_n_0 ),
        .s_axi_rvalid_i_reg_4(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .\state_reg[1] (state));
  LUT5 #(
    .INIT(32'h03020202)) 
    \bus2ip_addr_i[4]_i_1 
       (.I0(s_axi_arvalid),
        .I1(state[0]),
        .I2(state[1]),
        .I3(s_axi_wvalid),
        .I4(s_axi_awvalid),
        .O(\bus2ip_addr_i[4]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[4]_i_1_n_0 ),
        .D(s_axi_araddr[0]),
        .Q(bus2ip_addr[2]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[4]_i_1_n_0 ),
        .D(s_axi_araddr[1]),
        .Q(bus2ip_addr[1]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[4]_i_1_n_0 ),
        .D(s_axi_araddr[2]),
        .Q(bus2ip_addr[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[4]_i_1_n_0 ),
        .D(s_axi_arvalid),
        .Q(bus2ip_rnw_i),
        .R(rst));
  LUT5 #(
    .INIT(32'hB8BB8888)) 
    is_read_i_1
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_state[3]_i_2_n_0 ),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(is_read_reg_n_0),
        .O(is_read_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_read_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_read_i_1_n_0),
        .Q(is_read_reg_n_0),
        .R(rst));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    is_write_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(s_axi_arvalid),
        .I4(is_write_i_2_n_0),
        .I5(is_write_reg_n_0),
        .O(is_write_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFEAEAEAAAAAAAAA)) 
    is_write_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_rvalid),
        .I2(s_axi_rready),
        .I3(s_axi_bvalid),
        .I4(s_axi_bready),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(is_write_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_write_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_write_i_1_n_0),
        .Q(is_write_reg_n_0),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus2ip_reset),
        .Q(rst),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_107),
        .Q(s_axi_bvalid),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[0]),
        .Q(s_axi_rdata[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[10]),
        .Q(s_axi_rdata[10]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[11]),
        .Q(s_axi_rdata[11]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[12]),
        .Q(s_axi_rdata[12]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[13]),
        .Q(s_axi_rdata[13]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[14]),
        .Q(s_axi_rdata[14]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[15]),
        .Q(s_axi_rdata[15]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[16] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[16]),
        .Q(s_axi_rdata[16]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[17] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[17]),
        .Q(s_axi_rdata[17]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[18] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[18]),
        .Q(s_axi_rdata[18]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[19] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[19]),
        .Q(s_axi_rdata[19]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[1]),
        .Q(s_axi_rdata[1]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[20] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[20]),
        .Q(s_axi_rdata[20]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[21] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[21]),
        .Q(s_axi_rdata[21]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[22] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[22]),
        .Q(s_axi_rdata[22]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[23] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[23]),
        .Q(s_axi_rdata[23]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[24] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[24]),
        .Q(s_axi_rdata[24]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[25] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[25]),
        .Q(s_axi_rdata[25]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[26] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[26]),
        .Q(s_axi_rdata[26]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[27] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[27]),
        .Q(s_axi_rdata[27]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[28] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[28]),
        .Q(s_axi_rdata[28]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[29] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[29]),
        .Q(s_axi_rdata[29]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[2]),
        .Q(s_axi_rdata[2]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[30] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[30]),
        .Q(s_axi_rdata[30]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[31]),
        .Q(s_axi_rdata[31]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[3]),
        .Q(s_axi_rdata[3]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[4]),
        .Q(s_axi_rdata[4]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[5]),
        .Q(s_axi_rdata[5]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[6]),
        .Q(s_axi_rdata[6]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[7]),
        .Q(s_axi_rdata[7]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[8]),
        .Q(s_axi_rdata[8]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[9]),
        .Q(s_axi_rdata[9]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_106),
        .Q(s_axi_rvalid),
        .R(rst));
  LUT5 #(
    .INIT(32'h000F0008)) 
    start2_i_1
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .I2(state[0]),
        .I3(state[1]),
        .I4(s_axi_arvalid),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(rst));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_2 
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .O(\state[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_7),
        .Q(state[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_6),
        .Q(state[1]),
        .R(rst));
endmodule

(* ORIG_REF_NAME = "tc_core" *) 
module ublaze_sopc_axi_timer_0_0__tc_core
   (D,
    \INFERRED_GEN.icount_out_reg[0] ,
    bus2ip_reset,
    generateout0,
    generateout1,
    interrupt,
    D_0,
    read_done1,
    pwm0,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ,
    \LOAD_REG_GEN[20].LOAD_REG_I ,
    D_1,
    s_axi_aclk,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_30 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_31 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_32 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_33 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_34 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_35 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_36 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_37 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_38 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_39 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_40 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_41 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_42 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_43 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_44 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_45 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_46 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_47 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_48 ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_49 ,
    D_2,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 ,
    bus2ip_wrce,
    s_axi_wdata,
    pair0_Select,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_50 ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_30 ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] ,
    s_axi_aresetn,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_31 ,
    Bus_RNW_reg_reg,
    Bus_RNW_reg_reg_0,
    Bus_RNW_reg_reg_1,
    Bus_RNW_reg_reg_2,
    Bus_RNW_reg_reg_3,
    Bus_RNW_reg_reg_4,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ,
    freeze,
    capturetrig0,
    capturetrig1);
  output [31:0]D;
  output [85:0]\INFERRED_GEN.icount_out_reg[0] ;
  output bus2ip_reset;
  output generateout0;
  output generateout1;
  output interrupt;
  output D_0;
  output read_done1;
  output pwm0;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ;
  input \LOAD_REG_GEN[20].LOAD_REG_I ;
  input D_1;
  input s_axi_aclk;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_30 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_31 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_32 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_33 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_34 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_35 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_36 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_37 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_38 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_39 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_40 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_41 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_42 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_43 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_44 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_45 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_46 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_47 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_48 ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_49 ;
  input D_2;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 ;
  input [1:0]bus2ip_wrce;
  input [10:0]s_axi_wdata;
  input pair0_Select;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_50 ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_30 ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] ;
  input s_axi_aresetn;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_31 ;
  input Bus_RNW_reg_reg;
  input Bus_RNW_reg_reg_0;
  input Bus_RNW_reg_reg_1;
  input Bus_RNW_reg_reg_2;
  input Bus_RNW_reg_reg_3;
  input Bus_RNW_reg_reg_4;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ;
  input freeze;
  input capturetrig0;
  input capturetrig1;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire Bus_RNW_reg_reg_0;
  wire Bus_RNW_reg_reg_1;
  wire Bus_RNW_reg_reg_2;
  wire Bus_RNW_reg_reg_3;
  wire Bus_RNW_reg_reg_4;
  wire CE;
  wire CE_0;
  wire [31:0]D;
  wire D_0;
  wire D_1;
  wire D_2;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_30 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_31 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_32 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_33 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_34 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_35 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_36 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_37 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_38 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_39 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_40 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_41 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_42 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_43 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_44 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_45 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_46 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_47 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_48 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_49 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_50 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ;
  wire \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_30 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_31 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_35 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_36 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_37 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_38 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_39 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_40 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_41 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_42 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_43 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_44 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_45 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_46 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_47 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_48 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_49 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_50 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_51 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_52 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_53 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_54 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_55 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_56 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_57 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_58 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_59 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_60 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_61 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_62 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_63 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_64 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_65 ;
  wire \GEN_SECOND_TIMER.COUNTER_1_I_n_66 ;
  wire [85:0]\INFERRED_GEN.icount_out_reg[0] ;
  wire \LOAD_REG_GEN[20].LOAD_REG_I ;
  wire TIMER_CONTROL_I_n_10;
  wire TIMER_CONTROL_I_n_11;
  wire TIMER_CONTROL_I_n_12;
  wire TIMER_CONTROL_I_n_13;
  wire TIMER_CONTROL_I_n_14;
  wire TIMER_CONTROL_I_n_15;
  wire TIMER_CONTROL_I_n_16;
  wire TIMER_CONTROL_I_n_17;
  wire TIMER_CONTROL_I_n_18;
  wire TIMER_CONTROL_I_n_19;
  wire TIMER_CONTROL_I_n_20;
  wire TIMER_CONTROL_I_n_21;
  wire TIMER_CONTROL_I_n_22;
  wire TIMER_CONTROL_I_n_23;
  wire TIMER_CONTROL_I_n_24;
  wire TIMER_CONTROL_I_n_27;
  wire TIMER_CONTROL_I_n_28;
  wire TIMER_CONTROL_I_n_3;
  wire TIMER_CONTROL_I_n_4;
  wire bus2ip_reset;
  wire [1:0]bus2ip_wrce;
  wire capturetrig0;
  wire capturetrig1;
  wire [0:1]counter_TC;
  wire freeze;
  wire generateOutPre00;
  wire generateOutPre10;
  wire interrupt;
  wire pair0_Select;
  wire [85:95]read_Mux_In;
  wire read_done1;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [10:0]s_axi_wdata;
  wire NLW_TIMER_CONTROL_I_PWM_FF_I_UNCONNECTED;
  wire NLW_TIMER_CONTROL_I_R_UNCONNECTED;
  wire NLW_TIMER_CONTROL_I_generateout0_UNCONNECTED;
  wire NLW_TIMER_CONTROL_I_generateout1_UNCONNECTED;
  wire NLW_TIMER_CONTROL_I_pwm0_UNCONNECTED;

  ublaze_sopc_axi_timer_0_0__count_module COUNTER_0_I
       (.CE(CE_0),
        .D_1(D_1),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_30 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_31 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_32 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_33 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_34 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_35 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_36 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_37 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_38 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_19 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_39 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_20 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_40 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_21 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_41 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_22 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_42 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_43 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_44 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_45 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_46 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_47 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_48 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_49 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_23 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_24 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_25 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_26 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_27 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_28 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_29 ),
        .\INFERRED_GEN.icount_out_reg[31] (\INFERRED_GEN.icount_out_reg[0] [84:32]),
        .Q(TIMER_CONTROL_I_n_3),
        .S(TIMER_CONTROL_I_n_28),
        .\TCSR0_GENERATE[20].TCSR0_FF_I (TIMER_CONTROL_I_n_23),
        .\TCSR0_GENERATE[31].TCSR0_FF_I (TIMER_CONTROL_I_n_24),
        .counter_TC(counter_TC[0]),
        .generateOutPre00(generateOutPre00),
        .read_Mux_In({read_Mux_In[85],read_Mux_In[86],read_Mux_In[87],read_Mux_In[88],read_Mux_In[89],read_Mux_In[90],read_Mux_In[91],read_Mux_In[92],read_Mux_In[93],read_Mux_In[94],read_Mux_In[95]}),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_aresetn_0(bus2ip_reset));
  ublaze_sopc_axi_timer_0_0__count_module_0 \GEN_SECOND_TIMER.COUNTER_1_I 
       (.Bus_RNW_reg_reg(Bus_RNW_reg_reg),
        .Bus_RNW_reg_reg_0(Bus_RNW_reg_reg_0),
        .Bus_RNW_reg_reg_1(Bus_RNW_reg_reg_1),
        .CE(CE),
        .DI(\INFERRED_GEN.icount_out_reg[0] [30:28]),
        .D_2(D_2),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_1 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_10 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_11 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_12 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_13 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_14 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_15 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_16 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_17 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_18 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_19 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_2 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_20 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_21 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_22 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_23 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_24 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_25 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_26 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_27 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_28 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_29 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_3 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_4 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_5 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_6 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_7 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_8 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_9 ),
        .\INFERRED_GEN.icount_out_reg[0] (\INFERRED_GEN.icount_out_reg[0] [0]),
        .\INFERRED_GEN.icount_out_reg[31] (bus2ip_reset),
        .\INFERRED_GEN.icount_out_reg[31]_0 (\INFERRED_GEN.icount_out_reg[0] [63:32]),
        .\LOAD_REG_GEN[0].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[0] [31]),
        .\LOAD_REG_GEN[12].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[0] [19:16]),
        .\LOAD_REG_GEN[16].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[0] [15:12]),
        .\LOAD_REG_GEN[20].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[0] [11:8]),
        .\LOAD_REG_GEN[24].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[0] [7:4]),
        .\LOAD_REG_GEN[28].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[0] [3:1]),
        .\LOAD_REG_GEN[4].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[0] [27:24]),
        .\LOAD_REG_GEN[8].LOAD_REG_I_0 (\INFERRED_GEN.icount_out_reg[0] [23:20]),
        .Q(TIMER_CONTROL_I_n_4),
        .S(TIMER_CONTROL_I_n_27),
        .\TCSR0_GENERATE[31].TCSR0_FF_I (TIMER_CONTROL_I_n_22),
        .counter_TC(counter_TC[1]),
        .generateOutPre0_reg(TIMER_CONTROL_I_n_21),
        .generateOutPre10(generateOutPre10),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .\s_axi_rdata_i_reg[0] (\GEN_SECOND_TIMER.COUNTER_1_I_n_35 ),
        .\s_axi_rdata_i_reg[10] (\GEN_SECOND_TIMER.COUNTER_1_I_n_62 ),
        .\s_axi_rdata_i_reg[11] (\GEN_SECOND_TIMER.COUNTER_1_I_n_49 ),
        .\s_axi_rdata_i_reg[12] (\GEN_SECOND_TIMER.COUNTER_1_I_n_48 ),
        .\s_axi_rdata_i_reg[13] (\GEN_SECOND_TIMER.COUNTER_1_I_n_61 ),
        .\s_axi_rdata_i_reg[14] (\GEN_SECOND_TIMER.COUNTER_1_I_n_47 ),
        .\s_axi_rdata_i_reg[15] (\GEN_SECOND_TIMER.COUNTER_1_I_n_46 ),
        .\s_axi_rdata_i_reg[16] (\GEN_SECOND_TIMER.COUNTER_1_I_n_45 ),
        .\s_axi_rdata_i_reg[17] (\GEN_SECOND_TIMER.COUNTER_1_I_n_44 ),
        .\s_axi_rdata_i_reg[18] (\GEN_SECOND_TIMER.COUNTER_1_I_n_43 ),
        .\s_axi_rdata_i_reg[19] (\GEN_SECOND_TIMER.COUNTER_1_I_n_42 ),
        .\s_axi_rdata_i_reg[1] (\GEN_SECOND_TIMER.COUNTER_1_I_n_54 ),
        .\s_axi_rdata_i_reg[20] (\GEN_SECOND_TIMER.COUNTER_1_I_n_60 ),
        .\s_axi_rdata_i_reg[21] (\GEN_SECOND_TIMER.COUNTER_1_I_n_59 ),
        .\s_axi_rdata_i_reg[22] (\GEN_SECOND_TIMER.COUNTER_1_I_n_58 ),
        .\s_axi_rdata_i_reg[23] (\GEN_SECOND_TIMER.COUNTER_1_I_n_57 ),
        .\s_axi_rdata_i_reg[24] (\GEN_SECOND_TIMER.COUNTER_1_I_n_41 ),
        .\s_axi_rdata_i_reg[25] (\GEN_SECOND_TIMER.COUNTER_1_I_n_56 ),
        .\s_axi_rdata_i_reg[26] (\GEN_SECOND_TIMER.COUNTER_1_I_n_55 ),
        .\s_axi_rdata_i_reg[27] (\GEN_SECOND_TIMER.COUNTER_1_I_n_40 ),
        .\s_axi_rdata_i_reg[28] (\GEN_SECOND_TIMER.COUNTER_1_I_n_39 ),
        .\s_axi_rdata_i_reg[29] (\GEN_SECOND_TIMER.COUNTER_1_I_n_38 ),
        .\s_axi_rdata_i_reg[2] (\GEN_SECOND_TIMER.COUNTER_1_I_n_53 ),
        .\s_axi_rdata_i_reg[30] (\GEN_SECOND_TIMER.COUNTER_1_I_n_37 ),
        .\s_axi_rdata_i_reg[31] (\GEN_SECOND_TIMER.COUNTER_1_I_n_36 ),
        .\s_axi_rdata_i_reg[3] (\GEN_SECOND_TIMER.COUNTER_1_I_n_66 ),
        .\s_axi_rdata_i_reg[4] (\GEN_SECOND_TIMER.COUNTER_1_I_n_65 ),
        .\s_axi_rdata_i_reg[5] (\GEN_SECOND_TIMER.COUNTER_1_I_n_64 ),
        .\s_axi_rdata_i_reg[6] (\GEN_SECOND_TIMER.COUNTER_1_I_n_52 ),
        .\s_axi_rdata_i_reg[7] (\GEN_SECOND_TIMER.COUNTER_1_I_n_51 ),
        .\s_axi_rdata_i_reg[8] (\GEN_SECOND_TIMER.COUNTER_1_I_n_50 ),
        .\s_axi_rdata_i_reg[9] (\GEN_SECOND_TIMER.COUNTER_1_I_n_63 ));
  ublaze_sopc_axi_timer_0_0__mux_onehot_f READ_MUX_I
       (.D(D),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_10 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_11 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_12 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_13 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_14 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_15 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_16 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_17 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_18 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_2 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_3 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_4 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_5 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_6 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_7 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_8 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_9 ),
        .\INFERRED_GEN.icount_out_reg[0] (\GEN_SECOND_TIMER.COUNTER_1_I_n_35 ),
        .\INFERRED_GEN.icount_out_reg[11] (\GEN_SECOND_TIMER.COUNTER_1_I_n_49 ),
        .\INFERRED_GEN.icount_out_reg[12] (\GEN_SECOND_TIMER.COUNTER_1_I_n_48 ),
        .\INFERRED_GEN.icount_out_reg[13] (\GEN_SECOND_TIMER.COUNTER_1_I_n_61 ),
        .\INFERRED_GEN.icount_out_reg[14] (\GEN_SECOND_TIMER.COUNTER_1_I_n_47 ),
        .\INFERRED_GEN.icount_out_reg[15] (\GEN_SECOND_TIMER.COUNTER_1_I_n_46 ),
        .\INFERRED_GEN.icount_out_reg[16] (\GEN_SECOND_TIMER.COUNTER_1_I_n_45 ),
        .\INFERRED_GEN.icount_out_reg[17] (\GEN_SECOND_TIMER.COUNTER_1_I_n_44 ),
        .\INFERRED_GEN.icount_out_reg[18] (\GEN_SECOND_TIMER.COUNTER_1_I_n_43 ),
        .\INFERRED_GEN.icount_out_reg[19] (\GEN_SECOND_TIMER.COUNTER_1_I_n_42 ),
        .\INFERRED_GEN.icount_out_reg[1] (\GEN_SECOND_TIMER.COUNTER_1_I_n_54 ),
        .\INFERRED_GEN.icount_out_reg[20] (\GEN_SECOND_TIMER.COUNTER_1_I_n_60 ),
        .\INFERRED_GEN.icount_out_reg[21] (\GEN_SECOND_TIMER.COUNTER_1_I_n_59 ),
        .\INFERRED_GEN.icount_out_reg[22] (\GEN_SECOND_TIMER.COUNTER_1_I_n_58 ),
        .\INFERRED_GEN.icount_out_reg[23] (\GEN_SECOND_TIMER.COUNTER_1_I_n_57 ),
        .\INFERRED_GEN.icount_out_reg[24] (\GEN_SECOND_TIMER.COUNTER_1_I_n_41 ),
        .\INFERRED_GEN.icount_out_reg[25] (\GEN_SECOND_TIMER.COUNTER_1_I_n_56 ),
        .\INFERRED_GEN.icount_out_reg[26] (\GEN_SECOND_TIMER.COUNTER_1_I_n_55 ),
        .\INFERRED_GEN.icount_out_reg[27] (\GEN_SECOND_TIMER.COUNTER_1_I_n_40 ),
        .\INFERRED_GEN.icount_out_reg[28] (\GEN_SECOND_TIMER.COUNTER_1_I_n_39 ),
        .\INFERRED_GEN.icount_out_reg[29] (\GEN_SECOND_TIMER.COUNTER_1_I_n_38 ),
        .\INFERRED_GEN.icount_out_reg[2] (\GEN_SECOND_TIMER.COUNTER_1_I_n_53 ),
        .\INFERRED_GEN.icount_out_reg[30] (\GEN_SECOND_TIMER.COUNTER_1_I_n_37 ),
        .\INFERRED_GEN.icount_out_reg[31] (\GEN_SECOND_TIMER.COUNTER_1_I_n_36 ),
        .\INFERRED_GEN.icount_out_reg[6] (\GEN_SECOND_TIMER.COUNTER_1_I_n_52 ),
        .\INFERRED_GEN.icount_out_reg[7] (\GEN_SECOND_TIMER.COUNTER_1_I_n_51 ),
        .\INFERRED_GEN.icount_out_reg[8] (\GEN_SECOND_TIMER.COUNTER_1_I_n_50 ),
        .\INFERRED_GEN.icount_out_reg[9] (\GEN_SECOND_TIMER.COUNTER_1_I_n_63 ),
        .\LOAD_REG_GEN[20].LOAD_REG_I (\LOAD_REG_GEN[20].LOAD_REG_I ),
        .\LOAD_REG_GEN[21].LOAD_REG_I (\GEN_SECOND_TIMER.COUNTER_1_I_n_62 ),
        .\LOAD_REG_GEN[26].LOAD_REG_I (\GEN_SECOND_TIMER.COUNTER_1_I_n_64 ),
        .\LOAD_REG_GEN[27].LOAD_REG_I (\GEN_SECOND_TIMER.COUNTER_1_I_n_65 ),
        .\LOAD_REG_GEN[28].LOAD_REG_I (\GEN_SECOND_TIMER.COUNTER_1_I_n_66 ),
        .\TCSR0_GENERATE[23].TCSR0_FF_I (TIMER_CONTROL_I_n_12),
        .\TCSR0_GENERATE[26].TCSR0_FF_I (TIMER_CONTROL_I_n_15),
        .\TCSR0_GENERATE[27].TCSR0_FF_I (TIMER_CONTROL_I_n_16),
        .\TCSR1_GENERATE[21].TCSR1_FF_I (TIMER_CONTROL_I_n_10),
        .\TCSR1_GENERATE[22].TCSR1_FF_I (TIMER_CONTROL_I_n_11),
        .\TCSR1_GENERATE[24].TCSR1_FF_I (TIMER_CONTROL_I_n_13),
        .\TCSR1_GENERATE[25].TCSR1_FF_I (TIMER_CONTROL_I_n_14),
        .\TCSR1_GENERATE[28].TCSR1_FF_I (TIMER_CONTROL_I_n_17),
        .\TCSR1_GENERATE[29].TCSR1_FF_I (TIMER_CONTROL_I_n_18),
        .\TCSR1_GENERATE[30].TCSR1_FF_I (TIMER_CONTROL_I_n_19),
        .\TCSR1_GENERATE[31].TCSR1_FF_I (TIMER_CONTROL_I_n_20));
  ublaze_sopc_axi_timer_0_0__timer_control TIMER_CONTROL_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .Bus_RNW_reg_reg(Bus_RNW_reg_reg_2),
        .Bus_RNW_reg_reg_0(Bus_RNW_reg_reg_3),
        .Bus_RNW_reg_reg_1(Bus_RNW_reg_reg_4),
        .CE(CE_0),
        .CE_0(CE),
        .D_0(D_0),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_50 ),
        .\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] (\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_30 ),
        .\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 (\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_31 ),
        .\INFERRED_GEN.icount_out_reg[0] (\INFERRED_GEN.icount_out_reg[0] [85]),
        .\INFERRED_GEN.icount_out_reg[0]_0 (TIMER_CONTROL_I_n_21),
        .\INFERRED_GEN.icount_out_reg[0]_1 (TIMER_CONTROL_I_n_23),
        .\INFERRED_GEN.icount_out_reg[1] ({\INFERRED_GEN.icount_out_reg[0] [33],\INFERRED_GEN.icount_out_reg[0] [1]}),
        .\INFERRED_GEN.icount_out_reg[31] (TIMER_CONTROL_I_n_22),
        .\INFERRED_GEN.icount_out_reg[31]_0 (TIMER_CONTROL_I_n_24),
        .\INFERRED_GEN.icount_out_reg[4] (TIMER_CONTROL_I_n_28),
        .\LOAD_REG_GEN[21].LOAD_REG_I ({read_Mux_In[85],read_Mux_In[86],read_Mux_In[87],read_Mux_In[88],read_Mux_In[89],read_Mux_In[90],read_Mux_In[91],read_Mux_In[92],read_Mux_In[93],read_Mux_In[94],read_Mux_In[95]}),
        .PWM_FF_I(NLW_TIMER_CONTROL_I_PWM_FF_I_UNCONNECTED),
        .Q({TIMER_CONTROL_I_n_3,TIMER_CONTROL_I_n_4}),
        .R(NLW_TIMER_CONTROL_I_R_UNCONNECTED),
        .S(TIMER_CONTROL_I_n_27),
        .SR(bus2ip_reset),
        .bus2ip_wrce(bus2ip_wrce),
        .capturetrig0(capturetrig0),
        .capturetrig1(capturetrig1),
        .counter_TC(counter_TC),
        .freeze(freeze),
        .generateOutPre00(generateOutPre00),
        .generateOutPre10(generateOutPre10),
        .generateout0(NLW_TIMER_CONTROL_I_generateout0_UNCONNECTED),
        .generateout1(NLW_TIMER_CONTROL_I_generateout1_UNCONNECTED),
        .interrupt(interrupt),
        .pair0_Select(pair0_Select),
        .pwm0(NLW_TIMER_CONTROL_I_pwm0_UNCONNECTED),
        .read_done1(read_done1),
        .s_axi_aclk(s_axi_aclk),
        .\s_axi_rdata_i_reg[0] (TIMER_CONTROL_I_n_20),
        .\s_axi_rdata_i_reg[10] (TIMER_CONTROL_I_n_10),
        .\s_axi_rdata_i_reg[1] (TIMER_CONTROL_I_n_19),
        .\s_axi_rdata_i_reg[2] (TIMER_CONTROL_I_n_18),
        .\s_axi_rdata_i_reg[3] (TIMER_CONTROL_I_n_17),
        .\s_axi_rdata_i_reg[4] (TIMER_CONTROL_I_n_16),
        .\s_axi_rdata_i_reg[5] (TIMER_CONTROL_I_n_15),
        .\s_axi_rdata_i_reg[6] (TIMER_CONTROL_I_n_14),
        .\s_axi_rdata_i_reg[7] (TIMER_CONTROL_I_n_13),
        .\s_axi_rdata_i_reg[8] (TIMER_CONTROL_I_n_12),
        .\s_axi_rdata_i_reg[9] (TIMER_CONTROL_I_n_11),
        .s_axi_wdata(s_axi_wdata));
endmodule

(* ORIG_REF_NAME = "timer_control" *) 
module ublaze_sopc_axi_timer_0_0__timer_control
   (generateout0,
    generateout1,
    interrupt,
    Q,
    \INFERRED_GEN.icount_out_reg[0] ,
    D_0,
    read_done1,
    CE,
    CE_0,
    \s_axi_rdata_i_reg[10] ,
    \s_axi_rdata_i_reg[9] ,
    \s_axi_rdata_i_reg[8] ,
    \s_axi_rdata_i_reg[7] ,
    \s_axi_rdata_i_reg[6] ,
    \s_axi_rdata_i_reg[5] ,
    \s_axi_rdata_i_reg[4] ,
    \s_axi_rdata_i_reg[3] ,
    \s_axi_rdata_i_reg[2] ,
    \s_axi_rdata_i_reg[1] ,
    \s_axi_rdata_i_reg[0] ,
    \INFERRED_GEN.icount_out_reg[0]_0 ,
    \INFERRED_GEN.icount_out_reg[31] ,
    \INFERRED_GEN.icount_out_reg[0]_1 ,
    \INFERRED_GEN.icount_out_reg[31]_0 ,
    R,
    PWM_FF_I,
    S,
    \INFERRED_GEN.icount_out_reg[4] ,
    SR,
    generateOutPre10,
    s_axi_aclk,
    generateOutPre00,
    bus2ip_wrce,
    s_axi_wdata,
    \LOAD_REG_GEN[21].LOAD_REG_I ,
    pair0_Select,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    counter_TC,
    \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ,
    Bus_RNW_reg_reg,
    Bus_RNW_reg_reg_0,
    Bus_RNW_reg_reg_1,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ,
    pwm0,
    \INFERRED_GEN.icount_out_reg[1] ,
    freeze,
    capturetrig0,
    capturetrig1);
  output generateout0;
  output generateout1;
  output interrupt;
  output [1:0]Q;
  output \INFERRED_GEN.icount_out_reg[0] ;
  output D_0;
  output read_done1;
  output CE;
  output CE_0;
  output \s_axi_rdata_i_reg[10] ;
  output \s_axi_rdata_i_reg[9] ;
  output \s_axi_rdata_i_reg[8] ;
  output \s_axi_rdata_i_reg[7] ;
  output \s_axi_rdata_i_reg[6] ;
  output \s_axi_rdata_i_reg[5] ;
  output \s_axi_rdata_i_reg[4] ;
  output \s_axi_rdata_i_reg[3] ;
  output \s_axi_rdata_i_reg[2] ;
  output \s_axi_rdata_i_reg[1] ;
  output \s_axi_rdata_i_reg[0] ;
  output \INFERRED_GEN.icount_out_reg[0]_0 ;
  output \INFERRED_GEN.icount_out_reg[31] ;
  output \INFERRED_GEN.icount_out_reg[0]_1 ;
  output \INFERRED_GEN.icount_out_reg[31]_0 ;
  output R;
  output PWM_FF_I;
  output [0:0]S;
  output [0:0]\INFERRED_GEN.icount_out_reg[4] ;
  input [0:0]SR;
  input generateOutPre10;
  input s_axi_aclk;
  input generateOutPre00;
  input [1:0]bus2ip_wrce;
  input [10:0]s_axi_wdata;
  input [10:0]\LOAD_REG_GEN[21].LOAD_REG_I ;
  input pair0_Select;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input [0:1]counter_TC;
  input \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ;
  input Bus_RNW_reg_reg;
  input Bus_RNW_reg_reg_0;
  input Bus_RNW_reg_reg_1;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ;
  input pwm0;
  input [1:0]\INFERRED_GEN.icount_out_reg[1] ;
  input freeze;
  input capturetrig0;
  input capturetrig1;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire Bus_RNW_reg_reg_0;
  wire Bus_RNW_reg_reg_1;
  wire CE;
  wire CE_0;
  wire D_0;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ;
  wire \GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_3_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_4__0_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_5__0_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_6__0_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_6_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_7__0_n_0 ;
  wire \INFERRED_GEN.icount_out[31]_i_8__0_n_0 ;
  wire \INFERRED_GEN.icount_out_reg[0] ;
  wire \INFERRED_GEN.icount_out_reg[0]_0 ;
  wire \INFERRED_GEN.icount_out_reg[0]_1 ;
  wire [1:0]\INFERRED_GEN.icount_out_reg[1] ;
  wire \INFERRED_GEN.icount_out_reg[31] ;
  wire \INFERRED_GEN.icount_out_reg[31]_0 ;
  wire [0:0]\INFERRED_GEN.icount_out_reg[4] ;
  wire Interrupt0;
  wire \LOAD_REG_GEN[0].LOAD_REG_I_i_3__0_n_0 ;
  wire \LOAD_REG_GEN[0].LOAD_REG_I_i_3_n_0 ;
  wire \LOAD_REG_GEN[0].LOAD_REG_I_i_4__0_n_0 ;
  wire \LOAD_REG_GEN[0].LOAD_REG_I_i_4_n_0 ;
  wire \LOAD_REG_GEN[0].LOAD_REG_I_i_5_n_0 ;
  wire [10:0]\LOAD_REG_GEN[21].LOAD_REG_I ;
  wire [1:0]Q;
  wire READ_DONE1_I_i_1_n_0;
  wire R_0;
  wire [0:0]S;
  wire [0:0]SR;
  wire \TCSR0_GENERATE[23].TCSR0_FF_I_i_2_n_0 ;
  wire \TCSR0_GENERATE[23].TCSR0_FF_I_i_3_n_0 ;
  wire \TCSR0_GENERATE[24].TCSR0_FF_I_i_1_n_0 ;
  wire \TCSR1_GENERATE[23].TCSR1_FF_I_i_2_n_0 ;
  wire \TCSR1_GENERATE[23].TCSR1_FF_I_i_3_n_0 ;
  wire \TCSR1_GENERATE[24].TCSR1_FF_I_i_1_n_0 ;
  wire [1:0]bus2ip_wrce;
  wire captureTrig0_d;
  wire captureTrig0_d0;
  wire captureTrig0_d2;
  wire captureTrig0_pulse_d1;
  wire captureTrig0_pulse_d2;
  wire captureTrig1_d;
  wire captureTrig1_d0;
  wire captureTrig1_d2;
  wire capturetrig0;
  wire capturetrig1;
  wire [0:1]counter_TC;
  wire counter_TC_Reg2;
  wire freeze;
  wire generateOutPre0;
  wire generateOutPre00;
  wire generateOutPre1;
  wire generateOutPre10;
  wire icount_out0_carry_i_7_n_0;
  wire interrupt;
  wire p_46_in;
  wire pair0_Select;
  wire [21:63]read_Mux_In;
  wire read_done1;
  wire s_axi_aclk;
  wire \s_axi_rdata_i_reg[0] ;
  wire \s_axi_rdata_i_reg[10] ;
  wire \s_axi_rdata_i_reg[1] ;
  wire \s_axi_rdata_i_reg[2] ;
  wire \s_axi_rdata_i_reg[3] ;
  wire \s_axi_rdata_i_reg[4] ;
  wire \s_axi_rdata_i_reg[5] ;
  wire \s_axi_rdata_i_reg[6] ;
  wire \s_axi_rdata_i_reg[7] ;
  wire \s_axi_rdata_i_reg[8] ;
  wire \s_axi_rdata_i_reg[9] ;
  wire [10:0]s_axi_wdata;

  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[21].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[53]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [10]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[21]),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[10] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[22].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[54]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [9]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[22]),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[9] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[23].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[23]),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [8]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[55]),
        .I5(Bus_RNW_reg_reg),
        .O(\s_axi_rdata_i_reg[8] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[24].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[56]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [7]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[24]),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[7] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[25].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[57]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [6]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[25]),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[6] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[26].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[26]),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [5]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[58]),
        .I5(Bus_RNW_reg_reg),
        .O(\s_axi_rdata_i_reg[5] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[27].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[27]),
        .I1(Bus_RNW_reg_reg_1),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [4]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[59]),
        .I5(Bus_RNW_reg_reg),
        .O(\s_axi_rdata_i_reg[4] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[28].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[60]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [3]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[28]),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[3] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[29].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[61]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [2]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[29]),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[2] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[30].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[62]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [1]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[30]),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[1] ));
  LUT6 #(
    .INIT(64'hDD0DDD0D0000DD0D)) 
    \GEN.DATA_WIDTH_GEN[31].NUM_BUSES_GEN[0].MUXCY_GEN.MUXCY_I_i_1 
       (.I0(read_Mux_In[63]),
        .I1(Bus_RNW_reg_reg),
        .I2(\LOAD_REG_GEN[21].LOAD_REG_I [0]),
        .I3(Bus_RNW_reg_reg_0),
        .I4(read_Mux_In[31]),
        .I5(Bus_RNW_reg_reg_1),
        .O(\s_axi_rdata_i_reg[0] ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \INFERRED_GEN.icount_out[31]_i_3 
       (.I0(counter_TC[1]),
        .I1(read_Mux_In[63]),
        .I2(read_Mux_In[54]),
        .I3(read_Mux_In[59]),
        .O(\INFERRED_GEN.icount_out[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.icount_out[31]_i_4__0 
       (.I0(read_Mux_In[31]),
        .I1(counter_TC[0]),
        .O(\INFERRED_GEN.icount_out[31]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \INFERRED_GEN.icount_out[31]_i_5__0 
       (.I0(read_Mux_In[22]),
        .I1(read_Mux_In[27]),
        .O(\INFERRED_GEN.icount_out[31]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAEAAA)) 
    \INFERRED_GEN.icount_out[31]_i_6 
       (.I0(read_Mux_In[58]),
        .I1(\INFERRED_GEN.icount_out_reg[0] ),
        .I2(read_Mux_In[27]),
        .I3(counter_TC[1]),
        .I4(read_Mux_In[31]),
        .O(\INFERRED_GEN.icount_out[31]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAEAAA)) 
    \INFERRED_GEN.icount_out[31]_i_6__0 
       (.I0(read_Mux_In[26]),
        .I1(\INFERRED_GEN.icount_out_reg[0] ),
        .I2(read_Mux_In[27]),
        .I3(counter_TC[1]),
        .I4(read_Mux_In[31]),
        .O(\INFERRED_GEN.icount_out[31]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF4000FFFFFFFF)) 
    \INFERRED_GEN.icount_out[31]_i_7 
       (.I0(read_Mux_In[31]),
        .I1(counter_TC[1]),
        .I2(read_Mux_In[27]),
        .I3(\INFERRED_GEN.icount_out_reg[0] ),
        .I4(read_Mux_In[26]),
        .I5(\INFERRED_GEN.icount_out[31]_i_8__0_n_0 ),
        .O(\INFERRED_GEN.icount_out_reg[31]_0 ));
  LUT6 #(
    .INIT(64'h4040454040404040)) 
    \INFERRED_GEN.icount_out[31]_i_7__0 
       (.I0(\INFERRED_GEN.icount_out_reg[0] ),
        .I1(counter_TC[0]),
        .I2(read_Mux_In[54]),
        .I3(counter_TC[1]),
        .I4(read_Mux_In[63]),
        .I5(read_Mux_In[59]),
        .O(\INFERRED_GEN.icount_out[31]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBAAAAAAA)) 
    \INFERRED_GEN.icount_out[31]_i_8 
       (.I0(\INFERRED_GEN.icount_out[31]_i_7__0_n_0 ),
        .I1(read_Mux_In[31]),
        .I2(counter_TC[1]),
        .I3(read_Mux_In[27]),
        .I4(\INFERRED_GEN.icount_out_reg[0] ),
        .I5(read_Mux_In[58]),
        .O(\INFERRED_GEN.icount_out_reg[31] ));
  LUT5 #(
    .INIT(32'hEFEFEFFF)) 
    \INFERRED_GEN.icount_out[31]_i_8__0 
       (.I0(\INFERRED_GEN.icount_out_reg[0] ),
        .I1(read_Mux_In[31]),
        .I2(counter_TC[0]),
        .I3(read_Mux_In[22]),
        .I4(read_Mux_In[27]),
        .O(\INFERRED_GEN.icount_out[31]_i_8__0_n_0 ));
  ublaze_sopc_axi_timer_0_0__cdc_sync INPUT_DOUBLE_REGS
       (.captureTrig0_d0(captureTrig0_d0),
        .capturetrig0(capturetrig0),
        .read_Mux_In(read_Mux_In[28]),
        .s_axi_aclk(s_axi_aclk));
  ublaze_sopc_axi_timer_0_0__cdc_sync_1 INPUT_DOUBLE_REGS2
       (.captureTrig1_d0(captureTrig1_d0),
        .capturetrig1(capturetrig1),
        .read_Mux_In(read_Mux_In[60]),
        .s_axi_aclk(s_axi_aclk));
  ublaze_sopc_axi_timer_0_0__cdc_sync_2 INPUT_DOUBLE_REGS3
       (.\INFERRED_GEN.icount_out_reg[0] (\INFERRED_GEN.icount_out_reg[0]_0 ),
        .\INFERRED_GEN.icount_out_reg[0]_0 (\INFERRED_GEN.icount_out_reg[0]_1 ),
        .\INFERRED_GEN.icount_out_reg[1] (\INFERRED_GEN.icount_out_reg[1] ),
        .\INFERRED_GEN.icount_out_reg[32] (\INFERRED_GEN.icount_out[31]_i_3_n_0 ),
        .\INFERRED_GEN.icount_out_reg[32]_0 (icount_out0_carry_i_7_n_0),
        .\INFERRED_GEN.icount_out_reg[4] (\INFERRED_GEN.icount_out_reg[4] ),
        .S(S),
        .\TCSR0_GENERATE[20].TCSR0_FF_I (\INFERRED_GEN.icount_out[31]_i_7__0_n_0 ),
        .\TCSR0_GENERATE[20].TCSR0_FF_I_0 (\INFERRED_GEN.icount_out_reg[0] ),
        .\TCSR0_GENERATE[22].TCSR0_FF_I (\INFERRED_GEN.icount_out[31]_i_5__0_n_0 ),
        .\TCSR0_GENERATE[26].TCSR0_FF_I (\INFERRED_GEN.icount_out[31]_i_6__0_n_0 ),
        .\TCSR0_GENERATE[31].TCSR0_FF_I (\INFERRED_GEN.icount_out[31]_i_4__0_n_0 ),
        .\TCSR1_GENERATE[26].TCSR1_FF_I (\INFERRED_GEN.icount_out[31]_i_6_n_0 ),
        .counter_TC(counter_TC[1]),
        .freeze(freeze),
        .generateOutPre0(generateOutPre0),
        .read_Mux_In({read_Mux_In[24],read_Mux_In[27],read_Mux_In[30],read_Mux_In[31],read_Mux_In[56],read_Mux_In[62]}),
        .s_axi_aclk(s_axi_aclk));
  LUT4 #(
    .INIT(16'hF888)) 
    Interrupt_i_1
       (.I0(read_Mux_In[55]),
        .I1(read_Mux_In[57]),
        .I2(read_Mux_In[23]),
        .I3(read_Mux_In[25]),
        .O(Interrupt0));
  FDRE #(
    .INIT(1'b0)) 
    Interrupt_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Interrupt0),
        .Q(interrupt),
        .R(SR));
  LUT6 #(
    .INIT(64'h4F444F444F444444)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_1 
       (.I0(Bus_RNW_reg),
        .I1(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I2(\LOAD_REG_GEN[0].LOAD_REG_I_i_3_n_0 ),
        .I3(read_Mux_In[31]),
        .I4(read_Mux_In[27]),
        .I5(D_0),
        .O(CE));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFE000)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_1__0 
       (.I0(read_done1),
        .I1(read_Mux_In[27]),
        .I2(read_Mux_In[31]),
        .I3(\LOAD_REG_GEN[0].LOAD_REG_I_i_3__0_n_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5]_0 ),
        .I5(\LOAD_REG_GEN[0].LOAD_REG_I_i_4__0_n_0 ),
        .O(CE_0));
  LUT6 #(
    .INIT(64'h0000FFFDDDDDDDDD)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_3 
       (.I0(captureTrig0_d),
        .I1(captureTrig0_d2),
        .I2(counter_TC[0]),
        .I3(Q[1]),
        .I4(\LOAD_REG_GEN[0].LOAD_REG_I_i_4_n_0 ),
        .I5(\INFERRED_GEN.icount_out_reg[0] ),
        .O(\LOAD_REG_GEN[0].LOAD_REG_I_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h8880AAAA)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_3__0 
       (.I0(\INFERRED_GEN.icount_out_reg[0] ),
        .I1(counter_TC_Reg2),
        .I2(captureTrig0_pulse_d1),
        .I3(captureTrig0_pulse_d2),
        .I4(\LOAD_REG_GEN[0].LOAD_REG_I_i_5_n_0 ),
        .O(\LOAD_REG_GEN[0].LOAD_REG_I_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_4 
       (.I0(counter_TC_Reg2),
        .I1(captureTrig0_pulse_d1),
        .I2(captureTrig0_pulse_d2),
        .O(\LOAD_REG_GEN[0].LOAD_REG_I_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E00000)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_4__0 
       (.I0(read_done1),
        .I1(read_Mux_In[59]),
        .I2(read_Mux_In[63]),
        .I3(\INFERRED_GEN.icount_out_reg[0] ),
        .I4(captureTrig1_d),
        .I5(captureTrig1_d2),
        .O(\LOAD_REG_GEN[0].LOAD_REG_I_i_4__0_n_0 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "197" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \LOAD_REG_GEN[0].LOAD_REG_I_i_5 
       (.I0(Q[1]),
        .I1(counter_TC[0]),
        .I2(captureTrig0_d2),
        .I3(captureTrig0_d),
        .O(\LOAD_REG_GEN[0].LOAD_REG_I_i_5_n_0 ));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    READ_DONE0_I
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .Q(D_0),
        .R(R_0));
  LUT4 #(
    .INIT(16'hABAA)) 
    READ_DONE0_I_i_1
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_i_3__0_n_0 ),
        .I1(\INFERRED_GEN.icount_out_reg[0] ),
        .I2(captureTrig0_d2),
        .I3(captureTrig0_d),
        .O(R_0));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    READ_DONE1_I
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_BKEND_CE_REGISTERS[5].ce_out_i_reg[5] ),
        .Q(read_done1),
        .R(READ_DONE1_I_i_1_n_0));
  LUT4 #(
    .INIT(16'hAABA)) 
    READ_DONE1_I_i_1
       (.I0(\LOAD_REG_GEN[0].LOAD_REG_I_i_3__0_n_0 ),
        .I1(captureTrig1_d2),
        .I2(captureTrig1_d),
        .I3(\INFERRED_GEN.icount_out_reg[0] ),
        .O(READ_DONE1_I_i_1_n_0));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[20].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[10]),
        .Q(\INFERRED_GEN.icount_out_reg[0] ),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[21].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(pair0_Select),
        .D(s_axi_wdata[9]),
        .Q(read_Mux_In[21]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[22].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[8]),
        .Q(read_Mux_In[22]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[23].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCSR0_GENERATE[23].TCSR0_FF_I_i_2_n_0 ),
        .Q(read_Mux_In[23]),
        .R(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ));
  LUT5 #(
    .INIT(32'hFFFF22E2)) 
    \TCSR0_GENERATE[23].TCSR0_FF_I_i_2 
       (.I0(\TCSR0_GENERATE[23].TCSR0_FF_I_i_3_n_0 ),
        .I1(read_Mux_In[31]),
        .I2(read_Mux_In[24]),
        .I3(\LOAD_REG_GEN[0].LOAD_REG_I_i_3_n_0 ),
        .I4(read_Mux_In[23]),
        .O(\TCSR0_GENERATE[23].TCSR0_FF_I_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \TCSR0_GENERATE[23].TCSR0_FF_I_i_3 
       (.I0(generateOutPre1),
        .I1(\INFERRED_GEN.icount_out_reg[0] ),
        .I2(generateOutPre0),
        .O(\TCSR0_GENERATE[23].TCSR0_FF_I_i_3_n_0 ));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[24].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(pair0_Select),
        .D(\TCSR0_GENERATE[24].TCSR0_FF_I_i_1_n_0 ),
        .Q(read_Mux_In[24]),
        .R(SR));
  LUT4 #(
    .INIT(16'hFFAC)) 
    \TCSR0_GENERATE[24].TCSR0_FF_I_i_1 
       (.I0(s_axi_wdata[7]),
        .I1(read_Mux_In[24]),
        .I2(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I3(s_axi_wdata[9]),
        .O(\TCSR0_GENERATE[24].TCSR0_FF_I_i_1_n_0 ));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[25].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[6]),
        .Q(read_Mux_In[25]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[26].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[5]),
        .Q(read_Mux_In[26]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[27].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[4]),
        .Q(read_Mux_In[27]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[28].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[3]),
        .Q(read_Mux_In[28]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[29].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[2]),
        .Q(read_Mux_In[29]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[30].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[1]),
        .Q(read_Mux_In[30]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR0_GENERATE[31].TCSR0_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[1]),
        .D(s_axi_wdata[0]),
        .Q(read_Mux_In[31]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[21].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(pair0_Select),
        .D(s_axi_wdata[9]),
        .Q(read_Mux_In[53]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[22].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[0]),
        .D(s_axi_wdata[8]),
        .Q(read_Mux_In[54]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[23].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\TCSR1_GENERATE[23].TCSR1_FF_I_i_2_n_0 ),
        .Q(read_Mux_In[55]),
        .R(\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg[4] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0404FF04)) 
    \TCSR1_GENERATE[23].TCSR1_FF_I_i_2 
       (.I0(read_Mux_In[63]),
        .I1(generateOutPre1),
        .I2(\INFERRED_GEN.icount_out_reg[0] ),
        .I3(read_Mux_In[56]),
        .I4(\TCSR1_GENERATE[23].TCSR1_FF_I_i_3_n_0 ),
        .I5(read_Mux_In[55]),
        .O(\TCSR1_GENERATE[23].TCSR1_FF_I_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFBFF)) 
    \TCSR1_GENERATE[23].TCSR1_FF_I_i_3 
       (.I0(captureTrig1_d2),
        .I1(captureTrig1_d),
        .I2(\INFERRED_GEN.icount_out_reg[0] ),
        .I3(read_Mux_In[63]),
        .O(\TCSR1_GENERATE[23].TCSR1_FF_I_i_3_n_0 ));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[24].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(pair0_Select),
        .D(\TCSR1_GENERATE[24].TCSR1_FF_I_i_1_n_0 ),
        .Q(read_Mux_In[56]),
        .R(SR));
  LUT4 #(
    .INIT(16'hFFAC)) 
    \TCSR1_GENERATE[24].TCSR1_FF_I_i_1 
       (.I0(s_axi_wdata[7]),
        .I1(read_Mux_In[56]),
        .I2(\GEN_BKEND_CE_REGISTERS[4].ce_out_i_reg ),
        .I3(s_axi_wdata[9]),
        .O(\TCSR1_GENERATE[24].TCSR1_FF_I_i_1_n_0 ));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[25].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[0]),
        .D(s_axi_wdata[6]),
        .Q(read_Mux_In[57]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[26].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[0]),
        .D(s_axi_wdata[5]),
        .Q(read_Mux_In[58]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[27].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[0]),
        .D(s_axi_wdata[4]),
        .Q(read_Mux_In[59]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[28].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[0]),
        .D(s_axi_wdata[3]),
        .Q(read_Mux_In[60]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[29].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[0]),
        .D(s_axi_wdata[2]),
        .Q(read_Mux_In[61]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[30].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[0]),
        .D(s_axi_wdata[1]),
        .Q(read_Mux_In[62]),
        .R(SR));
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \TCSR1_GENERATE[31].TCSR1_FF_I 
       (.C(s_axi_aclk),
        .CE(bus2ip_wrce[0]),
        .D(s_axi_wdata[0]),
        .Q(read_Mux_In[63]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    captureTrig0_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(captureTrig0_d),
        .Q(captureTrig0_d2),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    captureTrig0_d_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(captureTrig0_d0),
        .Q(captureTrig0_d),
        .R(SR));
  (* \PinAttr:I1:HOLD_DETOUR  = "197" *) 
  LUT2 #(
    .INIT(4'h2)) 
    captureTrig0_pulse_d1_i_1
       (.I0(captureTrig0_d),
        .I1(captureTrig0_d2),
        .O(p_46_in));
  FDRE #(
    .INIT(1'b0)) 
    captureTrig0_pulse_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_46_in),
        .Q(captureTrig0_pulse_d1),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    captureTrig0_pulse_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(captureTrig0_pulse_d1),
        .Q(captureTrig0_pulse_d2),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    captureTrig1_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(captureTrig1_d),
        .Q(captureTrig1_d2),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    captureTrig1_d_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(captureTrig1_d0),
        .Q(captureTrig1_d),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    counter_TC_Reg2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(counter_TC_Reg2),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \counter_TC_Reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(counter_TC[0]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \counter_TC_Reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(counter_TC[1]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    generateOutPre0_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(generateOutPre00),
        .Q(generateOutPre0),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    generateOutPre1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(generateOutPre10),
        .Q(generateOutPre1),
        .R(SR));
  LUT4 #(
    .INIT(16'hFFFD)) 
    icount_out0_carry_i_7
       (.I0(counter_TC[0]),
        .I1(read_Mux_In[31]),
        .I2(read_Mux_In[27]),
        .I3(read_Mux_In[22]),
        .O(icount_out0_carry_i_7_n_0));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_blk_mem_gen_0_0,blk_mem_gen_v8_4_1,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "blk_mem_gen_v8_4_1,Vivado 2018.2.2" *) 
module ublaze_sopc_blk_mem_gen_0_0
   (clka,
    rsta,
    ena,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    web,
    addrb,
    dinb,
    doutb);
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 32768, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE BRAM_CTRL, READ_WRITE_MODE READ_WRITE" *) input clka;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA RST" *) input rsta;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [3:0]wea;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [31:0]addra;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [31:0]dina;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [31:0]douta;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 32768, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE BRAM_CTRL, READ_WRITE_MODE READ_WRITE" *) input clkb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB RST" *) input rstb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB WE" *) input [3:0]web;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [31:0]addrb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DIN" *) input [31:0]dinb;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [31:0]doutb;

  wire [31:0]addra;
  wire [31:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [31:0]NLW_U0_addra_UNCONNECTED;
  wire [31:0]NLW_U0_addrb_UNCONNECTED;
  wire [31:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_ADDRA_WIDTH = "32" *) 
  (* C_ADDRB_WIDTH = "32" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "8" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "0" *) 
  (* C_COUNT_36K_BRAM = "8" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "1" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     20.388 mW" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "1" *) 
  (* C_HAS_RSTB = "1" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "ublaze_sopc_blk_mem_gen_0_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "2" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "8192" *) 
  (* C_READ_DEPTH_B = "8192" *) 
  (* C_READ_WIDTH_A = "32" *) 
  (* C_READ_WIDTH_B = "32" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "1" *) 
  (* C_USE_BYTE_WEA = "1" *) 
  (* C_USE_BYTE_WEB = "1" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "4" *) 
  (* C_WEB_WIDTH = "4" *) 
  (* C_WRITE_DEPTH_A = "8192" *) 
  (* C_WRITE_DEPTH_B = "8192" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "32" *) 
  (* C_WRITE_WIDTH_B = "32" *) 
  (* C_XDEVICEFAMILY = "artix7" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_v8_4_1 U0
       (.addra({NLW_U0_addra_UNCONNECTED[31:15],addra[14:2],NLW_U0_addra_UNCONNECTED[1:0]}),
        .addrb({NLW_U0_addrb_UNCONNECTED[31:15],addrb[14:2],NLW_U0_addrb_UNCONNECTED[1:0]}),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[31:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(rsta),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(rstb),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[31:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[31:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(web));
endmodule

module ublaze_sopc_clk_wiz_0_0
   (UserClkxCO,
    resetn,
    locked,
    clk_in1);
  output UserClkxCO;
  input resetn;
  output locked;
  input clk_in1;

  wire UserClkxCO;
  (* IBUF_LOW_PWR *) wire clk_in1;
  wire locked;
  wire resetn;

  ublaze_sopc_clk_wiz_0_0__ublaze_sopc_clk_wiz_0_0_clk_wiz inst
       (.UserClkxCO(UserClkxCO),
        .clk_in1(clk_in1),
        .locked(locked),
        .resetn(resetn));
endmodule

(* ORIG_REF_NAME = "ublaze_sopc_clk_wiz_0_0_clk_wiz" *) 
module ublaze_sopc_clk_wiz_0_0__ublaze_sopc_clk_wiz_0_0_clk_wiz
   (UserClkxCO,
    resetn,
    locked,
    clk_in1);
  output UserClkxCO;
  input resetn;
  output locked;
  input clk_in1;

  wire UserClkxCO;
  wire UserClkxCO_ublaze_sopc_clk_wiz_0_0;
  wire clk_in1;
  wire clkfbout_buf_ublaze_sopc_clk_wiz_0_0;
  wire clkfbout_ublaze_sopc_clk_wiz_0_0;
  wire locked;
  wire resetn;
  wire NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_adv_inst_DRDY_UNCONNECTED;
  wire NLW_mmcm_adv_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_adv_inst_DO_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  BUFG clkf_buf
       (.I(clkfbout_ublaze_sopc_clk_wiz_0_0),
        .O(clkfbout_buf_ublaze_sopc_clk_wiz_0_0));
  (* box_type = "PRIMITIVE" *) 
  BUFG clkout1_buf
       (.I(UserClkxCO_ublaze_sopc_clk_wiz_0_0),
        .O(UserClkxCO));
  (* OPT_MODIFIED = "MLO RETARGET" *) 
  (* box_type = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(10.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(20.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(1),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("BUF_IN"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b1),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_adv_inst
       (.CLKFBIN(clkfbout_buf_ublaze_sopc_clk_wiz_0_0),
        .CLKFBOUT(clkfbout_ublaze_sopc_clk_wiz_0_0),
        .CLKFBOUTB(NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(clk_in1),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(UserClkxCO_ublaze_sopc_clk_wiz_0_0),
        .CLKOUT0B(NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(NLW_mmcm_adv_inst_CLKOUT1_UNCONNECTED),
        .CLKOUT1B(NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT2B(NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_adv_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_adv_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(locked),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_adv_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(resetn));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_lmb_bram_if_cntlr_0_0,lmb_bram_if_cntlr,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2018.2.2" *) 
module ublaze_sopc_lmb_bram_if_cntlr_0_0
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF SLMB:SLMB1:SLMB2:SLMB3, ASSOCIATED_RESET LMB_Rst, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input LMB_Clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.LMB_Rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.LMB_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT" *) input LMB_Rst;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB ABUS" *) (* x_interface_parameter = "XIL_INTERFACENAME SLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE" *) input [0:31]LMB_ABus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS" *) input [0:31]LMB_WriteDBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE" *) input LMB_AddrStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB READSTROBE" *) input LMB_ReadStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE" *) input LMB_WriteStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB BE" *) input [0:3]LMB_BE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB READDBUS" *) output [0:31]Sl_DBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB READY" *) output Sl_Ready;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB WAIT" *) output Sl_Wait;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB UE" *) output Sl_UE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB CE" *) output Sl_CE;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT RST" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORT, MEM_SIZE 32768, MASTER_TYPE BRAM_CTRL, MEM_WIDTH 32, MEM_ECC NONE" *) output BRAM_Rst_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT CLK" *) output BRAM_Clk_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT ADDR" *) output [0:31]BRAM_Addr_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT EN" *) output BRAM_EN_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT WE" *) output [0:3]BRAM_WEN_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT DIN" *) output [0:31]BRAM_Dout_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT DOUT" *) input [0:31]BRAM_Din_A;

  wire [0:31]BRAM_Addr_A;
  wire BRAM_Clk_A;
  wire [0:31]BRAM_Din_A;
  wire [0:31]BRAM_Dout_A;
  wire BRAM_EN_A;
  wire BRAM_Rst_A;
  wire [0:3]BRAM_WEN_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire LMB_WriteStrobe;
  wire [0:31]Sl_DBus;
  wire Sl_Ready;
  wire NLW_U0_CE_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_LMB1_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB1_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB1_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ACLK_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARESETN_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_AWREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_AWVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_BREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_BVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_RREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_RVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_WREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_WVALID_UNCONNECTED;
  wire NLW_U0_Sl1_CE_UNCONNECTED;
  wire NLW_U0_Sl1_Ready_UNCONNECTED;
  wire NLW_U0_Sl1_UE_UNCONNECTED;
  wire NLW_U0_Sl1_Wait_UNCONNECTED;
  wire NLW_U0_Sl2_CE_UNCONNECTED;
  wire NLW_U0_Sl2_Ready_UNCONNECTED;
  wire NLW_U0_Sl2_UE_UNCONNECTED;
  wire NLW_U0_Sl2_Wait_UNCONNECTED;
  wire NLW_U0_Sl3_CE_UNCONNECTED;
  wire NLW_U0_Sl3_Ready_UNCONNECTED;
  wire NLW_U0_Sl3_UE_UNCONNECTED;
  wire NLW_U0_Sl3_Wait_UNCONNECTED;
  wire NLW_U0_Sl_CE_UNCONNECTED;
  wire NLW_U0_Sl_UE_UNCONNECTED;
  wire NLW_U0_Sl_Wait_UNCONNECTED;
  wire NLW_U0_UE_UNCONNECTED;
  wire [0:31]NLW_U0_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_U0_LMB1_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB1_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB1_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB2_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB2_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB2_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB3_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB3_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB3_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_ARADDR_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_CTRL_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_CTRL_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_CTRL_WSTRB_UNCONNECTED;
  wire [0:31]NLW_U0_Sl1_DBus_UNCONNECTED;
  wire [0:31]NLW_U0_Sl2_DBus_UNCONNECTED;
  wire [0:31]NLW_U0_Sl3_DBus_UNCONNECTED;

  (* C_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_BRAM_AWIDTH = "32" *) 
  (* C_CE_COUNTER_WIDTH = "0" *) 
  (* C_CE_FAILING_REGISTERS = "0" *) 
  (* C_ECC = "0" *) 
  (* C_ECC_ONOFF_REGISTER = "0" *) 
  (* C_ECC_ONOFF_RESET_VALUE = "1" *) 
  (* C_ECC_STATUS_REGISTERS = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FAULT_INJECT = "0" *) 
  (* C_HIGHADDR = "64'b0000000000000000000000000000000000000000000000000111111111111111" *) 
  (* C_INTERCONNECT = "0" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_MASK = "64'b0000000000000000000000000000000001000000000000000000000000000000" *) 
  (* C_MASK1 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_MASK2 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_MASK3 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_NUM_LMB = "1" *) 
  (* C_S_AXI_CTRL_ADDR_WIDTH = "32" *) 
  (* C_S_AXI_CTRL_BASEADDR = "32'b11111111111111111111111111111111" *) 
  (* C_S_AXI_CTRL_DATA_WIDTH = "32" *) 
  (* C_S_AXI_CTRL_HIGHADDR = "32'b00000000000000000000000000000000" *) 
  (* C_UE_FAILING_REGISTERS = "0" *) 
  (* C_WRITE_ACCESS = "2" *) 
  ublaze_sopc_lmb_bram_if_cntlr_0_0__lmb_bram_if_cntlr U0
       (.BRAM_Addr_A({NLW_U0_BRAM_Addr_A_UNCONNECTED[0:16],BRAM_Addr_A[17:29],NLW_U0_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(BRAM_Clk_A),
        .BRAM_Din_A(BRAM_Din_A),
        .BRAM_Dout_A(BRAM_Dout_A),
        .BRAM_EN_A(BRAM_EN_A),
        .BRAM_Rst_A(BRAM_Rst_A),
        .BRAM_WEN_A(BRAM_WEN_A),
        .CE(NLW_U0_CE_UNCONNECTED),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .LMB1_ABus(NLW_U0_LMB1_ABus_UNCONNECTED[0:31]),
        .LMB1_AddrStrobe(NLW_U0_LMB1_AddrStrobe_UNCONNECTED),
        .LMB1_BE(NLW_U0_LMB1_BE_UNCONNECTED[0:3]),
        .LMB1_ReadStrobe(NLW_U0_LMB1_ReadStrobe_UNCONNECTED),
        .LMB1_WriteDBus(NLW_U0_LMB1_WriteDBus_UNCONNECTED[0:31]),
        .LMB1_WriteStrobe(NLW_U0_LMB1_WriteStrobe_UNCONNECTED),
        .LMB2_ABus(NLW_U0_LMB2_ABus_UNCONNECTED[0:31]),
        .LMB2_AddrStrobe(NLW_U0_LMB2_AddrStrobe_UNCONNECTED),
        .LMB2_BE(NLW_U0_LMB2_BE_UNCONNECTED[0:3]),
        .LMB2_ReadStrobe(NLW_U0_LMB2_ReadStrobe_UNCONNECTED),
        .LMB2_WriteDBus(NLW_U0_LMB2_WriteDBus_UNCONNECTED[0:31]),
        .LMB2_WriteStrobe(NLW_U0_LMB2_WriteStrobe_UNCONNECTED),
        .LMB3_ABus(NLW_U0_LMB3_ABus_UNCONNECTED[0:31]),
        .LMB3_AddrStrobe(NLW_U0_LMB3_AddrStrobe_UNCONNECTED),
        .LMB3_BE(NLW_U0_LMB3_BE_UNCONNECTED[0:3]),
        .LMB3_ReadStrobe(NLW_U0_LMB3_ReadStrobe_UNCONNECTED),
        .LMB3_WriteDBus(NLW_U0_LMB3_WriteDBus_UNCONNECTED[0:31]),
        .LMB3_WriteStrobe(NLW_U0_LMB3_WriteStrobe_UNCONNECTED),
        .LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0],LMB_ABus[1],NLW_U0_LMB_ABus_UNCONNECTED[2:16],LMB_ABus[17:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(LMB_BE),
        .LMB_Clk(LMB_Clk),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(LMB_Rst),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(LMB_WriteStrobe),
        .S_AXI_CTRL_ACLK(NLW_U0_S_AXI_CTRL_ACLK_UNCONNECTED),
        .S_AXI_CTRL_ARADDR(NLW_U0_S_AXI_CTRL_ARADDR_UNCONNECTED[31:0]),
        .S_AXI_CTRL_ARESETN(NLW_U0_S_AXI_CTRL_ARESETN_UNCONNECTED),
        .S_AXI_CTRL_ARREADY(NLW_U0_S_AXI_CTRL_ARREADY_UNCONNECTED),
        .S_AXI_CTRL_ARVALID(NLW_U0_S_AXI_CTRL_ARVALID_UNCONNECTED),
        .S_AXI_CTRL_AWADDR(NLW_U0_S_AXI_CTRL_AWADDR_UNCONNECTED[31:0]),
        .S_AXI_CTRL_AWREADY(NLW_U0_S_AXI_CTRL_AWREADY_UNCONNECTED),
        .S_AXI_CTRL_AWVALID(NLW_U0_S_AXI_CTRL_AWVALID_UNCONNECTED),
        .S_AXI_CTRL_BREADY(NLW_U0_S_AXI_CTRL_BREADY_UNCONNECTED),
        .S_AXI_CTRL_BRESP(NLW_U0_S_AXI_CTRL_BRESP_UNCONNECTED[1:0]),
        .S_AXI_CTRL_BVALID(NLW_U0_S_AXI_CTRL_BVALID_UNCONNECTED),
        .S_AXI_CTRL_RDATA(NLW_U0_S_AXI_CTRL_RDATA_UNCONNECTED[31:0]),
        .S_AXI_CTRL_RREADY(NLW_U0_S_AXI_CTRL_RREADY_UNCONNECTED),
        .S_AXI_CTRL_RRESP(NLW_U0_S_AXI_CTRL_RRESP_UNCONNECTED[1:0]),
        .S_AXI_CTRL_RVALID(NLW_U0_S_AXI_CTRL_RVALID_UNCONNECTED),
        .S_AXI_CTRL_WDATA(NLW_U0_S_AXI_CTRL_WDATA_UNCONNECTED[31:0]),
        .S_AXI_CTRL_WREADY(NLW_U0_S_AXI_CTRL_WREADY_UNCONNECTED),
        .S_AXI_CTRL_WSTRB(NLW_U0_S_AXI_CTRL_WSTRB_UNCONNECTED[3:0]),
        .S_AXI_CTRL_WVALID(NLW_U0_S_AXI_CTRL_WVALID_UNCONNECTED),
        .Sl1_CE(NLW_U0_Sl1_CE_UNCONNECTED),
        .Sl1_DBus(NLW_U0_Sl1_DBus_UNCONNECTED[0:31]),
        .Sl1_Ready(NLW_U0_Sl1_Ready_UNCONNECTED),
        .Sl1_UE(NLW_U0_Sl1_UE_UNCONNECTED),
        .Sl1_Wait(NLW_U0_Sl1_Wait_UNCONNECTED),
        .Sl2_CE(NLW_U0_Sl2_CE_UNCONNECTED),
        .Sl2_DBus(NLW_U0_Sl2_DBus_UNCONNECTED[0:31]),
        .Sl2_Ready(NLW_U0_Sl2_Ready_UNCONNECTED),
        .Sl2_UE(NLW_U0_Sl2_UE_UNCONNECTED),
        .Sl2_Wait(NLW_U0_Sl2_Wait_UNCONNECTED),
        .Sl3_CE(NLW_U0_Sl3_CE_UNCONNECTED),
        .Sl3_DBus(NLW_U0_Sl3_DBus_UNCONNECTED[0:31]),
        .Sl3_Ready(NLW_U0_Sl3_Ready_UNCONNECTED),
        .Sl3_UE(NLW_U0_Sl3_UE_UNCONNECTED),
        .Sl3_Wait(NLW_U0_Sl3_Wait_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED),
        .UE(NLW_U0_UE_UNCONNECTED));
endmodule

(* C_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_BRAM_AWIDTH = "32" *) (* C_CE_COUNTER_WIDTH = "0" *) 
(* C_CE_FAILING_REGISTERS = "0" *) (* C_ECC = "0" *) (* C_ECC_ONOFF_REGISTER = "0" *) 
(* C_ECC_ONOFF_RESET_VALUE = "1" *) (* C_ECC_STATUS_REGISTERS = "0" *) (* C_FAMILY = "artix7" *) 
(* C_FAULT_INJECT = "0" *) (* C_HIGHADDR = "64'b0000000000000000000000000000000000000000000000000111111111111111" *) (* C_INTERCONNECT = "0" *) 
(* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) (* C_MASK = "64'b0000000000000000000000000000000001000000000000000000000000000000" *) 
(* C_MASK1 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) (* C_MASK2 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) (* C_MASK3 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
(* C_NUM_LMB = "1" *) (* C_S_AXI_CTRL_ADDR_WIDTH = "32" *) (* C_S_AXI_CTRL_BASEADDR = "32'b11111111111111111111111111111111" *) 
(* C_S_AXI_CTRL_DATA_WIDTH = "32" *) (* C_S_AXI_CTRL_HIGHADDR = "32'b00000000000000000000000000000000" *) (* C_UE_FAILING_REGISTERS = "0" *) 
(* C_WRITE_ACCESS = "2" *) (* ORIG_REF_NAME = "lmb_bram_if_cntlr" *) 
module ublaze_sopc_lmb_bram_if_cntlr_0_0__lmb_bram_if_cntlr
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB1_ABus,
    LMB1_WriteDBus,
    LMB1_AddrStrobe,
    LMB1_ReadStrobe,
    LMB1_WriteStrobe,
    LMB1_BE,
    Sl1_DBus,
    Sl1_Ready,
    Sl1_Wait,
    Sl1_UE,
    Sl1_CE,
    LMB2_ABus,
    LMB2_WriteDBus,
    LMB2_AddrStrobe,
    LMB2_ReadStrobe,
    LMB2_WriteStrobe,
    LMB2_BE,
    Sl2_DBus,
    Sl2_Ready,
    Sl2_Wait,
    Sl2_UE,
    Sl2_CE,
    LMB3_ABus,
    LMB3_WriteDBus,
    LMB3_AddrStrobe,
    LMB3_ReadStrobe,
    LMB3_WriteStrobe,
    LMB3_BE,
    Sl3_DBus,
    Sl3_Ready,
    Sl3_Wait,
    Sl3_UE,
    Sl3_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A,
    S_AXI_CTRL_ACLK,
    S_AXI_CTRL_ARESETN,
    S_AXI_CTRL_AWADDR,
    S_AXI_CTRL_AWVALID,
    S_AXI_CTRL_AWREADY,
    S_AXI_CTRL_WDATA,
    S_AXI_CTRL_WSTRB,
    S_AXI_CTRL_WVALID,
    S_AXI_CTRL_WREADY,
    S_AXI_CTRL_BRESP,
    S_AXI_CTRL_BVALID,
    S_AXI_CTRL_BREADY,
    S_AXI_CTRL_ARADDR,
    S_AXI_CTRL_ARVALID,
    S_AXI_CTRL_ARREADY,
    S_AXI_CTRL_RDATA,
    S_AXI_CTRL_RRESP,
    S_AXI_CTRL_RVALID,
    S_AXI_CTRL_RREADY,
    UE,
    CE,
    Interrupt);
  input LMB_Clk;
  input LMB_Rst;
  input [0:31]LMB_ABus;
  input [0:31]LMB_WriteDBus;
  input LMB_AddrStrobe;
  input LMB_ReadStrobe;
  input LMB_WriteStrobe;
  input [0:3]LMB_BE;
  output [0:31]Sl_DBus;
  output Sl_Ready;
  output Sl_Wait;
  output Sl_UE;
  output Sl_CE;
  input [0:31]LMB1_ABus;
  input [0:31]LMB1_WriteDBus;
  input LMB1_AddrStrobe;
  input LMB1_ReadStrobe;
  input LMB1_WriteStrobe;
  input [0:3]LMB1_BE;
  output [0:31]Sl1_DBus;
  output Sl1_Ready;
  output Sl1_Wait;
  output Sl1_UE;
  output Sl1_CE;
  input [0:31]LMB2_ABus;
  input [0:31]LMB2_WriteDBus;
  input LMB2_AddrStrobe;
  input LMB2_ReadStrobe;
  input LMB2_WriteStrobe;
  input [0:3]LMB2_BE;
  output [0:31]Sl2_DBus;
  output Sl2_Ready;
  output Sl2_Wait;
  output Sl2_UE;
  output Sl2_CE;
  input [0:31]LMB3_ABus;
  input [0:31]LMB3_WriteDBus;
  input LMB3_AddrStrobe;
  input LMB3_ReadStrobe;
  input LMB3_WriteStrobe;
  input [0:3]LMB3_BE;
  output [0:31]Sl3_DBus;
  output Sl3_Ready;
  output Sl3_Wait;
  output Sl3_UE;
  output Sl3_CE;
  output BRAM_Rst_A;
  output BRAM_Clk_A;
  output [0:31]BRAM_Addr_A;
  output BRAM_EN_A;
  output [0:3]BRAM_WEN_A;
  output [0:31]BRAM_Dout_A;
  input [0:31]BRAM_Din_A;
  input S_AXI_CTRL_ACLK;
  input S_AXI_CTRL_ARESETN;
  input [31:0]S_AXI_CTRL_AWADDR;
  input S_AXI_CTRL_AWVALID;
  output S_AXI_CTRL_AWREADY;
  input [31:0]S_AXI_CTRL_WDATA;
  input [3:0]S_AXI_CTRL_WSTRB;
  input S_AXI_CTRL_WVALID;
  output S_AXI_CTRL_WREADY;
  output [1:0]S_AXI_CTRL_BRESP;
  output S_AXI_CTRL_BVALID;
  input S_AXI_CTRL_BREADY;
  input [31:0]S_AXI_CTRL_ARADDR;
  input S_AXI_CTRL_ARVALID;
  output S_AXI_CTRL_ARREADY;
  output [31:0]S_AXI_CTRL_RDATA;
  output [1:0]S_AXI_CTRL_RRESP;
  output S_AXI_CTRL_RVALID;
  input S_AXI_CTRL_RREADY;
  output UE;
  output CE;
  output Interrupt;

  wire \<const0> ;
  wire [0:31]BRAM_Din_A;
  wire [0:3]BRAM_WEN_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire LMB_WriteStrobe;
  wire \No_ECC.Sl_Rdy_i_1_n_0 ;
  wire \No_ECC.lmb_as_i_1_n_0 ;
  wire Sl_Rdy;
  wire Sl_Ready;
  wire lmb_as;

  assign BRAM_Addr_A[17:29] = LMB_ABus[17:29];
  assign BRAM_Clk_A = LMB_Clk;
  assign BRAM_Dout_A[0:31] = LMB_WriteDBus;
  assign BRAM_EN_A = LMB_AddrStrobe;
  assign BRAM_Rst_A = \<const0> ;
  assign Sl_DBus[0:31] = BRAM_Din_A;
  LUT3 #(
    .INIT(8'h20)) 
    \BRAM_WEN_A[0]_INST_0 
       (.I0(LMB_BE[0]),
        .I1(LMB_ABus[1]),
        .I2(LMB_WriteStrobe),
        .O(BRAM_WEN_A[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[1]_INST_0 
       (.I0(LMB_ABus[1]),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[1]),
        .O(BRAM_WEN_A[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[2]_INST_0 
       (.I0(LMB_ABus[1]),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[2]),
        .O(BRAM_WEN_A[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[3]_INST_0 
       (.I0(LMB_ABus[1]),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[3]),
        .O(BRAM_WEN_A[3]));
  GND GND
       (.G(\<const0> ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \No_ECC.Sl_Rdy_i_1 
       (.I0(LMB_ABus[1]),
        .I1(LMB_Rst),
        .O(\No_ECC.Sl_Rdy_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.Sl_Rdy_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(\No_ECC.Sl_Rdy_i_1_n_0 ),
        .Q(Sl_Rdy),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \No_ECC.lmb_as_i_1 
       (.I0(LMB_AddrStrobe),
        .I1(LMB_Rst),
        .O(\No_ECC.lmb_as_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.lmb_as_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(\No_ECC.lmb_as_i_1_n_0 ),
        .Q(lmb_as),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    Sl_Ready_INST_0
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .O(Sl_Ready));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_lmb_bram_if_cntlr_0_1,lmb_bram_if_cntlr,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2018.2.2" *) 
module ublaze_sopc_lmb_bram_if_cntlr_0_1
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF SLMB:SLMB1:SLMB2:SLMB3, ASSOCIATED_RESET LMB_Rst, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input LMB_Clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.LMB_Rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.LMB_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT" *) input LMB_Rst;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB ABUS" *) (* x_interface_parameter = "XIL_INTERFACENAME SLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE" *) input [0:31]LMB_ABus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS" *) input [0:31]LMB_WriteDBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE" *) input LMB_AddrStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB READSTROBE" *) input LMB_ReadStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE" *) input LMB_WriteStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB BE" *) input [0:3]LMB_BE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB READDBUS" *) output [0:31]Sl_DBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB READY" *) output Sl_Ready;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB WAIT" *) output Sl_Wait;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB UE" *) output Sl_UE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 SLMB CE" *) output Sl_CE;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT RST" *) (* x_interface_parameter = "XIL_INTERFACENAME BRAM_PORT, MEM_SIZE 32768, MASTER_TYPE BRAM_CTRL, MEM_WIDTH 32, MEM_ECC NONE" *) output BRAM_Rst_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT CLK" *) output BRAM_Clk_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT ADDR" *) output [0:31]BRAM_Addr_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT EN" *) output BRAM_EN_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT WE" *) output [0:3]BRAM_WEN_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT DIN" *) output [0:31]BRAM_Dout_A;
  (* x_interface_info = "xilinx.com:interface:bram:1.0 BRAM_PORT DOUT" *) input [0:31]BRAM_Din_A;

  wire [0:31]BRAM_Addr_A;
  wire BRAM_Clk_A;
  wire [0:31]BRAM_Din_A;
  wire [0:31]BRAM_Dout_A;
  wire BRAM_EN_A;
  wire BRAM_Rst_A;
  wire [0:3]BRAM_WEN_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire [0:31]Sl_DBus;
  wire Sl_Ready;
  wire NLW_U0_CE_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_LMB1_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB1_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB1_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ACLK_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARESETN_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_AWREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_AWVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_BREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_BVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_RREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_RVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_WREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_WVALID_UNCONNECTED;
  wire NLW_U0_Sl1_CE_UNCONNECTED;
  wire NLW_U0_Sl1_Ready_UNCONNECTED;
  wire NLW_U0_Sl1_UE_UNCONNECTED;
  wire NLW_U0_Sl1_Wait_UNCONNECTED;
  wire NLW_U0_Sl2_CE_UNCONNECTED;
  wire NLW_U0_Sl2_Ready_UNCONNECTED;
  wire NLW_U0_Sl2_UE_UNCONNECTED;
  wire NLW_U0_Sl2_Wait_UNCONNECTED;
  wire NLW_U0_Sl3_CE_UNCONNECTED;
  wire NLW_U0_Sl3_Ready_UNCONNECTED;
  wire NLW_U0_Sl3_UE_UNCONNECTED;
  wire NLW_U0_Sl3_Wait_UNCONNECTED;
  wire NLW_U0_Sl_CE_UNCONNECTED;
  wire NLW_U0_Sl_UE_UNCONNECTED;
  wire NLW_U0_Sl_Wait_UNCONNECTED;
  wire NLW_U0_UE_UNCONNECTED;
  wire [0:31]NLW_U0_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_U0_LMB1_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB1_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB1_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB2_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB2_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB2_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB3_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB3_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB3_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_BE_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_ARADDR_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_CTRL_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_CTRL_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_CTRL_WSTRB_UNCONNECTED;
  wire [0:31]NLW_U0_Sl1_DBus_UNCONNECTED;
  wire [0:31]NLW_U0_Sl2_DBus_UNCONNECTED;
  wire [0:31]NLW_U0_Sl3_DBus_UNCONNECTED;

  (* C_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_BRAM_AWIDTH = "32" *) 
  (* C_CE_COUNTER_WIDTH = "0" *) 
  (* C_CE_FAILING_REGISTERS = "0" *) 
  (* C_ECC = "0" *) 
  (* C_ECC_ONOFF_REGISTER = "0" *) 
  (* C_ECC_ONOFF_RESET_VALUE = "1" *) 
  (* C_ECC_STATUS_REGISTERS = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FAULT_INJECT = "0" *) 
  (* C_HIGHADDR = "64'b0000000000000000000000000000000000000000000000000111111111111111" *) 
  (* C_INTERCONNECT = "0" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_MASK = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_MASK1 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_MASK2 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_MASK3 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_NUM_LMB = "1" *) 
  (* C_S_AXI_CTRL_ADDR_WIDTH = "32" *) 
  (* C_S_AXI_CTRL_BASEADDR = "32'b11111111111111111111111111111111" *) 
  (* C_S_AXI_CTRL_DATA_WIDTH = "32" *) 
  (* C_S_AXI_CTRL_HIGHADDR = "32'b00000000000000000000000000000000" *) 
  (* C_UE_FAILING_REGISTERS = "0" *) 
  (* C_WRITE_ACCESS = "2" *) 
  ublaze_sopc_lmb_bram_if_cntlr_0_1__lmb_bram_if_cntlr U0
       (.BRAM_Addr_A({NLW_U0_BRAM_Addr_A_UNCONNECTED[0:16],BRAM_Addr_A[17:29],NLW_U0_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(BRAM_Clk_A),
        .BRAM_Din_A(BRAM_Din_A),
        .BRAM_Dout_A(BRAM_Dout_A),
        .BRAM_EN_A(BRAM_EN_A),
        .BRAM_Rst_A(BRAM_Rst_A),
        .BRAM_WEN_A(BRAM_WEN_A),
        .CE(NLW_U0_CE_UNCONNECTED),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .LMB1_ABus(NLW_U0_LMB1_ABus_UNCONNECTED[0:31]),
        .LMB1_AddrStrobe(NLW_U0_LMB1_AddrStrobe_UNCONNECTED),
        .LMB1_BE(NLW_U0_LMB1_BE_UNCONNECTED[0:3]),
        .LMB1_ReadStrobe(NLW_U0_LMB1_ReadStrobe_UNCONNECTED),
        .LMB1_WriteDBus(NLW_U0_LMB1_WriteDBus_UNCONNECTED[0:31]),
        .LMB1_WriteStrobe(NLW_U0_LMB1_WriteStrobe_UNCONNECTED),
        .LMB2_ABus(NLW_U0_LMB2_ABus_UNCONNECTED[0:31]),
        .LMB2_AddrStrobe(NLW_U0_LMB2_AddrStrobe_UNCONNECTED),
        .LMB2_BE(NLW_U0_LMB2_BE_UNCONNECTED[0:3]),
        .LMB2_ReadStrobe(NLW_U0_LMB2_ReadStrobe_UNCONNECTED),
        .LMB2_WriteDBus(NLW_U0_LMB2_WriteDBus_UNCONNECTED[0:31]),
        .LMB2_WriteStrobe(NLW_U0_LMB2_WriteStrobe_UNCONNECTED),
        .LMB3_ABus(NLW_U0_LMB3_ABus_UNCONNECTED[0:31]),
        .LMB3_AddrStrobe(NLW_U0_LMB3_AddrStrobe_UNCONNECTED),
        .LMB3_BE(NLW_U0_LMB3_BE_UNCONNECTED[0:3]),
        .LMB3_ReadStrobe(NLW_U0_LMB3_ReadStrobe_UNCONNECTED),
        .LMB3_WriteDBus(NLW_U0_LMB3_WriteDBus_UNCONNECTED[0:31]),
        .LMB3_WriteStrobe(NLW_U0_LMB3_WriteStrobe_UNCONNECTED),
        .LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0:16],LMB_ABus[17:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(NLW_U0_LMB_BE_UNCONNECTED[0:3]),
        .LMB_Clk(LMB_Clk),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(LMB_Rst),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(NLW_U0_LMB_WriteStrobe_UNCONNECTED),
        .S_AXI_CTRL_ACLK(NLW_U0_S_AXI_CTRL_ACLK_UNCONNECTED),
        .S_AXI_CTRL_ARADDR(NLW_U0_S_AXI_CTRL_ARADDR_UNCONNECTED[31:0]),
        .S_AXI_CTRL_ARESETN(NLW_U0_S_AXI_CTRL_ARESETN_UNCONNECTED),
        .S_AXI_CTRL_ARREADY(NLW_U0_S_AXI_CTRL_ARREADY_UNCONNECTED),
        .S_AXI_CTRL_ARVALID(NLW_U0_S_AXI_CTRL_ARVALID_UNCONNECTED),
        .S_AXI_CTRL_AWADDR(NLW_U0_S_AXI_CTRL_AWADDR_UNCONNECTED[31:0]),
        .S_AXI_CTRL_AWREADY(NLW_U0_S_AXI_CTRL_AWREADY_UNCONNECTED),
        .S_AXI_CTRL_AWVALID(NLW_U0_S_AXI_CTRL_AWVALID_UNCONNECTED),
        .S_AXI_CTRL_BREADY(NLW_U0_S_AXI_CTRL_BREADY_UNCONNECTED),
        .S_AXI_CTRL_BRESP(NLW_U0_S_AXI_CTRL_BRESP_UNCONNECTED[1:0]),
        .S_AXI_CTRL_BVALID(NLW_U0_S_AXI_CTRL_BVALID_UNCONNECTED),
        .S_AXI_CTRL_RDATA(NLW_U0_S_AXI_CTRL_RDATA_UNCONNECTED[31:0]),
        .S_AXI_CTRL_RREADY(NLW_U0_S_AXI_CTRL_RREADY_UNCONNECTED),
        .S_AXI_CTRL_RRESP(NLW_U0_S_AXI_CTRL_RRESP_UNCONNECTED[1:0]),
        .S_AXI_CTRL_RVALID(NLW_U0_S_AXI_CTRL_RVALID_UNCONNECTED),
        .S_AXI_CTRL_WDATA(NLW_U0_S_AXI_CTRL_WDATA_UNCONNECTED[31:0]),
        .S_AXI_CTRL_WREADY(NLW_U0_S_AXI_CTRL_WREADY_UNCONNECTED),
        .S_AXI_CTRL_WSTRB(NLW_U0_S_AXI_CTRL_WSTRB_UNCONNECTED[3:0]),
        .S_AXI_CTRL_WVALID(NLW_U0_S_AXI_CTRL_WVALID_UNCONNECTED),
        .Sl1_CE(NLW_U0_Sl1_CE_UNCONNECTED),
        .Sl1_DBus(NLW_U0_Sl1_DBus_UNCONNECTED[0:31]),
        .Sl1_Ready(NLW_U0_Sl1_Ready_UNCONNECTED),
        .Sl1_UE(NLW_U0_Sl1_UE_UNCONNECTED),
        .Sl1_Wait(NLW_U0_Sl1_Wait_UNCONNECTED),
        .Sl2_CE(NLW_U0_Sl2_CE_UNCONNECTED),
        .Sl2_DBus(NLW_U0_Sl2_DBus_UNCONNECTED[0:31]),
        .Sl2_Ready(NLW_U0_Sl2_Ready_UNCONNECTED),
        .Sl2_UE(NLW_U0_Sl2_UE_UNCONNECTED),
        .Sl2_Wait(NLW_U0_Sl2_Wait_UNCONNECTED),
        .Sl3_CE(NLW_U0_Sl3_CE_UNCONNECTED),
        .Sl3_DBus(NLW_U0_Sl3_DBus_UNCONNECTED[0:31]),
        .Sl3_Ready(NLW_U0_Sl3_Ready_UNCONNECTED),
        .Sl3_UE(NLW_U0_Sl3_UE_UNCONNECTED),
        .Sl3_Wait(NLW_U0_Sl3_Wait_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED),
        .UE(NLW_U0_UE_UNCONNECTED));
endmodule

(* C_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_BRAM_AWIDTH = "32" *) (* C_CE_COUNTER_WIDTH = "0" *) 
(* C_CE_FAILING_REGISTERS = "0" *) (* C_ECC = "0" *) (* C_ECC_ONOFF_REGISTER = "0" *) 
(* C_ECC_ONOFF_RESET_VALUE = "1" *) (* C_ECC_STATUS_REGISTERS = "0" *) (* C_FAMILY = "artix7" *) 
(* C_FAULT_INJECT = "0" *) (* C_HIGHADDR = "64'b0000000000000000000000000000000000000000000000000111111111111111" *) (* C_INTERCONNECT = "0" *) 
(* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) (* C_MASK = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_MASK1 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) (* C_MASK2 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) (* C_MASK3 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
(* C_NUM_LMB = "1" *) (* C_S_AXI_CTRL_ADDR_WIDTH = "32" *) (* C_S_AXI_CTRL_BASEADDR = "32'b11111111111111111111111111111111" *) 
(* C_S_AXI_CTRL_DATA_WIDTH = "32" *) (* C_S_AXI_CTRL_HIGHADDR = "32'b00000000000000000000000000000000" *) (* C_UE_FAILING_REGISTERS = "0" *) 
(* C_WRITE_ACCESS = "2" *) (* ORIG_REF_NAME = "lmb_bram_if_cntlr" *) 
module ublaze_sopc_lmb_bram_if_cntlr_0_1__lmb_bram_if_cntlr
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB1_ABus,
    LMB1_WriteDBus,
    LMB1_AddrStrobe,
    LMB1_ReadStrobe,
    LMB1_WriteStrobe,
    LMB1_BE,
    Sl1_DBus,
    Sl1_Ready,
    Sl1_Wait,
    Sl1_UE,
    Sl1_CE,
    LMB2_ABus,
    LMB2_WriteDBus,
    LMB2_AddrStrobe,
    LMB2_ReadStrobe,
    LMB2_WriteStrobe,
    LMB2_BE,
    Sl2_DBus,
    Sl2_Ready,
    Sl2_Wait,
    Sl2_UE,
    Sl2_CE,
    LMB3_ABus,
    LMB3_WriteDBus,
    LMB3_AddrStrobe,
    LMB3_ReadStrobe,
    LMB3_WriteStrobe,
    LMB3_BE,
    Sl3_DBus,
    Sl3_Ready,
    Sl3_Wait,
    Sl3_UE,
    Sl3_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A,
    S_AXI_CTRL_ACLK,
    S_AXI_CTRL_ARESETN,
    S_AXI_CTRL_AWADDR,
    S_AXI_CTRL_AWVALID,
    S_AXI_CTRL_AWREADY,
    S_AXI_CTRL_WDATA,
    S_AXI_CTRL_WSTRB,
    S_AXI_CTRL_WVALID,
    S_AXI_CTRL_WREADY,
    S_AXI_CTRL_BRESP,
    S_AXI_CTRL_BVALID,
    S_AXI_CTRL_BREADY,
    S_AXI_CTRL_ARADDR,
    S_AXI_CTRL_ARVALID,
    S_AXI_CTRL_ARREADY,
    S_AXI_CTRL_RDATA,
    S_AXI_CTRL_RRESP,
    S_AXI_CTRL_RVALID,
    S_AXI_CTRL_RREADY,
    UE,
    CE,
    Interrupt);
  input LMB_Clk;
  input LMB_Rst;
  input [0:31]LMB_ABus;
  input [0:31]LMB_WriteDBus;
  input LMB_AddrStrobe;
  input LMB_ReadStrobe;
  input LMB_WriteStrobe;
  input [0:3]LMB_BE;
  output [0:31]Sl_DBus;
  output Sl_Ready;
  output Sl_Wait;
  output Sl_UE;
  output Sl_CE;
  input [0:31]LMB1_ABus;
  input [0:31]LMB1_WriteDBus;
  input LMB1_AddrStrobe;
  input LMB1_ReadStrobe;
  input LMB1_WriteStrobe;
  input [0:3]LMB1_BE;
  output [0:31]Sl1_DBus;
  output Sl1_Ready;
  output Sl1_Wait;
  output Sl1_UE;
  output Sl1_CE;
  input [0:31]LMB2_ABus;
  input [0:31]LMB2_WriteDBus;
  input LMB2_AddrStrobe;
  input LMB2_ReadStrobe;
  input LMB2_WriteStrobe;
  input [0:3]LMB2_BE;
  output [0:31]Sl2_DBus;
  output Sl2_Ready;
  output Sl2_Wait;
  output Sl2_UE;
  output Sl2_CE;
  input [0:31]LMB3_ABus;
  input [0:31]LMB3_WriteDBus;
  input LMB3_AddrStrobe;
  input LMB3_ReadStrobe;
  input LMB3_WriteStrobe;
  input [0:3]LMB3_BE;
  output [0:31]Sl3_DBus;
  output Sl3_Ready;
  output Sl3_Wait;
  output Sl3_UE;
  output Sl3_CE;
  output BRAM_Rst_A;
  output BRAM_Clk_A;
  output [0:31]BRAM_Addr_A;
  output BRAM_EN_A;
  output [0:3]BRAM_WEN_A;
  output [0:31]BRAM_Dout_A;
  input [0:31]BRAM_Din_A;
  input S_AXI_CTRL_ACLK;
  input S_AXI_CTRL_ARESETN;
  input [31:0]S_AXI_CTRL_AWADDR;
  input S_AXI_CTRL_AWVALID;
  output S_AXI_CTRL_AWREADY;
  input [31:0]S_AXI_CTRL_WDATA;
  input [3:0]S_AXI_CTRL_WSTRB;
  input S_AXI_CTRL_WVALID;
  output S_AXI_CTRL_WREADY;
  output [1:0]S_AXI_CTRL_BRESP;
  output S_AXI_CTRL_BVALID;
  input S_AXI_CTRL_BREADY;
  input [31:0]S_AXI_CTRL_ARADDR;
  input S_AXI_CTRL_ARVALID;
  output S_AXI_CTRL_ARREADY;
  output [31:0]S_AXI_CTRL_RDATA;
  output [1:0]S_AXI_CTRL_RRESP;
  output S_AXI_CTRL_RVALID;
  input S_AXI_CTRL_RREADY;
  output UE;
  output CE;
  output Interrupt;

  wire \<const0> ;
  wire [0:31]BRAM_Din_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire \No_ECC.Sl_Rdy_i_1_n_0 ;
  wire \No_ECC.lmb_as_i_1_n_0 ;
  wire Sl_Rdy;
  wire Sl_Ready;
  wire ZERO;
  wire lmb_as;

  assign BRAM_Addr_A[17:29] = LMB_ABus[17:29];
  assign BRAM_Clk_A = LMB_Clk;
  assign BRAM_Dout_A[0:31] = LMB_WriteDBus;
  assign BRAM_EN_A = LMB_AddrStrobe;
  assign BRAM_Rst_A = \<const0> ;
  assign BRAM_WEN_A[0] = ZERO;
  assign BRAM_WEN_A[1] = ZERO;
  assign BRAM_WEN_A[2] = ZERO;
  assign BRAM_WEN_A[3] = ZERO;
  assign Sl_DBus[0:31] = BRAM_Din_A;
  GND GND
       (.G(\<const0> ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND_1
       (.G(ZERO));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \No_ECC.Sl_Rdy_i_1 
       (.I0(LMB_Rst),
        .O(\No_ECC.Sl_Rdy_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.Sl_Rdy_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(\No_ECC.Sl_Rdy_i_1_n_0 ),
        .Q(Sl_Rdy),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \No_ECC.lmb_as_i_1 
       (.I0(LMB_AddrStrobe),
        .I1(LMB_Rst),
        .O(\No_ECC.lmb_as_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.lmb_as_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(\No_ECC.lmb_as_i_1_n_0 ),
        .Q(lmb_as),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    Sl_Ready_INST_0
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .O(Sl_Ready));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_lmb_v10_0_0,lmb_v10,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_v10,Vivado 2018.2.2" *) 
module ublaze_sopc_lmb_v10_0_0
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF LMB_Sl_0:LMB_Sl_1:LMB_Sl_2:LMB_Sl_3:LMB_Sl_4:LMB_Sl_5:LMB_Sl_6:LMB_Sl_7:LMB_Sl_8:LMB_Sl_9:LMB_Sl_10:LMB_Sl_11:LMB_Sl_12:LMB_Sl_13:LMB_Sl_14:LMB_Sl_15:LMB_M, ASSOCIATED_RESET SYS_Rst, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input LMB_Clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.SYS_Rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.SYS_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT" *) input SYS_Rst;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 RST, xilinx.com:interface:lmb:1.0 LMB_M RST" *) (* x_interface_parameter = "XIL_INTERFACENAME LMB_Sl_0, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, XIL_INTERFACENAME LMB_M, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_ONLY" *) output LMB_Rst;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M ABUS" *) input [0:31]M_ABus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M READSTROBE" *) input M_ReadStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M WRITESTROBE" *) input M_WriteStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M ADDRSTROBE" *) input M_AddrStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M WRITEDBUS" *) input [0:31]M_DBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M BE" *) input [0:3]M_BE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READDBUS" *) input [0:31]Sl_DBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READY" *) input [0:0]Sl_Ready;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WAIT" *) input [0:0]Sl_Wait;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 UE" *) input [0:0]Sl_UE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 CE" *) input [0:0]Sl_CE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ABUS" *) output [0:31]LMB_ABus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READSTROBE" *) output LMB_ReadStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITESTROBE" *) output LMB_WriteStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ADDRSTROBE" *) output LMB_AddrStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M READDBUS" *) output [0:31]LMB_ReadDBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITEDBUS" *) output [0:31]LMB_WriteDBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M READY" *) output LMB_Ready;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M WAIT" *) output LMB_Wait;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M UE" *) output LMB_UE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M CE" *) output LMB_CE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 BE" *) output [0:3]LMB_BE;

  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:31]LMB_ReadDBus;
  wire LMB_Ready;
  wire [0:31]LMB_WriteDBus;
  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:31]M_DBus;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;
  wire NLW_U0_LMB_CE_UNCONNECTED;
  wire NLW_U0_LMB_Clk_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB_Rst_UNCONNECTED;
  wire NLW_U0_LMB_UE_UNCONNECTED;
  wire NLW_U0_LMB_Wait_UNCONNECTED;
  wire NLW_U0_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_U0_M_ReadStrobe_UNCONNECTED;
  wire NLW_U0_M_WriteStrobe_UNCONNECTED;
  wire NLW_U0_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_BE_UNCONNECTED;
  wire [0:31]NLW_U0_M_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_M_BE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_Wait_UNCONNECTED;

  (* C_EXT_RESET_HIGH = "1" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_LMB_NUM_SLAVES = "1" *) 
  ublaze_sopc_lmb_v10_0_0__lmb_v10 U0
       (.LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0:16],LMB_ABus[17:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(NLW_U0_LMB_BE_UNCONNECTED[0:3]),
        .LMB_CE(NLW_U0_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_U0_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(LMB_ReadDBus),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(LMB_Ready),
        .LMB_Rst(NLW_U0_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_U0_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_U0_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(NLW_U0_LMB_WriteStrobe_UNCONNECTED),
        .M_ABus({NLW_U0_M_ABus_UNCONNECTED[0:16],M_ABus[17:29],NLW_U0_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(M_AddrStrobe),
        .M_BE(NLW_U0_M_BE_UNCONNECTED[0:3]),
        .M_DBus(M_DBus),
        .M_ReadStrobe(NLW_U0_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(NLW_U0_M_WriteStrobe_UNCONNECTED),
        .SYS_Rst(NLW_U0_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED[0]));
endmodule

(* C_EXT_RESET_HIGH = "1" *) (* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) 
(* C_LMB_NUM_SLAVES = "1" *) (* ORIG_REF_NAME = "lmb_v10" *) 
module ublaze_sopc_lmb_v10_0_0__lmb_v10
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  input LMB_Clk;
  input SYS_Rst;
  output LMB_Rst;
  input [0:31]M_ABus;
  input M_ReadStrobe;
  input M_WriteStrobe;
  input M_AddrStrobe;
  input [0:31]M_DBus;
  input [0:3]M_BE;
  input [0:31]Sl_DBus;
  input [0:0]Sl_Ready;
  input [0:0]Sl_Wait;
  input [0:0]Sl_UE;
  input [0:0]Sl_CE;
  output [0:31]LMB_ABus;
  output LMB_ReadStrobe;
  output LMB_WriteStrobe;
  output LMB_AddrStrobe;
  output [0:31]LMB_ReadDBus;
  output [0:31]LMB_WriteDBus;
  output LMB_Ready;
  output LMB_Wait;
  output LMB_UE;
  output LMB_CE;
  output [0:3]LMB_BE;

  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:31]M_DBus;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;

  assign LMB_ABus[17:29] = M_ABus[17:29];
  assign LMB_AddrStrobe = M_AddrStrobe;
  assign LMB_ReadDBus[0:31] = Sl_DBus;
  assign LMB_Ready = Sl_Ready;
  assign LMB_WriteDBus[0:31] = M_DBus;
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_lmb_v10_0_0,lmb_v10,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_v10,Vivado 2018.2.2" *) 
module ublaze_sopc_lmb_v10_0_1
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF LMB_Sl_0:LMB_Sl_1:LMB_Sl_2:LMB_Sl_3:LMB_Sl_4:LMB_Sl_5:LMB_Sl_6:LMB_Sl_7:LMB_Sl_8:LMB_Sl_9:LMB_Sl_10:LMB_Sl_11:LMB_Sl_12:LMB_Sl_13:LMB_Sl_14:LMB_Sl_15:LMB_M, ASSOCIATED_RESET SYS_Rst, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input LMB_Clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.SYS_Rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.SYS_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT" *) input SYS_Rst;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 RST, xilinx.com:interface:lmb:1.0 LMB_M RST" *) (* x_interface_parameter = "XIL_INTERFACENAME LMB_Sl_0, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, XIL_INTERFACENAME LMB_M, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_ONLY" *) output LMB_Rst;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M ABUS" *) input [0:31]M_ABus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M READSTROBE" *) input M_ReadStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M WRITESTROBE" *) input M_WriteStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M ADDRSTROBE" *) input M_AddrStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M WRITEDBUS" *) input [0:31]M_DBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M BE" *) input [0:3]M_BE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READDBUS" *) input [0:31]Sl_DBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READY" *) input [0:0]Sl_Ready;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WAIT" *) input [0:0]Sl_Wait;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 UE" *) input [0:0]Sl_UE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 CE" *) input [0:0]Sl_CE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ABUS" *) output [0:31]LMB_ABus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READSTROBE" *) output LMB_ReadStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITESTROBE" *) output LMB_WriteStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ADDRSTROBE" *) output LMB_AddrStrobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M READDBUS" *) output [0:31]LMB_ReadDBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITEDBUS" *) output [0:31]LMB_WriteDBus;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M READY" *) output LMB_Ready;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M WAIT" *) output LMB_Wait;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M UE" *) output LMB_UE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_M CE" *) output LMB_CE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 BE" *) output [0:3]LMB_BE;

  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire [0:31]LMB_ReadDBus;
  wire LMB_Ready;
  wire [0:31]LMB_WriteDBus;
  wire LMB_WriteStrobe;
  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:3]M_BE;
  wire [0:31]M_DBus;
  wire M_WriteStrobe;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;
  wire NLW_U0_LMB_CE_UNCONNECTED;
  wire NLW_U0_LMB_Clk_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB_Rst_UNCONNECTED;
  wire NLW_U0_LMB_UE_UNCONNECTED;
  wire NLW_U0_LMB_Wait_UNCONNECTED;
  wire NLW_U0_M_ReadStrobe_UNCONNECTED;
  wire NLW_U0_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [0:31]NLW_U0_M_ABus_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_Wait_UNCONNECTED;

  (* C_EXT_RESET_HIGH = "1" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_LMB_NUM_SLAVES = "1" *) 
  ublaze_sopc_lmb_v10_0_1__lmb_v10 U0
       (.LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0],LMB_ABus[1],NLW_U0_LMB_ABus_UNCONNECTED[2:16],LMB_ABus[17:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(LMB_BE),
        .LMB_CE(NLW_U0_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_U0_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(LMB_ReadDBus),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(LMB_Ready),
        .LMB_Rst(NLW_U0_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_U0_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_U0_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(LMB_WriteStrobe),
        .M_ABus({NLW_U0_M_ABus_UNCONNECTED[0],M_ABus[1],NLW_U0_M_ABus_UNCONNECTED[2:16],M_ABus[17:29],NLW_U0_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(M_AddrStrobe),
        .M_BE(M_BE),
        .M_DBus(M_DBus),
        .M_ReadStrobe(NLW_U0_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(M_WriteStrobe),
        .SYS_Rst(NLW_U0_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED[0]));
endmodule

(* C_EXT_RESET_HIGH = "1" *) (* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) 
(* C_LMB_NUM_SLAVES = "1" *) (* ORIG_REF_NAME = "lmb_v10" *) 
module ublaze_sopc_lmb_v10_0_1__lmb_v10
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  input LMB_Clk;
  input SYS_Rst;
  output LMB_Rst;
  input [0:31]M_ABus;
  input M_ReadStrobe;
  input M_WriteStrobe;
  input M_AddrStrobe;
  input [0:31]M_DBus;
  input [0:3]M_BE;
  input [0:31]Sl_DBus;
  input [0:0]Sl_Ready;
  input [0:0]Sl_Wait;
  input [0:0]Sl_UE;
  input [0:0]Sl_CE;
  output [0:31]LMB_ABus;
  output LMB_ReadStrobe;
  output LMB_WriteStrobe;
  output LMB_AddrStrobe;
  output [0:31]LMB_ReadDBus;
  output [0:31]LMB_WriteDBus;
  output LMB_Ready;
  output LMB_Wait;
  output LMB_UE;
  output LMB_CE;
  output [0:3]LMB_BE;

  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:3]M_BE;
  wire [0:31]M_DBus;
  wire M_WriteStrobe;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;

  assign LMB_ABus[1] = M_ABus[1];
  assign LMB_ABus[17:29] = M_ABus[17:29];
  assign LMB_AddrStrobe = M_AddrStrobe;
  assign LMB_BE[0:3] = M_BE;
  assign LMB_ReadDBus[0:31] = Sl_DBus;
  assign LMB_Ready = Sl_Ready;
  assign LMB_WriteDBus[0:31] = M_DBus;
  assign LMB_WriteStrobe = M_WriteStrobe;
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_mdm_0_0,MDM,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "MDM,Vivado 2018.2.2" *) 
module ublaze_sopc_mdm_0_0
   (S_AXI_ACLK,
    S_AXI_ARESETN,
    Interrupt,
    Debug_SYS_Rst,
    S_AXI_AWADDR,
    S_AXI_AWVALID,
    S_AXI_AWREADY,
    S_AXI_WDATA,
    S_AXI_WSTRB,
    S_AXI_WVALID,
    S_AXI_WREADY,
    S_AXI_BRESP,
    S_AXI_BVALID,
    S_AXI_BREADY,
    S_AXI_ARADDR,
    S_AXI_ARVALID,
    S_AXI_ARREADY,
    S_AXI_RDATA,
    S_AXI_RRESP,
    S_AXI_RVALID,
    S_AXI_RREADY,
    Dbg_Clk_0,
    Dbg_TDI_0,
    Dbg_TDO_0,
    Dbg_Reg_En_0,
    Dbg_Capture_0,
    Dbg_Shift_0,
    Dbg_Update_0,
    Dbg_Rst_0,
    Dbg_Disable_0);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.S_AXI_ACLK CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.S_AXI_ACLK, ASSOCIATED_BUSIF S_AXI:MBDEBUG_AXI_0:MBDEBUG_AXI_1:MBDEBUG_AXI_2:MBDEBUG_AXI_3:MBDEBUG_AXI_4:MBDEBUG_AXI_5:MBDEBUG_AXI_6:MBDEBUG_AXI_7:MBDEBUG_AXI_8:MBDEBUG_AXI_9:MBDEBUG_AXI_10:MBDEBUG_AXI_11:MBDEBUG_AXI_12:MBDEBUG_AXI_13:MBDEBUG_AXI_14:MBDEBUG_AXI_15:MBDEBUG_AXI_16:MBDEBUG_AXI_17:MBDEBUG_AXI_18:MBDEBUG_AXI_19:MBDEBUG_AXI_20:MBDEBUG_AXI_21:MBDEBUG_AXI_22:MBDEBUG_AXI_23:MBDEBUG_AXI_24:MBDEBUG_AXI_25:MBDEBUG_AXI_26:MBDEBUG_AXI_27:MBDEBUG_AXI_28:MBDEBUG_AXI_29:MBDEBUG_AXI_30:MBDEBUG_AXI_31, ASSOCIATED_RESET S_AXI_ARESETN, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input S_AXI_ACLK;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.S_AXI_ARESETN RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.S_AXI_ARESETN, POLARITY ACTIVE_LOW" *) input S_AXI_ARESETN;
  (* x_interface_info = "xilinx.com:signal:interrupt:1.0 INTERRUPT.INTERRUPT INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME INTERRUPT.INTERRUPT, SENSITIVITY EDGE_RISING, SUGGESTED_PRIORITY HIGH, PortWidth 1" *) output Interrupt;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.Debug_SYS_Rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.Debug_SYS_Rst, POLARITY ACTIVE_HIGH" *) output Debug_SYS_Rst;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 4, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) input [3:0]S_AXI_AWADDR;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input S_AXI_AWVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output S_AXI_AWREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]S_AXI_WDATA;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]S_AXI_WSTRB;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input S_AXI_WVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output S_AXI_WREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]S_AXI_BRESP;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output S_AXI_BVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input S_AXI_BREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [3:0]S_AXI_ARADDR;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input S_AXI_ARVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output S_AXI_ARREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]S_AXI_RDATA;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]S_AXI_RRESP;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output S_AXI_RVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input S_AXI_RREADY;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 CLK" *) output Dbg_Clk_0;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 TDI" *) output Dbg_TDI_0;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 TDO" *) input Dbg_TDO_0;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 REG_EN" *) output [0:7]Dbg_Reg_En_0;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 CAPTURE" *) output Dbg_Capture_0;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 SHIFT" *) output Dbg_Shift_0;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 UPDATE" *) output Dbg_Update_0;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 RST" *) output Dbg_Rst_0;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 DISABLE" *) output Dbg_Disable_0;

  wire Dbg_Capture_0;
  wire Dbg_Clk_0;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_TDI_0;
  wire Dbg_TDO_0;
  wire Dbg_Update_0;
  wire S_AXI_ACLK;
  wire [3:0]S_AXI_ARADDR;
  wire S_AXI_ARESETN;
  wire S_AXI_ARREADY;
  wire S_AXI_ARVALID;
  wire S_AXI_AWREADY;
  wire S_AXI_AWVALID;
  wire S_AXI_BREADY;
  wire S_AXI_BVALID;
  wire [31:0]S_AXI_RDATA;
  wire S_AXI_RREADY;
  wire S_AXI_RVALID;
  wire [31:0]S_AXI_WDATA;
  wire S_AXI_WREADY;
  wire S_AXI_WVALID;
  wire NLW_U0_Config_Reset_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_1_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_10_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_11_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_12_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_13_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_14_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_15_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_16_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_17_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_18_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_19_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_2_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_20_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_21_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_22_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_23_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_24_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_25_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_26_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_27_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_28_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_29_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_3_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_30_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_31_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_4_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_5_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_6_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_7_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_8_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_9_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_1_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_10_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_11_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_12_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_13_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_14_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_15_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_16_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_17_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_18_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_19_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_2_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_20_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_21_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_22_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_23_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_24_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_25_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_26_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_27_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_28_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_29_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_3_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_30_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_31_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_4_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_5_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_6_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_7_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_8_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_9_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_0_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_1_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_10_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_11_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_12_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_13_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_14_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_15_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_16_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_17_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_18_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_19_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_2_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_20_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_21_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_22_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_23_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_24_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_25_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_26_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_27_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_28_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_29_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_3_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_30_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_31_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_4_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_5_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_6_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_7_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_8_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_9_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_1_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_10_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_11_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_12_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_13_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_14_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_15_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_16_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_17_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_18_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_19_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_2_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_20_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_21_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_22_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_23_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_24_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_25_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_26_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_27_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_28_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_29_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_3_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_30_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_31_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_4_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_5_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_6_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_7_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_8_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_9_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_1_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_10_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_11_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_12_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_13_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_14_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_15_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_16_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_17_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_18_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_19_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_2_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_20_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_21_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_22_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_23_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_24_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_25_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_26_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_27_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_28_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_29_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_3_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_30_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_31_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_4_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_5_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_6_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_7_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_8_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_9_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_1_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_10_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_11_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_12_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_13_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_14_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_15_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_16_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_17_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_18_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_19_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_2_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_20_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_21_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_22_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_23_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_24_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_25_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_26_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_27_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_28_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_29_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_3_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_30_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_31_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_4_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_5_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_6_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_7_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_8_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_9_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_1_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_10_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_11_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_12_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_13_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_14_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_15_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_16_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_17_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_18_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_19_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_2_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_20_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_21_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_22_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_23_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_24_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_25_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_26_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_27_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_28_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_29_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_3_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_30_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_31_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_4_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_5_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_6_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_7_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_8_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_9_UNCONNECTED;
  wire NLW_U0_Dbg_Update_1_UNCONNECTED;
  wire NLW_U0_Dbg_Update_10_UNCONNECTED;
  wire NLW_U0_Dbg_Update_11_UNCONNECTED;
  wire NLW_U0_Dbg_Update_12_UNCONNECTED;
  wire NLW_U0_Dbg_Update_13_UNCONNECTED;
  wire NLW_U0_Dbg_Update_14_UNCONNECTED;
  wire NLW_U0_Dbg_Update_15_UNCONNECTED;
  wire NLW_U0_Dbg_Update_16_UNCONNECTED;
  wire NLW_U0_Dbg_Update_17_UNCONNECTED;
  wire NLW_U0_Dbg_Update_18_UNCONNECTED;
  wire NLW_U0_Dbg_Update_19_UNCONNECTED;
  wire NLW_U0_Dbg_Update_2_UNCONNECTED;
  wire NLW_U0_Dbg_Update_20_UNCONNECTED;
  wire NLW_U0_Dbg_Update_21_UNCONNECTED;
  wire NLW_U0_Dbg_Update_22_UNCONNECTED;
  wire NLW_U0_Dbg_Update_23_UNCONNECTED;
  wire NLW_U0_Dbg_Update_24_UNCONNECTED;
  wire NLW_U0_Dbg_Update_25_UNCONNECTED;
  wire NLW_U0_Dbg_Update_26_UNCONNECTED;
  wire NLW_U0_Dbg_Update_27_UNCONNECTED;
  wire NLW_U0_Dbg_Update_28_UNCONNECTED;
  wire NLW_U0_Dbg_Update_29_UNCONNECTED;
  wire NLW_U0_Dbg_Update_3_UNCONNECTED;
  wire NLW_U0_Dbg_Update_30_UNCONNECTED;
  wire NLW_U0_Dbg_Update_31_UNCONNECTED;
  wire NLW_U0_Dbg_Update_4_UNCONNECTED;
  wire NLW_U0_Dbg_Update_5_UNCONNECTED;
  wire NLW_U0_Dbg_Update_6_UNCONNECTED;
  wire NLW_U0_Dbg_Update_7_UNCONNECTED;
  wire NLW_U0_Dbg_Update_8_UNCONNECTED;
  wire NLW_U0_Dbg_Update_9_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_9_UNCONNECTED;
  wire NLW_U0_Debug_SYS_Rst_UNCONNECTED;
  wire NLW_U0_Ext_BRK_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_CAPTURE_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_DRCK_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_RESET_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_SEL_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_SHIFT_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_TDI_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_TDO_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_UPDATE_UNCONNECTED;
  wire NLW_U0_Ext_NM_BRK_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_9_UNCONNECTED;
  wire NLW_U0_LMB_CE_0_UNCONNECTED;
  wire NLW_U0_LMB_CE_1_UNCONNECTED;
  wire NLW_U0_LMB_CE_10_UNCONNECTED;
  wire NLW_U0_LMB_CE_11_UNCONNECTED;
  wire NLW_U0_LMB_CE_12_UNCONNECTED;
  wire NLW_U0_LMB_CE_13_UNCONNECTED;
  wire NLW_U0_LMB_CE_14_UNCONNECTED;
  wire NLW_U0_LMB_CE_15_UNCONNECTED;
  wire NLW_U0_LMB_CE_16_UNCONNECTED;
  wire NLW_U0_LMB_CE_17_UNCONNECTED;
  wire NLW_U0_LMB_CE_18_UNCONNECTED;
  wire NLW_U0_LMB_CE_19_UNCONNECTED;
  wire NLW_U0_LMB_CE_2_UNCONNECTED;
  wire NLW_U0_LMB_CE_20_UNCONNECTED;
  wire NLW_U0_LMB_CE_21_UNCONNECTED;
  wire NLW_U0_LMB_CE_22_UNCONNECTED;
  wire NLW_U0_LMB_CE_23_UNCONNECTED;
  wire NLW_U0_LMB_CE_24_UNCONNECTED;
  wire NLW_U0_LMB_CE_25_UNCONNECTED;
  wire NLW_U0_LMB_CE_26_UNCONNECTED;
  wire NLW_U0_LMB_CE_27_UNCONNECTED;
  wire NLW_U0_LMB_CE_28_UNCONNECTED;
  wire NLW_U0_LMB_CE_29_UNCONNECTED;
  wire NLW_U0_LMB_CE_3_UNCONNECTED;
  wire NLW_U0_LMB_CE_30_UNCONNECTED;
  wire NLW_U0_LMB_CE_31_UNCONNECTED;
  wire NLW_U0_LMB_CE_4_UNCONNECTED;
  wire NLW_U0_LMB_CE_5_UNCONNECTED;
  wire NLW_U0_LMB_CE_6_UNCONNECTED;
  wire NLW_U0_LMB_CE_7_UNCONNECTED;
  wire NLW_U0_LMB_CE_8_UNCONNECTED;
  wire NLW_U0_LMB_CE_9_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_9_UNCONNECTED;
  wire NLW_U0_LMB_Ready_0_UNCONNECTED;
  wire NLW_U0_LMB_Ready_1_UNCONNECTED;
  wire NLW_U0_LMB_Ready_10_UNCONNECTED;
  wire NLW_U0_LMB_Ready_11_UNCONNECTED;
  wire NLW_U0_LMB_Ready_12_UNCONNECTED;
  wire NLW_U0_LMB_Ready_13_UNCONNECTED;
  wire NLW_U0_LMB_Ready_14_UNCONNECTED;
  wire NLW_U0_LMB_Ready_15_UNCONNECTED;
  wire NLW_U0_LMB_Ready_16_UNCONNECTED;
  wire NLW_U0_LMB_Ready_17_UNCONNECTED;
  wire NLW_U0_LMB_Ready_18_UNCONNECTED;
  wire NLW_U0_LMB_Ready_19_UNCONNECTED;
  wire NLW_U0_LMB_Ready_2_UNCONNECTED;
  wire NLW_U0_LMB_Ready_20_UNCONNECTED;
  wire NLW_U0_LMB_Ready_21_UNCONNECTED;
  wire NLW_U0_LMB_Ready_22_UNCONNECTED;
  wire NLW_U0_LMB_Ready_23_UNCONNECTED;
  wire NLW_U0_LMB_Ready_24_UNCONNECTED;
  wire NLW_U0_LMB_Ready_25_UNCONNECTED;
  wire NLW_U0_LMB_Ready_26_UNCONNECTED;
  wire NLW_U0_LMB_Ready_27_UNCONNECTED;
  wire NLW_U0_LMB_Ready_28_UNCONNECTED;
  wire NLW_U0_LMB_Ready_29_UNCONNECTED;
  wire NLW_U0_LMB_Ready_3_UNCONNECTED;
  wire NLW_U0_LMB_Ready_30_UNCONNECTED;
  wire NLW_U0_LMB_Ready_31_UNCONNECTED;
  wire NLW_U0_LMB_Ready_4_UNCONNECTED;
  wire NLW_U0_LMB_Ready_5_UNCONNECTED;
  wire NLW_U0_LMB_Ready_6_UNCONNECTED;
  wire NLW_U0_LMB_Ready_7_UNCONNECTED;
  wire NLW_U0_LMB_Ready_8_UNCONNECTED;
  wire NLW_U0_LMB_Ready_9_UNCONNECTED;
  wire NLW_U0_LMB_UE_0_UNCONNECTED;
  wire NLW_U0_LMB_UE_1_UNCONNECTED;
  wire NLW_U0_LMB_UE_10_UNCONNECTED;
  wire NLW_U0_LMB_UE_11_UNCONNECTED;
  wire NLW_U0_LMB_UE_12_UNCONNECTED;
  wire NLW_U0_LMB_UE_13_UNCONNECTED;
  wire NLW_U0_LMB_UE_14_UNCONNECTED;
  wire NLW_U0_LMB_UE_15_UNCONNECTED;
  wire NLW_U0_LMB_UE_16_UNCONNECTED;
  wire NLW_U0_LMB_UE_17_UNCONNECTED;
  wire NLW_U0_LMB_UE_18_UNCONNECTED;
  wire NLW_U0_LMB_UE_19_UNCONNECTED;
  wire NLW_U0_LMB_UE_2_UNCONNECTED;
  wire NLW_U0_LMB_UE_20_UNCONNECTED;
  wire NLW_U0_LMB_UE_21_UNCONNECTED;
  wire NLW_U0_LMB_UE_22_UNCONNECTED;
  wire NLW_U0_LMB_UE_23_UNCONNECTED;
  wire NLW_U0_LMB_UE_24_UNCONNECTED;
  wire NLW_U0_LMB_UE_25_UNCONNECTED;
  wire NLW_U0_LMB_UE_26_UNCONNECTED;
  wire NLW_U0_LMB_UE_27_UNCONNECTED;
  wire NLW_U0_LMB_UE_28_UNCONNECTED;
  wire NLW_U0_LMB_UE_29_UNCONNECTED;
  wire NLW_U0_LMB_UE_3_UNCONNECTED;
  wire NLW_U0_LMB_UE_30_UNCONNECTED;
  wire NLW_U0_LMB_UE_31_UNCONNECTED;
  wire NLW_U0_LMB_UE_4_UNCONNECTED;
  wire NLW_U0_LMB_UE_5_UNCONNECTED;
  wire NLW_U0_LMB_UE_6_UNCONNECTED;
  wire NLW_U0_LMB_UE_7_UNCONNECTED;
  wire NLW_U0_LMB_UE_8_UNCONNECTED;
  wire NLW_U0_LMB_UE_9_UNCONNECTED;
  wire NLW_U0_LMB_Wait_0_UNCONNECTED;
  wire NLW_U0_LMB_Wait_1_UNCONNECTED;
  wire NLW_U0_LMB_Wait_10_UNCONNECTED;
  wire NLW_U0_LMB_Wait_11_UNCONNECTED;
  wire NLW_U0_LMB_Wait_12_UNCONNECTED;
  wire NLW_U0_LMB_Wait_13_UNCONNECTED;
  wire NLW_U0_LMB_Wait_14_UNCONNECTED;
  wire NLW_U0_LMB_Wait_15_UNCONNECTED;
  wire NLW_U0_LMB_Wait_16_UNCONNECTED;
  wire NLW_U0_LMB_Wait_17_UNCONNECTED;
  wire NLW_U0_LMB_Wait_18_UNCONNECTED;
  wire NLW_U0_LMB_Wait_19_UNCONNECTED;
  wire NLW_U0_LMB_Wait_2_UNCONNECTED;
  wire NLW_U0_LMB_Wait_20_UNCONNECTED;
  wire NLW_U0_LMB_Wait_21_UNCONNECTED;
  wire NLW_U0_LMB_Wait_22_UNCONNECTED;
  wire NLW_U0_LMB_Wait_23_UNCONNECTED;
  wire NLW_U0_LMB_Wait_24_UNCONNECTED;
  wire NLW_U0_LMB_Wait_25_UNCONNECTED;
  wire NLW_U0_LMB_Wait_26_UNCONNECTED;
  wire NLW_U0_LMB_Wait_27_UNCONNECTED;
  wire NLW_U0_LMB_Wait_28_UNCONNECTED;
  wire NLW_U0_LMB_Wait_29_UNCONNECTED;
  wire NLW_U0_LMB_Wait_3_UNCONNECTED;
  wire NLW_U0_LMB_Wait_30_UNCONNECTED;
  wire NLW_U0_LMB_Wait_31_UNCONNECTED;
  wire NLW_U0_LMB_Wait_4_UNCONNECTED;
  wire NLW_U0_LMB_Wait_5_UNCONNECTED;
  wire NLW_U0_LMB_Wait_6_UNCONNECTED;
  wire NLW_U0_LMB_Wait_7_UNCONNECTED;
  wire NLW_U0_LMB_Wait_8_UNCONNECTED;
  wire NLW_U0_LMB_Wait_9_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_9_UNCONNECTED;
  wire NLW_U0_M_AXIS_ACLK_UNCONNECTED;
  wire NLW_U0_M_AXIS_ARESETN_UNCONNECTED;
  wire NLW_U0_M_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_ACLK_UNCONNECTED;
  wire NLW_U0_M_AXI_ARESETN_UNCONNECTED;
  wire NLW_U0_M_AXI_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_WVALID_UNCONNECTED;
  wire NLW_U0_Scan_En_UNCONNECTED;
  wire NLW_U0_Scan_Reset_UNCONNECTED;
  wire NLW_U0_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_U0_TRACE_CLK_UNCONNECTED;
  wire NLW_U0_TRACE_CLK_OUT_UNCONNECTED;
  wire NLW_U0_TRACE_CTL_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_0_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_1_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_2_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_3_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_0_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_1_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_2_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_3_UNCONNECTED;
  wire NLW_U0_Trig_In_0_UNCONNECTED;
  wire NLW_U0_Trig_In_1_UNCONNECTED;
  wire NLW_U0_Trig_In_2_UNCONNECTED;
  wire NLW_U0_Trig_In_3_UNCONNECTED;
  wire NLW_U0_Trig_Out_0_UNCONNECTED;
  wire NLW_U0_Trig_Out_1_UNCONNECTED;
  wire NLW_U0_Trig_Out_2_UNCONNECTED;
  wire NLW_U0_Trig_Out_3_UNCONNECTED;
  wire NLW_U0_bscan_ext_bscanid_en_UNCONNECTED;
  wire NLW_U0_bscan_ext_capture_UNCONNECTED;
  wire NLW_U0_bscan_ext_drck_UNCONNECTED;
  wire NLW_U0_bscan_ext_reset_UNCONNECTED;
  wire NLW_U0_bscan_ext_sel_UNCONNECTED;
  wire NLW_U0_bscan_ext_shift_UNCONNECTED;
  wire NLW_U0_bscan_ext_tck_UNCONNECTED;
  wire NLW_U0_bscan_ext_tdi_UNCONNECTED;
  wire NLW_U0_bscan_ext_tdo_UNCONNECTED;
  wire NLW_U0_bscan_ext_update_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_0_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_1_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_10_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_11_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_12_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_13_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_14_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_15_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_16_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_17_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_18_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_19_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_2_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_20_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_21_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_22_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_23_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_24_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_25_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_26_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_27_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_28_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_29_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_3_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_30_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_31_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_4_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_5_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_6_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_7_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_8_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_9_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_0_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_1_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_10_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_11_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_12_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_13_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_14_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_15_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_16_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_17_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_18_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_19_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_2_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_20_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_21_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_22_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_23_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_24_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_25_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_26_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_27_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_28_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_29_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_3_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_30_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_31_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_4_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_5_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_6_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_7_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_8_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_9_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_0_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_1_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_10_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_11_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_12_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_13_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_14_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_15_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_16_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_17_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_18_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_19_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_2_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_20_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_21_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_22_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_23_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_24_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_25_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_26_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_27_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_28_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_29_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_3_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_30_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_31_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_4_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_5_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_6_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_7_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_8_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_9_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_0_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_1_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_10_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_11_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_12_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_13_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_14_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_15_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_16_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_17_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_18_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_19_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_2_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_20_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_21_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_22_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_23_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_24_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_25_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_26_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_27_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_28_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_29_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_3_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_30_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_31_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_4_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_5_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_6_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_7_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_8_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_9_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_0_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_1_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_10_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_11_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_12_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_13_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_14_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_15_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_16_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_17_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_18_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_19_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_2_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_20_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_21_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_22_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_23_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_24_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_25_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_26_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_27_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_28_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_29_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_3_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_30_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_31_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_4_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_5_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_6_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_7_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_8_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_9_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_0_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_1_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_10_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_11_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_12_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_13_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_14_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_15_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_16_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_17_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_18_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_19_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_2_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_20_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_21_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_22_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_23_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_24_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_25_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_26_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_27_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_28_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_29_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_3_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_30_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_31_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_4_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_5_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_6_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_7_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_8_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_9_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_0_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_1_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_10_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_11_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_12_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_13_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_14_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_15_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_16_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_17_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_18_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_19_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_2_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_20_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_21_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_22_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_23_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_24_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_25_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_26_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_27_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_28_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_29_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_3_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_30_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_31_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_4_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_5_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_6_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_7_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_8_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_9_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_0_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_1_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_10_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_11_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_12_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_13_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_14_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_15_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_16_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_17_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_18_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_19_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_2_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_20_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_21_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_22_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_23_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_24_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_25_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_26_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_27_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_28_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_29_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_3_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_30_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_31_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_4_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_5_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_6_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_7_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_8_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_9_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXIS_TDATA_UNCONNECTED;
  wire [6:0]NLW_U0_M_AXIS_TID_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_WSTRB_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_ARADDR_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_BRESP_UNCONNECTED;
  wire [31:8]NLW_U0_S_AXI_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_RRESP_UNCONNECTED;
  wire [31:8]NLW_U0_S_AXI_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_WSTRB_UNCONNECTED;
  wire [31:0]NLW_U0_TRACE_DATA_UNCONNECTED;

  (* C_AVOID_PRIMITIVES = "0" *) 
  (* C_BSCANID = "76547328" *) 
  (* C_DATA_SIZE = "32" *) 
  (* C_DBG_MEM_ACCESS = "0" *) 
  (* C_DBG_REG_ACCESS = "0" *) 
  (* C_DEBUG_INTERFACE = "0" *) 
  (* C_EXT_TRIG_RESET_VALUE = "20'b11110001001000110100" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_INTERCONNECT = "2" *) 
  (* C_JTAG_CHAIN = "2" *) 
  (* C_MB_DBG_PORTS = "1" *) 
  (* C_M_AXIS_DATA_WIDTH = "32" *) 
  (* C_M_AXIS_ID_WIDTH = "7" *) 
  (* C_M_AXI_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DATA_WIDTH = "32" *) 
  (* C_M_AXI_THREAD_ID_WIDTH = "1" *) 
  (* C_S_AXI_ACLK_FREQ_HZ = "50000000" *) 
  (* C_S_AXI_ADDR_WIDTH = "4" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_TRACE_ASYNC_RESET = "0" *) 
  (* C_TRACE_CLK_FREQ_HZ = "200000000" *) 
  (* C_TRACE_CLK_OUT_PHASE = "90" *) 
  (* C_TRACE_DATA_WIDTH = "32" *) 
  (* C_TRACE_ID = "110" *) 
  (* C_TRACE_OUTPUT = "0" *) 
  (* C_TRACE_PROTOCOL = "1" *) 
  (* C_USE_BSCAN = "0" *) 
  (* C_USE_CONFIG_RESET = "0" *) 
  (* C_USE_CROSS_TRIGGER = "0" *) 
  (* C_USE_UART = "1" *) 
  ublaze_sopc_mdm_0_0__MDM U0
       (.Config_Reset(NLW_U0_Config_Reset_UNCONNECTED),
        .Dbg_ARADDR_0(NLW_U0_Dbg_ARADDR_0_UNCONNECTED[14:2]),
        .Dbg_ARADDR_1(NLW_U0_Dbg_ARADDR_1_UNCONNECTED[14:2]),
        .Dbg_ARADDR_10(NLW_U0_Dbg_ARADDR_10_UNCONNECTED[14:2]),
        .Dbg_ARADDR_11(NLW_U0_Dbg_ARADDR_11_UNCONNECTED[14:2]),
        .Dbg_ARADDR_12(NLW_U0_Dbg_ARADDR_12_UNCONNECTED[14:2]),
        .Dbg_ARADDR_13(NLW_U0_Dbg_ARADDR_13_UNCONNECTED[14:2]),
        .Dbg_ARADDR_14(NLW_U0_Dbg_ARADDR_14_UNCONNECTED[14:2]),
        .Dbg_ARADDR_15(NLW_U0_Dbg_ARADDR_15_UNCONNECTED[14:2]),
        .Dbg_ARADDR_16(NLW_U0_Dbg_ARADDR_16_UNCONNECTED[14:2]),
        .Dbg_ARADDR_17(NLW_U0_Dbg_ARADDR_17_UNCONNECTED[14:2]),
        .Dbg_ARADDR_18(NLW_U0_Dbg_ARADDR_18_UNCONNECTED[14:2]),
        .Dbg_ARADDR_19(NLW_U0_Dbg_ARADDR_19_UNCONNECTED[14:2]),
        .Dbg_ARADDR_2(NLW_U0_Dbg_ARADDR_2_UNCONNECTED[14:2]),
        .Dbg_ARADDR_20(NLW_U0_Dbg_ARADDR_20_UNCONNECTED[14:2]),
        .Dbg_ARADDR_21(NLW_U0_Dbg_ARADDR_21_UNCONNECTED[14:2]),
        .Dbg_ARADDR_22(NLW_U0_Dbg_ARADDR_22_UNCONNECTED[14:2]),
        .Dbg_ARADDR_23(NLW_U0_Dbg_ARADDR_23_UNCONNECTED[14:2]),
        .Dbg_ARADDR_24(NLW_U0_Dbg_ARADDR_24_UNCONNECTED[14:2]),
        .Dbg_ARADDR_25(NLW_U0_Dbg_ARADDR_25_UNCONNECTED[14:2]),
        .Dbg_ARADDR_26(NLW_U0_Dbg_ARADDR_26_UNCONNECTED[14:2]),
        .Dbg_ARADDR_27(NLW_U0_Dbg_ARADDR_27_UNCONNECTED[14:2]),
        .Dbg_ARADDR_28(NLW_U0_Dbg_ARADDR_28_UNCONNECTED[14:2]),
        .Dbg_ARADDR_29(NLW_U0_Dbg_ARADDR_29_UNCONNECTED[14:2]),
        .Dbg_ARADDR_3(NLW_U0_Dbg_ARADDR_3_UNCONNECTED[14:2]),
        .Dbg_ARADDR_30(NLW_U0_Dbg_ARADDR_30_UNCONNECTED[14:2]),
        .Dbg_ARADDR_31(NLW_U0_Dbg_ARADDR_31_UNCONNECTED[14:2]),
        .Dbg_ARADDR_4(NLW_U0_Dbg_ARADDR_4_UNCONNECTED[14:2]),
        .Dbg_ARADDR_5(NLW_U0_Dbg_ARADDR_5_UNCONNECTED[14:2]),
        .Dbg_ARADDR_6(NLW_U0_Dbg_ARADDR_6_UNCONNECTED[14:2]),
        .Dbg_ARADDR_7(NLW_U0_Dbg_ARADDR_7_UNCONNECTED[14:2]),
        .Dbg_ARADDR_8(NLW_U0_Dbg_ARADDR_8_UNCONNECTED[14:2]),
        .Dbg_ARADDR_9(NLW_U0_Dbg_ARADDR_9_UNCONNECTED[14:2]),
        .Dbg_ARREADY_0(NLW_U0_Dbg_ARREADY_0_UNCONNECTED),
        .Dbg_ARREADY_1(NLW_U0_Dbg_ARREADY_1_UNCONNECTED),
        .Dbg_ARREADY_10(NLW_U0_Dbg_ARREADY_10_UNCONNECTED),
        .Dbg_ARREADY_11(NLW_U0_Dbg_ARREADY_11_UNCONNECTED),
        .Dbg_ARREADY_12(NLW_U0_Dbg_ARREADY_12_UNCONNECTED),
        .Dbg_ARREADY_13(NLW_U0_Dbg_ARREADY_13_UNCONNECTED),
        .Dbg_ARREADY_14(NLW_U0_Dbg_ARREADY_14_UNCONNECTED),
        .Dbg_ARREADY_15(NLW_U0_Dbg_ARREADY_15_UNCONNECTED),
        .Dbg_ARREADY_16(NLW_U0_Dbg_ARREADY_16_UNCONNECTED),
        .Dbg_ARREADY_17(NLW_U0_Dbg_ARREADY_17_UNCONNECTED),
        .Dbg_ARREADY_18(NLW_U0_Dbg_ARREADY_18_UNCONNECTED),
        .Dbg_ARREADY_19(NLW_U0_Dbg_ARREADY_19_UNCONNECTED),
        .Dbg_ARREADY_2(NLW_U0_Dbg_ARREADY_2_UNCONNECTED),
        .Dbg_ARREADY_20(NLW_U0_Dbg_ARREADY_20_UNCONNECTED),
        .Dbg_ARREADY_21(NLW_U0_Dbg_ARREADY_21_UNCONNECTED),
        .Dbg_ARREADY_22(NLW_U0_Dbg_ARREADY_22_UNCONNECTED),
        .Dbg_ARREADY_23(NLW_U0_Dbg_ARREADY_23_UNCONNECTED),
        .Dbg_ARREADY_24(NLW_U0_Dbg_ARREADY_24_UNCONNECTED),
        .Dbg_ARREADY_25(NLW_U0_Dbg_ARREADY_25_UNCONNECTED),
        .Dbg_ARREADY_26(NLW_U0_Dbg_ARREADY_26_UNCONNECTED),
        .Dbg_ARREADY_27(NLW_U0_Dbg_ARREADY_27_UNCONNECTED),
        .Dbg_ARREADY_28(NLW_U0_Dbg_ARREADY_28_UNCONNECTED),
        .Dbg_ARREADY_29(NLW_U0_Dbg_ARREADY_29_UNCONNECTED),
        .Dbg_ARREADY_3(NLW_U0_Dbg_ARREADY_3_UNCONNECTED),
        .Dbg_ARREADY_30(NLW_U0_Dbg_ARREADY_30_UNCONNECTED),
        .Dbg_ARREADY_31(NLW_U0_Dbg_ARREADY_31_UNCONNECTED),
        .Dbg_ARREADY_4(NLW_U0_Dbg_ARREADY_4_UNCONNECTED),
        .Dbg_ARREADY_5(NLW_U0_Dbg_ARREADY_5_UNCONNECTED),
        .Dbg_ARREADY_6(NLW_U0_Dbg_ARREADY_6_UNCONNECTED),
        .Dbg_ARREADY_7(NLW_U0_Dbg_ARREADY_7_UNCONNECTED),
        .Dbg_ARREADY_8(NLW_U0_Dbg_ARREADY_8_UNCONNECTED),
        .Dbg_ARREADY_9(NLW_U0_Dbg_ARREADY_9_UNCONNECTED),
        .Dbg_ARVALID_0(NLW_U0_Dbg_ARVALID_0_UNCONNECTED),
        .Dbg_ARVALID_1(NLW_U0_Dbg_ARVALID_1_UNCONNECTED),
        .Dbg_ARVALID_10(NLW_U0_Dbg_ARVALID_10_UNCONNECTED),
        .Dbg_ARVALID_11(NLW_U0_Dbg_ARVALID_11_UNCONNECTED),
        .Dbg_ARVALID_12(NLW_U0_Dbg_ARVALID_12_UNCONNECTED),
        .Dbg_ARVALID_13(NLW_U0_Dbg_ARVALID_13_UNCONNECTED),
        .Dbg_ARVALID_14(NLW_U0_Dbg_ARVALID_14_UNCONNECTED),
        .Dbg_ARVALID_15(NLW_U0_Dbg_ARVALID_15_UNCONNECTED),
        .Dbg_ARVALID_16(NLW_U0_Dbg_ARVALID_16_UNCONNECTED),
        .Dbg_ARVALID_17(NLW_U0_Dbg_ARVALID_17_UNCONNECTED),
        .Dbg_ARVALID_18(NLW_U0_Dbg_ARVALID_18_UNCONNECTED),
        .Dbg_ARVALID_19(NLW_U0_Dbg_ARVALID_19_UNCONNECTED),
        .Dbg_ARVALID_2(NLW_U0_Dbg_ARVALID_2_UNCONNECTED),
        .Dbg_ARVALID_20(NLW_U0_Dbg_ARVALID_20_UNCONNECTED),
        .Dbg_ARVALID_21(NLW_U0_Dbg_ARVALID_21_UNCONNECTED),
        .Dbg_ARVALID_22(NLW_U0_Dbg_ARVALID_22_UNCONNECTED),
        .Dbg_ARVALID_23(NLW_U0_Dbg_ARVALID_23_UNCONNECTED),
        .Dbg_ARVALID_24(NLW_U0_Dbg_ARVALID_24_UNCONNECTED),
        .Dbg_ARVALID_25(NLW_U0_Dbg_ARVALID_25_UNCONNECTED),
        .Dbg_ARVALID_26(NLW_U0_Dbg_ARVALID_26_UNCONNECTED),
        .Dbg_ARVALID_27(NLW_U0_Dbg_ARVALID_27_UNCONNECTED),
        .Dbg_ARVALID_28(NLW_U0_Dbg_ARVALID_28_UNCONNECTED),
        .Dbg_ARVALID_29(NLW_U0_Dbg_ARVALID_29_UNCONNECTED),
        .Dbg_ARVALID_3(NLW_U0_Dbg_ARVALID_3_UNCONNECTED),
        .Dbg_ARVALID_30(NLW_U0_Dbg_ARVALID_30_UNCONNECTED),
        .Dbg_ARVALID_31(NLW_U0_Dbg_ARVALID_31_UNCONNECTED),
        .Dbg_ARVALID_4(NLW_U0_Dbg_ARVALID_4_UNCONNECTED),
        .Dbg_ARVALID_5(NLW_U0_Dbg_ARVALID_5_UNCONNECTED),
        .Dbg_ARVALID_6(NLW_U0_Dbg_ARVALID_6_UNCONNECTED),
        .Dbg_ARVALID_7(NLW_U0_Dbg_ARVALID_7_UNCONNECTED),
        .Dbg_ARVALID_8(NLW_U0_Dbg_ARVALID_8_UNCONNECTED),
        .Dbg_ARVALID_9(NLW_U0_Dbg_ARVALID_9_UNCONNECTED),
        .Dbg_AWADDR_0(NLW_U0_Dbg_AWADDR_0_UNCONNECTED[14:2]),
        .Dbg_AWADDR_1(NLW_U0_Dbg_AWADDR_1_UNCONNECTED[14:2]),
        .Dbg_AWADDR_10(NLW_U0_Dbg_AWADDR_10_UNCONNECTED[14:2]),
        .Dbg_AWADDR_11(NLW_U0_Dbg_AWADDR_11_UNCONNECTED[14:2]),
        .Dbg_AWADDR_12(NLW_U0_Dbg_AWADDR_12_UNCONNECTED[14:2]),
        .Dbg_AWADDR_13(NLW_U0_Dbg_AWADDR_13_UNCONNECTED[14:2]),
        .Dbg_AWADDR_14(NLW_U0_Dbg_AWADDR_14_UNCONNECTED[14:2]),
        .Dbg_AWADDR_15(NLW_U0_Dbg_AWADDR_15_UNCONNECTED[14:2]),
        .Dbg_AWADDR_16(NLW_U0_Dbg_AWADDR_16_UNCONNECTED[14:2]),
        .Dbg_AWADDR_17(NLW_U0_Dbg_AWADDR_17_UNCONNECTED[14:2]),
        .Dbg_AWADDR_18(NLW_U0_Dbg_AWADDR_18_UNCONNECTED[14:2]),
        .Dbg_AWADDR_19(NLW_U0_Dbg_AWADDR_19_UNCONNECTED[14:2]),
        .Dbg_AWADDR_2(NLW_U0_Dbg_AWADDR_2_UNCONNECTED[14:2]),
        .Dbg_AWADDR_20(NLW_U0_Dbg_AWADDR_20_UNCONNECTED[14:2]),
        .Dbg_AWADDR_21(NLW_U0_Dbg_AWADDR_21_UNCONNECTED[14:2]),
        .Dbg_AWADDR_22(NLW_U0_Dbg_AWADDR_22_UNCONNECTED[14:2]),
        .Dbg_AWADDR_23(NLW_U0_Dbg_AWADDR_23_UNCONNECTED[14:2]),
        .Dbg_AWADDR_24(NLW_U0_Dbg_AWADDR_24_UNCONNECTED[14:2]),
        .Dbg_AWADDR_25(NLW_U0_Dbg_AWADDR_25_UNCONNECTED[14:2]),
        .Dbg_AWADDR_26(NLW_U0_Dbg_AWADDR_26_UNCONNECTED[14:2]),
        .Dbg_AWADDR_27(NLW_U0_Dbg_AWADDR_27_UNCONNECTED[14:2]),
        .Dbg_AWADDR_28(NLW_U0_Dbg_AWADDR_28_UNCONNECTED[14:2]),
        .Dbg_AWADDR_29(NLW_U0_Dbg_AWADDR_29_UNCONNECTED[14:2]),
        .Dbg_AWADDR_3(NLW_U0_Dbg_AWADDR_3_UNCONNECTED[14:2]),
        .Dbg_AWADDR_30(NLW_U0_Dbg_AWADDR_30_UNCONNECTED[14:2]),
        .Dbg_AWADDR_31(NLW_U0_Dbg_AWADDR_31_UNCONNECTED[14:2]),
        .Dbg_AWADDR_4(NLW_U0_Dbg_AWADDR_4_UNCONNECTED[14:2]),
        .Dbg_AWADDR_5(NLW_U0_Dbg_AWADDR_5_UNCONNECTED[14:2]),
        .Dbg_AWADDR_6(NLW_U0_Dbg_AWADDR_6_UNCONNECTED[14:2]),
        .Dbg_AWADDR_7(NLW_U0_Dbg_AWADDR_7_UNCONNECTED[14:2]),
        .Dbg_AWADDR_8(NLW_U0_Dbg_AWADDR_8_UNCONNECTED[14:2]),
        .Dbg_AWADDR_9(NLW_U0_Dbg_AWADDR_9_UNCONNECTED[14:2]),
        .Dbg_AWREADY_0(NLW_U0_Dbg_AWREADY_0_UNCONNECTED),
        .Dbg_AWREADY_1(NLW_U0_Dbg_AWREADY_1_UNCONNECTED),
        .Dbg_AWREADY_10(NLW_U0_Dbg_AWREADY_10_UNCONNECTED),
        .Dbg_AWREADY_11(NLW_U0_Dbg_AWREADY_11_UNCONNECTED),
        .Dbg_AWREADY_12(NLW_U0_Dbg_AWREADY_12_UNCONNECTED),
        .Dbg_AWREADY_13(NLW_U0_Dbg_AWREADY_13_UNCONNECTED),
        .Dbg_AWREADY_14(NLW_U0_Dbg_AWREADY_14_UNCONNECTED),
        .Dbg_AWREADY_15(NLW_U0_Dbg_AWREADY_15_UNCONNECTED),
        .Dbg_AWREADY_16(NLW_U0_Dbg_AWREADY_16_UNCONNECTED),
        .Dbg_AWREADY_17(NLW_U0_Dbg_AWREADY_17_UNCONNECTED),
        .Dbg_AWREADY_18(NLW_U0_Dbg_AWREADY_18_UNCONNECTED),
        .Dbg_AWREADY_19(NLW_U0_Dbg_AWREADY_19_UNCONNECTED),
        .Dbg_AWREADY_2(NLW_U0_Dbg_AWREADY_2_UNCONNECTED),
        .Dbg_AWREADY_20(NLW_U0_Dbg_AWREADY_20_UNCONNECTED),
        .Dbg_AWREADY_21(NLW_U0_Dbg_AWREADY_21_UNCONNECTED),
        .Dbg_AWREADY_22(NLW_U0_Dbg_AWREADY_22_UNCONNECTED),
        .Dbg_AWREADY_23(NLW_U0_Dbg_AWREADY_23_UNCONNECTED),
        .Dbg_AWREADY_24(NLW_U0_Dbg_AWREADY_24_UNCONNECTED),
        .Dbg_AWREADY_25(NLW_U0_Dbg_AWREADY_25_UNCONNECTED),
        .Dbg_AWREADY_26(NLW_U0_Dbg_AWREADY_26_UNCONNECTED),
        .Dbg_AWREADY_27(NLW_U0_Dbg_AWREADY_27_UNCONNECTED),
        .Dbg_AWREADY_28(NLW_U0_Dbg_AWREADY_28_UNCONNECTED),
        .Dbg_AWREADY_29(NLW_U0_Dbg_AWREADY_29_UNCONNECTED),
        .Dbg_AWREADY_3(NLW_U0_Dbg_AWREADY_3_UNCONNECTED),
        .Dbg_AWREADY_30(NLW_U0_Dbg_AWREADY_30_UNCONNECTED),
        .Dbg_AWREADY_31(NLW_U0_Dbg_AWREADY_31_UNCONNECTED),
        .Dbg_AWREADY_4(NLW_U0_Dbg_AWREADY_4_UNCONNECTED),
        .Dbg_AWREADY_5(NLW_U0_Dbg_AWREADY_5_UNCONNECTED),
        .Dbg_AWREADY_6(NLW_U0_Dbg_AWREADY_6_UNCONNECTED),
        .Dbg_AWREADY_7(NLW_U0_Dbg_AWREADY_7_UNCONNECTED),
        .Dbg_AWREADY_8(NLW_U0_Dbg_AWREADY_8_UNCONNECTED),
        .Dbg_AWREADY_9(NLW_U0_Dbg_AWREADY_9_UNCONNECTED),
        .Dbg_AWVALID_0(NLW_U0_Dbg_AWVALID_0_UNCONNECTED),
        .Dbg_AWVALID_1(NLW_U0_Dbg_AWVALID_1_UNCONNECTED),
        .Dbg_AWVALID_10(NLW_U0_Dbg_AWVALID_10_UNCONNECTED),
        .Dbg_AWVALID_11(NLW_U0_Dbg_AWVALID_11_UNCONNECTED),
        .Dbg_AWVALID_12(NLW_U0_Dbg_AWVALID_12_UNCONNECTED),
        .Dbg_AWVALID_13(NLW_U0_Dbg_AWVALID_13_UNCONNECTED),
        .Dbg_AWVALID_14(NLW_U0_Dbg_AWVALID_14_UNCONNECTED),
        .Dbg_AWVALID_15(NLW_U0_Dbg_AWVALID_15_UNCONNECTED),
        .Dbg_AWVALID_16(NLW_U0_Dbg_AWVALID_16_UNCONNECTED),
        .Dbg_AWVALID_17(NLW_U0_Dbg_AWVALID_17_UNCONNECTED),
        .Dbg_AWVALID_18(NLW_U0_Dbg_AWVALID_18_UNCONNECTED),
        .Dbg_AWVALID_19(NLW_U0_Dbg_AWVALID_19_UNCONNECTED),
        .Dbg_AWVALID_2(NLW_U0_Dbg_AWVALID_2_UNCONNECTED),
        .Dbg_AWVALID_20(NLW_U0_Dbg_AWVALID_20_UNCONNECTED),
        .Dbg_AWVALID_21(NLW_U0_Dbg_AWVALID_21_UNCONNECTED),
        .Dbg_AWVALID_22(NLW_U0_Dbg_AWVALID_22_UNCONNECTED),
        .Dbg_AWVALID_23(NLW_U0_Dbg_AWVALID_23_UNCONNECTED),
        .Dbg_AWVALID_24(NLW_U0_Dbg_AWVALID_24_UNCONNECTED),
        .Dbg_AWVALID_25(NLW_U0_Dbg_AWVALID_25_UNCONNECTED),
        .Dbg_AWVALID_26(NLW_U0_Dbg_AWVALID_26_UNCONNECTED),
        .Dbg_AWVALID_27(NLW_U0_Dbg_AWVALID_27_UNCONNECTED),
        .Dbg_AWVALID_28(NLW_U0_Dbg_AWVALID_28_UNCONNECTED),
        .Dbg_AWVALID_29(NLW_U0_Dbg_AWVALID_29_UNCONNECTED),
        .Dbg_AWVALID_3(NLW_U0_Dbg_AWVALID_3_UNCONNECTED),
        .Dbg_AWVALID_30(NLW_U0_Dbg_AWVALID_30_UNCONNECTED),
        .Dbg_AWVALID_31(NLW_U0_Dbg_AWVALID_31_UNCONNECTED),
        .Dbg_AWVALID_4(NLW_U0_Dbg_AWVALID_4_UNCONNECTED),
        .Dbg_AWVALID_5(NLW_U0_Dbg_AWVALID_5_UNCONNECTED),
        .Dbg_AWVALID_6(NLW_U0_Dbg_AWVALID_6_UNCONNECTED),
        .Dbg_AWVALID_7(NLW_U0_Dbg_AWVALID_7_UNCONNECTED),
        .Dbg_AWVALID_8(NLW_U0_Dbg_AWVALID_8_UNCONNECTED),
        .Dbg_AWVALID_9(NLW_U0_Dbg_AWVALID_9_UNCONNECTED),
        .Dbg_BREADY_0(NLW_U0_Dbg_BREADY_0_UNCONNECTED),
        .Dbg_BREADY_1(NLW_U0_Dbg_BREADY_1_UNCONNECTED),
        .Dbg_BREADY_10(NLW_U0_Dbg_BREADY_10_UNCONNECTED),
        .Dbg_BREADY_11(NLW_U0_Dbg_BREADY_11_UNCONNECTED),
        .Dbg_BREADY_12(NLW_U0_Dbg_BREADY_12_UNCONNECTED),
        .Dbg_BREADY_13(NLW_U0_Dbg_BREADY_13_UNCONNECTED),
        .Dbg_BREADY_14(NLW_U0_Dbg_BREADY_14_UNCONNECTED),
        .Dbg_BREADY_15(NLW_U0_Dbg_BREADY_15_UNCONNECTED),
        .Dbg_BREADY_16(NLW_U0_Dbg_BREADY_16_UNCONNECTED),
        .Dbg_BREADY_17(NLW_U0_Dbg_BREADY_17_UNCONNECTED),
        .Dbg_BREADY_18(NLW_U0_Dbg_BREADY_18_UNCONNECTED),
        .Dbg_BREADY_19(NLW_U0_Dbg_BREADY_19_UNCONNECTED),
        .Dbg_BREADY_2(NLW_U0_Dbg_BREADY_2_UNCONNECTED),
        .Dbg_BREADY_20(NLW_U0_Dbg_BREADY_20_UNCONNECTED),
        .Dbg_BREADY_21(NLW_U0_Dbg_BREADY_21_UNCONNECTED),
        .Dbg_BREADY_22(NLW_U0_Dbg_BREADY_22_UNCONNECTED),
        .Dbg_BREADY_23(NLW_U0_Dbg_BREADY_23_UNCONNECTED),
        .Dbg_BREADY_24(NLW_U0_Dbg_BREADY_24_UNCONNECTED),
        .Dbg_BREADY_25(NLW_U0_Dbg_BREADY_25_UNCONNECTED),
        .Dbg_BREADY_26(NLW_U0_Dbg_BREADY_26_UNCONNECTED),
        .Dbg_BREADY_27(NLW_U0_Dbg_BREADY_27_UNCONNECTED),
        .Dbg_BREADY_28(NLW_U0_Dbg_BREADY_28_UNCONNECTED),
        .Dbg_BREADY_29(NLW_U0_Dbg_BREADY_29_UNCONNECTED),
        .Dbg_BREADY_3(NLW_U0_Dbg_BREADY_3_UNCONNECTED),
        .Dbg_BREADY_30(NLW_U0_Dbg_BREADY_30_UNCONNECTED),
        .Dbg_BREADY_31(NLW_U0_Dbg_BREADY_31_UNCONNECTED),
        .Dbg_BREADY_4(NLW_U0_Dbg_BREADY_4_UNCONNECTED),
        .Dbg_BREADY_5(NLW_U0_Dbg_BREADY_5_UNCONNECTED),
        .Dbg_BREADY_6(NLW_U0_Dbg_BREADY_6_UNCONNECTED),
        .Dbg_BREADY_7(NLW_U0_Dbg_BREADY_7_UNCONNECTED),
        .Dbg_BREADY_8(NLW_U0_Dbg_BREADY_8_UNCONNECTED),
        .Dbg_BREADY_9(NLW_U0_Dbg_BREADY_9_UNCONNECTED),
        .Dbg_BRESP_0(NLW_U0_Dbg_BRESP_0_UNCONNECTED[1:0]),
        .Dbg_BRESP_1(NLW_U0_Dbg_BRESP_1_UNCONNECTED[1:0]),
        .Dbg_BRESP_10(NLW_U0_Dbg_BRESP_10_UNCONNECTED[1:0]),
        .Dbg_BRESP_11(NLW_U0_Dbg_BRESP_11_UNCONNECTED[1:0]),
        .Dbg_BRESP_12(NLW_U0_Dbg_BRESP_12_UNCONNECTED[1:0]),
        .Dbg_BRESP_13(NLW_U0_Dbg_BRESP_13_UNCONNECTED[1:0]),
        .Dbg_BRESP_14(NLW_U0_Dbg_BRESP_14_UNCONNECTED[1:0]),
        .Dbg_BRESP_15(NLW_U0_Dbg_BRESP_15_UNCONNECTED[1:0]),
        .Dbg_BRESP_16(NLW_U0_Dbg_BRESP_16_UNCONNECTED[1:0]),
        .Dbg_BRESP_17(NLW_U0_Dbg_BRESP_17_UNCONNECTED[1:0]),
        .Dbg_BRESP_18(NLW_U0_Dbg_BRESP_18_UNCONNECTED[1:0]),
        .Dbg_BRESP_19(NLW_U0_Dbg_BRESP_19_UNCONNECTED[1:0]),
        .Dbg_BRESP_2(NLW_U0_Dbg_BRESP_2_UNCONNECTED[1:0]),
        .Dbg_BRESP_20(NLW_U0_Dbg_BRESP_20_UNCONNECTED[1:0]),
        .Dbg_BRESP_21(NLW_U0_Dbg_BRESP_21_UNCONNECTED[1:0]),
        .Dbg_BRESP_22(NLW_U0_Dbg_BRESP_22_UNCONNECTED[1:0]),
        .Dbg_BRESP_23(NLW_U0_Dbg_BRESP_23_UNCONNECTED[1:0]),
        .Dbg_BRESP_24(NLW_U0_Dbg_BRESP_24_UNCONNECTED[1:0]),
        .Dbg_BRESP_25(NLW_U0_Dbg_BRESP_25_UNCONNECTED[1:0]),
        .Dbg_BRESP_26(NLW_U0_Dbg_BRESP_26_UNCONNECTED[1:0]),
        .Dbg_BRESP_27(NLW_U0_Dbg_BRESP_27_UNCONNECTED[1:0]),
        .Dbg_BRESP_28(NLW_U0_Dbg_BRESP_28_UNCONNECTED[1:0]),
        .Dbg_BRESP_29(NLW_U0_Dbg_BRESP_29_UNCONNECTED[1:0]),
        .Dbg_BRESP_3(NLW_U0_Dbg_BRESP_3_UNCONNECTED[1:0]),
        .Dbg_BRESP_30(NLW_U0_Dbg_BRESP_30_UNCONNECTED[1:0]),
        .Dbg_BRESP_31(NLW_U0_Dbg_BRESP_31_UNCONNECTED[1:0]),
        .Dbg_BRESP_4(NLW_U0_Dbg_BRESP_4_UNCONNECTED[1:0]),
        .Dbg_BRESP_5(NLW_U0_Dbg_BRESP_5_UNCONNECTED[1:0]),
        .Dbg_BRESP_6(NLW_U0_Dbg_BRESP_6_UNCONNECTED[1:0]),
        .Dbg_BRESP_7(NLW_U0_Dbg_BRESP_7_UNCONNECTED[1:0]),
        .Dbg_BRESP_8(NLW_U0_Dbg_BRESP_8_UNCONNECTED[1:0]),
        .Dbg_BRESP_9(NLW_U0_Dbg_BRESP_9_UNCONNECTED[1:0]),
        .Dbg_BVALID_0(NLW_U0_Dbg_BVALID_0_UNCONNECTED),
        .Dbg_BVALID_1(NLW_U0_Dbg_BVALID_1_UNCONNECTED),
        .Dbg_BVALID_10(NLW_U0_Dbg_BVALID_10_UNCONNECTED),
        .Dbg_BVALID_11(NLW_U0_Dbg_BVALID_11_UNCONNECTED),
        .Dbg_BVALID_12(NLW_U0_Dbg_BVALID_12_UNCONNECTED),
        .Dbg_BVALID_13(NLW_U0_Dbg_BVALID_13_UNCONNECTED),
        .Dbg_BVALID_14(NLW_U0_Dbg_BVALID_14_UNCONNECTED),
        .Dbg_BVALID_15(NLW_U0_Dbg_BVALID_15_UNCONNECTED),
        .Dbg_BVALID_16(NLW_U0_Dbg_BVALID_16_UNCONNECTED),
        .Dbg_BVALID_17(NLW_U0_Dbg_BVALID_17_UNCONNECTED),
        .Dbg_BVALID_18(NLW_U0_Dbg_BVALID_18_UNCONNECTED),
        .Dbg_BVALID_19(NLW_U0_Dbg_BVALID_19_UNCONNECTED),
        .Dbg_BVALID_2(NLW_U0_Dbg_BVALID_2_UNCONNECTED),
        .Dbg_BVALID_20(NLW_U0_Dbg_BVALID_20_UNCONNECTED),
        .Dbg_BVALID_21(NLW_U0_Dbg_BVALID_21_UNCONNECTED),
        .Dbg_BVALID_22(NLW_U0_Dbg_BVALID_22_UNCONNECTED),
        .Dbg_BVALID_23(NLW_U0_Dbg_BVALID_23_UNCONNECTED),
        .Dbg_BVALID_24(NLW_U0_Dbg_BVALID_24_UNCONNECTED),
        .Dbg_BVALID_25(NLW_U0_Dbg_BVALID_25_UNCONNECTED),
        .Dbg_BVALID_26(NLW_U0_Dbg_BVALID_26_UNCONNECTED),
        .Dbg_BVALID_27(NLW_U0_Dbg_BVALID_27_UNCONNECTED),
        .Dbg_BVALID_28(NLW_U0_Dbg_BVALID_28_UNCONNECTED),
        .Dbg_BVALID_29(NLW_U0_Dbg_BVALID_29_UNCONNECTED),
        .Dbg_BVALID_3(NLW_U0_Dbg_BVALID_3_UNCONNECTED),
        .Dbg_BVALID_30(NLW_U0_Dbg_BVALID_30_UNCONNECTED),
        .Dbg_BVALID_31(NLW_U0_Dbg_BVALID_31_UNCONNECTED),
        .Dbg_BVALID_4(NLW_U0_Dbg_BVALID_4_UNCONNECTED),
        .Dbg_BVALID_5(NLW_U0_Dbg_BVALID_5_UNCONNECTED),
        .Dbg_BVALID_6(NLW_U0_Dbg_BVALID_6_UNCONNECTED),
        .Dbg_BVALID_7(NLW_U0_Dbg_BVALID_7_UNCONNECTED),
        .Dbg_BVALID_8(NLW_U0_Dbg_BVALID_8_UNCONNECTED),
        .Dbg_BVALID_9(NLW_U0_Dbg_BVALID_9_UNCONNECTED),
        .Dbg_Capture_0(Dbg_Capture_0),
        .Dbg_Capture_1(NLW_U0_Dbg_Capture_1_UNCONNECTED),
        .Dbg_Capture_10(NLW_U0_Dbg_Capture_10_UNCONNECTED),
        .Dbg_Capture_11(NLW_U0_Dbg_Capture_11_UNCONNECTED),
        .Dbg_Capture_12(NLW_U0_Dbg_Capture_12_UNCONNECTED),
        .Dbg_Capture_13(NLW_U0_Dbg_Capture_13_UNCONNECTED),
        .Dbg_Capture_14(NLW_U0_Dbg_Capture_14_UNCONNECTED),
        .Dbg_Capture_15(NLW_U0_Dbg_Capture_15_UNCONNECTED),
        .Dbg_Capture_16(NLW_U0_Dbg_Capture_16_UNCONNECTED),
        .Dbg_Capture_17(NLW_U0_Dbg_Capture_17_UNCONNECTED),
        .Dbg_Capture_18(NLW_U0_Dbg_Capture_18_UNCONNECTED),
        .Dbg_Capture_19(NLW_U0_Dbg_Capture_19_UNCONNECTED),
        .Dbg_Capture_2(NLW_U0_Dbg_Capture_2_UNCONNECTED),
        .Dbg_Capture_20(NLW_U0_Dbg_Capture_20_UNCONNECTED),
        .Dbg_Capture_21(NLW_U0_Dbg_Capture_21_UNCONNECTED),
        .Dbg_Capture_22(NLW_U0_Dbg_Capture_22_UNCONNECTED),
        .Dbg_Capture_23(NLW_U0_Dbg_Capture_23_UNCONNECTED),
        .Dbg_Capture_24(NLW_U0_Dbg_Capture_24_UNCONNECTED),
        .Dbg_Capture_25(NLW_U0_Dbg_Capture_25_UNCONNECTED),
        .Dbg_Capture_26(NLW_U0_Dbg_Capture_26_UNCONNECTED),
        .Dbg_Capture_27(NLW_U0_Dbg_Capture_27_UNCONNECTED),
        .Dbg_Capture_28(NLW_U0_Dbg_Capture_28_UNCONNECTED),
        .Dbg_Capture_29(NLW_U0_Dbg_Capture_29_UNCONNECTED),
        .Dbg_Capture_3(NLW_U0_Dbg_Capture_3_UNCONNECTED),
        .Dbg_Capture_30(NLW_U0_Dbg_Capture_30_UNCONNECTED),
        .Dbg_Capture_31(NLW_U0_Dbg_Capture_31_UNCONNECTED),
        .Dbg_Capture_4(NLW_U0_Dbg_Capture_4_UNCONNECTED),
        .Dbg_Capture_5(NLW_U0_Dbg_Capture_5_UNCONNECTED),
        .Dbg_Capture_6(NLW_U0_Dbg_Capture_6_UNCONNECTED),
        .Dbg_Capture_7(NLW_U0_Dbg_Capture_7_UNCONNECTED),
        .Dbg_Capture_8(NLW_U0_Dbg_Capture_8_UNCONNECTED),
        .Dbg_Capture_9(NLW_U0_Dbg_Capture_9_UNCONNECTED),
        .Dbg_Clk_0(Dbg_Clk_0),
        .Dbg_Clk_1(NLW_U0_Dbg_Clk_1_UNCONNECTED),
        .Dbg_Clk_10(NLW_U0_Dbg_Clk_10_UNCONNECTED),
        .Dbg_Clk_11(NLW_U0_Dbg_Clk_11_UNCONNECTED),
        .Dbg_Clk_12(NLW_U0_Dbg_Clk_12_UNCONNECTED),
        .Dbg_Clk_13(NLW_U0_Dbg_Clk_13_UNCONNECTED),
        .Dbg_Clk_14(NLW_U0_Dbg_Clk_14_UNCONNECTED),
        .Dbg_Clk_15(NLW_U0_Dbg_Clk_15_UNCONNECTED),
        .Dbg_Clk_16(NLW_U0_Dbg_Clk_16_UNCONNECTED),
        .Dbg_Clk_17(NLW_U0_Dbg_Clk_17_UNCONNECTED),
        .Dbg_Clk_18(NLW_U0_Dbg_Clk_18_UNCONNECTED),
        .Dbg_Clk_19(NLW_U0_Dbg_Clk_19_UNCONNECTED),
        .Dbg_Clk_2(NLW_U0_Dbg_Clk_2_UNCONNECTED),
        .Dbg_Clk_20(NLW_U0_Dbg_Clk_20_UNCONNECTED),
        .Dbg_Clk_21(NLW_U0_Dbg_Clk_21_UNCONNECTED),
        .Dbg_Clk_22(NLW_U0_Dbg_Clk_22_UNCONNECTED),
        .Dbg_Clk_23(NLW_U0_Dbg_Clk_23_UNCONNECTED),
        .Dbg_Clk_24(NLW_U0_Dbg_Clk_24_UNCONNECTED),
        .Dbg_Clk_25(NLW_U0_Dbg_Clk_25_UNCONNECTED),
        .Dbg_Clk_26(NLW_U0_Dbg_Clk_26_UNCONNECTED),
        .Dbg_Clk_27(NLW_U0_Dbg_Clk_27_UNCONNECTED),
        .Dbg_Clk_28(NLW_U0_Dbg_Clk_28_UNCONNECTED),
        .Dbg_Clk_29(NLW_U0_Dbg_Clk_29_UNCONNECTED),
        .Dbg_Clk_3(NLW_U0_Dbg_Clk_3_UNCONNECTED),
        .Dbg_Clk_30(NLW_U0_Dbg_Clk_30_UNCONNECTED),
        .Dbg_Clk_31(NLW_U0_Dbg_Clk_31_UNCONNECTED),
        .Dbg_Clk_4(NLW_U0_Dbg_Clk_4_UNCONNECTED),
        .Dbg_Clk_5(NLW_U0_Dbg_Clk_5_UNCONNECTED),
        .Dbg_Clk_6(NLW_U0_Dbg_Clk_6_UNCONNECTED),
        .Dbg_Clk_7(NLW_U0_Dbg_Clk_7_UNCONNECTED),
        .Dbg_Clk_8(NLW_U0_Dbg_Clk_8_UNCONNECTED),
        .Dbg_Clk_9(NLW_U0_Dbg_Clk_9_UNCONNECTED),
        .Dbg_Disable_0(NLW_U0_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Disable_1(NLW_U0_Dbg_Disable_1_UNCONNECTED),
        .Dbg_Disable_10(NLW_U0_Dbg_Disable_10_UNCONNECTED),
        .Dbg_Disable_11(NLW_U0_Dbg_Disable_11_UNCONNECTED),
        .Dbg_Disable_12(NLW_U0_Dbg_Disable_12_UNCONNECTED),
        .Dbg_Disable_13(NLW_U0_Dbg_Disable_13_UNCONNECTED),
        .Dbg_Disable_14(NLW_U0_Dbg_Disable_14_UNCONNECTED),
        .Dbg_Disable_15(NLW_U0_Dbg_Disable_15_UNCONNECTED),
        .Dbg_Disable_16(NLW_U0_Dbg_Disable_16_UNCONNECTED),
        .Dbg_Disable_17(NLW_U0_Dbg_Disable_17_UNCONNECTED),
        .Dbg_Disable_18(NLW_U0_Dbg_Disable_18_UNCONNECTED),
        .Dbg_Disable_19(NLW_U0_Dbg_Disable_19_UNCONNECTED),
        .Dbg_Disable_2(NLW_U0_Dbg_Disable_2_UNCONNECTED),
        .Dbg_Disable_20(NLW_U0_Dbg_Disable_20_UNCONNECTED),
        .Dbg_Disable_21(NLW_U0_Dbg_Disable_21_UNCONNECTED),
        .Dbg_Disable_22(NLW_U0_Dbg_Disable_22_UNCONNECTED),
        .Dbg_Disable_23(NLW_U0_Dbg_Disable_23_UNCONNECTED),
        .Dbg_Disable_24(NLW_U0_Dbg_Disable_24_UNCONNECTED),
        .Dbg_Disable_25(NLW_U0_Dbg_Disable_25_UNCONNECTED),
        .Dbg_Disable_26(NLW_U0_Dbg_Disable_26_UNCONNECTED),
        .Dbg_Disable_27(NLW_U0_Dbg_Disable_27_UNCONNECTED),
        .Dbg_Disable_28(NLW_U0_Dbg_Disable_28_UNCONNECTED),
        .Dbg_Disable_29(NLW_U0_Dbg_Disable_29_UNCONNECTED),
        .Dbg_Disable_3(NLW_U0_Dbg_Disable_3_UNCONNECTED),
        .Dbg_Disable_30(NLW_U0_Dbg_Disable_30_UNCONNECTED),
        .Dbg_Disable_31(NLW_U0_Dbg_Disable_31_UNCONNECTED),
        .Dbg_Disable_4(NLW_U0_Dbg_Disable_4_UNCONNECTED),
        .Dbg_Disable_5(NLW_U0_Dbg_Disable_5_UNCONNECTED),
        .Dbg_Disable_6(NLW_U0_Dbg_Disable_6_UNCONNECTED),
        .Dbg_Disable_7(NLW_U0_Dbg_Disable_7_UNCONNECTED),
        .Dbg_Disable_8(NLW_U0_Dbg_Disable_8_UNCONNECTED),
        .Dbg_Disable_9(NLW_U0_Dbg_Disable_9_UNCONNECTED),
        .Dbg_RDATA_0(NLW_U0_Dbg_RDATA_0_UNCONNECTED[31:0]),
        .Dbg_RDATA_1(NLW_U0_Dbg_RDATA_1_UNCONNECTED[31:0]),
        .Dbg_RDATA_10(NLW_U0_Dbg_RDATA_10_UNCONNECTED[31:0]),
        .Dbg_RDATA_11(NLW_U0_Dbg_RDATA_11_UNCONNECTED[31:0]),
        .Dbg_RDATA_12(NLW_U0_Dbg_RDATA_12_UNCONNECTED[31:0]),
        .Dbg_RDATA_13(NLW_U0_Dbg_RDATA_13_UNCONNECTED[31:0]),
        .Dbg_RDATA_14(NLW_U0_Dbg_RDATA_14_UNCONNECTED[31:0]),
        .Dbg_RDATA_15(NLW_U0_Dbg_RDATA_15_UNCONNECTED[31:0]),
        .Dbg_RDATA_16(NLW_U0_Dbg_RDATA_16_UNCONNECTED[31:0]),
        .Dbg_RDATA_17(NLW_U0_Dbg_RDATA_17_UNCONNECTED[31:0]),
        .Dbg_RDATA_18(NLW_U0_Dbg_RDATA_18_UNCONNECTED[31:0]),
        .Dbg_RDATA_19(NLW_U0_Dbg_RDATA_19_UNCONNECTED[31:0]),
        .Dbg_RDATA_2(NLW_U0_Dbg_RDATA_2_UNCONNECTED[31:0]),
        .Dbg_RDATA_20(NLW_U0_Dbg_RDATA_20_UNCONNECTED[31:0]),
        .Dbg_RDATA_21(NLW_U0_Dbg_RDATA_21_UNCONNECTED[31:0]),
        .Dbg_RDATA_22(NLW_U0_Dbg_RDATA_22_UNCONNECTED[31:0]),
        .Dbg_RDATA_23(NLW_U0_Dbg_RDATA_23_UNCONNECTED[31:0]),
        .Dbg_RDATA_24(NLW_U0_Dbg_RDATA_24_UNCONNECTED[31:0]),
        .Dbg_RDATA_25(NLW_U0_Dbg_RDATA_25_UNCONNECTED[31:0]),
        .Dbg_RDATA_26(NLW_U0_Dbg_RDATA_26_UNCONNECTED[31:0]),
        .Dbg_RDATA_27(NLW_U0_Dbg_RDATA_27_UNCONNECTED[31:0]),
        .Dbg_RDATA_28(NLW_U0_Dbg_RDATA_28_UNCONNECTED[31:0]),
        .Dbg_RDATA_29(NLW_U0_Dbg_RDATA_29_UNCONNECTED[31:0]),
        .Dbg_RDATA_3(NLW_U0_Dbg_RDATA_3_UNCONNECTED[31:0]),
        .Dbg_RDATA_30(NLW_U0_Dbg_RDATA_30_UNCONNECTED[31:0]),
        .Dbg_RDATA_31(NLW_U0_Dbg_RDATA_31_UNCONNECTED[31:0]),
        .Dbg_RDATA_4(NLW_U0_Dbg_RDATA_4_UNCONNECTED[31:0]),
        .Dbg_RDATA_5(NLW_U0_Dbg_RDATA_5_UNCONNECTED[31:0]),
        .Dbg_RDATA_6(NLW_U0_Dbg_RDATA_6_UNCONNECTED[31:0]),
        .Dbg_RDATA_7(NLW_U0_Dbg_RDATA_7_UNCONNECTED[31:0]),
        .Dbg_RDATA_8(NLW_U0_Dbg_RDATA_8_UNCONNECTED[31:0]),
        .Dbg_RDATA_9(NLW_U0_Dbg_RDATA_9_UNCONNECTED[31:0]),
        .Dbg_RREADY_0(NLW_U0_Dbg_RREADY_0_UNCONNECTED),
        .Dbg_RREADY_1(NLW_U0_Dbg_RREADY_1_UNCONNECTED),
        .Dbg_RREADY_10(NLW_U0_Dbg_RREADY_10_UNCONNECTED),
        .Dbg_RREADY_11(NLW_U0_Dbg_RREADY_11_UNCONNECTED),
        .Dbg_RREADY_12(NLW_U0_Dbg_RREADY_12_UNCONNECTED),
        .Dbg_RREADY_13(NLW_U0_Dbg_RREADY_13_UNCONNECTED),
        .Dbg_RREADY_14(NLW_U0_Dbg_RREADY_14_UNCONNECTED),
        .Dbg_RREADY_15(NLW_U0_Dbg_RREADY_15_UNCONNECTED),
        .Dbg_RREADY_16(NLW_U0_Dbg_RREADY_16_UNCONNECTED),
        .Dbg_RREADY_17(NLW_U0_Dbg_RREADY_17_UNCONNECTED),
        .Dbg_RREADY_18(NLW_U0_Dbg_RREADY_18_UNCONNECTED),
        .Dbg_RREADY_19(NLW_U0_Dbg_RREADY_19_UNCONNECTED),
        .Dbg_RREADY_2(NLW_U0_Dbg_RREADY_2_UNCONNECTED),
        .Dbg_RREADY_20(NLW_U0_Dbg_RREADY_20_UNCONNECTED),
        .Dbg_RREADY_21(NLW_U0_Dbg_RREADY_21_UNCONNECTED),
        .Dbg_RREADY_22(NLW_U0_Dbg_RREADY_22_UNCONNECTED),
        .Dbg_RREADY_23(NLW_U0_Dbg_RREADY_23_UNCONNECTED),
        .Dbg_RREADY_24(NLW_U0_Dbg_RREADY_24_UNCONNECTED),
        .Dbg_RREADY_25(NLW_U0_Dbg_RREADY_25_UNCONNECTED),
        .Dbg_RREADY_26(NLW_U0_Dbg_RREADY_26_UNCONNECTED),
        .Dbg_RREADY_27(NLW_U0_Dbg_RREADY_27_UNCONNECTED),
        .Dbg_RREADY_28(NLW_U0_Dbg_RREADY_28_UNCONNECTED),
        .Dbg_RREADY_29(NLW_U0_Dbg_RREADY_29_UNCONNECTED),
        .Dbg_RREADY_3(NLW_U0_Dbg_RREADY_3_UNCONNECTED),
        .Dbg_RREADY_30(NLW_U0_Dbg_RREADY_30_UNCONNECTED),
        .Dbg_RREADY_31(NLW_U0_Dbg_RREADY_31_UNCONNECTED),
        .Dbg_RREADY_4(NLW_U0_Dbg_RREADY_4_UNCONNECTED),
        .Dbg_RREADY_5(NLW_U0_Dbg_RREADY_5_UNCONNECTED),
        .Dbg_RREADY_6(NLW_U0_Dbg_RREADY_6_UNCONNECTED),
        .Dbg_RREADY_7(NLW_U0_Dbg_RREADY_7_UNCONNECTED),
        .Dbg_RREADY_8(NLW_U0_Dbg_RREADY_8_UNCONNECTED),
        .Dbg_RREADY_9(NLW_U0_Dbg_RREADY_9_UNCONNECTED),
        .Dbg_RRESP_0(NLW_U0_Dbg_RRESP_0_UNCONNECTED[1:0]),
        .Dbg_RRESP_1(NLW_U0_Dbg_RRESP_1_UNCONNECTED[1:0]),
        .Dbg_RRESP_10(NLW_U0_Dbg_RRESP_10_UNCONNECTED[1:0]),
        .Dbg_RRESP_11(NLW_U0_Dbg_RRESP_11_UNCONNECTED[1:0]),
        .Dbg_RRESP_12(NLW_U0_Dbg_RRESP_12_UNCONNECTED[1:0]),
        .Dbg_RRESP_13(NLW_U0_Dbg_RRESP_13_UNCONNECTED[1:0]),
        .Dbg_RRESP_14(NLW_U0_Dbg_RRESP_14_UNCONNECTED[1:0]),
        .Dbg_RRESP_15(NLW_U0_Dbg_RRESP_15_UNCONNECTED[1:0]),
        .Dbg_RRESP_16(NLW_U0_Dbg_RRESP_16_UNCONNECTED[1:0]),
        .Dbg_RRESP_17(NLW_U0_Dbg_RRESP_17_UNCONNECTED[1:0]),
        .Dbg_RRESP_18(NLW_U0_Dbg_RRESP_18_UNCONNECTED[1:0]),
        .Dbg_RRESP_19(NLW_U0_Dbg_RRESP_19_UNCONNECTED[1:0]),
        .Dbg_RRESP_2(NLW_U0_Dbg_RRESP_2_UNCONNECTED[1:0]),
        .Dbg_RRESP_20(NLW_U0_Dbg_RRESP_20_UNCONNECTED[1:0]),
        .Dbg_RRESP_21(NLW_U0_Dbg_RRESP_21_UNCONNECTED[1:0]),
        .Dbg_RRESP_22(NLW_U0_Dbg_RRESP_22_UNCONNECTED[1:0]),
        .Dbg_RRESP_23(NLW_U0_Dbg_RRESP_23_UNCONNECTED[1:0]),
        .Dbg_RRESP_24(NLW_U0_Dbg_RRESP_24_UNCONNECTED[1:0]),
        .Dbg_RRESP_25(NLW_U0_Dbg_RRESP_25_UNCONNECTED[1:0]),
        .Dbg_RRESP_26(NLW_U0_Dbg_RRESP_26_UNCONNECTED[1:0]),
        .Dbg_RRESP_27(NLW_U0_Dbg_RRESP_27_UNCONNECTED[1:0]),
        .Dbg_RRESP_28(NLW_U0_Dbg_RRESP_28_UNCONNECTED[1:0]),
        .Dbg_RRESP_29(NLW_U0_Dbg_RRESP_29_UNCONNECTED[1:0]),
        .Dbg_RRESP_3(NLW_U0_Dbg_RRESP_3_UNCONNECTED[1:0]),
        .Dbg_RRESP_30(NLW_U0_Dbg_RRESP_30_UNCONNECTED[1:0]),
        .Dbg_RRESP_31(NLW_U0_Dbg_RRESP_31_UNCONNECTED[1:0]),
        .Dbg_RRESP_4(NLW_U0_Dbg_RRESP_4_UNCONNECTED[1:0]),
        .Dbg_RRESP_5(NLW_U0_Dbg_RRESP_5_UNCONNECTED[1:0]),
        .Dbg_RRESP_6(NLW_U0_Dbg_RRESP_6_UNCONNECTED[1:0]),
        .Dbg_RRESP_7(NLW_U0_Dbg_RRESP_7_UNCONNECTED[1:0]),
        .Dbg_RRESP_8(NLW_U0_Dbg_RRESP_8_UNCONNECTED[1:0]),
        .Dbg_RRESP_9(NLW_U0_Dbg_RRESP_9_UNCONNECTED[1:0]),
        .Dbg_RVALID_0(NLW_U0_Dbg_RVALID_0_UNCONNECTED),
        .Dbg_RVALID_1(NLW_U0_Dbg_RVALID_1_UNCONNECTED),
        .Dbg_RVALID_10(NLW_U0_Dbg_RVALID_10_UNCONNECTED),
        .Dbg_RVALID_11(NLW_U0_Dbg_RVALID_11_UNCONNECTED),
        .Dbg_RVALID_12(NLW_U0_Dbg_RVALID_12_UNCONNECTED),
        .Dbg_RVALID_13(NLW_U0_Dbg_RVALID_13_UNCONNECTED),
        .Dbg_RVALID_14(NLW_U0_Dbg_RVALID_14_UNCONNECTED),
        .Dbg_RVALID_15(NLW_U0_Dbg_RVALID_15_UNCONNECTED),
        .Dbg_RVALID_16(NLW_U0_Dbg_RVALID_16_UNCONNECTED),
        .Dbg_RVALID_17(NLW_U0_Dbg_RVALID_17_UNCONNECTED),
        .Dbg_RVALID_18(NLW_U0_Dbg_RVALID_18_UNCONNECTED),
        .Dbg_RVALID_19(NLW_U0_Dbg_RVALID_19_UNCONNECTED),
        .Dbg_RVALID_2(NLW_U0_Dbg_RVALID_2_UNCONNECTED),
        .Dbg_RVALID_20(NLW_U0_Dbg_RVALID_20_UNCONNECTED),
        .Dbg_RVALID_21(NLW_U0_Dbg_RVALID_21_UNCONNECTED),
        .Dbg_RVALID_22(NLW_U0_Dbg_RVALID_22_UNCONNECTED),
        .Dbg_RVALID_23(NLW_U0_Dbg_RVALID_23_UNCONNECTED),
        .Dbg_RVALID_24(NLW_U0_Dbg_RVALID_24_UNCONNECTED),
        .Dbg_RVALID_25(NLW_U0_Dbg_RVALID_25_UNCONNECTED),
        .Dbg_RVALID_26(NLW_U0_Dbg_RVALID_26_UNCONNECTED),
        .Dbg_RVALID_27(NLW_U0_Dbg_RVALID_27_UNCONNECTED),
        .Dbg_RVALID_28(NLW_U0_Dbg_RVALID_28_UNCONNECTED),
        .Dbg_RVALID_29(NLW_U0_Dbg_RVALID_29_UNCONNECTED),
        .Dbg_RVALID_3(NLW_U0_Dbg_RVALID_3_UNCONNECTED),
        .Dbg_RVALID_30(NLW_U0_Dbg_RVALID_30_UNCONNECTED),
        .Dbg_RVALID_31(NLW_U0_Dbg_RVALID_31_UNCONNECTED),
        .Dbg_RVALID_4(NLW_U0_Dbg_RVALID_4_UNCONNECTED),
        .Dbg_RVALID_5(NLW_U0_Dbg_RVALID_5_UNCONNECTED),
        .Dbg_RVALID_6(NLW_U0_Dbg_RVALID_6_UNCONNECTED),
        .Dbg_RVALID_7(NLW_U0_Dbg_RVALID_7_UNCONNECTED),
        .Dbg_RVALID_8(NLW_U0_Dbg_RVALID_8_UNCONNECTED),
        .Dbg_RVALID_9(NLW_U0_Dbg_RVALID_9_UNCONNECTED),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Reg_En_1(NLW_U0_Dbg_Reg_En_1_UNCONNECTED[0:7]),
        .Dbg_Reg_En_10(NLW_U0_Dbg_Reg_En_10_UNCONNECTED[0:7]),
        .Dbg_Reg_En_11(NLW_U0_Dbg_Reg_En_11_UNCONNECTED[0:7]),
        .Dbg_Reg_En_12(NLW_U0_Dbg_Reg_En_12_UNCONNECTED[0:7]),
        .Dbg_Reg_En_13(NLW_U0_Dbg_Reg_En_13_UNCONNECTED[0:7]),
        .Dbg_Reg_En_14(NLW_U0_Dbg_Reg_En_14_UNCONNECTED[0:7]),
        .Dbg_Reg_En_15(NLW_U0_Dbg_Reg_En_15_UNCONNECTED[0:7]),
        .Dbg_Reg_En_16(NLW_U0_Dbg_Reg_En_16_UNCONNECTED[0:7]),
        .Dbg_Reg_En_17(NLW_U0_Dbg_Reg_En_17_UNCONNECTED[0:7]),
        .Dbg_Reg_En_18(NLW_U0_Dbg_Reg_En_18_UNCONNECTED[0:7]),
        .Dbg_Reg_En_19(NLW_U0_Dbg_Reg_En_19_UNCONNECTED[0:7]),
        .Dbg_Reg_En_2(NLW_U0_Dbg_Reg_En_2_UNCONNECTED[0:7]),
        .Dbg_Reg_En_20(NLW_U0_Dbg_Reg_En_20_UNCONNECTED[0:7]),
        .Dbg_Reg_En_21(NLW_U0_Dbg_Reg_En_21_UNCONNECTED[0:7]),
        .Dbg_Reg_En_22(NLW_U0_Dbg_Reg_En_22_UNCONNECTED[0:7]),
        .Dbg_Reg_En_23(NLW_U0_Dbg_Reg_En_23_UNCONNECTED[0:7]),
        .Dbg_Reg_En_24(NLW_U0_Dbg_Reg_En_24_UNCONNECTED[0:7]),
        .Dbg_Reg_En_25(NLW_U0_Dbg_Reg_En_25_UNCONNECTED[0:7]),
        .Dbg_Reg_En_26(NLW_U0_Dbg_Reg_En_26_UNCONNECTED[0:7]),
        .Dbg_Reg_En_27(NLW_U0_Dbg_Reg_En_27_UNCONNECTED[0:7]),
        .Dbg_Reg_En_28(NLW_U0_Dbg_Reg_En_28_UNCONNECTED[0:7]),
        .Dbg_Reg_En_29(NLW_U0_Dbg_Reg_En_29_UNCONNECTED[0:7]),
        .Dbg_Reg_En_3(NLW_U0_Dbg_Reg_En_3_UNCONNECTED[0:7]),
        .Dbg_Reg_En_30(NLW_U0_Dbg_Reg_En_30_UNCONNECTED[0:7]),
        .Dbg_Reg_En_31(NLW_U0_Dbg_Reg_En_31_UNCONNECTED[0:7]),
        .Dbg_Reg_En_4(NLW_U0_Dbg_Reg_En_4_UNCONNECTED[0:7]),
        .Dbg_Reg_En_5(NLW_U0_Dbg_Reg_En_5_UNCONNECTED[0:7]),
        .Dbg_Reg_En_6(NLW_U0_Dbg_Reg_En_6_UNCONNECTED[0:7]),
        .Dbg_Reg_En_7(NLW_U0_Dbg_Reg_En_7_UNCONNECTED[0:7]),
        .Dbg_Reg_En_8(NLW_U0_Dbg_Reg_En_8_UNCONNECTED[0:7]),
        .Dbg_Reg_En_9(NLW_U0_Dbg_Reg_En_9_UNCONNECTED[0:7]),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_Rst_1(NLW_U0_Dbg_Rst_1_UNCONNECTED),
        .Dbg_Rst_10(NLW_U0_Dbg_Rst_10_UNCONNECTED),
        .Dbg_Rst_11(NLW_U0_Dbg_Rst_11_UNCONNECTED),
        .Dbg_Rst_12(NLW_U0_Dbg_Rst_12_UNCONNECTED),
        .Dbg_Rst_13(NLW_U0_Dbg_Rst_13_UNCONNECTED),
        .Dbg_Rst_14(NLW_U0_Dbg_Rst_14_UNCONNECTED),
        .Dbg_Rst_15(NLW_U0_Dbg_Rst_15_UNCONNECTED),
        .Dbg_Rst_16(NLW_U0_Dbg_Rst_16_UNCONNECTED),
        .Dbg_Rst_17(NLW_U0_Dbg_Rst_17_UNCONNECTED),
        .Dbg_Rst_18(NLW_U0_Dbg_Rst_18_UNCONNECTED),
        .Dbg_Rst_19(NLW_U0_Dbg_Rst_19_UNCONNECTED),
        .Dbg_Rst_2(NLW_U0_Dbg_Rst_2_UNCONNECTED),
        .Dbg_Rst_20(NLW_U0_Dbg_Rst_20_UNCONNECTED),
        .Dbg_Rst_21(NLW_U0_Dbg_Rst_21_UNCONNECTED),
        .Dbg_Rst_22(NLW_U0_Dbg_Rst_22_UNCONNECTED),
        .Dbg_Rst_23(NLW_U0_Dbg_Rst_23_UNCONNECTED),
        .Dbg_Rst_24(NLW_U0_Dbg_Rst_24_UNCONNECTED),
        .Dbg_Rst_25(NLW_U0_Dbg_Rst_25_UNCONNECTED),
        .Dbg_Rst_26(NLW_U0_Dbg_Rst_26_UNCONNECTED),
        .Dbg_Rst_27(NLW_U0_Dbg_Rst_27_UNCONNECTED),
        .Dbg_Rst_28(NLW_U0_Dbg_Rst_28_UNCONNECTED),
        .Dbg_Rst_29(NLW_U0_Dbg_Rst_29_UNCONNECTED),
        .Dbg_Rst_3(NLW_U0_Dbg_Rst_3_UNCONNECTED),
        .Dbg_Rst_30(NLW_U0_Dbg_Rst_30_UNCONNECTED),
        .Dbg_Rst_31(NLW_U0_Dbg_Rst_31_UNCONNECTED),
        .Dbg_Rst_4(NLW_U0_Dbg_Rst_4_UNCONNECTED),
        .Dbg_Rst_5(NLW_U0_Dbg_Rst_5_UNCONNECTED),
        .Dbg_Rst_6(NLW_U0_Dbg_Rst_6_UNCONNECTED),
        .Dbg_Rst_7(NLW_U0_Dbg_Rst_7_UNCONNECTED),
        .Dbg_Rst_8(NLW_U0_Dbg_Rst_8_UNCONNECTED),
        .Dbg_Rst_9(NLW_U0_Dbg_Rst_9_UNCONNECTED),
        .Dbg_Shift_0(Dbg_Shift_0),
        .Dbg_Shift_1(NLW_U0_Dbg_Shift_1_UNCONNECTED),
        .Dbg_Shift_10(NLW_U0_Dbg_Shift_10_UNCONNECTED),
        .Dbg_Shift_11(NLW_U0_Dbg_Shift_11_UNCONNECTED),
        .Dbg_Shift_12(NLW_U0_Dbg_Shift_12_UNCONNECTED),
        .Dbg_Shift_13(NLW_U0_Dbg_Shift_13_UNCONNECTED),
        .Dbg_Shift_14(NLW_U0_Dbg_Shift_14_UNCONNECTED),
        .Dbg_Shift_15(NLW_U0_Dbg_Shift_15_UNCONNECTED),
        .Dbg_Shift_16(NLW_U0_Dbg_Shift_16_UNCONNECTED),
        .Dbg_Shift_17(NLW_U0_Dbg_Shift_17_UNCONNECTED),
        .Dbg_Shift_18(NLW_U0_Dbg_Shift_18_UNCONNECTED),
        .Dbg_Shift_19(NLW_U0_Dbg_Shift_19_UNCONNECTED),
        .Dbg_Shift_2(NLW_U0_Dbg_Shift_2_UNCONNECTED),
        .Dbg_Shift_20(NLW_U0_Dbg_Shift_20_UNCONNECTED),
        .Dbg_Shift_21(NLW_U0_Dbg_Shift_21_UNCONNECTED),
        .Dbg_Shift_22(NLW_U0_Dbg_Shift_22_UNCONNECTED),
        .Dbg_Shift_23(NLW_U0_Dbg_Shift_23_UNCONNECTED),
        .Dbg_Shift_24(NLW_U0_Dbg_Shift_24_UNCONNECTED),
        .Dbg_Shift_25(NLW_U0_Dbg_Shift_25_UNCONNECTED),
        .Dbg_Shift_26(NLW_U0_Dbg_Shift_26_UNCONNECTED),
        .Dbg_Shift_27(NLW_U0_Dbg_Shift_27_UNCONNECTED),
        .Dbg_Shift_28(NLW_U0_Dbg_Shift_28_UNCONNECTED),
        .Dbg_Shift_29(NLW_U0_Dbg_Shift_29_UNCONNECTED),
        .Dbg_Shift_3(NLW_U0_Dbg_Shift_3_UNCONNECTED),
        .Dbg_Shift_30(NLW_U0_Dbg_Shift_30_UNCONNECTED),
        .Dbg_Shift_31(NLW_U0_Dbg_Shift_31_UNCONNECTED),
        .Dbg_Shift_4(NLW_U0_Dbg_Shift_4_UNCONNECTED),
        .Dbg_Shift_5(NLW_U0_Dbg_Shift_5_UNCONNECTED),
        .Dbg_Shift_6(NLW_U0_Dbg_Shift_6_UNCONNECTED),
        .Dbg_Shift_7(NLW_U0_Dbg_Shift_7_UNCONNECTED),
        .Dbg_Shift_8(NLW_U0_Dbg_Shift_8_UNCONNECTED),
        .Dbg_Shift_9(NLW_U0_Dbg_Shift_9_UNCONNECTED),
        .Dbg_TDI_0(Dbg_TDI_0),
        .Dbg_TDI_1(NLW_U0_Dbg_TDI_1_UNCONNECTED),
        .Dbg_TDI_10(NLW_U0_Dbg_TDI_10_UNCONNECTED),
        .Dbg_TDI_11(NLW_U0_Dbg_TDI_11_UNCONNECTED),
        .Dbg_TDI_12(NLW_U0_Dbg_TDI_12_UNCONNECTED),
        .Dbg_TDI_13(NLW_U0_Dbg_TDI_13_UNCONNECTED),
        .Dbg_TDI_14(NLW_U0_Dbg_TDI_14_UNCONNECTED),
        .Dbg_TDI_15(NLW_U0_Dbg_TDI_15_UNCONNECTED),
        .Dbg_TDI_16(NLW_U0_Dbg_TDI_16_UNCONNECTED),
        .Dbg_TDI_17(NLW_U0_Dbg_TDI_17_UNCONNECTED),
        .Dbg_TDI_18(NLW_U0_Dbg_TDI_18_UNCONNECTED),
        .Dbg_TDI_19(NLW_U0_Dbg_TDI_19_UNCONNECTED),
        .Dbg_TDI_2(NLW_U0_Dbg_TDI_2_UNCONNECTED),
        .Dbg_TDI_20(NLW_U0_Dbg_TDI_20_UNCONNECTED),
        .Dbg_TDI_21(NLW_U0_Dbg_TDI_21_UNCONNECTED),
        .Dbg_TDI_22(NLW_U0_Dbg_TDI_22_UNCONNECTED),
        .Dbg_TDI_23(NLW_U0_Dbg_TDI_23_UNCONNECTED),
        .Dbg_TDI_24(NLW_U0_Dbg_TDI_24_UNCONNECTED),
        .Dbg_TDI_25(NLW_U0_Dbg_TDI_25_UNCONNECTED),
        .Dbg_TDI_26(NLW_U0_Dbg_TDI_26_UNCONNECTED),
        .Dbg_TDI_27(NLW_U0_Dbg_TDI_27_UNCONNECTED),
        .Dbg_TDI_28(NLW_U0_Dbg_TDI_28_UNCONNECTED),
        .Dbg_TDI_29(NLW_U0_Dbg_TDI_29_UNCONNECTED),
        .Dbg_TDI_3(NLW_U0_Dbg_TDI_3_UNCONNECTED),
        .Dbg_TDI_30(NLW_U0_Dbg_TDI_30_UNCONNECTED),
        .Dbg_TDI_31(NLW_U0_Dbg_TDI_31_UNCONNECTED),
        .Dbg_TDI_4(NLW_U0_Dbg_TDI_4_UNCONNECTED),
        .Dbg_TDI_5(NLW_U0_Dbg_TDI_5_UNCONNECTED),
        .Dbg_TDI_6(NLW_U0_Dbg_TDI_6_UNCONNECTED),
        .Dbg_TDI_7(NLW_U0_Dbg_TDI_7_UNCONNECTED),
        .Dbg_TDI_8(NLW_U0_Dbg_TDI_8_UNCONNECTED),
        .Dbg_TDI_9(NLW_U0_Dbg_TDI_9_UNCONNECTED),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Dbg_TDO_1(NLW_U0_Dbg_TDO_1_UNCONNECTED),
        .Dbg_TDO_10(NLW_U0_Dbg_TDO_10_UNCONNECTED),
        .Dbg_TDO_11(NLW_U0_Dbg_TDO_11_UNCONNECTED),
        .Dbg_TDO_12(NLW_U0_Dbg_TDO_12_UNCONNECTED),
        .Dbg_TDO_13(NLW_U0_Dbg_TDO_13_UNCONNECTED),
        .Dbg_TDO_14(NLW_U0_Dbg_TDO_14_UNCONNECTED),
        .Dbg_TDO_15(NLW_U0_Dbg_TDO_15_UNCONNECTED),
        .Dbg_TDO_16(NLW_U0_Dbg_TDO_16_UNCONNECTED),
        .Dbg_TDO_17(NLW_U0_Dbg_TDO_17_UNCONNECTED),
        .Dbg_TDO_18(NLW_U0_Dbg_TDO_18_UNCONNECTED),
        .Dbg_TDO_19(NLW_U0_Dbg_TDO_19_UNCONNECTED),
        .Dbg_TDO_2(NLW_U0_Dbg_TDO_2_UNCONNECTED),
        .Dbg_TDO_20(NLW_U0_Dbg_TDO_20_UNCONNECTED),
        .Dbg_TDO_21(NLW_U0_Dbg_TDO_21_UNCONNECTED),
        .Dbg_TDO_22(NLW_U0_Dbg_TDO_22_UNCONNECTED),
        .Dbg_TDO_23(NLW_U0_Dbg_TDO_23_UNCONNECTED),
        .Dbg_TDO_24(NLW_U0_Dbg_TDO_24_UNCONNECTED),
        .Dbg_TDO_25(NLW_U0_Dbg_TDO_25_UNCONNECTED),
        .Dbg_TDO_26(NLW_U0_Dbg_TDO_26_UNCONNECTED),
        .Dbg_TDO_27(NLW_U0_Dbg_TDO_27_UNCONNECTED),
        .Dbg_TDO_28(NLW_U0_Dbg_TDO_28_UNCONNECTED),
        .Dbg_TDO_29(NLW_U0_Dbg_TDO_29_UNCONNECTED),
        .Dbg_TDO_3(NLW_U0_Dbg_TDO_3_UNCONNECTED),
        .Dbg_TDO_30(NLW_U0_Dbg_TDO_30_UNCONNECTED),
        .Dbg_TDO_31(NLW_U0_Dbg_TDO_31_UNCONNECTED),
        .Dbg_TDO_4(NLW_U0_Dbg_TDO_4_UNCONNECTED),
        .Dbg_TDO_5(NLW_U0_Dbg_TDO_5_UNCONNECTED),
        .Dbg_TDO_6(NLW_U0_Dbg_TDO_6_UNCONNECTED),
        .Dbg_TDO_7(NLW_U0_Dbg_TDO_7_UNCONNECTED),
        .Dbg_TDO_8(NLW_U0_Dbg_TDO_8_UNCONNECTED),
        .Dbg_TDO_9(NLW_U0_Dbg_TDO_9_UNCONNECTED),
        .Dbg_TrClk_0(NLW_U0_Dbg_TrClk_0_UNCONNECTED),
        .Dbg_TrClk_1(NLW_U0_Dbg_TrClk_1_UNCONNECTED),
        .Dbg_TrClk_10(NLW_U0_Dbg_TrClk_10_UNCONNECTED),
        .Dbg_TrClk_11(NLW_U0_Dbg_TrClk_11_UNCONNECTED),
        .Dbg_TrClk_12(NLW_U0_Dbg_TrClk_12_UNCONNECTED),
        .Dbg_TrClk_13(NLW_U0_Dbg_TrClk_13_UNCONNECTED),
        .Dbg_TrClk_14(NLW_U0_Dbg_TrClk_14_UNCONNECTED),
        .Dbg_TrClk_15(NLW_U0_Dbg_TrClk_15_UNCONNECTED),
        .Dbg_TrClk_16(NLW_U0_Dbg_TrClk_16_UNCONNECTED),
        .Dbg_TrClk_17(NLW_U0_Dbg_TrClk_17_UNCONNECTED),
        .Dbg_TrClk_18(NLW_U0_Dbg_TrClk_18_UNCONNECTED),
        .Dbg_TrClk_19(NLW_U0_Dbg_TrClk_19_UNCONNECTED),
        .Dbg_TrClk_2(NLW_U0_Dbg_TrClk_2_UNCONNECTED),
        .Dbg_TrClk_20(NLW_U0_Dbg_TrClk_20_UNCONNECTED),
        .Dbg_TrClk_21(NLW_U0_Dbg_TrClk_21_UNCONNECTED),
        .Dbg_TrClk_22(NLW_U0_Dbg_TrClk_22_UNCONNECTED),
        .Dbg_TrClk_23(NLW_U0_Dbg_TrClk_23_UNCONNECTED),
        .Dbg_TrClk_24(NLW_U0_Dbg_TrClk_24_UNCONNECTED),
        .Dbg_TrClk_25(NLW_U0_Dbg_TrClk_25_UNCONNECTED),
        .Dbg_TrClk_26(NLW_U0_Dbg_TrClk_26_UNCONNECTED),
        .Dbg_TrClk_27(NLW_U0_Dbg_TrClk_27_UNCONNECTED),
        .Dbg_TrClk_28(NLW_U0_Dbg_TrClk_28_UNCONNECTED),
        .Dbg_TrClk_29(NLW_U0_Dbg_TrClk_29_UNCONNECTED),
        .Dbg_TrClk_3(NLW_U0_Dbg_TrClk_3_UNCONNECTED),
        .Dbg_TrClk_30(NLW_U0_Dbg_TrClk_30_UNCONNECTED),
        .Dbg_TrClk_31(NLW_U0_Dbg_TrClk_31_UNCONNECTED),
        .Dbg_TrClk_4(NLW_U0_Dbg_TrClk_4_UNCONNECTED),
        .Dbg_TrClk_5(NLW_U0_Dbg_TrClk_5_UNCONNECTED),
        .Dbg_TrClk_6(NLW_U0_Dbg_TrClk_6_UNCONNECTED),
        .Dbg_TrClk_7(NLW_U0_Dbg_TrClk_7_UNCONNECTED),
        .Dbg_TrClk_8(NLW_U0_Dbg_TrClk_8_UNCONNECTED),
        .Dbg_TrClk_9(NLW_U0_Dbg_TrClk_9_UNCONNECTED),
        .Dbg_TrData_0(NLW_U0_Dbg_TrData_0_UNCONNECTED[0:35]),
        .Dbg_TrData_1(NLW_U0_Dbg_TrData_1_UNCONNECTED[0:35]),
        .Dbg_TrData_10(NLW_U0_Dbg_TrData_10_UNCONNECTED[0:35]),
        .Dbg_TrData_11(NLW_U0_Dbg_TrData_11_UNCONNECTED[0:35]),
        .Dbg_TrData_12(NLW_U0_Dbg_TrData_12_UNCONNECTED[0:35]),
        .Dbg_TrData_13(NLW_U0_Dbg_TrData_13_UNCONNECTED[0:35]),
        .Dbg_TrData_14(NLW_U0_Dbg_TrData_14_UNCONNECTED[0:35]),
        .Dbg_TrData_15(NLW_U0_Dbg_TrData_15_UNCONNECTED[0:35]),
        .Dbg_TrData_16(NLW_U0_Dbg_TrData_16_UNCONNECTED[0:35]),
        .Dbg_TrData_17(NLW_U0_Dbg_TrData_17_UNCONNECTED[0:35]),
        .Dbg_TrData_18(NLW_U0_Dbg_TrData_18_UNCONNECTED[0:35]),
        .Dbg_TrData_19(NLW_U0_Dbg_TrData_19_UNCONNECTED[0:35]),
        .Dbg_TrData_2(NLW_U0_Dbg_TrData_2_UNCONNECTED[0:35]),
        .Dbg_TrData_20(NLW_U0_Dbg_TrData_20_UNCONNECTED[0:35]),
        .Dbg_TrData_21(NLW_U0_Dbg_TrData_21_UNCONNECTED[0:35]),
        .Dbg_TrData_22(NLW_U0_Dbg_TrData_22_UNCONNECTED[0:35]),
        .Dbg_TrData_23(NLW_U0_Dbg_TrData_23_UNCONNECTED[0:35]),
        .Dbg_TrData_24(NLW_U0_Dbg_TrData_24_UNCONNECTED[0:35]),
        .Dbg_TrData_25(NLW_U0_Dbg_TrData_25_UNCONNECTED[0:35]),
        .Dbg_TrData_26(NLW_U0_Dbg_TrData_26_UNCONNECTED[0:35]),
        .Dbg_TrData_27(NLW_U0_Dbg_TrData_27_UNCONNECTED[0:35]),
        .Dbg_TrData_28(NLW_U0_Dbg_TrData_28_UNCONNECTED[0:35]),
        .Dbg_TrData_29(NLW_U0_Dbg_TrData_29_UNCONNECTED[0:35]),
        .Dbg_TrData_3(NLW_U0_Dbg_TrData_3_UNCONNECTED[0:35]),
        .Dbg_TrData_30(NLW_U0_Dbg_TrData_30_UNCONNECTED[0:35]),
        .Dbg_TrData_31(NLW_U0_Dbg_TrData_31_UNCONNECTED[0:35]),
        .Dbg_TrData_4(NLW_U0_Dbg_TrData_4_UNCONNECTED[0:35]),
        .Dbg_TrData_5(NLW_U0_Dbg_TrData_5_UNCONNECTED[0:35]),
        .Dbg_TrData_6(NLW_U0_Dbg_TrData_6_UNCONNECTED[0:35]),
        .Dbg_TrData_7(NLW_U0_Dbg_TrData_7_UNCONNECTED[0:35]),
        .Dbg_TrData_8(NLW_U0_Dbg_TrData_8_UNCONNECTED[0:35]),
        .Dbg_TrData_9(NLW_U0_Dbg_TrData_9_UNCONNECTED[0:35]),
        .Dbg_TrReady_0(NLW_U0_Dbg_TrReady_0_UNCONNECTED),
        .Dbg_TrReady_1(NLW_U0_Dbg_TrReady_1_UNCONNECTED),
        .Dbg_TrReady_10(NLW_U0_Dbg_TrReady_10_UNCONNECTED),
        .Dbg_TrReady_11(NLW_U0_Dbg_TrReady_11_UNCONNECTED),
        .Dbg_TrReady_12(NLW_U0_Dbg_TrReady_12_UNCONNECTED),
        .Dbg_TrReady_13(NLW_U0_Dbg_TrReady_13_UNCONNECTED),
        .Dbg_TrReady_14(NLW_U0_Dbg_TrReady_14_UNCONNECTED),
        .Dbg_TrReady_15(NLW_U0_Dbg_TrReady_15_UNCONNECTED),
        .Dbg_TrReady_16(NLW_U0_Dbg_TrReady_16_UNCONNECTED),
        .Dbg_TrReady_17(NLW_U0_Dbg_TrReady_17_UNCONNECTED),
        .Dbg_TrReady_18(NLW_U0_Dbg_TrReady_18_UNCONNECTED),
        .Dbg_TrReady_19(NLW_U0_Dbg_TrReady_19_UNCONNECTED),
        .Dbg_TrReady_2(NLW_U0_Dbg_TrReady_2_UNCONNECTED),
        .Dbg_TrReady_20(NLW_U0_Dbg_TrReady_20_UNCONNECTED),
        .Dbg_TrReady_21(NLW_U0_Dbg_TrReady_21_UNCONNECTED),
        .Dbg_TrReady_22(NLW_U0_Dbg_TrReady_22_UNCONNECTED),
        .Dbg_TrReady_23(NLW_U0_Dbg_TrReady_23_UNCONNECTED),
        .Dbg_TrReady_24(NLW_U0_Dbg_TrReady_24_UNCONNECTED),
        .Dbg_TrReady_25(NLW_U0_Dbg_TrReady_25_UNCONNECTED),
        .Dbg_TrReady_26(NLW_U0_Dbg_TrReady_26_UNCONNECTED),
        .Dbg_TrReady_27(NLW_U0_Dbg_TrReady_27_UNCONNECTED),
        .Dbg_TrReady_28(NLW_U0_Dbg_TrReady_28_UNCONNECTED),
        .Dbg_TrReady_29(NLW_U0_Dbg_TrReady_29_UNCONNECTED),
        .Dbg_TrReady_3(NLW_U0_Dbg_TrReady_3_UNCONNECTED),
        .Dbg_TrReady_30(NLW_U0_Dbg_TrReady_30_UNCONNECTED),
        .Dbg_TrReady_31(NLW_U0_Dbg_TrReady_31_UNCONNECTED),
        .Dbg_TrReady_4(NLW_U0_Dbg_TrReady_4_UNCONNECTED),
        .Dbg_TrReady_5(NLW_U0_Dbg_TrReady_5_UNCONNECTED),
        .Dbg_TrReady_6(NLW_U0_Dbg_TrReady_6_UNCONNECTED),
        .Dbg_TrReady_7(NLW_U0_Dbg_TrReady_7_UNCONNECTED),
        .Dbg_TrReady_8(NLW_U0_Dbg_TrReady_8_UNCONNECTED),
        .Dbg_TrReady_9(NLW_U0_Dbg_TrReady_9_UNCONNECTED),
        .Dbg_TrValid_0(NLW_U0_Dbg_TrValid_0_UNCONNECTED),
        .Dbg_TrValid_1(NLW_U0_Dbg_TrValid_1_UNCONNECTED),
        .Dbg_TrValid_10(NLW_U0_Dbg_TrValid_10_UNCONNECTED),
        .Dbg_TrValid_11(NLW_U0_Dbg_TrValid_11_UNCONNECTED),
        .Dbg_TrValid_12(NLW_U0_Dbg_TrValid_12_UNCONNECTED),
        .Dbg_TrValid_13(NLW_U0_Dbg_TrValid_13_UNCONNECTED),
        .Dbg_TrValid_14(NLW_U0_Dbg_TrValid_14_UNCONNECTED),
        .Dbg_TrValid_15(NLW_U0_Dbg_TrValid_15_UNCONNECTED),
        .Dbg_TrValid_16(NLW_U0_Dbg_TrValid_16_UNCONNECTED),
        .Dbg_TrValid_17(NLW_U0_Dbg_TrValid_17_UNCONNECTED),
        .Dbg_TrValid_18(NLW_U0_Dbg_TrValid_18_UNCONNECTED),
        .Dbg_TrValid_19(NLW_U0_Dbg_TrValid_19_UNCONNECTED),
        .Dbg_TrValid_2(NLW_U0_Dbg_TrValid_2_UNCONNECTED),
        .Dbg_TrValid_20(NLW_U0_Dbg_TrValid_20_UNCONNECTED),
        .Dbg_TrValid_21(NLW_U0_Dbg_TrValid_21_UNCONNECTED),
        .Dbg_TrValid_22(NLW_U0_Dbg_TrValid_22_UNCONNECTED),
        .Dbg_TrValid_23(NLW_U0_Dbg_TrValid_23_UNCONNECTED),
        .Dbg_TrValid_24(NLW_U0_Dbg_TrValid_24_UNCONNECTED),
        .Dbg_TrValid_25(NLW_U0_Dbg_TrValid_25_UNCONNECTED),
        .Dbg_TrValid_26(NLW_U0_Dbg_TrValid_26_UNCONNECTED),
        .Dbg_TrValid_27(NLW_U0_Dbg_TrValid_27_UNCONNECTED),
        .Dbg_TrValid_28(NLW_U0_Dbg_TrValid_28_UNCONNECTED),
        .Dbg_TrValid_29(NLW_U0_Dbg_TrValid_29_UNCONNECTED),
        .Dbg_TrValid_3(NLW_U0_Dbg_TrValid_3_UNCONNECTED),
        .Dbg_TrValid_30(NLW_U0_Dbg_TrValid_30_UNCONNECTED),
        .Dbg_TrValid_31(NLW_U0_Dbg_TrValid_31_UNCONNECTED),
        .Dbg_TrValid_4(NLW_U0_Dbg_TrValid_4_UNCONNECTED),
        .Dbg_TrValid_5(NLW_U0_Dbg_TrValid_5_UNCONNECTED),
        .Dbg_TrValid_6(NLW_U0_Dbg_TrValid_6_UNCONNECTED),
        .Dbg_TrValid_7(NLW_U0_Dbg_TrValid_7_UNCONNECTED),
        .Dbg_TrValid_8(NLW_U0_Dbg_TrValid_8_UNCONNECTED),
        .Dbg_TrValid_9(NLW_U0_Dbg_TrValid_9_UNCONNECTED),
        .Dbg_Trig_Ack_In_0(NLW_U0_Dbg_Trig_Ack_In_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_1(NLW_U0_Dbg_Trig_Ack_In_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_10(NLW_U0_Dbg_Trig_Ack_In_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_11(NLW_U0_Dbg_Trig_Ack_In_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_12(NLW_U0_Dbg_Trig_Ack_In_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_13(NLW_U0_Dbg_Trig_Ack_In_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_14(NLW_U0_Dbg_Trig_Ack_In_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_15(NLW_U0_Dbg_Trig_Ack_In_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_16(NLW_U0_Dbg_Trig_Ack_In_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_17(NLW_U0_Dbg_Trig_Ack_In_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_18(NLW_U0_Dbg_Trig_Ack_In_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_19(NLW_U0_Dbg_Trig_Ack_In_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_2(NLW_U0_Dbg_Trig_Ack_In_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_20(NLW_U0_Dbg_Trig_Ack_In_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_21(NLW_U0_Dbg_Trig_Ack_In_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_22(NLW_U0_Dbg_Trig_Ack_In_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_23(NLW_U0_Dbg_Trig_Ack_In_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_24(NLW_U0_Dbg_Trig_Ack_In_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_25(NLW_U0_Dbg_Trig_Ack_In_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_26(NLW_U0_Dbg_Trig_Ack_In_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_27(NLW_U0_Dbg_Trig_Ack_In_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_28(NLW_U0_Dbg_Trig_Ack_In_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_29(NLW_U0_Dbg_Trig_Ack_In_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_3(NLW_U0_Dbg_Trig_Ack_In_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_30(NLW_U0_Dbg_Trig_Ack_In_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_31(NLW_U0_Dbg_Trig_Ack_In_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_4(NLW_U0_Dbg_Trig_Ack_In_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_5(NLW_U0_Dbg_Trig_Ack_In_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_6(NLW_U0_Dbg_Trig_Ack_In_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_7(NLW_U0_Dbg_Trig_Ack_In_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_8(NLW_U0_Dbg_Trig_Ack_In_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_9(NLW_U0_Dbg_Trig_Ack_In_9_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_0(NLW_U0_Dbg_Trig_Ack_Out_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_1(NLW_U0_Dbg_Trig_Ack_Out_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_10(NLW_U0_Dbg_Trig_Ack_Out_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_11(NLW_U0_Dbg_Trig_Ack_Out_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_12(NLW_U0_Dbg_Trig_Ack_Out_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_13(NLW_U0_Dbg_Trig_Ack_Out_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_14(NLW_U0_Dbg_Trig_Ack_Out_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_15(NLW_U0_Dbg_Trig_Ack_Out_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_16(NLW_U0_Dbg_Trig_Ack_Out_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_17(NLW_U0_Dbg_Trig_Ack_Out_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_18(NLW_U0_Dbg_Trig_Ack_Out_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_19(NLW_U0_Dbg_Trig_Ack_Out_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_2(NLW_U0_Dbg_Trig_Ack_Out_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_20(NLW_U0_Dbg_Trig_Ack_Out_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_21(NLW_U0_Dbg_Trig_Ack_Out_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_22(NLW_U0_Dbg_Trig_Ack_Out_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_23(NLW_U0_Dbg_Trig_Ack_Out_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_24(NLW_U0_Dbg_Trig_Ack_Out_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_25(NLW_U0_Dbg_Trig_Ack_Out_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_26(NLW_U0_Dbg_Trig_Ack_Out_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_27(NLW_U0_Dbg_Trig_Ack_Out_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_28(NLW_U0_Dbg_Trig_Ack_Out_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_29(NLW_U0_Dbg_Trig_Ack_Out_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_3(NLW_U0_Dbg_Trig_Ack_Out_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_30(NLW_U0_Dbg_Trig_Ack_Out_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_31(NLW_U0_Dbg_Trig_Ack_Out_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_4(NLW_U0_Dbg_Trig_Ack_Out_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_5(NLW_U0_Dbg_Trig_Ack_Out_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_6(NLW_U0_Dbg_Trig_Ack_Out_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_7(NLW_U0_Dbg_Trig_Ack_Out_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_8(NLW_U0_Dbg_Trig_Ack_Out_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_9(NLW_U0_Dbg_Trig_Ack_Out_9_UNCONNECTED[0:7]),
        .Dbg_Trig_In_0(NLW_U0_Dbg_Trig_In_0_UNCONNECTED[0:7]),
        .Dbg_Trig_In_1(NLW_U0_Dbg_Trig_In_1_UNCONNECTED[0:7]),
        .Dbg_Trig_In_10(NLW_U0_Dbg_Trig_In_10_UNCONNECTED[0:7]),
        .Dbg_Trig_In_11(NLW_U0_Dbg_Trig_In_11_UNCONNECTED[0:7]),
        .Dbg_Trig_In_12(NLW_U0_Dbg_Trig_In_12_UNCONNECTED[0:7]),
        .Dbg_Trig_In_13(NLW_U0_Dbg_Trig_In_13_UNCONNECTED[0:7]),
        .Dbg_Trig_In_14(NLW_U0_Dbg_Trig_In_14_UNCONNECTED[0:7]),
        .Dbg_Trig_In_15(NLW_U0_Dbg_Trig_In_15_UNCONNECTED[0:7]),
        .Dbg_Trig_In_16(NLW_U0_Dbg_Trig_In_16_UNCONNECTED[0:7]),
        .Dbg_Trig_In_17(NLW_U0_Dbg_Trig_In_17_UNCONNECTED[0:7]),
        .Dbg_Trig_In_18(NLW_U0_Dbg_Trig_In_18_UNCONNECTED[0:7]),
        .Dbg_Trig_In_19(NLW_U0_Dbg_Trig_In_19_UNCONNECTED[0:7]),
        .Dbg_Trig_In_2(NLW_U0_Dbg_Trig_In_2_UNCONNECTED[0:7]),
        .Dbg_Trig_In_20(NLW_U0_Dbg_Trig_In_20_UNCONNECTED[0:7]),
        .Dbg_Trig_In_21(NLW_U0_Dbg_Trig_In_21_UNCONNECTED[0:7]),
        .Dbg_Trig_In_22(NLW_U0_Dbg_Trig_In_22_UNCONNECTED[0:7]),
        .Dbg_Trig_In_23(NLW_U0_Dbg_Trig_In_23_UNCONNECTED[0:7]),
        .Dbg_Trig_In_24(NLW_U0_Dbg_Trig_In_24_UNCONNECTED[0:7]),
        .Dbg_Trig_In_25(NLW_U0_Dbg_Trig_In_25_UNCONNECTED[0:7]),
        .Dbg_Trig_In_26(NLW_U0_Dbg_Trig_In_26_UNCONNECTED[0:7]),
        .Dbg_Trig_In_27(NLW_U0_Dbg_Trig_In_27_UNCONNECTED[0:7]),
        .Dbg_Trig_In_28(NLW_U0_Dbg_Trig_In_28_UNCONNECTED[0:7]),
        .Dbg_Trig_In_29(NLW_U0_Dbg_Trig_In_29_UNCONNECTED[0:7]),
        .Dbg_Trig_In_3(NLW_U0_Dbg_Trig_In_3_UNCONNECTED[0:7]),
        .Dbg_Trig_In_30(NLW_U0_Dbg_Trig_In_30_UNCONNECTED[0:7]),
        .Dbg_Trig_In_31(NLW_U0_Dbg_Trig_In_31_UNCONNECTED[0:7]),
        .Dbg_Trig_In_4(NLW_U0_Dbg_Trig_In_4_UNCONNECTED[0:7]),
        .Dbg_Trig_In_5(NLW_U0_Dbg_Trig_In_5_UNCONNECTED[0:7]),
        .Dbg_Trig_In_6(NLW_U0_Dbg_Trig_In_6_UNCONNECTED[0:7]),
        .Dbg_Trig_In_7(NLW_U0_Dbg_Trig_In_7_UNCONNECTED[0:7]),
        .Dbg_Trig_In_8(NLW_U0_Dbg_Trig_In_8_UNCONNECTED[0:7]),
        .Dbg_Trig_In_9(NLW_U0_Dbg_Trig_In_9_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_0(NLW_U0_Dbg_Trig_Out_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_1(NLW_U0_Dbg_Trig_Out_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_10(NLW_U0_Dbg_Trig_Out_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_11(NLW_U0_Dbg_Trig_Out_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_12(NLW_U0_Dbg_Trig_Out_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_13(NLW_U0_Dbg_Trig_Out_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_14(NLW_U0_Dbg_Trig_Out_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_15(NLW_U0_Dbg_Trig_Out_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_16(NLW_U0_Dbg_Trig_Out_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_17(NLW_U0_Dbg_Trig_Out_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_18(NLW_U0_Dbg_Trig_Out_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_19(NLW_U0_Dbg_Trig_Out_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_2(NLW_U0_Dbg_Trig_Out_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_20(NLW_U0_Dbg_Trig_Out_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_21(NLW_U0_Dbg_Trig_Out_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_22(NLW_U0_Dbg_Trig_Out_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_23(NLW_U0_Dbg_Trig_Out_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_24(NLW_U0_Dbg_Trig_Out_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_25(NLW_U0_Dbg_Trig_Out_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_26(NLW_U0_Dbg_Trig_Out_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_27(NLW_U0_Dbg_Trig_Out_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_28(NLW_U0_Dbg_Trig_Out_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_29(NLW_U0_Dbg_Trig_Out_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_3(NLW_U0_Dbg_Trig_Out_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_30(NLW_U0_Dbg_Trig_Out_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_31(NLW_U0_Dbg_Trig_Out_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_4(NLW_U0_Dbg_Trig_Out_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_5(NLW_U0_Dbg_Trig_Out_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_6(NLW_U0_Dbg_Trig_Out_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_7(NLW_U0_Dbg_Trig_Out_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_8(NLW_U0_Dbg_Trig_Out_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_9(NLW_U0_Dbg_Trig_Out_9_UNCONNECTED[0:7]),
        .Dbg_Update_0(Dbg_Update_0),
        .Dbg_Update_1(NLW_U0_Dbg_Update_1_UNCONNECTED),
        .Dbg_Update_10(NLW_U0_Dbg_Update_10_UNCONNECTED),
        .Dbg_Update_11(NLW_U0_Dbg_Update_11_UNCONNECTED),
        .Dbg_Update_12(NLW_U0_Dbg_Update_12_UNCONNECTED),
        .Dbg_Update_13(NLW_U0_Dbg_Update_13_UNCONNECTED),
        .Dbg_Update_14(NLW_U0_Dbg_Update_14_UNCONNECTED),
        .Dbg_Update_15(NLW_U0_Dbg_Update_15_UNCONNECTED),
        .Dbg_Update_16(NLW_U0_Dbg_Update_16_UNCONNECTED),
        .Dbg_Update_17(NLW_U0_Dbg_Update_17_UNCONNECTED),
        .Dbg_Update_18(NLW_U0_Dbg_Update_18_UNCONNECTED),
        .Dbg_Update_19(NLW_U0_Dbg_Update_19_UNCONNECTED),
        .Dbg_Update_2(NLW_U0_Dbg_Update_2_UNCONNECTED),
        .Dbg_Update_20(NLW_U0_Dbg_Update_20_UNCONNECTED),
        .Dbg_Update_21(NLW_U0_Dbg_Update_21_UNCONNECTED),
        .Dbg_Update_22(NLW_U0_Dbg_Update_22_UNCONNECTED),
        .Dbg_Update_23(NLW_U0_Dbg_Update_23_UNCONNECTED),
        .Dbg_Update_24(NLW_U0_Dbg_Update_24_UNCONNECTED),
        .Dbg_Update_25(NLW_U0_Dbg_Update_25_UNCONNECTED),
        .Dbg_Update_26(NLW_U0_Dbg_Update_26_UNCONNECTED),
        .Dbg_Update_27(NLW_U0_Dbg_Update_27_UNCONNECTED),
        .Dbg_Update_28(NLW_U0_Dbg_Update_28_UNCONNECTED),
        .Dbg_Update_29(NLW_U0_Dbg_Update_29_UNCONNECTED),
        .Dbg_Update_3(NLW_U0_Dbg_Update_3_UNCONNECTED),
        .Dbg_Update_30(NLW_U0_Dbg_Update_30_UNCONNECTED),
        .Dbg_Update_31(NLW_U0_Dbg_Update_31_UNCONNECTED),
        .Dbg_Update_4(NLW_U0_Dbg_Update_4_UNCONNECTED),
        .Dbg_Update_5(NLW_U0_Dbg_Update_5_UNCONNECTED),
        .Dbg_Update_6(NLW_U0_Dbg_Update_6_UNCONNECTED),
        .Dbg_Update_7(NLW_U0_Dbg_Update_7_UNCONNECTED),
        .Dbg_Update_8(NLW_U0_Dbg_Update_8_UNCONNECTED),
        .Dbg_Update_9(NLW_U0_Dbg_Update_9_UNCONNECTED),
        .Dbg_WDATA_0(NLW_U0_Dbg_WDATA_0_UNCONNECTED[31:0]),
        .Dbg_WDATA_1(NLW_U0_Dbg_WDATA_1_UNCONNECTED[31:0]),
        .Dbg_WDATA_10(NLW_U0_Dbg_WDATA_10_UNCONNECTED[31:0]),
        .Dbg_WDATA_11(NLW_U0_Dbg_WDATA_11_UNCONNECTED[31:0]),
        .Dbg_WDATA_12(NLW_U0_Dbg_WDATA_12_UNCONNECTED[31:0]),
        .Dbg_WDATA_13(NLW_U0_Dbg_WDATA_13_UNCONNECTED[31:0]),
        .Dbg_WDATA_14(NLW_U0_Dbg_WDATA_14_UNCONNECTED[31:0]),
        .Dbg_WDATA_15(NLW_U0_Dbg_WDATA_15_UNCONNECTED[31:0]),
        .Dbg_WDATA_16(NLW_U0_Dbg_WDATA_16_UNCONNECTED[31:0]),
        .Dbg_WDATA_17(NLW_U0_Dbg_WDATA_17_UNCONNECTED[31:0]),
        .Dbg_WDATA_18(NLW_U0_Dbg_WDATA_18_UNCONNECTED[31:0]),
        .Dbg_WDATA_19(NLW_U0_Dbg_WDATA_19_UNCONNECTED[31:0]),
        .Dbg_WDATA_2(NLW_U0_Dbg_WDATA_2_UNCONNECTED[31:0]),
        .Dbg_WDATA_20(NLW_U0_Dbg_WDATA_20_UNCONNECTED[31:0]),
        .Dbg_WDATA_21(NLW_U0_Dbg_WDATA_21_UNCONNECTED[31:0]),
        .Dbg_WDATA_22(NLW_U0_Dbg_WDATA_22_UNCONNECTED[31:0]),
        .Dbg_WDATA_23(NLW_U0_Dbg_WDATA_23_UNCONNECTED[31:0]),
        .Dbg_WDATA_24(NLW_U0_Dbg_WDATA_24_UNCONNECTED[31:0]),
        .Dbg_WDATA_25(NLW_U0_Dbg_WDATA_25_UNCONNECTED[31:0]),
        .Dbg_WDATA_26(NLW_U0_Dbg_WDATA_26_UNCONNECTED[31:0]),
        .Dbg_WDATA_27(NLW_U0_Dbg_WDATA_27_UNCONNECTED[31:0]),
        .Dbg_WDATA_28(NLW_U0_Dbg_WDATA_28_UNCONNECTED[31:0]),
        .Dbg_WDATA_29(NLW_U0_Dbg_WDATA_29_UNCONNECTED[31:0]),
        .Dbg_WDATA_3(NLW_U0_Dbg_WDATA_3_UNCONNECTED[31:0]),
        .Dbg_WDATA_30(NLW_U0_Dbg_WDATA_30_UNCONNECTED[31:0]),
        .Dbg_WDATA_31(NLW_U0_Dbg_WDATA_31_UNCONNECTED[31:0]),
        .Dbg_WDATA_4(NLW_U0_Dbg_WDATA_4_UNCONNECTED[31:0]),
        .Dbg_WDATA_5(NLW_U0_Dbg_WDATA_5_UNCONNECTED[31:0]),
        .Dbg_WDATA_6(NLW_U0_Dbg_WDATA_6_UNCONNECTED[31:0]),
        .Dbg_WDATA_7(NLW_U0_Dbg_WDATA_7_UNCONNECTED[31:0]),
        .Dbg_WDATA_8(NLW_U0_Dbg_WDATA_8_UNCONNECTED[31:0]),
        .Dbg_WDATA_9(NLW_U0_Dbg_WDATA_9_UNCONNECTED[31:0]),
        .Dbg_WREADY_0(NLW_U0_Dbg_WREADY_0_UNCONNECTED),
        .Dbg_WREADY_1(NLW_U0_Dbg_WREADY_1_UNCONNECTED),
        .Dbg_WREADY_10(NLW_U0_Dbg_WREADY_10_UNCONNECTED),
        .Dbg_WREADY_11(NLW_U0_Dbg_WREADY_11_UNCONNECTED),
        .Dbg_WREADY_12(NLW_U0_Dbg_WREADY_12_UNCONNECTED),
        .Dbg_WREADY_13(NLW_U0_Dbg_WREADY_13_UNCONNECTED),
        .Dbg_WREADY_14(NLW_U0_Dbg_WREADY_14_UNCONNECTED),
        .Dbg_WREADY_15(NLW_U0_Dbg_WREADY_15_UNCONNECTED),
        .Dbg_WREADY_16(NLW_U0_Dbg_WREADY_16_UNCONNECTED),
        .Dbg_WREADY_17(NLW_U0_Dbg_WREADY_17_UNCONNECTED),
        .Dbg_WREADY_18(NLW_U0_Dbg_WREADY_18_UNCONNECTED),
        .Dbg_WREADY_19(NLW_U0_Dbg_WREADY_19_UNCONNECTED),
        .Dbg_WREADY_2(NLW_U0_Dbg_WREADY_2_UNCONNECTED),
        .Dbg_WREADY_20(NLW_U0_Dbg_WREADY_20_UNCONNECTED),
        .Dbg_WREADY_21(NLW_U0_Dbg_WREADY_21_UNCONNECTED),
        .Dbg_WREADY_22(NLW_U0_Dbg_WREADY_22_UNCONNECTED),
        .Dbg_WREADY_23(NLW_U0_Dbg_WREADY_23_UNCONNECTED),
        .Dbg_WREADY_24(NLW_U0_Dbg_WREADY_24_UNCONNECTED),
        .Dbg_WREADY_25(NLW_U0_Dbg_WREADY_25_UNCONNECTED),
        .Dbg_WREADY_26(NLW_U0_Dbg_WREADY_26_UNCONNECTED),
        .Dbg_WREADY_27(NLW_U0_Dbg_WREADY_27_UNCONNECTED),
        .Dbg_WREADY_28(NLW_U0_Dbg_WREADY_28_UNCONNECTED),
        .Dbg_WREADY_29(NLW_U0_Dbg_WREADY_29_UNCONNECTED),
        .Dbg_WREADY_3(NLW_U0_Dbg_WREADY_3_UNCONNECTED),
        .Dbg_WREADY_30(NLW_U0_Dbg_WREADY_30_UNCONNECTED),
        .Dbg_WREADY_31(NLW_U0_Dbg_WREADY_31_UNCONNECTED),
        .Dbg_WREADY_4(NLW_U0_Dbg_WREADY_4_UNCONNECTED),
        .Dbg_WREADY_5(NLW_U0_Dbg_WREADY_5_UNCONNECTED),
        .Dbg_WREADY_6(NLW_U0_Dbg_WREADY_6_UNCONNECTED),
        .Dbg_WREADY_7(NLW_U0_Dbg_WREADY_7_UNCONNECTED),
        .Dbg_WREADY_8(NLW_U0_Dbg_WREADY_8_UNCONNECTED),
        .Dbg_WREADY_9(NLW_U0_Dbg_WREADY_9_UNCONNECTED),
        .Dbg_WVALID_0(NLW_U0_Dbg_WVALID_0_UNCONNECTED),
        .Dbg_WVALID_1(NLW_U0_Dbg_WVALID_1_UNCONNECTED),
        .Dbg_WVALID_10(NLW_U0_Dbg_WVALID_10_UNCONNECTED),
        .Dbg_WVALID_11(NLW_U0_Dbg_WVALID_11_UNCONNECTED),
        .Dbg_WVALID_12(NLW_U0_Dbg_WVALID_12_UNCONNECTED),
        .Dbg_WVALID_13(NLW_U0_Dbg_WVALID_13_UNCONNECTED),
        .Dbg_WVALID_14(NLW_U0_Dbg_WVALID_14_UNCONNECTED),
        .Dbg_WVALID_15(NLW_U0_Dbg_WVALID_15_UNCONNECTED),
        .Dbg_WVALID_16(NLW_U0_Dbg_WVALID_16_UNCONNECTED),
        .Dbg_WVALID_17(NLW_U0_Dbg_WVALID_17_UNCONNECTED),
        .Dbg_WVALID_18(NLW_U0_Dbg_WVALID_18_UNCONNECTED),
        .Dbg_WVALID_19(NLW_U0_Dbg_WVALID_19_UNCONNECTED),
        .Dbg_WVALID_2(NLW_U0_Dbg_WVALID_2_UNCONNECTED),
        .Dbg_WVALID_20(NLW_U0_Dbg_WVALID_20_UNCONNECTED),
        .Dbg_WVALID_21(NLW_U0_Dbg_WVALID_21_UNCONNECTED),
        .Dbg_WVALID_22(NLW_U0_Dbg_WVALID_22_UNCONNECTED),
        .Dbg_WVALID_23(NLW_U0_Dbg_WVALID_23_UNCONNECTED),
        .Dbg_WVALID_24(NLW_U0_Dbg_WVALID_24_UNCONNECTED),
        .Dbg_WVALID_25(NLW_U0_Dbg_WVALID_25_UNCONNECTED),
        .Dbg_WVALID_26(NLW_U0_Dbg_WVALID_26_UNCONNECTED),
        .Dbg_WVALID_27(NLW_U0_Dbg_WVALID_27_UNCONNECTED),
        .Dbg_WVALID_28(NLW_U0_Dbg_WVALID_28_UNCONNECTED),
        .Dbg_WVALID_29(NLW_U0_Dbg_WVALID_29_UNCONNECTED),
        .Dbg_WVALID_3(NLW_U0_Dbg_WVALID_3_UNCONNECTED),
        .Dbg_WVALID_30(NLW_U0_Dbg_WVALID_30_UNCONNECTED),
        .Dbg_WVALID_31(NLW_U0_Dbg_WVALID_31_UNCONNECTED),
        .Dbg_WVALID_4(NLW_U0_Dbg_WVALID_4_UNCONNECTED),
        .Dbg_WVALID_5(NLW_U0_Dbg_WVALID_5_UNCONNECTED),
        .Dbg_WVALID_6(NLW_U0_Dbg_WVALID_6_UNCONNECTED),
        .Dbg_WVALID_7(NLW_U0_Dbg_WVALID_7_UNCONNECTED),
        .Dbg_WVALID_8(NLW_U0_Dbg_WVALID_8_UNCONNECTED),
        .Dbg_WVALID_9(NLW_U0_Dbg_WVALID_9_UNCONNECTED),
        .Debug_SYS_Rst(NLW_U0_Debug_SYS_Rst_UNCONNECTED),
        .Ext_BRK(NLW_U0_Ext_BRK_UNCONNECTED),
        .Ext_JTAG_CAPTURE(NLW_U0_Ext_JTAG_CAPTURE_UNCONNECTED),
        .Ext_JTAG_DRCK(NLW_U0_Ext_JTAG_DRCK_UNCONNECTED),
        .Ext_JTAG_RESET(NLW_U0_Ext_JTAG_RESET_UNCONNECTED),
        .Ext_JTAG_SEL(NLW_U0_Ext_JTAG_SEL_UNCONNECTED),
        .Ext_JTAG_SHIFT(NLW_U0_Ext_JTAG_SHIFT_UNCONNECTED),
        .Ext_JTAG_TDI(NLW_U0_Ext_JTAG_TDI_UNCONNECTED),
        .Ext_JTAG_TDO(NLW_U0_Ext_JTAG_TDO_UNCONNECTED),
        .Ext_JTAG_UPDATE(NLW_U0_Ext_JTAG_UPDATE_UNCONNECTED),
        .Ext_NM_BRK(NLW_U0_Ext_NM_BRK_UNCONNECTED),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .LMB_Addr_Strobe_0(NLW_U0_LMB_Addr_Strobe_0_UNCONNECTED),
        .LMB_Addr_Strobe_1(NLW_U0_LMB_Addr_Strobe_1_UNCONNECTED),
        .LMB_Addr_Strobe_10(NLW_U0_LMB_Addr_Strobe_10_UNCONNECTED),
        .LMB_Addr_Strobe_11(NLW_U0_LMB_Addr_Strobe_11_UNCONNECTED),
        .LMB_Addr_Strobe_12(NLW_U0_LMB_Addr_Strobe_12_UNCONNECTED),
        .LMB_Addr_Strobe_13(NLW_U0_LMB_Addr_Strobe_13_UNCONNECTED),
        .LMB_Addr_Strobe_14(NLW_U0_LMB_Addr_Strobe_14_UNCONNECTED),
        .LMB_Addr_Strobe_15(NLW_U0_LMB_Addr_Strobe_15_UNCONNECTED),
        .LMB_Addr_Strobe_16(NLW_U0_LMB_Addr_Strobe_16_UNCONNECTED),
        .LMB_Addr_Strobe_17(NLW_U0_LMB_Addr_Strobe_17_UNCONNECTED),
        .LMB_Addr_Strobe_18(NLW_U0_LMB_Addr_Strobe_18_UNCONNECTED),
        .LMB_Addr_Strobe_19(NLW_U0_LMB_Addr_Strobe_19_UNCONNECTED),
        .LMB_Addr_Strobe_2(NLW_U0_LMB_Addr_Strobe_2_UNCONNECTED),
        .LMB_Addr_Strobe_20(NLW_U0_LMB_Addr_Strobe_20_UNCONNECTED),
        .LMB_Addr_Strobe_21(NLW_U0_LMB_Addr_Strobe_21_UNCONNECTED),
        .LMB_Addr_Strobe_22(NLW_U0_LMB_Addr_Strobe_22_UNCONNECTED),
        .LMB_Addr_Strobe_23(NLW_U0_LMB_Addr_Strobe_23_UNCONNECTED),
        .LMB_Addr_Strobe_24(NLW_U0_LMB_Addr_Strobe_24_UNCONNECTED),
        .LMB_Addr_Strobe_25(NLW_U0_LMB_Addr_Strobe_25_UNCONNECTED),
        .LMB_Addr_Strobe_26(NLW_U0_LMB_Addr_Strobe_26_UNCONNECTED),
        .LMB_Addr_Strobe_27(NLW_U0_LMB_Addr_Strobe_27_UNCONNECTED),
        .LMB_Addr_Strobe_28(NLW_U0_LMB_Addr_Strobe_28_UNCONNECTED),
        .LMB_Addr_Strobe_29(NLW_U0_LMB_Addr_Strobe_29_UNCONNECTED),
        .LMB_Addr_Strobe_3(NLW_U0_LMB_Addr_Strobe_3_UNCONNECTED),
        .LMB_Addr_Strobe_30(NLW_U0_LMB_Addr_Strobe_30_UNCONNECTED),
        .LMB_Addr_Strobe_31(NLW_U0_LMB_Addr_Strobe_31_UNCONNECTED),
        .LMB_Addr_Strobe_4(NLW_U0_LMB_Addr_Strobe_4_UNCONNECTED),
        .LMB_Addr_Strobe_5(NLW_U0_LMB_Addr_Strobe_5_UNCONNECTED),
        .LMB_Addr_Strobe_6(NLW_U0_LMB_Addr_Strobe_6_UNCONNECTED),
        .LMB_Addr_Strobe_7(NLW_U0_LMB_Addr_Strobe_7_UNCONNECTED),
        .LMB_Addr_Strobe_8(NLW_U0_LMB_Addr_Strobe_8_UNCONNECTED),
        .LMB_Addr_Strobe_9(NLW_U0_LMB_Addr_Strobe_9_UNCONNECTED),
        .LMB_Byte_Enable_0(NLW_U0_LMB_Byte_Enable_0_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_1(NLW_U0_LMB_Byte_Enable_1_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_10(NLW_U0_LMB_Byte_Enable_10_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_11(NLW_U0_LMB_Byte_Enable_11_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_12(NLW_U0_LMB_Byte_Enable_12_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_13(NLW_U0_LMB_Byte_Enable_13_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_14(NLW_U0_LMB_Byte_Enable_14_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_15(NLW_U0_LMB_Byte_Enable_15_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_16(NLW_U0_LMB_Byte_Enable_16_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_17(NLW_U0_LMB_Byte_Enable_17_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_18(NLW_U0_LMB_Byte_Enable_18_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_19(NLW_U0_LMB_Byte_Enable_19_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_2(NLW_U0_LMB_Byte_Enable_2_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_20(NLW_U0_LMB_Byte_Enable_20_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_21(NLW_U0_LMB_Byte_Enable_21_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_22(NLW_U0_LMB_Byte_Enable_22_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_23(NLW_U0_LMB_Byte_Enable_23_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_24(NLW_U0_LMB_Byte_Enable_24_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_25(NLW_U0_LMB_Byte_Enable_25_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_26(NLW_U0_LMB_Byte_Enable_26_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_27(NLW_U0_LMB_Byte_Enable_27_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_28(NLW_U0_LMB_Byte_Enable_28_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_29(NLW_U0_LMB_Byte_Enable_29_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_3(NLW_U0_LMB_Byte_Enable_3_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_30(NLW_U0_LMB_Byte_Enable_30_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_31(NLW_U0_LMB_Byte_Enable_31_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_4(NLW_U0_LMB_Byte_Enable_4_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_5(NLW_U0_LMB_Byte_Enable_5_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_6(NLW_U0_LMB_Byte_Enable_6_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_7(NLW_U0_LMB_Byte_Enable_7_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_8(NLW_U0_LMB_Byte_Enable_8_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_9(NLW_U0_LMB_Byte_Enable_9_UNCONNECTED[0:3]),
        .LMB_CE_0(NLW_U0_LMB_CE_0_UNCONNECTED),
        .LMB_CE_1(NLW_U0_LMB_CE_1_UNCONNECTED),
        .LMB_CE_10(NLW_U0_LMB_CE_10_UNCONNECTED),
        .LMB_CE_11(NLW_U0_LMB_CE_11_UNCONNECTED),
        .LMB_CE_12(NLW_U0_LMB_CE_12_UNCONNECTED),
        .LMB_CE_13(NLW_U0_LMB_CE_13_UNCONNECTED),
        .LMB_CE_14(NLW_U0_LMB_CE_14_UNCONNECTED),
        .LMB_CE_15(NLW_U0_LMB_CE_15_UNCONNECTED),
        .LMB_CE_16(NLW_U0_LMB_CE_16_UNCONNECTED),
        .LMB_CE_17(NLW_U0_LMB_CE_17_UNCONNECTED),
        .LMB_CE_18(NLW_U0_LMB_CE_18_UNCONNECTED),
        .LMB_CE_19(NLW_U0_LMB_CE_19_UNCONNECTED),
        .LMB_CE_2(NLW_U0_LMB_CE_2_UNCONNECTED),
        .LMB_CE_20(NLW_U0_LMB_CE_20_UNCONNECTED),
        .LMB_CE_21(NLW_U0_LMB_CE_21_UNCONNECTED),
        .LMB_CE_22(NLW_U0_LMB_CE_22_UNCONNECTED),
        .LMB_CE_23(NLW_U0_LMB_CE_23_UNCONNECTED),
        .LMB_CE_24(NLW_U0_LMB_CE_24_UNCONNECTED),
        .LMB_CE_25(NLW_U0_LMB_CE_25_UNCONNECTED),
        .LMB_CE_26(NLW_U0_LMB_CE_26_UNCONNECTED),
        .LMB_CE_27(NLW_U0_LMB_CE_27_UNCONNECTED),
        .LMB_CE_28(NLW_U0_LMB_CE_28_UNCONNECTED),
        .LMB_CE_29(NLW_U0_LMB_CE_29_UNCONNECTED),
        .LMB_CE_3(NLW_U0_LMB_CE_3_UNCONNECTED),
        .LMB_CE_30(NLW_U0_LMB_CE_30_UNCONNECTED),
        .LMB_CE_31(NLW_U0_LMB_CE_31_UNCONNECTED),
        .LMB_CE_4(NLW_U0_LMB_CE_4_UNCONNECTED),
        .LMB_CE_5(NLW_U0_LMB_CE_5_UNCONNECTED),
        .LMB_CE_6(NLW_U0_LMB_CE_6_UNCONNECTED),
        .LMB_CE_7(NLW_U0_LMB_CE_7_UNCONNECTED),
        .LMB_CE_8(NLW_U0_LMB_CE_8_UNCONNECTED),
        .LMB_CE_9(NLW_U0_LMB_CE_9_UNCONNECTED),
        .LMB_Data_Addr_0(NLW_U0_LMB_Data_Addr_0_UNCONNECTED[0:31]),
        .LMB_Data_Addr_1(NLW_U0_LMB_Data_Addr_1_UNCONNECTED[0:31]),
        .LMB_Data_Addr_10(NLW_U0_LMB_Data_Addr_10_UNCONNECTED[0:31]),
        .LMB_Data_Addr_11(NLW_U0_LMB_Data_Addr_11_UNCONNECTED[0:31]),
        .LMB_Data_Addr_12(NLW_U0_LMB_Data_Addr_12_UNCONNECTED[0:31]),
        .LMB_Data_Addr_13(NLW_U0_LMB_Data_Addr_13_UNCONNECTED[0:31]),
        .LMB_Data_Addr_14(NLW_U0_LMB_Data_Addr_14_UNCONNECTED[0:31]),
        .LMB_Data_Addr_15(NLW_U0_LMB_Data_Addr_15_UNCONNECTED[0:31]),
        .LMB_Data_Addr_16(NLW_U0_LMB_Data_Addr_16_UNCONNECTED[0:31]),
        .LMB_Data_Addr_17(NLW_U0_LMB_Data_Addr_17_UNCONNECTED[0:31]),
        .LMB_Data_Addr_18(NLW_U0_LMB_Data_Addr_18_UNCONNECTED[0:31]),
        .LMB_Data_Addr_19(NLW_U0_LMB_Data_Addr_19_UNCONNECTED[0:31]),
        .LMB_Data_Addr_2(NLW_U0_LMB_Data_Addr_2_UNCONNECTED[0:31]),
        .LMB_Data_Addr_20(NLW_U0_LMB_Data_Addr_20_UNCONNECTED[0:31]),
        .LMB_Data_Addr_21(NLW_U0_LMB_Data_Addr_21_UNCONNECTED[0:31]),
        .LMB_Data_Addr_22(NLW_U0_LMB_Data_Addr_22_UNCONNECTED[0:31]),
        .LMB_Data_Addr_23(NLW_U0_LMB_Data_Addr_23_UNCONNECTED[0:31]),
        .LMB_Data_Addr_24(NLW_U0_LMB_Data_Addr_24_UNCONNECTED[0:31]),
        .LMB_Data_Addr_25(NLW_U0_LMB_Data_Addr_25_UNCONNECTED[0:31]),
        .LMB_Data_Addr_26(NLW_U0_LMB_Data_Addr_26_UNCONNECTED[0:31]),
        .LMB_Data_Addr_27(NLW_U0_LMB_Data_Addr_27_UNCONNECTED[0:31]),
        .LMB_Data_Addr_28(NLW_U0_LMB_Data_Addr_28_UNCONNECTED[0:31]),
        .LMB_Data_Addr_29(NLW_U0_LMB_Data_Addr_29_UNCONNECTED[0:31]),
        .LMB_Data_Addr_3(NLW_U0_LMB_Data_Addr_3_UNCONNECTED[0:31]),
        .LMB_Data_Addr_30(NLW_U0_LMB_Data_Addr_30_UNCONNECTED[0:31]),
        .LMB_Data_Addr_31(NLW_U0_LMB_Data_Addr_31_UNCONNECTED[0:31]),
        .LMB_Data_Addr_4(NLW_U0_LMB_Data_Addr_4_UNCONNECTED[0:31]),
        .LMB_Data_Addr_5(NLW_U0_LMB_Data_Addr_5_UNCONNECTED[0:31]),
        .LMB_Data_Addr_6(NLW_U0_LMB_Data_Addr_6_UNCONNECTED[0:31]),
        .LMB_Data_Addr_7(NLW_U0_LMB_Data_Addr_7_UNCONNECTED[0:31]),
        .LMB_Data_Addr_8(NLW_U0_LMB_Data_Addr_8_UNCONNECTED[0:31]),
        .LMB_Data_Addr_9(NLW_U0_LMB_Data_Addr_9_UNCONNECTED[0:31]),
        .LMB_Data_Read_0(NLW_U0_LMB_Data_Read_0_UNCONNECTED[0:31]),
        .LMB_Data_Read_1(NLW_U0_LMB_Data_Read_1_UNCONNECTED[0:31]),
        .LMB_Data_Read_10(NLW_U0_LMB_Data_Read_10_UNCONNECTED[0:31]),
        .LMB_Data_Read_11(NLW_U0_LMB_Data_Read_11_UNCONNECTED[0:31]),
        .LMB_Data_Read_12(NLW_U0_LMB_Data_Read_12_UNCONNECTED[0:31]),
        .LMB_Data_Read_13(NLW_U0_LMB_Data_Read_13_UNCONNECTED[0:31]),
        .LMB_Data_Read_14(NLW_U0_LMB_Data_Read_14_UNCONNECTED[0:31]),
        .LMB_Data_Read_15(NLW_U0_LMB_Data_Read_15_UNCONNECTED[0:31]),
        .LMB_Data_Read_16(NLW_U0_LMB_Data_Read_16_UNCONNECTED[0:31]),
        .LMB_Data_Read_17(NLW_U0_LMB_Data_Read_17_UNCONNECTED[0:31]),
        .LMB_Data_Read_18(NLW_U0_LMB_Data_Read_18_UNCONNECTED[0:31]),
        .LMB_Data_Read_19(NLW_U0_LMB_Data_Read_19_UNCONNECTED[0:31]),
        .LMB_Data_Read_2(NLW_U0_LMB_Data_Read_2_UNCONNECTED[0:31]),
        .LMB_Data_Read_20(NLW_U0_LMB_Data_Read_20_UNCONNECTED[0:31]),
        .LMB_Data_Read_21(NLW_U0_LMB_Data_Read_21_UNCONNECTED[0:31]),
        .LMB_Data_Read_22(NLW_U0_LMB_Data_Read_22_UNCONNECTED[0:31]),
        .LMB_Data_Read_23(NLW_U0_LMB_Data_Read_23_UNCONNECTED[0:31]),
        .LMB_Data_Read_24(NLW_U0_LMB_Data_Read_24_UNCONNECTED[0:31]),
        .LMB_Data_Read_25(NLW_U0_LMB_Data_Read_25_UNCONNECTED[0:31]),
        .LMB_Data_Read_26(NLW_U0_LMB_Data_Read_26_UNCONNECTED[0:31]),
        .LMB_Data_Read_27(NLW_U0_LMB_Data_Read_27_UNCONNECTED[0:31]),
        .LMB_Data_Read_28(NLW_U0_LMB_Data_Read_28_UNCONNECTED[0:31]),
        .LMB_Data_Read_29(NLW_U0_LMB_Data_Read_29_UNCONNECTED[0:31]),
        .LMB_Data_Read_3(NLW_U0_LMB_Data_Read_3_UNCONNECTED[0:31]),
        .LMB_Data_Read_30(NLW_U0_LMB_Data_Read_30_UNCONNECTED[0:31]),
        .LMB_Data_Read_31(NLW_U0_LMB_Data_Read_31_UNCONNECTED[0:31]),
        .LMB_Data_Read_4(NLW_U0_LMB_Data_Read_4_UNCONNECTED[0:31]),
        .LMB_Data_Read_5(NLW_U0_LMB_Data_Read_5_UNCONNECTED[0:31]),
        .LMB_Data_Read_6(NLW_U0_LMB_Data_Read_6_UNCONNECTED[0:31]),
        .LMB_Data_Read_7(NLW_U0_LMB_Data_Read_7_UNCONNECTED[0:31]),
        .LMB_Data_Read_8(NLW_U0_LMB_Data_Read_8_UNCONNECTED[0:31]),
        .LMB_Data_Read_9(NLW_U0_LMB_Data_Read_9_UNCONNECTED[0:31]),
        .LMB_Data_Write_0(NLW_U0_LMB_Data_Write_0_UNCONNECTED[0:31]),
        .LMB_Data_Write_1(NLW_U0_LMB_Data_Write_1_UNCONNECTED[0:31]),
        .LMB_Data_Write_10(NLW_U0_LMB_Data_Write_10_UNCONNECTED[0:31]),
        .LMB_Data_Write_11(NLW_U0_LMB_Data_Write_11_UNCONNECTED[0:31]),
        .LMB_Data_Write_12(NLW_U0_LMB_Data_Write_12_UNCONNECTED[0:31]),
        .LMB_Data_Write_13(NLW_U0_LMB_Data_Write_13_UNCONNECTED[0:31]),
        .LMB_Data_Write_14(NLW_U0_LMB_Data_Write_14_UNCONNECTED[0:31]),
        .LMB_Data_Write_15(NLW_U0_LMB_Data_Write_15_UNCONNECTED[0:31]),
        .LMB_Data_Write_16(NLW_U0_LMB_Data_Write_16_UNCONNECTED[0:31]),
        .LMB_Data_Write_17(NLW_U0_LMB_Data_Write_17_UNCONNECTED[0:31]),
        .LMB_Data_Write_18(NLW_U0_LMB_Data_Write_18_UNCONNECTED[0:31]),
        .LMB_Data_Write_19(NLW_U0_LMB_Data_Write_19_UNCONNECTED[0:31]),
        .LMB_Data_Write_2(NLW_U0_LMB_Data_Write_2_UNCONNECTED[0:31]),
        .LMB_Data_Write_20(NLW_U0_LMB_Data_Write_20_UNCONNECTED[0:31]),
        .LMB_Data_Write_21(NLW_U0_LMB_Data_Write_21_UNCONNECTED[0:31]),
        .LMB_Data_Write_22(NLW_U0_LMB_Data_Write_22_UNCONNECTED[0:31]),
        .LMB_Data_Write_23(NLW_U0_LMB_Data_Write_23_UNCONNECTED[0:31]),
        .LMB_Data_Write_24(NLW_U0_LMB_Data_Write_24_UNCONNECTED[0:31]),
        .LMB_Data_Write_25(NLW_U0_LMB_Data_Write_25_UNCONNECTED[0:31]),
        .LMB_Data_Write_26(NLW_U0_LMB_Data_Write_26_UNCONNECTED[0:31]),
        .LMB_Data_Write_27(NLW_U0_LMB_Data_Write_27_UNCONNECTED[0:31]),
        .LMB_Data_Write_28(NLW_U0_LMB_Data_Write_28_UNCONNECTED[0:31]),
        .LMB_Data_Write_29(NLW_U0_LMB_Data_Write_29_UNCONNECTED[0:31]),
        .LMB_Data_Write_3(NLW_U0_LMB_Data_Write_3_UNCONNECTED[0:31]),
        .LMB_Data_Write_30(NLW_U0_LMB_Data_Write_30_UNCONNECTED[0:31]),
        .LMB_Data_Write_31(NLW_U0_LMB_Data_Write_31_UNCONNECTED[0:31]),
        .LMB_Data_Write_4(NLW_U0_LMB_Data_Write_4_UNCONNECTED[0:31]),
        .LMB_Data_Write_5(NLW_U0_LMB_Data_Write_5_UNCONNECTED[0:31]),
        .LMB_Data_Write_6(NLW_U0_LMB_Data_Write_6_UNCONNECTED[0:31]),
        .LMB_Data_Write_7(NLW_U0_LMB_Data_Write_7_UNCONNECTED[0:31]),
        .LMB_Data_Write_8(NLW_U0_LMB_Data_Write_8_UNCONNECTED[0:31]),
        .LMB_Data_Write_9(NLW_U0_LMB_Data_Write_9_UNCONNECTED[0:31]),
        .LMB_Read_Strobe_0(NLW_U0_LMB_Read_Strobe_0_UNCONNECTED),
        .LMB_Read_Strobe_1(NLW_U0_LMB_Read_Strobe_1_UNCONNECTED),
        .LMB_Read_Strobe_10(NLW_U0_LMB_Read_Strobe_10_UNCONNECTED),
        .LMB_Read_Strobe_11(NLW_U0_LMB_Read_Strobe_11_UNCONNECTED),
        .LMB_Read_Strobe_12(NLW_U0_LMB_Read_Strobe_12_UNCONNECTED),
        .LMB_Read_Strobe_13(NLW_U0_LMB_Read_Strobe_13_UNCONNECTED),
        .LMB_Read_Strobe_14(NLW_U0_LMB_Read_Strobe_14_UNCONNECTED),
        .LMB_Read_Strobe_15(NLW_U0_LMB_Read_Strobe_15_UNCONNECTED),
        .LMB_Read_Strobe_16(NLW_U0_LMB_Read_Strobe_16_UNCONNECTED),
        .LMB_Read_Strobe_17(NLW_U0_LMB_Read_Strobe_17_UNCONNECTED),
        .LMB_Read_Strobe_18(NLW_U0_LMB_Read_Strobe_18_UNCONNECTED),
        .LMB_Read_Strobe_19(NLW_U0_LMB_Read_Strobe_19_UNCONNECTED),
        .LMB_Read_Strobe_2(NLW_U0_LMB_Read_Strobe_2_UNCONNECTED),
        .LMB_Read_Strobe_20(NLW_U0_LMB_Read_Strobe_20_UNCONNECTED),
        .LMB_Read_Strobe_21(NLW_U0_LMB_Read_Strobe_21_UNCONNECTED),
        .LMB_Read_Strobe_22(NLW_U0_LMB_Read_Strobe_22_UNCONNECTED),
        .LMB_Read_Strobe_23(NLW_U0_LMB_Read_Strobe_23_UNCONNECTED),
        .LMB_Read_Strobe_24(NLW_U0_LMB_Read_Strobe_24_UNCONNECTED),
        .LMB_Read_Strobe_25(NLW_U0_LMB_Read_Strobe_25_UNCONNECTED),
        .LMB_Read_Strobe_26(NLW_U0_LMB_Read_Strobe_26_UNCONNECTED),
        .LMB_Read_Strobe_27(NLW_U0_LMB_Read_Strobe_27_UNCONNECTED),
        .LMB_Read_Strobe_28(NLW_U0_LMB_Read_Strobe_28_UNCONNECTED),
        .LMB_Read_Strobe_29(NLW_U0_LMB_Read_Strobe_29_UNCONNECTED),
        .LMB_Read_Strobe_3(NLW_U0_LMB_Read_Strobe_3_UNCONNECTED),
        .LMB_Read_Strobe_30(NLW_U0_LMB_Read_Strobe_30_UNCONNECTED),
        .LMB_Read_Strobe_31(NLW_U0_LMB_Read_Strobe_31_UNCONNECTED),
        .LMB_Read_Strobe_4(NLW_U0_LMB_Read_Strobe_4_UNCONNECTED),
        .LMB_Read_Strobe_5(NLW_U0_LMB_Read_Strobe_5_UNCONNECTED),
        .LMB_Read_Strobe_6(NLW_U0_LMB_Read_Strobe_6_UNCONNECTED),
        .LMB_Read_Strobe_7(NLW_U0_LMB_Read_Strobe_7_UNCONNECTED),
        .LMB_Read_Strobe_8(NLW_U0_LMB_Read_Strobe_8_UNCONNECTED),
        .LMB_Read_Strobe_9(NLW_U0_LMB_Read_Strobe_9_UNCONNECTED),
        .LMB_Ready_0(NLW_U0_LMB_Ready_0_UNCONNECTED),
        .LMB_Ready_1(NLW_U0_LMB_Ready_1_UNCONNECTED),
        .LMB_Ready_10(NLW_U0_LMB_Ready_10_UNCONNECTED),
        .LMB_Ready_11(NLW_U0_LMB_Ready_11_UNCONNECTED),
        .LMB_Ready_12(NLW_U0_LMB_Ready_12_UNCONNECTED),
        .LMB_Ready_13(NLW_U0_LMB_Ready_13_UNCONNECTED),
        .LMB_Ready_14(NLW_U0_LMB_Ready_14_UNCONNECTED),
        .LMB_Ready_15(NLW_U0_LMB_Ready_15_UNCONNECTED),
        .LMB_Ready_16(NLW_U0_LMB_Ready_16_UNCONNECTED),
        .LMB_Ready_17(NLW_U0_LMB_Ready_17_UNCONNECTED),
        .LMB_Ready_18(NLW_U0_LMB_Ready_18_UNCONNECTED),
        .LMB_Ready_19(NLW_U0_LMB_Ready_19_UNCONNECTED),
        .LMB_Ready_2(NLW_U0_LMB_Ready_2_UNCONNECTED),
        .LMB_Ready_20(NLW_U0_LMB_Ready_20_UNCONNECTED),
        .LMB_Ready_21(NLW_U0_LMB_Ready_21_UNCONNECTED),
        .LMB_Ready_22(NLW_U0_LMB_Ready_22_UNCONNECTED),
        .LMB_Ready_23(NLW_U0_LMB_Ready_23_UNCONNECTED),
        .LMB_Ready_24(NLW_U0_LMB_Ready_24_UNCONNECTED),
        .LMB_Ready_25(NLW_U0_LMB_Ready_25_UNCONNECTED),
        .LMB_Ready_26(NLW_U0_LMB_Ready_26_UNCONNECTED),
        .LMB_Ready_27(NLW_U0_LMB_Ready_27_UNCONNECTED),
        .LMB_Ready_28(NLW_U0_LMB_Ready_28_UNCONNECTED),
        .LMB_Ready_29(NLW_U0_LMB_Ready_29_UNCONNECTED),
        .LMB_Ready_3(NLW_U0_LMB_Ready_3_UNCONNECTED),
        .LMB_Ready_30(NLW_U0_LMB_Ready_30_UNCONNECTED),
        .LMB_Ready_31(NLW_U0_LMB_Ready_31_UNCONNECTED),
        .LMB_Ready_4(NLW_U0_LMB_Ready_4_UNCONNECTED),
        .LMB_Ready_5(NLW_U0_LMB_Ready_5_UNCONNECTED),
        .LMB_Ready_6(NLW_U0_LMB_Ready_6_UNCONNECTED),
        .LMB_Ready_7(NLW_U0_LMB_Ready_7_UNCONNECTED),
        .LMB_Ready_8(NLW_U0_LMB_Ready_8_UNCONNECTED),
        .LMB_Ready_9(NLW_U0_LMB_Ready_9_UNCONNECTED),
        .LMB_UE_0(NLW_U0_LMB_UE_0_UNCONNECTED),
        .LMB_UE_1(NLW_U0_LMB_UE_1_UNCONNECTED),
        .LMB_UE_10(NLW_U0_LMB_UE_10_UNCONNECTED),
        .LMB_UE_11(NLW_U0_LMB_UE_11_UNCONNECTED),
        .LMB_UE_12(NLW_U0_LMB_UE_12_UNCONNECTED),
        .LMB_UE_13(NLW_U0_LMB_UE_13_UNCONNECTED),
        .LMB_UE_14(NLW_U0_LMB_UE_14_UNCONNECTED),
        .LMB_UE_15(NLW_U0_LMB_UE_15_UNCONNECTED),
        .LMB_UE_16(NLW_U0_LMB_UE_16_UNCONNECTED),
        .LMB_UE_17(NLW_U0_LMB_UE_17_UNCONNECTED),
        .LMB_UE_18(NLW_U0_LMB_UE_18_UNCONNECTED),
        .LMB_UE_19(NLW_U0_LMB_UE_19_UNCONNECTED),
        .LMB_UE_2(NLW_U0_LMB_UE_2_UNCONNECTED),
        .LMB_UE_20(NLW_U0_LMB_UE_20_UNCONNECTED),
        .LMB_UE_21(NLW_U0_LMB_UE_21_UNCONNECTED),
        .LMB_UE_22(NLW_U0_LMB_UE_22_UNCONNECTED),
        .LMB_UE_23(NLW_U0_LMB_UE_23_UNCONNECTED),
        .LMB_UE_24(NLW_U0_LMB_UE_24_UNCONNECTED),
        .LMB_UE_25(NLW_U0_LMB_UE_25_UNCONNECTED),
        .LMB_UE_26(NLW_U0_LMB_UE_26_UNCONNECTED),
        .LMB_UE_27(NLW_U0_LMB_UE_27_UNCONNECTED),
        .LMB_UE_28(NLW_U0_LMB_UE_28_UNCONNECTED),
        .LMB_UE_29(NLW_U0_LMB_UE_29_UNCONNECTED),
        .LMB_UE_3(NLW_U0_LMB_UE_3_UNCONNECTED),
        .LMB_UE_30(NLW_U0_LMB_UE_30_UNCONNECTED),
        .LMB_UE_31(NLW_U0_LMB_UE_31_UNCONNECTED),
        .LMB_UE_4(NLW_U0_LMB_UE_4_UNCONNECTED),
        .LMB_UE_5(NLW_U0_LMB_UE_5_UNCONNECTED),
        .LMB_UE_6(NLW_U0_LMB_UE_6_UNCONNECTED),
        .LMB_UE_7(NLW_U0_LMB_UE_7_UNCONNECTED),
        .LMB_UE_8(NLW_U0_LMB_UE_8_UNCONNECTED),
        .LMB_UE_9(NLW_U0_LMB_UE_9_UNCONNECTED),
        .LMB_Wait_0(NLW_U0_LMB_Wait_0_UNCONNECTED),
        .LMB_Wait_1(NLW_U0_LMB_Wait_1_UNCONNECTED),
        .LMB_Wait_10(NLW_U0_LMB_Wait_10_UNCONNECTED),
        .LMB_Wait_11(NLW_U0_LMB_Wait_11_UNCONNECTED),
        .LMB_Wait_12(NLW_U0_LMB_Wait_12_UNCONNECTED),
        .LMB_Wait_13(NLW_U0_LMB_Wait_13_UNCONNECTED),
        .LMB_Wait_14(NLW_U0_LMB_Wait_14_UNCONNECTED),
        .LMB_Wait_15(NLW_U0_LMB_Wait_15_UNCONNECTED),
        .LMB_Wait_16(NLW_U0_LMB_Wait_16_UNCONNECTED),
        .LMB_Wait_17(NLW_U0_LMB_Wait_17_UNCONNECTED),
        .LMB_Wait_18(NLW_U0_LMB_Wait_18_UNCONNECTED),
        .LMB_Wait_19(NLW_U0_LMB_Wait_19_UNCONNECTED),
        .LMB_Wait_2(NLW_U0_LMB_Wait_2_UNCONNECTED),
        .LMB_Wait_20(NLW_U0_LMB_Wait_20_UNCONNECTED),
        .LMB_Wait_21(NLW_U0_LMB_Wait_21_UNCONNECTED),
        .LMB_Wait_22(NLW_U0_LMB_Wait_22_UNCONNECTED),
        .LMB_Wait_23(NLW_U0_LMB_Wait_23_UNCONNECTED),
        .LMB_Wait_24(NLW_U0_LMB_Wait_24_UNCONNECTED),
        .LMB_Wait_25(NLW_U0_LMB_Wait_25_UNCONNECTED),
        .LMB_Wait_26(NLW_U0_LMB_Wait_26_UNCONNECTED),
        .LMB_Wait_27(NLW_U0_LMB_Wait_27_UNCONNECTED),
        .LMB_Wait_28(NLW_U0_LMB_Wait_28_UNCONNECTED),
        .LMB_Wait_29(NLW_U0_LMB_Wait_29_UNCONNECTED),
        .LMB_Wait_3(NLW_U0_LMB_Wait_3_UNCONNECTED),
        .LMB_Wait_30(NLW_U0_LMB_Wait_30_UNCONNECTED),
        .LMB_Wait_31(NLW_U0_LMB_Wait_31_UNCONNECTED),
        .LMB_Wait_4(NLW_U0_LMB_Wait_4_UNCONNECTED),
        .LMB_Wait_5(NLW_U0_LMB_Wait_5_UNCONNECTED),
        .LMB_Wait_6(NLW_U0_LMB_Wait_6_UNCONNECTED),
        .LMB_Wait_7(NLW_U0_LMB_Wait_7_UNCONNECTED),
        .LMB_Wait_8(NLW_U0_LMB_Wait_8_UNCONNECTED),
        .LMB_Wait_9(NLW_U0_LMB_Wait_9_UNCONNECTED),
        .LMB_Write_Strobe_0(NLW_U0_LMB_Write_Strobe_0_UNCONNECTED),
        .LMB_Write_Strobe_1(NLW_U0_LMB_Write_Strobe_1_UNCONNECTED),
        .LMB_Write_Strobe_10(NLW_U0_LMB_Write_Strobe_10_UNCONNECTED),
        .LMB_Write_Strobe_11(NLW_U0_LMB_Write_Strobe_11_UNCONNECTED),
        .LMB_Write_Strobe_12(NLW_U0_LMB_Write_Strobe_12_UNCONNECTED),
        .LMB_Write_Strobe_13(NLW_U0_LMB_Write_Strobe_13_UNCONNECTED),
        .LMB_Write_Strobe_14(NLW_U0_LMB_Write_Strobe_14_UNCONNECTED),
        .LMB_Write_Strobe_15(NLW_U0_LMB_Write_Strobe_15_UNCONNECTED),
        .LMB_Write_Strobe_16(NLW_U0_LMB_Write_Strobe_16_UNCONNECTED),
        .LMB_Write_Strobe_17(NLW_U0_LMB_Write_Strobe_17_UNCONNECTED),
        .LMB_Write_Strobe_18(NLW_U0_LMB_Write_Strobe_18_UNCONNECTED),
        .LMB_Write_Strobe_19(NLW_U0_LMB_Write_Strobe_19_UNCONNECTED),
        .LMB_Write_Strobe_2(NLW_U0_LMB_Write_Strobe_2_UNCONNECTED),
        .LMB_Write_Strobe_20(NLW_U0_LMB_Write_Strobe_20_UNCONNECTED),
        .LMB_Write_Strobe_21(NLW_U0_LMB_Write_Strobe_21_UNCONNECTED),
        .LMB_Write_Strobe_22(NLW_U0_LMB_Write_Strobe_22_UNCONNECTED),
        .LMB_Write_Strobe_23(NLW_U0_LMB_Write_Strobe_23_UNCONNECTED),
        .LMB_Write_Strobe_24(NLW_U0_LMB_Write_Strobe_24_UNCONNECTED),
        .LMB_Write_Strobe_25(NLW_U0_LMB_Write_Strobe_25_UNCONNECTED),
        .LMB_Write_Strobe_26(NLW_U0_LMB_Write_Strobe_26_UNCONNECTED),
        .LMB_Write_Strobe_27(NLW_U0_LMB_Write_Strobe_27_UNCONNECTED),
        .LMB_Write_Strobe_28(NLW_U0_LMB_Write_Strobe_28_UNCONNECTED),
        .LMB_Write_Strobe_29(NLW_U0_LMB_Write_Strobe_29_UNCONNECTED),
        .LMB_Write_Strobe_3(NLW_U0_LMB_Write_Strobe_3_UNCONNECTED),
        .LMB_Write_Strobe_30(NLW_U0_LMB_Write_Strobe_30_UNCONNECTED),
        .LMB_Write_Strobe_31(NLW_U0_LMB_Write_Strobe_31_UNCONNECTED),
        .LMB_Write_Strobe_4(NLW_U0_LMB_Write_Strobe_4_UNCONNECTED),
        .LMB_Write_Strobe_5(NLW_U0_LMB_Write_Strobe_5_UNCONNECTED),
        .LMB_Write_Strobe_6(NLW_U0_LMB_Write_Strobe_6_UNCONNECTED),
        .LMB_Write_Strobe_7(NLW_U0_LMB_Write_Strobe_7_UNCONNECTED),
        .LMB_Write_Strobe_8(NLW_U0_LMB_Write_Strobe_8_UNCONNECTED),
        .LMB_Write_Strobe_9(NLW_U0_LMB_Write_Strobe_9_UNCONNECTED),
        .M_AXIS_ACLK(NLW_U0_M_AXIS_ACLK_UNCONNECTED),
        .M_AXIS_ARESETN(NLW_U0_M_AXIS_ARESETN_UNCONNECTED),
        .M_AXIS_TDATA(NLW_U0_M_AXIS_TDATA_UNCONNECTED[31:0]),
        .M_AXIS_TID(NLW_U0_M_AXIS_TID_UNCONNECTED[6:0]),
        .M_AXIS_TREADY(NLW_U0_M_AXIS_TREADY_UNCONNECTED),
        .M_AXIS_TVALID(NLW_U0_M_AXIS_TVALID_UNCONNECTED),
        .M_AXI_ACLK(NLW_U0_M_AXI_ACLK_UNCONNECTED),
        .M_AXI_ARADDR(NLW_U0_M_AXI_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_ARBURST(NLW_U0_M_AXI_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_ARCACHE(NLW_U0_M_AXI_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_ARESETN(NLW_U0_M_AXI_ARESETN_UNCONNECTED),
        .M_AXI_ARID(NLW_U0_M_AXI_ARID_UNCONNECTED[0]),
        .M_AXI_ARLEN(NLW_U0_M_AXI_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_ARLOCK(NLW_U0_M_AXI_ARLOCK_UNCONNECTED),
        .M_AXI_ARPROT(NLW_U0_M_AXI_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_ARQOS(NLW_U0_M_AXI_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_ARREADY(NLW_U0_M_AXI_ARREADY_UNCONNECTED),
        .M_AXI_ARSIZE(NLW_U0_M_AXI_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_ARVALID(NLW_U0_M_AXI_ARVALID_UNCONNECTED),
        .M_AXI_AWADDR(NLW_U0_M_AXI_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_AWBURST(NLW_U0_M_AXI_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_AWCACHE(NLW_U0_M_AXI_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_AWID(NLW_U0_M_AXI_AWID_UNCONNECTED[0]),
        .M_AXI_AWLEN(NLW_U0_M_AXI_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_AWLOCK(NLW_U0_M_AXI_AWLOCK_UNCONNECTED),
        .M_AXI_AWPROT(NLW_U0_M_AXI_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_AWQOS(NLW_U0_M_AXI_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_AWREADY(NLW_U0_M_AXI_AWREADY_UNCONNECTED),
        .M_AXI_AWSIZE(NLW_U0_M_AXI_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_AWVALID(NLW_U0_M_AXI_AWVALID_UNCONNECTED),
        .M_AXI_BID(NLW_U0_M_AXI_BID_UNCONNECTED[0]),
        .M_AXI_BREADY(NLW_U0_M_AXI_BREADY_UNCONNECTED),
        .M_AXI_BRESP(NLW_U0_M_AXI_BRESP_UNCONNECTED[1:0]),
        .M_AXI_BVALID(NLW_U0_M_AXI_BVALID_UNCONNECTED),
        .M_AXI_RDATA(NLW_U0_M_AXI_RDATA_UNCONNECTED[31:0]),
        .M_AXI_RID(NLW_U0_M_AXI_RID_UNCONNECTED[0]),
        .M_AXI_RLAST(NLW_U0_M_AXI_RLAST_UNCONNECTED),
        .M_AXI_RREADY(NLW_U0_M_AXI_RREADY_UNCONNECTED),
        .M_AXI_RRESP(NLW_U0_M_AXI_RRESP_UNCONNECTED[1:0]),
        .M_AXI_RVALID(NLW_U0_M_AXI_RVALID_UNCONNECTED),
        .M_AXI_WDATA(NLW_U0_M_AXI_WDATA_UNCONNECTED[31:0]),
        .M_AXI_WLAST(NLW_U0_M_AXI_WLAST_UNCONNECTED),
        .M_AXI_WREADY(NLW_U0_M_AXI_WREADY_UNCONNECTED),
        .M_AXI_WSTRB(NLW_U0_M_AXI_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_WVALID(NLW_U0_M_AXI_WVALID_UNCONNECTED),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_ARADDR({S_AXI_ARADDR[3:2],NLW_U0_S_AXI_ARADDR_UNCONNECTED[1:0]}),
        .S_AXI_ARESETN(S_AXI_ARESETN),
        .S_AXI_ARREADY(S_AXI_ARREADY),
        .S_AXI_ARVALID(S_AXI_ARVALID),
        .S_AXI_AWADDR(NLW_U0_S_AXI_AWADDR_UNCONNECTED[3:0]),
        .S_AXI_AWREADY(S_AXI_AWREADY),
        .S_AXI_AWVALID(S_AXI_AWVALID),
        .S_AXI_BREADY(S_AXI_BREADY),
        .S_AXI_BRESP(NLW_U0_S_AXI_BRESP_UNCONNECTED[1:0]),
        .S_AXI_BVALID(S_AXI_BVALID),
        .S_AXI_RDATA({NLW_U0_S_AXI_RDATA_UNCONNECTED[31:8],S_AXI_RDATA[7:0]}),
        .S_AXI_RREADY(S_AXI_RREADY),
        .S_AXI_RRESP(NLW_U0_S_AXI_RRESP_UNCONNECTED[1:0]),
        .S_AXI_RVALID(S_AXI_RVALID),
        .S_AXI_WDATA({NLW_U0_S_AXI_WDATA_UNCONNECTED[31:8],S_AXI_WDATA[7:0]}),
        .S_AXI_WREADY(S_AXI_WREADY),
        .S_AXI_WSTRB(NLW_U0_S_AXI_WSTRB_UNCONNECTED[3:0]),
        .S_AXI_WVALID(S_AXI_WVALID),
        .Scan_En(NLW_U0_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_U0_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_U0_Scan_Reset_Sel_UNCONNECTED),
        .TRACE_CLK(NLW_U0_TRACE_CLK_UNCONNECTED),
        .TRACE_CLK_OUT(NLW_U0_TRACE_CLK_OUT_UNCONNECTED),
        .TRACE_CTL(NLW_U0_TRACE_CTL_UNCONNECTED),
        .TRACE_DATA(NLW_U0_TRACE_DATA_UNCONNECTED[31:0]),
        .Trig_Ack_In_0(NLW_U0_Trig_Ack_In_0_UNCONNECTED),
        .Trig_Ack_In_1(NLW_U0_Trig_Ack_In_1_UNCONNECTED),
        .Trig_Ack_In_2(NLW_U0_Trig_Ack_In_2_UNCONNECTED),
        .Trig_Ack_In_3(NLW_U0_Trig_Ack_In_3_UNCONNECTED),
        .Trig_Ack_Out_0(NLW_U0_Trig_Ack_Out_0_UNCONNECTED),
        .Trig_Ack_Out_1(NLW_U0_Trig_Ack_Out_1_UNCONNECTED),
        .Trig_Ack_Out_2(NLW_U0_Trig_Ack_Out_2_UNCONNECTED),
        .Trig_Ack_Out_3(NLW_U0_Trig_Ack_Out_3_UNCONNECTED),
        .Trig_In_0(NLW_U0_Trig_In_0_UNCONNECTED),
        .Trig_In_1(NLW_U0_Trig_In_1_UNCONNECTED),
        .Trig_In_2(NLW_U0_Trig_In_2_UNCONNECTED),
        .Trig_In_3(NLW_U0_Trig_In_3_UNCONNECTED),
        .Trig_Out_0(NLW_U0_Trig_Out_0_UNCONNECTED),
        .Trig_Out_1(NLW_U0_Trig_Out_1_UNCONNECTED),
        .Trig_Out_2(NLW_U0_Trig_Out_2_UNCONNECTED),
        .Trig_Out_3(NLW_U0_Trig_Out_3_UNCONNECTED),
        .bscan_ext_bscanid_en(NLW_U0_bscan_ext_bscanid_en_UNCONNECTED),
        .bscan_ext_capture(NLW_U0_bscan_ext_capture_UNCONNECTED),
        .bscan_ext_drck(NLW_U0_bscan_ext_drck_UNCONNECTED),
        .bscan_ext_reset(NLW_U0_bscan_ext_reset_UNCONNECTED),
        .bscan_ext_sel(NLW_U0_bscan_ext_sel_UNCONNECTED),
        .bscan_ext_shift(NLW_U0_bscan_ext_shift_UNCONNECTED),
        .bscan_ext_tck(NLW_U0_bscan_ext_tck_UNCONNECTED),
        .bscan_ext_tdi(NLW_U0_bscan_ext_tdi_UNCONNECTED),
        .bscan_ext_tdo(NLW_U0_bscan_ext_tdo_UNCONNECTED),
        .bscan_ext_update(NLW_U0_bscan_ext_update_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "JTAG_CONTROL" *) 
module ublaze_sopc_mdm_0_0__JTAG_CONTROL
   (Q,
    \Using_FPGA.Native ,
    RX_Data,
    \Using_FPGA.Native_0 ,
    out,
    Ext_NM_BRK,
    AR,
    Debug_SYS_Rst,
    Dbg_Rst_0,
    Ext_BRK,
    Dbg_Reg_En_0,
    p_35_out__0,
    \Use_Serial_Unified_Completion.completion_block_reg_0 ,
    E,
    tdo,
    tx_Buffer_Full,
    RX_Buffer_Full,
    \Use_Serial_Unified_Completion.completion_status_reg[15]_0 ,
    \Use_Serial_Unified_Completion.count_reg[4]_0 ,
    tx_Buffer_Empty,
    Interrupt,
    CLK,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_Uart.reset_RX_FIFO_reg ,
    S_AXI_ACLK,
    \Use_Uart.reset_TX_FIFO_reg ,
    S_AXI_WDATA,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    \Use_Uart.clear_Ext_BRK_reg ,
    Scan_En,
    Scan_Reset,
    Scan_Reset_Sel,
    \Use_BSCAN.PORT_Selector_reg[0]_1 ,
    \Use_BSCAN.PORT_Selector_reg[3] ,
    sel,
    \Use_BSCAN.PORT_Selector_reg[2] ,
    Dbg_TDO_0,
    FIFO_Write,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    bus2ip_rdce,
    Q_0,
    enable_interrupts,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Dbg_TDI_31,
    \Use_BSCAN.PORT_Selector_reg[0]_2 ,
    \Using_FPGA.Native_1 ,
    \Use_Serial_Unified_Completion.sample_1_reg[15]_0 ,
    \Use_BSCAN.command_reg[5]_0 ,
    D,
    \shift_Count_reg[0]_0 );
  output [0:0]Q;
  output \Using_FPGA.Native ;
  output [0:7]RX_Data;
  output \Using_FPGA.Native_0 ;
  output out;
  output Ext_NM_BRK;
  output [0:0]AR;
  output Debug_SYS_Rst;
  output Dbg_Rst_0;
  output Ext_BRK;
  output [0:7]Dbg_Reg_En_0;
  output p_35_out__0;
  output \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  output [0:0]E;
  output tdo;
  output tx_Buffer_Full;
  output RX_Buffer_Full;
  output [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15]_0 ;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[4]_0 ;
  output tx_Buffer_Empty;
  output Interrupt;
  input CLK;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_Uart.reset_RX_FIFO_reg ;
  input S_AXI_ACLK;
  input \Use_Uart.reset_TX_FIFO_reg ;
  input [7:0]S_AXI_WDATA;
  input \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input \Use_Uart.clear_Ext_BRK_reg ;
  input Scan_En;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input \Use_BSCAN.PORT_Selector_reg[0]_1 ;
  input [3:0]\Use_BSCAN.PORT_Selector_reg[3] ;
  input sel;
  input \Use_BSCAN.PORT_Selector_reg[2] ;
  input Dbg_TDO_0;
  input FIFO_Write;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input [0:0]bus2ip_rdce;
  input Q_0;
  input enable_interrupts;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Dbg_TDI_31;
  input [0:0]\Use_BSCAN.PORT_Selector_reg[0]_2 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15]_0 ;
  input [0:0]\Use_BSCAN.command_reg[5]_0 ;
  input [0:0]D;
  input [0:0]\shift_Count_reg[0]_0 ;

  wire A1;
  wire A2;
  wire A3;
  wire [0:0]\^AR ;
  wire Bus_RNW_reg;
  wire CE;
  wire CLK;
  wire [0:0]D;
  wire D_2;
  wire [4:5]Data_Out;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_31_INST_0_i_1_n_0;
  wire Dbg_Shift_31_INST_0_i_3_n_0;
  wire Dbg_TDI_31;
  wire Dbg_TDO_0;
  wire Debug_Rst_i0;
  wire [0:0]E;
  wire FIFO_Write;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire [0:0]Q;
  wire Q0_out;
  wire RX_Buffer_Full;
  wire [0:7]RX_Data;
  wire S_AXI_ACLK;
  wire [7:0]S_AXI_WDATA;
  wire \Use_BSCAN.FDC_I_n_11 ;
  wire \Use_BSCAN.FDC_I_n_12 ;
  wire \Use_BSCAN.FDC_I_n_17 ;
  wire \Use_BSCAN.FDC_I_n_19 ;
  wire \Use_BSCAN.FDC_I_n_20 ;
  wire \Use_BSCAN.FDC_I_n_21 ;
  wire \Use_BSCAN.FDC_I_n_22 ;
  wire \Use_BSCAN.FDC_I_n_23 ;
  wire \Use_BSCAN.FDC_I_n_24 ;
  wire \Use_BSCAN.FDC_I_n_25 ;
  wire \Use_BSCAN.FDC_I_n_26 ;
  wire \Use_BSCAN.FDC_I_n_27 ;
  wire \Use_BSCAN.FDC_I_n_28 ;
  wire \Use_BSCAN.FDC_I_n_29 ;
  wire \Use_BSCAN.FDC_I_n_30 ;
  wire \Use_BSCAN.FDC_I_n_31 ;
  wire \Use_BSCAN.FDC_I_n_33 ;
  wire \Use_BSCAN.FDC_I_n_34 ;
  wire \Use_BSCAN.FDC_I_n_35 ;
  wire \Use_BSCAN.FDC_I_n_36 ;
  wire \Use_BSCAN.FDC_I_n_37 ;
  wire \Use_BSCAN.FDC_I_n_38 ;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_1 ;
  wire [0:0]\Use_BSCAN.PORT_Selector_reg[0]_2 ;
  wire \Use_BSCAN.PORT_Selector_reg[2] ;
  wire [3:0]\Use_BSCAN.PORT_Selector_reg[3] ;
  wire \Use_BSCAN.SYNC_FDRE_n_1 ;
  wire \Use_BSCAN.SYNC_FDRE_n_2 ;
  wire \Use_BSCAN.command[0]_i_1_n_0 ;
  wire [0:0]\Use_BSCAN.command_reg[5]_0 ;
  wire \Use_Config_SRL16E.SRL16E_1_n_0 ;
  wire \Use_E2.BSCANE2_I_i_3_n_0 ;
  wire \Use_E2.BSCANE2_I_i_4_n_0 ;
  wire \Use_E2.BSCANE2_I_i_6_n_0 ;
  wire \Use_E2.BSCANE2_I_i_7_n_0 ;
  wire \Use_E2.BSCANE2_I_i_9_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_i_3_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[10]_i_1_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[11]_i_1_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[12]_i_1_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[13]_i_1_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[14]_i_1_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15]_0 ;
  wire \Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.count[0]_i_1_n_0 ;
  wire \Use_Serial_Unified_Completion.count[1]_i_1_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[4]_0 ;
  wire [0:4]\Use_Serial_Unified_Completion.count_reg__1 ;
  wire \Use_Serial_Unified_Completion.count_reg_n_0_[0] ;
  wire \Use_Serial_Unified_Completion.count_reg_n_0_[1] ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15]_0 ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ;
  wire \Use_UART.RX_FIFO_I_n_10 ;
  wire \Use_UART.RX_FIFO_I_n_9 ;
  wire \Use_UART.TX_FIFO_I_n_3 ;
  wire \Use_UART.TX_FIFO_I_n_4 ;
  wire \Use_UART.TX_FIFO_I_n_5 ;
  wire \Use_UART.TX_FIFO_I_n_6 ;
  wire \Use_UART.TX_FIFO_I_n_7 ;
  wire \Use_UART.TX_FIFO_I_n_8 ;
  wire \Use_UART.execute_i_3_n_0 ;
  wire \Use_UART.fifo_Read_i_1_n_0 ;
  wire \Use_UART.fifo_Read_reg_n_0 ;
  wire \Use_UART.fifo_Write_i_1_n_0 ;
  wire \Use_UART.fifo_Write_i_2_n_0 ;
  wire \Use_UART.fifo_Write_reg_n_0 ;
  wire \Use_UART.tdo_reg[0]_i_3_n_0 ;
  wire \Use_UART.tdo_reg[0]_i_4_n_0 ;
  wire \Use_UART.tdo_reg[4]_i_2_n_0 ;
  wire \Use_Uart.reset_RX_FIFO_reg ;
  wire \Use_Uart.reset_TX_FIFO_reg ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]bus2ip_rdce;
  wire [0:7]command;
  wire [0:7]command_1;
  wire command_10;
  wire completion_ctrl;
  wire [15:0]completion_status;
  wire config_TDO_2;
  wire data_cmd_reset6_out;
  wire execute;
  (* async_reg = "true" *) wire execute_1;
  (* async_reg = "true" *) wire execute_2;
  wire execute_3;
  wire [0:7]fifo_Din;
  wire mb_instr_overrun;
  wire [5:1]p_0_in;
  wire p_0_in_3;
  wire [4:1]p_0_in__0;
  wire p_1_in;
  wire p_2_out;
  wire p_35_out__0;
  wire p_3_out__10;
  (* async_reg = "true" *) wire [15:13]sample;
  wire sample_1;
  wire sel;
  wire sel_n;
  wire sel_n0;
  wire sel_with_scan_reset24_out;
  wire [0:0]\shift_Count_reg[0]_0 ;
  wire [4:4]shift_Count_reg__0;
  wire shifting_Data1__0;
  wire sync;
  wire tdi_shifter0;
  wire \tdi_shifter_reg_n_0_[1] ;
  wire \tdi_shifter_reg_n_0_[2] ;
  wire \tdi_shifter_reg_n_0_[4] ;
  wire \tdi_shifter_reg_n_0_[5] ;
  wire \tdi_shifter_reg_n_0_[6] ;
  wire \tdi_shifter_reg_n_0_[7] ;
  wire tdo;
  wire [0:7]tdo_reg;
  wire tx_Buffer_Full;
  wire tx_buffered;
  (* async_reg = "true" *) wire tx_buffered_1;
  (* async_reg = "true" *) wire tx_buffered_2;
  wire \NLW_Use_BSCAN.FDC_I_Scan_En_UNCONNECTED ;
  wire \NLW_Use_BSCAN.FDC_I_Scan_Reset_UNCONNECTED ;
  wire \NLW_Use_BSCAN.FDC_I_Scan_Reset_Sel_UNCONNECTED ;
  wire \NLW_Use_UART.TX_FIFO_I_Interrupt_UNCONNECTED ;
  wire \NLW_Use_UART.TX_FIFO_I_Q_0_UNCONNECTED ;
  wire \NLW_Use_UART.TX_FIFO_I_data_Exists_I_reg_0_UNCONNECTED ;
  wire \NLW_Use_UART.TX_FIFO_I_enable_interrupts_UNCONNECTED ;
  wire \NLW_Use_UART.TX_FIFO_I_tx_Buffer_Empty_UNCONNECTED ;

  assign out = tx_buffered_2;
  LUT3 #(
    .INIT(8'hFD)) 
    Dbg_Shift_31_INST_0_i_1
       (.I0(command[5]),
        .I1(command[7]),
        .I2(command[4]),
        .O(Dbg_Shift_31_INST_0_i_1_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    Dbg_Shift_31_INST_0_i_3
       (.I0(command[0]),
        .I1(command[1]),
        .I2(command[3]),
        .I3(command[2]),
        .O(Dbg_Shift_31_INST_0_i_3_n_0));
  FDCE #(
    .INIT(1'b0)) 
    Debug_Rst_i_reg
       (.C(CLK),
        .CE(Debug_Rst_i0),
        .CLR(\^AR ),
        .D(p_1_in),
        .Q(Dbg_Rst_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND_1
       (.G(\^AR ));
  ublaze_sopc_mdm_0_0__MB_FDC_1 \Use_BSCAN.FDC_I 
       (.CE(CE),
        .CLK(CLK),
        .D({\Use_BSCAN.FDC_I_n_19 ,\Use_BSCAN.FDC_I_n_20 ,\Use_BSCAN.FDC_I_n_21 ,\Use_BSCAN.FDC_I_n_22 ,\Use_BSCAN.FDC_I_n_23 ,\Use_BSCAN.FDC_I_n_24 ,\Use_BSCAN.FDC_I_n_25 ,\Use_BSCAN.FDC_I_n_26 ,\Use_BSCAN.FDC_I_n_27 ,\Use_BSCAN.FDC_I_n_28 }),
        .D_2(D_2),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Debug_Rst_i0(Debug_Rst_i0),
        .E(\Use_BSCAN.FDC_I_n_12 ),
        .Q({command[0],command[1],command[2],command[3],command[4],command[5],command[6],command[7]}),
        .Scan_En(\NLW_Use_BSCAN.FDC_I_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Use_BSCAN.FDC_I_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Use_BSCAN.FDC_I_Scan_Reset_Sel_UNCONNECTED ),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .\Use_BSCAN.PORT_Selector_reg[3] (\Use_BSCAN.PORT_Selector_reg[3] ),
        .\Use_BSCAN.command_reg[0] (Dbg_Shift_31_INST_0_i_3_n_0),
        .\Use_BSCAN.command_reg[2] (\Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ),
        .\Use_Serial_Unified_Completion.completion_block_reg (\Use_Serial_Unified_Completion.completion_block_reg_0 ),
        .\Use_Serial_Unified_Completion.completion_block_reg_0 (\Use_BSCAN.FDC_I_n_36 ),
        .\Use_Serial_Unified_Completion.completion_block_reg_1 (\Use_Serial_Unified_Completion.completion_block_reg_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[10] (completion_status[10:0]),
        .\Use_Serial_Unified_Completion.completion_status_reg[2] (\Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[3] (\Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[4] (\Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[5] (\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[7] (\Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ),
        .\Use_Serial_Unified_Completion.count_reg[1] (\Use_BSCAN.SYNC_FDRE_n_2 ),
        .\Use_Serial_Unified_Completion.count_reg[1]_0 (\Use_BSCAN.SYNC_FDRE_n_1 ),
        .\Use_Serial_Unified_Completion.count_reg[5] (\Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg (\Use_BSCAN.FDC_I_n_35 ),
        .\Use_Serial_Unified_Completion.mb_instr_error_reg (\Use_BSCAN.FDC_I_n_17 ),
        .\Use_Serial_Unified_Completion.mb_instr_error_reg_0 (\Use_BSCAN.FDC_I_n_34 ),
        .\Use_Serial_Unified_Completion.mb_instr_overrun_reg (\Use_BSCAN.FDC_I_n_33 ),
        .\Use_Serial_Unified_Completion.sample_1_reg[10] (sample_1),
        .\Use_Serial_Unified_Completion.sample_reg[15] ({\Use_BSCAN.FDC_I_n_29 ,\Use_BSCAN.FDC_I_n_30 ,\Use_BSCAN.FDC_I_n_31 }),
        .\Use_Serial_Unified_Completion.sample_reg[15]_0 ({sample,\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ,\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ,mb_instr_overrun}),
        .\Use_UART.tx_buffered_reg (\Use_BSCAN.FDC_I_n_37 ),
        .\command_1_reg[7] (command_10),
        .completion_ctrl(completion_ctrl),
        .\completion_ctrl_reg[0] (\Use_BSCAN.FDC_I_n_38 ),
        .data_cmd_reset6_out(data_cmd_reset6_out),
        .in0(tx_buffered),
        .p_35_out__0(p_35_out__0),
        .p_3_out__10(p_3_out__10),
        .sel(sel),
        .sel_n(sel_n),
        .set_Ext_BRK_reg(\Use_BSCAN.FDC_I_n_11 ),
        .shifting_Data1__0(shifting_Data1__0),
        .\tdi_shifter_reg[0] ({p_1_in,\tdi_shifter_reg_n_0_[1] ,\tdi_shifter_reg_n_0_[2] ,p_0_in_3,\tdi_shifter_reg_n_0_[4] ,\tdi_shifter_reg_n_0_[5] ,\tdi_shifter_reg_n_0_[6] ,\tdi_shifter_reg_n_0_[7] }));
  ublaze_sopc_mdm_0_0__MB_FDRE_1 \Use_BSCAN.SYNC_FDRE 
       (.CE(CE),
        .D_2(D_2),
        .E(E),
        .Q(command[6]),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .\Use_BSCAN.command_reg[0] (Dbg_Shift_31_INST_0_i_3_n_0),
        .\Use_BSCAN.command_reg[5] (Dbg_Shift_31_INST_0_i_1_n_0),
        .\Use_BSCAN.command_reg[6] (\Use_BSCAN.FDC_I_n_17 ),
        .\Use_Serial_Unified_Completion.count_reg[0] (\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .\Use_Serial_Unified_Completion.count_reg[1] (\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .\Use_Serial_Unified_Completion.mb_instr_error_reg (\Use_BSCAN.SYNC_FDRE_n_1 ),
        .\Use_Serial_Unified_Completion.mb_instr_overrun_reg (\Use_BSCAN.SYNC_FDRE_n_2 ),
        .\Using_FPGA.Native_0 (\Use_BSCAN.FDC_I_n_11 ),
        .sync(sync));
  LUT5 #(
    .INIT(32'h00000008)) 
    \Use_BSCAN.command[0]_i_1 
       (.I0(sel),
        .I1(\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .I3(\Use_BSCAN.PORT_Selector_reg[3] [3]),
        .I4(\Use_BSCAN.PORT_Selector_reg[3] [2]),
        .O(\Use_BSCAN.command[0]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[0] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[0]),
        .Q(command[0]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[1] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[1]),
        .Q(command[1]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[2] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[2]),
        .Q(command[2]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[3] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[3]),
        .Q(command[3]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[4] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[4]),
        .Q(command[4]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[5] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[5]),
        .Q(command[5]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[6] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[6]),
        .Q(command[6]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[7] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[7]),
        .Q(command[7]));
  ublaze_sopc_mdm_0_0__MB_SRL16E \Use_Config_SRL16E.SRL16E_1 
       (.Q({A3,A2,A1,Q}),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .sel_n_reg(\Use_Config_SRL16E.SRL16E_1_n_0 ));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized1 \Use_Config_SRL16E.SRL16E_2 
       (.Q({A3,A2,A1,Q}),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .config_TDO_2(config_TDO_2));
  LUT3 #(
    .INIT(8'hF8)) 
    \Use_E2.BSCANE2_I_i_3 
       (.I0(command[0]),
        .I1(Dbg_TDO_0),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .O(\Use_E2.BSCANE2_I_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hC000C00000008080)) 
    \Use_E2.BSCANE2_I_i_4 
       (.I0(\Use_E2.BSCANE2_I_i_6_n_0 ),
        .I1(command[6]),
        .I2(\Use_E2.BSCANE2_I_i_7_n_0 ),
        .I3(Dbg_TDO_0),
        .I4(command[1]),
        .I5(command[5]),
        .O(\Use_E2.BSCANE2_I_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hF0CA00CA)) 
    \Use_E2.BSCANE2_I_i_6 
       (.I0(Dbg_TDO_0),
        .I1(tdo_reg[7]),
        .I2(command[4]),
        .I3(command[2]),
        .I4(completion_status[0]),
        .O(\Use_E2.BSCANE2_I_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00001104AAAEBFBF)) 
    \Use_E2.BSCANE2_I_i_7 
       (.I0(command[5]),
        .I1(command[2]),
        .I2(command[1]),
        .I3(command[4]),
        .I4(command[3]),
        .I5(command[7]),
        .O(\Use_E2.BSCANE2_I_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF6)) 
    \Use_E2.BSCANE2_I_i_9 
       (.I0(command[5]),
        .I1(command[4]),
        .I2(command[3]),
        .I3(command[1]),
        .I4(command[7]),
        .I5(command[2]),
        .O(\Use_E2.BSCANE2_I_i_9_n_0 ));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized3 \Use_ID_SRL16E.SRL16E_ID_1 
       (.Q({A3,A2,A1,Q}),
        .Q0_out(Q0_out),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized5 \Use_ID_SRL16E.SRL16E_ID_2 
       (.Dbg_TDO_0(Dbg_TDO_0),
        .Q({shift_Count_reg__0,A3,A2,A1,Q}),
        .Q0_out(Q0_out),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .\Use_BSCAN.PORT_Selector_reg[2] (\Use_BSCAN.PORT_Selector_reg[2] ),
        .\Use_BSCAN.command_reg[0] (\Use_E2.BSCANE2_I_i_3_n_0 ),
        .\Use_BSCAN.command_reg[0]_0 ({command[0],command[5],command[6]}),
        .\Use_BSCAN.command_reg[5] (\Use_E2.BSCANE2_I_i_7_n_0 ),
        .\Use_BSCAN.command_reg[5]_0 (\Use_E2.BSCANE2_I_i_9_n_0 ),
        .\Use_BSCAN.command_reg[6] (\Use_E2.BSCANE2_I_i_4_n_0 ),
        .config_TDO_2(config_TDO_2),
        .\shift_Count_reg[0] (\Use_Config_SRL16E.SRL16E_1_n_0 ),
        .tdo(tdo));
  LUT6 #(
    .INIT(64'hFFFFFFFFBAFFBABA)) 
    \Use_Serial_Unified_Completion.completion_block_i_2 
       (.I0(\Use_Serial_Unified_Completion.completion_block_i_3_n_0 ),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ),
        .I2(sample[13]),
        .I3(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ),
        .I4(sample[14]),
        .I5(\Use_Serial_Unified_Completion.completion_block_i_4_n_0 ),
        .O(p_3_out__10));
  LUT4 #(
    .INIT(16'h4F44)) 
    \Use_Serial_Unified_Completion.completion_block_i_3 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[15]_0 ),
        .I1(sample[15]),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ),
        .I3(mb_instr_overrun),
        .O(\Use_Serial_Unified_Completion.completion_block_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \Use_Serial_Unified_Completion.completion_block_i_4 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ),
        .I1(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ),
        .I3(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ),
        .O(\Use_Serial_Unified_Completion.completion_block_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_block_reg 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_36 ),
        .Q(\Use_Serial_Unified_Completion.completion_block_reg_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[10]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[11]),
        .O(\Use_Serial_Unified_Completion.completion_status[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[11]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[12]),
        .O(\Use_Serial_Unified_Completion.completion_status[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[12]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[13]),
        .O(\Use_Serial_Unified_Completion.completion_status[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[13]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[14]),
        .O(\Use_Serial_Unified_Completion.completion_status[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[14]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[15]),
        .O(\Use_Serial_Unified_Completion.completion_status[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \Use_Serial_Unified_Completion.completion_status[3]_i_2 
       (.I0(completion_status[2]),
        .I1(completion_status[0]),
        .I2(completion_status[1]),
        .O(\Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \Use_Serial_Unified_Completion.completion_status[4]_i_2 
       (.I0(completion_status[3]),
        .I1(completion_status[1]),
        .I2(completion_status[0]),
        .I3(completion_status[2]),
        .O(\Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \Use_Serial_Unified_Completion.completion_status[5]_i_2 
       (.I0(completion_status[4]),
        .I1(completion_status[2]),
        .I2(completion_status[0]),
        .I3(completion_status[1]),
        .I4(completion_status[3]),
        .O(\Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \Use_Serial_Unified_Completion.completion_status[7]_i_2 
       (.I0(completion_status[5]),
        .I1(completion_status[3]),
        .I2(completion_status[1]),
        .I3(completion_status[0]),
        .I4(completion_status[2]),
        .I5(completion_status[4]),
        .O(\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_4 
       (.I0(completion_status[7]),
        .I1(\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ),
        .I2(completion_status[6]),
        .O(\Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_28 ),
        .Q(completion_status[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[10] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Using_FPGA.Native_1 ),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.completion_status[10]_i_1_n_0 ),
        .Q(completion_status[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[11] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Using_FPGA.Native_1 ),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.completion_status[11]_i_1_n_0 ),
        .Q(completion_status[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[12] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Using_FPGA.Native_1 ),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.completion_status[12]_i_1_n_0 ),
        .Q(completion_status[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[13] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Using_FPGA.Native_1 ),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.completion_status[13]_i_1_n_0 ),
        .Q(completion_status[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[14] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Using_FPGA.Native_1 ),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.completion_status[14]_i_1_n_0 ),
        .Q(completion_status[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[15] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Using_FPGA.Native_1 ),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.sample_1_reg[15]_0 ),
        .Q(completion_status[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_27 ),
        .Q(completion_status[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_26 ),
        .Q(completion_status[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_25 ),
        .Q(completion_status[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_24 ),
        .Q(completion_status[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[5] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_23 ),
        .Q(completion_status[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[6] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_22 ),
        .Q(completion_status[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[7] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_21 ),
        .Q(completion_status[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[8] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_20 ),
        .Q(completion_status[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[9] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_12 ),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_19 ),
        .Q(completion_status[9]));
  LUT4 #(
    .INIT(16'h0078)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_2 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [1]),
        .I1(\Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [0]),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[5]));
  LUT4 #(
    .INIT(16'h8000)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_4 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [2]),
        .I1(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I2(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .O(\Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF80FF00FF00)) 
    \Use_Serial_Unified_Completion.count[0]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I2(sync),
        .I3(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .I4(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I5(shifting_Data1__0),
        .O(\Use_Serial_Unified_Completion.count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \Use_Serial_Unified_Completion.count[1]__0_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [2]),
        .I1(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I2(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .I4(\Use_Serial_Unified_Completion.count_reg__1 [1]),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h00F7FFFF00080000)) 
    \Use_Serial_Unified_Completion.count[1]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I1(sync),
        .I2(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I4(shifting_Data1__0),
        .I5(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .O(\Use_Serial_Unified_Completion.count[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00007F80)) 
    \Use_Serial_Unified_Completion.count[2]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .I1(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [2]),
        .I4(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[3]));
  LUT4 #(
    .INIT(16'h0078)) 
    \Use_Serial_Unified_Completion.count[3]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I1(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[2]));
  LUT3 #(
    .INIT(8'h06)) 
    \Use_Serial_Unified_Completion.count[4]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I1(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I2(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.count[0]_i_1_n_0 ),
        .Q(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[0]__0 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(\^AR ),
        .D(p_0_in[5]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.count[1]_i_1_n_0 ),
        .Q(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[1]__0 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(\^AR ),
        .D(p_0_in[4]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(\^AR ),
        .D(p_0_in[3]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(\^AR ),
        .D(p_0_in[2]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(\^AR ),
        .D(p_0_in[1]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[5] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(\^AR ),
        .D(D),
        .Q(\Use_Serial_Unified_Completion.count_reg[4]_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_2 
       (.I0(\Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ),
        .I1(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_3 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I1(\Use_Serial_Unified_Completion.count_reg__1 [0]),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [1]),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [2]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_reg 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_35 ),
        .Q(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_instr_error_reg 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_34 ),
        .Q(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_33 ),
        .Q(mb_instr_overrun));
  LUT5 #(
    .INIT(32'h00000008)) 
    \Use_Serial_Unified_Completion.sample_1[15]_i_3 
       (.I0(command[2]),
        .I1(command[4]),
        .I2(command[0]),
        .I3(command[1]),
        .I4(command[3]),
        .O(\Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[10] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(mb_instr_overrun),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[11] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[12] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[13] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(sample[13]),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[14] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(sample[14]),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[15] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(sample[15]),
        .Q(\Use_Serial_Unified_Completion.completion_status_reg[15]_0 ));
  initial assign \Use_Serial_Unified_Completion.sample_reg[13] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_Serial_Unified_Completion.sample_reg[13] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_31 ),
        .Q(sample[13]));
  initial assign \Use_Serial_Unified_Completion.sample_reg[14] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_Serial_Unified_Completion.sample_reg[14] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_30 ),
        .Q(sample[14]));
  initial assign \Use_Serial_Unified_Completion.sample_reg[15] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_Serial_Unified_Completion.sample_reg[15] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_29 ),
        .Q(sample[15]));
  ublaze_sopc_mdm_0_0__SRL_FIFO \Use_UART.RX_FIFO_I 
       (.Bus_RNW_reg(Bus_RNW_reg),
        .D({\Use_UART.RX_FIFO_I_n_9 ,\Use_UART.RX_FIFO_I_n_10 }),
        .Data_Out({Data_Out[4],Data_Out[5]}),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .Q({fifo_Din[0],fifo_Din[1],fifo_Din[2],fifo_Din[3],fifo_Din[4],fifo_Din[5],fifo_Din[6],fifo_Din[7]}),
        .RX_Buffer_Full(RX_Buffer_Full),
        .RX_Data(RX_Data),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .\Use_BSCAN.command_reg[0] (\Use_UART.tdo_reg[4]_i_2_n_0 ),
        .\Use_BSCAN.command_reg[0]_0 (\Use_UART.tdo_reg[0]_i_3_n_0 ),
        .\Use_UART.fifo_Write_reg (\Use_UART.fifo_Write_reg_n_0 ),
        .\Use_UART.tdo_reg_reg[3] ({tdo_reg[3],tdo_reg[4]}),
        .\Use_Uart.reset_RX_FIFO_reg (\Use_Uart.reset_RX_FIFO_reg ),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .bus2ip_rdce(bus2ip_rdce));
  ublaze_sopc_mdm_0_0__SRL_FIFO_0 \Use_UART.TX_FIFO_I 
       (.Bus_RNW_reg(Bus_RNW_reg),
        .D({\Use_UART.TX_FIFO_I_n_3 ,\Use_UART.TX_FIFO_I_n_4 ,\Use_UART.TX_FIFO_I_n_5 ,\Use_UART.TX_FIFO_I_n_6 ,\Use_UART.TX_FIFO_I_n_7 ,\Use_UART.TX_FIFO_I_n_8 }),
        .FIFO_Write(FIFO_Write),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .Interrupt(\NLW_Use_UART.TX_FIFO_I_Interrupt_UNCONNECTED ),
        .Q({tdo_reg[0],tdo_reg[1],tdo_reg[2],tdo_reg[5],tdo_reg[6]}),
        .Q_0(\NLW_Use_UART.TX_FIFO_I_Q_0_UNCONNECTED ),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .\Use_BSCAN.command_reg[0] (\Use_UART.tdo_reg[4]_i_2_n_0 ),
        .\Use_BSCAN.command_reg[0]_0 (\Use_UART.tdo_reg[0]_i_3_n_0 ),
        .\Use_UART.fifo_Read_reg (\Use_UART.fifo_Read_reg_n_0 ),
        .\Use_UART.tdo_reg_reg[4] ({Data_Out[4],Data_Out[5]}),
        .\Use_Uart.reset_TX_FIFO_reg (\Use_Uart.reset_TX_FIFO_reg ),
        .\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .data_Exists_I_reg_0(\NLW_Use_UART.TX_FIFO_I_data_Exists_I_reg_0_UNCONNECTED ),
        .enable_interrupts(\NLW_Use_UART.TX_FIFO_I_enable_interrupts_UNCONNECTED ),
        .out(tx_buffered_2),
        .tx_Buffer_Empty(\NLW_Use_UART.TX_FIFO_I_tx_Buffer_Empty_UNCONNECTED ),
        .tx_Buffer_Full(tx_Buffer_Full));
  initial assign \Use_UART.execute_1_reg .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_UART.execute_1_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(execute),
        .Q(execute_1),
        .R(1'b0));
  initial assign \Use_UART.execute_2_reg .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_UART.execute_2_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(execute_1),
        .Q(execute_2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_UART.execute_3_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(execute_2),
        .Q(execute_3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \Use_UART.execute_i_1 
       (.I0(command[7]),
        .I1(\Use_UART.execute_i_3_n_0 ),
        .I2(command[0]),
        .I3(command[1]),
        .I4(command[3]),
        .I5(command[2]),
        .O(p_2_out));
  LUT2 #(
    .INIT(4'hB)) 
    \Use_UART.execute_i_3 
       (.I0(command[5]),
        .I1(command[4]),
        .O(\Use_UART.execute_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.execute_reg 
       (.C(CLK),
        .CE(1'b1),
        .CLR(data_cmd_reset6_out),
        .D(p_2_out),
        .Q(execute));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Din_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(\^AR ),
        .D(Dbg_TDI_31),
        .Q(fifo_Din[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Din_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(\^AR ),
        .D(fifo_Din[0]),
        .Q(fifo_Din[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Din_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(\^AR ),
        .D(fifo_Din[1]),
        .Q(fifo_Din[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Din_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(\^AR ),
        .D(fifo_Din[2]),
        .Q(fifo_Din[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Din_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(\^AR ),
        .D(fifo_Din[3]),
        .Q(fifo_Din[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Din_reg[5] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(\^AR ),
        .D(fifo_Din[4]),
        .Q(fifo_Din[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Din_reg[6] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(\^AR ),
        .D(fifo_Din[5]),
        .Q(fifo_Din[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Din_reg[7] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(\^AR ),
        .D(fifo_Din[6]),
        .Q(fifo_Din[7]));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    \Use_UART.fifo_Read_i_1 
       (.I0(\Use_UART.execute_i_3_n_0 ),
        .I1(execute_3),
        .I2(execute_2),
        .I3(command[6]),
        .I4(command[7]),
        .I5(\Use_UART.fifo_Write_i_2_n_0 ),
        .O(\Use_UART.fifo_Read_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Read_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(\Use_UART.fifo_Read_i_1_n_0 ),
        .Q(\Use_UART.fifo_Read_reg_n_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \Use_UART.fifo_Write_i_1 
       (.I0(\Use_UART.execute_i_3_n_0 ),
        .I1(execute_3),
        .I2(execute_2),
        .I3(command[6]),
        .I4(command[7]),
        .I5(\Use_UART.fifo_Write_i_2_n_0 ),
        .O(\Use_UART.fifo_Write_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \Use_UART.fifo_Write_i_2 
       (.I0(command[0]),
        .I1(command[2]),
        .I2(command[3]),
        .I3(command[1]),
        .O(\Use_UART.fifo_Write_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_UART.fifo_Write_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(\Use_UART.fifo_Write_i_1_n_0 ),
        .Q(\Use_UART.fifo_Write_reg_n_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000000)) 
    \Use_UART.tdo_reg[0]_i_3 
       (.I0(command[0]),
        .I1(\Use_UART.execute_i_3_n_0 ),
        .I2(command[6]),
        .I3(command[2]),
        .I4(\Use_UART.tdo_reg[0]_i_4_n_0 ),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(\Use_UART.tdo_reg[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \Use_UART.tdo_reg[0]_i_4 
       (.I0(command[3]),
        .I1(command[1]),
        .I2(command[7]),
        .O(\Use_UART.tdo_reg[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \Use_UART.tdo_reg[4]_i_2 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I1(command[0]),
        .I2(\Use_UART.execute_i_3_n_0 ),
        .I3(command[6]),
        .I4(command[2]),
        .I5(\Use_UART.tdo_reg[0]_i_4_n_0 ),
        .O(\Use_UART.tdo_reg[4]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tdo_reg_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .CLR(\^AR ),
        .D(\Use_UART.TX_FIFO_I_n_3 ),
        .Q(tdo_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tdo_reg_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .CLR(\^AR ),
        .D(\Use_UART.TX_FIFO_I_n_4 ),
        .Q(tdo_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tdo_reg_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .CLR(\^AR ),
        .D(\Use_UART.TX_FIFO_I_n_5 ),
        .Q(tdo_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tdo_reg_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .CLR(\^AR ),
        .D(\Use_UART.TX_FIFO_I_n_6 ),
        .Q(tdo_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tdo_reg_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .CLR(\^AR ),
        .D(\Use_UART.RX_FIFO_I_n_9 ),
        .Q(tdo_reg[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tdo_reg_reg[5] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .CLR(\^AR ),
        .D(\Use_UART.RX_FIFO_I_n_10 ),
        .Q(tdo_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tdo_reg_reg[6] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .CLR(\^AR ),
        .D(\Use_UART.TX_FIFO_I_n_7 ),
        .Q(tdo_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tdo_reg_reg[7] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .CLR(\^AR ),
        .D(\Use_UART.TX_FIFO_I_n_8 ),
        .Q(tdo_reg[7]));
  initial assign \Use_UART.tx_buffered_1_reg .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_UART.tx_buffered_1_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(tx_buffered),
        .Q(tx_buffered_1),
        .R(1'b0));
  initial assign \Use_UART.tx_buffered_2_reg .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_UART.tx_buffered_2_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(tx_buffered_1),
        .Q(tx_buffered_2),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    \Use_UART.tx_buffered_reg 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_37 ),
        .Q(tx_buffered));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[0] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(p_1_in),
        .Q(command_1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[1] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[1] ),
        .Q(command_1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[2] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[2] ),
        .Q(command_1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[3] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(p_0_in_3),
        .Q(command_1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[4] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[4] ),
        .Q(command_1[4]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[5] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[5] ),
        .Q(command_1[5]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[6] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[6] ),
        .Q(command_1[6]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[7] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[7] ),
        .Q(command_1[7]));
  FDCE #(
    .INIT(1'b0)) 
    \completion_ctrl_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_38 ),
        .Q(completion_ctrl));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    sel_n_i_1
       (.I0(\Use_BSCAN.PORT_Selector_reg[3] [2]),
        .I1(\Use_BSCAN.PORT_Selector_reg[3] [3]),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .I3(\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .I4(sel),
        .O(sel_n0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h4)) 
    sel_n_i_2
       (.I0(\Use_BSCAN.command[0]_i_1_n_0 ),
        .I1(CLK),
        .O(sel_with_scan_reset24_out));
  FDPE #(
    .INIT(1'b1)) 
    sel_n_reg
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .D(sel_n0),
        .PRE(sel_with_scan_reset24_out),
        .Q(sel_n));
  LUT3 #(
    .INIT(8'h48)) 
    \shift_Count[1]_i_1 
       (.I0(Q),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I2(A1),
        .O(p_0_in__0[1]));
  (* \PinAttr:I3:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h7080)) 
    \shift_Count[2]_i_1 
       (.I0(A1),
        .I1(Q),
        .I2(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I3(A2),
        .O(p_0_in__0[2]));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'h7F008000)) 
    \shift_Count[3]_i_1 
       (.I0(A2),
        .I1(Q),
        .I2(A1),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I4(A3),
        .O(p_0_in__0[3]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \shift_Count[4]_i_1 
       (.I0(A3),
        .I1(A1),
        .I2(Q),
        .I3(A2),
        .I4(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I5(shift_Count_reg__0),
        .O(p_0_in__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\shift_Count_reg[0]_0 ),
        .Q(Q));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(p_0_in__0[1]),
        .Q(A1));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(p_0_in__0[2]),
        .Q(A2));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(p_0_in__0[3]),
        .Q(A3));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(p_0_in__0[4]),
        .Q(shift_Count_reg__0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \tdi_shifter[0]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[3] [2]),
        .I1(\Use_BSCAN.PORT_Selector_reg[3] [3]),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .I3(\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .I4(sel),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .O(tdi_shifter0));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(Dbg_TDI_31),
        .Q(p_1_in));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(p_1_in),
        .Q(\tdi_shifter_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[1] ),
        .Q(\tdi_shifter_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[2] ),
        .Q(p_0_in_3));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(p_0_in_3),
        .Q(\tdi_shifter_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[5] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[4] ),
        .Q(\tdi_shifter_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[6] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[5] ),
        .Q(\tdi_shifter_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[7] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[6] ),
        .Q(\tdi_shifter_reg_n_0_[7] ));
endmodule

(* ORIG_REF_NAME = "MB_BSCANE2" *) 
module ublaze_sopc_mdm_0_0__MB_BSCANE2
   (Dbg_Capture_0,
    drck_i,
    Ext_JTAG_RESET,
    sel,
    \Use_BSCAN.Config_Reg_reg[30] ,
    Dbg_TDI_31,
    Dbg_Update_31,
    AR,
    shift_n_reset1_out,
    \Use_Serial_Unified_Completion.count_reg[5] ,
    \Use_Serial_Unified_Completion.completion_status_reg[10] ,
    \Use_UART.tdo_reg_reg[7] ,
    D,
    \shift_Count_reg[0] ,
    \Use_Serial_Unified_Completion.completion_status_reg[15] ,
    tdo,
    Scan_Reset,
    Scan_En,
    Scan_Reset_Sel,
    p_35_out__0,
    p_58_out__0,
    \Use_Serial_Unified_Completion.count_reg[5]_0 ,
    Q,
    \Use_Serial_Unified_Completion.sample_1_reg[15] );
  output Dbg_Capture_0;
  output drck_i;
  output Ext_JTAG_RESET;
  output sel;
  output \Use_BSCAN.Config_Reg_reg[30] ;
  output Dbg_TDI_31;
  output Dbg_Update_31;
  output [0:0]AR;
  output shift_n_reset1_out;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[5] ;
  output [0:0]\Use_Serial_Unified_Completion.completion_status_reg[10] ;
  output [0:0]\Use_UART.tdo_reg_reg[7] ;
  output [0:0]D;
  output [0:0]\shift_Count_reg[0] ;
  output [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15] ;
  input tdo;
  input Scan_Reset;
  input Scan_En;
  input Scan_Reset_Sel;
  input p_35_out__0;
  input p_58_out__0;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  input [0:0]Q;
  input [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15] ;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Capture_0;
  wire Dbg_TDI_31;
  wire \^Dbg_Update_31 ;
  wire Dbg_Update_31_BUFG;
  wire [0:0]Q;
  wire \Use_BSCAN.Config_Reg_reg[30] ;
  wire [0:0]\Use_Serial_Unified_Completion.completion_status_reg[10] ;
  wire [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15] ;
  wire [0:0]\Use_UART.tdo_reg_reg[7] ;
  wire drck_i;
  wire p_35_out__0;
  wire p_58_out__0;
  wire sel;
  wire [0:0]\shift_Count_reg[0] ;
  wire shift_n_reset1_out;
  wire tdo;
  wire \NLW_Use_E2.BSCANE2_I_RESET_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_RUNTEST_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_TCK_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_TMS_UNCONNECTED ;

  assign Dbg_Update_31 = Dbg_Update_31_BUFG;
  (* LOPT_BUFG_CLOCK *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  BUFG Dbg_Update_31_BUFG_inst
       (.I(\^Dbg_Update_31 ),
        .O(Dbg_Update_31_BUFG));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \Use_BSCAN.Config_Reg[30]_i_1 
       (.I0(\Use_BSCAN.Config_Reg_reg[30] ),
        .O(shift_n_reset1_out));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \Use_BSCAN.TDI_Shifter[3]_i_2 
       (.I0(sel),
        .O(AR));
  (* OPT_MODIFIED = "SWEEP BUFG_OPT" *) 
  (* box_type = "PRIMITIVE" *) 
  BSCANE2 #(
    .DISABLE_JTAG("FALSE"),
    .JTAG_CHAIN(2)) 
    \Use_E2.BSCANE2_I 
       (.CAPTURE(Dbg_Capture_0),
        .DRCK(drck_i),
        .RESET(\NLW_Use_E2.BSCANE2_I_RESET_UNCONNECTED ),
        .RUNTEST(\NLW_Use_E2.BSCANE2_I_RUNTEST_UNCONNECTED ),
        .SEL(sel),
        .SHIFT(\Use_BSCAN.Config_Reg_reg[30] ),
        .TCK(\NLW_Use_E2.BSCANE2_I_TCK_UNCONNECTED ),
        .TDI(Dbg_TDI_31),
        .TDO(tdo),
        .TMS(\NLW_Use_E2.BSCANE2_I_TMS_UNCONNECTED ),
        .UPDATE(\^Dbg_Update_31 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_1 
       (.I0(\Use_BSCAN.Config_Reg_reg[30] ),
        .I1(Dbg_Capture_0),
        .I2(p_58_out__0),
        .O(\Use_Serial_Unified_Completion.completion_status_reg[10] ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_2 
       (.I0(Dbg_Capture_0),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[15] ),
        .O(\Use_Serial_Unified_Completion.completion_status_reg[15] ));
  LUT3 #(
    .INIT(8'hA8)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_1 
       (.I0(p_35_out__0),
        .I1(\Use_BSCAN.Config_Reg_reg[30] ),
        .I2(Dbg_Capture_0),
        .O(\Use_Serial_Unified_Completion.count_reg[5] ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \Use_Serial_Unified_Completion.count[5]_i_1 
       (.I0(Dbg_Capture_0),
        .I1(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .O(D));
  LUT2 #(
    .INIT(4'hE)) 
    \Use_UART.tdo_reg[0]_i_1 
       (.I0(Dbg_Capture_0),
        .I1(\Use_BSCAN.Config_Reg_reg[30] ),
        .O(\Use_UART.tdo_reg_reg[7] ));
  LUT2 #(
    .INIT(4'h2)) 
    \shift_Count[0]_i_1 
       (.I0(\Use_BSCAN.Config_Reg_reg[30] ),
        .I1(Q),
        .O(\shift_Count_reg[0] ));
endmodule

(* ORIG_REF_NAME = "MB_BUFG" *) 
module ublaze_sopc_mdm_0_0__MB_BUFG
   (Dbg_Clk_31,
    drck_i);
  output Dbg_Clk_31;
  input drck_i;

  wire Dbg_Clk_31;
  wire drck_i;

  (* box_type = "PRIMITIVE" *) 
  BUFG \Using_FPGA.Native 
       (.I(drck_i),
        .O(Dbg_Clk_31));
endmodule

(* ORIG_REF_NAME = "MB_FDC_1" *) 
module ublaze_sopc_mdm_0_0__MB_FDC_1
   (D_2,
    data_cmd_reset6_out,
    Dbg_Reg_En_0,
    p_35_out__0,
    set_Ext_BRK_reg,
    E,
    \Use_Serial_Unified_Completion.completion_block_reg ,
    CE,
    Debug_Rst_i0,
    shifting_Data1__0,
    \Use_Serial_Unified_Completion.mb_instr_error_reg ,
    \command_1_reg[7] ,
    D,
    \Use_Serial_Unified_Completion.sample_reg[15] ,
    \Use_Serial_Unified_Completion.sample_1_reg[10] ,
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg ,
    \Use_Serial_Unified_Completion.mb_instr_error_reg_0 ,
    \Use_Serial_Unified_Completion.mb_data_overrun_reg ,
    \Use_Serial_Unified_Completion.completion_block_reg_0 ,
    \Use_UART.tx_buffered_reg ,
    \completion_ctrl_reg[0] ,
    CLK,
    sel_n,
    \Use_Serial_Unified_Completion.completion_block_reg_1 ,
    Scan_En,
    Scan_Reset,
    Scan_Reset_Sel,
    Q,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    \tdi_shifter_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[3] ,
    sel,
    \Use_Serial_Unified_Completion.completion_status_reg[10] ,
    \Use_Serial_Unified_Completion.completion_status_reg[2] ,
    \Use_Serial_Unified_Completion.completion_status_reg[3] ,
    \Use_Serial_Unified_Completion.completion_status_reg[4] ,
    \Use_Serial_Unified_Completion.completion_status_reg[5] ,
    \Use_Serial_Unified_Completion.completion_status_reg[7] ,
    \Use_Serial_Unified_Completion.sample_reg[15]_0 ,
    \Use_BSCAN.command_reg[2] ,
    Dbg_TDO_0,
    \Use_Serial_Unified_Completion.count_reg[1] ,
    \Use_Serial_Unified_Completion.count_reg[1]_0 ,
    \Use_Serial_Unified_Completion.count_reg[5] ,
    p_3_out__10,
    completion_ctrl,
    in0);
  output D_2;
  output data_cmd_reset6_out;
  output [0:7]Dbg_Reg_En_0;
  output p_35_out__0;
  output set_Ext_BRK_reg;
  output [0:0]E;
  output \Use_Serial_Unified_Completion.completion_block_reg ;
  output CE;
  output Debug_Rst_i0;
  output shifting_Data1__0;
  output \Use_Serial_Unified_Completion.mb_instr_error_reg ;
  output [0:0]\command_1_reg[7] ;
  output [9:0]D;
  output [2:0]\Use_Serial_Unified_Completion.sample_reg[15] ;
  output [0:0]\Use_Serial_Unified_Completion.sample_1_reg[10] ;
  output \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  output \Use_Serial_Unified_Completion.mb_instr_error_reg_0 ;
  output \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  output \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  output \Use_UART.tx_buffered_reg ;
  output \completion_ctrl_reg[0] ;
  input CLK;
  input sel_n;
  input \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  input Scan_En;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input [7:0]Q;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input [7:0]\tdi_shifter_reg[0] ;
  input [3:0]\Use_BSCAN.PORT_Selector_reg[3] ;
  input sel;
  input [10:0]\Use_Serial_Unified_Completion.completion_status_reg[10] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[2] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[3] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[4] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[5] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[7] ;
  input [5:0]\Use_Serial_Unified_Completion.sample_reg[15]_0 ;
  input \Use_BSCAN.command_reg[2] ;
  input Dbg_TDO_0;
  input \Use_Serial_Unified_Completion.count_reg[1] ;
  input \Use_Serial_Unified_Completion.count_reg[1]_0 ;
  input \Use_Serial_Unified_Completion.count_reg[5] ;
  input p_3_out__10;
  input completion_ctrl;
  input in0;

  wire CE;
  wire CLK;
  wire [9:0]D;
  wire D_2;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_TDO_0;
  wire Debug_Rst_i0;
  wire [0:0]E;
  wire [7:0]Q;
  wire Q_1;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire [3:0]\Use_BSCAN.PORT_Selector_reg[3] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[2] ;
  wire \Use_Serial_Unified_Completion.completion_block_reg ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  wire [10:0]\Use_Serial_Unified_Completion.completion_status_reg[10] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[2] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[3] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[4] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[5] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[7] ;
  wire \Use_Serial_Unified_Completion.count_reg[1] ;
  wire \Use_Serial_Unified_Completion.count_reg[1]_0 ;
  wire \Use_Serial_Unified_Completion.count_reg[5] ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  wire [0:0]\Use_Serial_Unified_Completion.sample_1_reg[10] ;
  wire [2:0]\Use_Serial_Unified_Completion.sample_reg[15] ;
  wire [5:0]\Use_Serial_Unified_Completion.sample_reg[15]_0 ;
  wire \Use_UART.tx_buffered_i_2_n_0 ;
  wire \Use_UART.tx_buffered_reg ;
  wire \Using_FPGA.Native_i_2_n_0 ;
  wire [0:0]\command_1_reg[7] ;
  wire completion_ctrl;
  wire completion_ctrl0;
  wire \completion_ctrl_reg[0] ;
  wire data_cmd_reset6_out;
  wire in0;
  wire p_35_out__0;
  wire p_3_out__10;
  wire sel;
  wire sel_n;
  wire set_Ext_BRK_reg;
  wire shifting_Data1__0;
  wire [7:0]\tdi_shifter_reg[0] ;

  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[0]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(Q[7]),
        .O(Dbg_Reg_En_0[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[1]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(Q[6]),
        .O(Dbg_Reg_En_0[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[2]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(Q[5]),
        .O(Dbg_Reg_En_0[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[3]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(Q[4]),
        .O(Dbg_Reg_En_0[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[4]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(Q[3]),
        .O(Dbg_Reg_En_0[4]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[5]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(Q[2]),
        .O(Dbg_Reg_En_0[5]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[6]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(Q[1]),
        .O(Dbg_Reg_En_0[6]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[7]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(Q[0]),
        .O(Dbg_Reg_En_0[7]));
  LUT2 #(
    .INIT(4'h2)) 
    Dbg_Shift_31_INST_0_i_2
       (.I0(Q_1),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .O(set_Ext_BRK_reg));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    Ext_NM_BRK_i_i_1
       (.I0(set_Ext_BRK_reg),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\Use_BSCAN.command_reg[0] ),
        .O(Debug_Rst_i0));
  LUT6 #(
    .INIT(64'hDFDFDFDF03000000)) 
    \Use_Serial_Unified_Completion.completion_block_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I2(completion_ctrl0),
        .I3(p_3_out__10),
        .I4(completion_ctrl),
        .I5(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .O(\Use_Serial_Unified_Completion.completion_block_reg_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h8F88)) 
    \Use_Serial_Unified_Completion.completion_status[0]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[10] [1]),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[10] [0]),
        .I3(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h00200000)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_3 
       (.I0(Q_1),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\Use_BSCAN.command_reg[2] ),
        .O(\Use_Serial_Unified_Completion.completion_block_reg ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[1]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [1]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[10] [0]),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [2]),
        .O(D[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hFFFF6A006A006A00)) 
    \Use_Serial_Unified_Completion.completion_status[2]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [2]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[10] [1]),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[10] [0]),
        .I3(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[10] [3]),
        .O(D[2]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[3]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [3]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[2] ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [4]),
        .O(D[3]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[4]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [4]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[3] ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [5]),
        .O(D[4]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[5]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [5]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[4] ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [6]),
        .O(D[5]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFF484848)) 
    \Use_Serial_Unified_Completion.completion_status[6]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [6]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[5] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [7]),
        .O(D[6]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hFFFF488848884888)) 
    \Use_Serial_Unified_Completion.completion_status[7]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [7]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[5] ),
        .I3(\Use_Serial_Unified_Completion.completion_status_reg[10] [6]),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[10] [8]),
        .O(D[7]));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hFF484848)) 
    \Use_Serial_Unified_Completion.completion_status[8]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [8]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[7] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [9]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h00F100F1FF000000)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_1),
        .I2(completion_ctrl0),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(E));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hFFFF488848884888)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_2 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [9]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[7] ),
        .I3(\Use_Serial_Unified_Completion.completion_status_reg[10] [8]),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[10] [10]),
        .O(D[9]));
  LUT5 #(
    .INIT(32'h00800000)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_3 
       (.I0(Q[2]),
        .I1(Q_1),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\Use_BSCAN.command_reg[2] ),
        .O(completion_ctrl0));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(set_Ext_BRK_reg),
        .I4(Q[1]),
        .I5(\Use_BSCAN.command_reg[0] ),
        .O(p_35_out__0));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \Use_Serial_Unified_Completion.count[0]_i_2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(set_Ext_BRK_reg),
        .I4(Q[1]),
        .I5(\Use_BSCAN.command_reg[0] ),
        .O(shifting_Data1__0));
  LUT6 #(
    .INIT(64'h053F0F3F05000000)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_1 
       (.I0(Dbg_TDO_0),
        .I1(completion_ctrl0),
        .I2(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I3(p_35_out__0),
        .I4(\Use_Serial_Unified_Completion.count_reg[5] ),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [2]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_reg ));
  LUT6 #(
    .INIT(64'h00BB033300880000)) 
    \Use_Serial_Unified_Completion.mb_instr_error_i_1 
       (.I0(Dbg_TDO_0),
        .I1(\Use_Serial_Unified_Completion.count_reg[1]_0 ),
        .I2(completion_ctrl0),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I4(shifting_Data1__0),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [1]),
        .O(\Use_Serial_Unified_Completion.mb_instr_error_reg_0 ));
  LUT6 #(
    .INIT(64'h00BB033300880000)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_1 
       (.I0(Dbg_TDO_0),
        .I1(\Use_Serial_Unified_Completion.count_reg[1] ),
        .I2(completion_ctrl0),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I4(shifting_Data1__0),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [0]),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_reg ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_3 
       (.I0(Q[1]),
        .I1(Q_1),
        .I2(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\Use_Serial_Unified_Completion.mb_instr_error_reg ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* \PinAttr:I1:HOLD_DETOUR  = "178" *) 
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[13]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [3]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [0]));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[14]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [4]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[15]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [5]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [2]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hDFFFF7FF)) 
    \Use_Serial_Unified_Completion.sample_1[15]_i_2 
       (.I0(\Use_BSCAN.command_reg[2] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q_1),
        .I4(Q[2]),
        .O(\Use_Serial_Unified_Completion.sample_1_reg[10] ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \Use_UART.execute_i_2 
       (.I0(Q_1),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .O(data_cmd_reset6_out));
  LUT4 #(
    .INIT(16'hBF80)) 
    \Use_UART.tx_buffered_i_1 
       (.I0(\tdi_shifter_reg[0] [7]),
        .I1(\Use_UART.tx_buffered_i_2_n_0 ),
        .I2(\Use_BSCAN.command_reg[0] ),
        .I3(in0),
        .O(\Use_UART.tx_buffered_reg ));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \Use_UART.tx_buffered_i_2 
       (.I0(Q_1),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(\Use_UART.tx_buffered_i_2_n_0 ));
  (* XILINX_LEGACY_PRIM = "FDC_1" *) 
  (* box_type = "PRIMITIVE" *) 
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Using_FPGA.Native 
       (.C(CLK),
        .CE(1'b1),
        .CLR(sel_n),
        .D(D_2),
        .Q(Q_1));
  LUT5 #(
    .INIT(32'h00000800)) 
    \Using_FPGA.Native_i_1 
       (.I0(\Using_FPGA.Native_i_2_n_0 ),
        .I1(\tdi_shifter_reg[0] [3]),
        .I2(\tdi_shifter_reg[0] [2]),
        .I3(\tdi_shifter_reg[0] [0]),
        .I4(\tdi_shifter_reg[0] [1]),
        .O(CE));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__3 
       (.I0(Q_1),
        .O(D_2));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \Using_FPGA.Native_i_2 
       (.I0(\tdi_shifter_reg[0] [5]),
        .I1(\tdi_shifter_reg[0] [4]),
        .I2(\tdi_shifter_reg[0] [6]),
        .I3(\tdi_shifter_reg[0] [7]),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I5(Q_1),
        .O(\Using_FPGA.Native_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \command_1[0]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[3] [2]),
        .I1(\Use_BSCAN.PORT_Selector_reg[3] [3]),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .I3(\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .I4(sel),
        .I5(set_Ext_BRK_reg),
        .O(\command_1_reg[7] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \completion_ctrl[0]_i_1 
       (.I0(\tdi_shifter_reg[0] [7]),
        .I1(completion_ctrl0),
        .I2(completion_ctrl),
        .O(\completion_ctrl_reg[0] ));
endmodule

(* ORIG_REF_NAME = "MB_FDRE_1" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_1
   (sync,
    \Use_Serial_Unified_Completion.mb_instr_error_reg ,
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg ,
    E,
    D_2,
    CE,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_Serial_Unified_Completion.count_reg[1] ,
    \Use_Serial_Unified_Completion.count_reg[0] ,
    \Use_BSCAN.command_reg[6] ,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    \Use_BSCAN.command_reg[5] ,
    \Using_FPGA.Native_0 ,
    Q);
  output sync;
  output \Use_Serial_Unified_Completion.mb_instr_error_reg ;
  output \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  output [0:0]E;
  input D_2;
  input CE;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_Serial_Unified_Completion.count_reg[1] ;
  input \Use_Serial_Unified_Completion.count_reg[0] ;
  input \Use_BSCAN.command_reg[6] ;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input \Use_BSCAN.command_reg[5] ;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire CE;
  wire D_2;
  wire [0:0]E;
  wire [0:0]Q;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[5] ;
  wire \Use_BSCAN.command_reg[6] ;
  wire \Use_Serial_Unified_Completion.count_reg[0] ;
  wire \Use_Serial_Unified_Completion.count_reg[1] ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  wire \Using_FPGA.Native_0 ;
  wire sync;

  LUT6 #(
    .INIT(64'hFFEFFFFF00000000)) 
    Dbg_Shift_31_INST_0
       (.I0(sync),
        .I1(\Use_BSCAN.command_reg[5] ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(Q),
        .I4(\Use_BSCAN.command_reg[0] ),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \Use_Serial_Unified_Completion.mb_instr_error_i_2 
       (.I0(\Use_Serial_Unified_Completion.count_reg[1] ),
        .I1(\Use_Serial_Unified_Completion.count_reg[0] ),
        .I2(sync),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_BSCAN.command_reg[0] ),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(\Use_Serial_Unified_Completion.mb_instr_error_reg ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_2 
       (.I0(\Use_Serial_Unified_Completion.count_reg[1] ),
        .I1(\Use_Serial_Unified_Completion.count_reg[0] ),
        .I2(sync),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_BSCAN.command_reg[0] ),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_reg ));
  (* XILINX_LEGACY_PRIM = "FDRE_1" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Using_FPGA.Native 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(CE),
        .D(1'b1),
        .Q(sync),
        .R(D_2));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_15
   (Addr,
    S,
    \Use_Uart.reset_RX_FIFO_reg ,
    data_Exists_I_reg,
    O,
    S_AXI_ACLK,
    \Using_FPGA.Native_0 ,
    \Use_UART.fifo_Write_reg ,
    bus2ip_rdce);
  output [0:0]Addr;
  output S;
  input \Use_Uart.reset_RX_FIFO_reg ;
  input data_Exists_I_reg;
  input O;
  input S_AXI_ACLK;
  input [2:0]\Using_FPGA.Native_0 ;
  input \Use_UART.fifo_Write_reg ;
  input [0:0]bus2ip_rdce;

  wire [0:0]Addr;
  wire O;
  wire S;
  wire S_AXI_ACLK;
  wire \Use_UART.fifo_Write_reg ;
  wire \Use_Uart.reset_RX_FIFO_reg ;
  wire [2:0]\Using_FPGA.Native_0 ;
  wire [0:0]bus2ip_rdce;
  wire data_Exists_I_reg;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(S_AXI_ACLK),
        .CE(data_Exists_I_reg),
        .D(O),
        .Q(Addr),
        .R(\Use_Uart.reset_RX_FIFO_reg ));
  LUT6 #(
    .INIT(64'h55555554AAAAAAAA)) 
    \Using_FPGA.Native_I1_i_1__2 
       (.I0(Addr),
        .I1(\Using_FPGA.Native_0 [1]),
        .I2(\Using_FPGA.Native_0 [0]),
        .I3(\Using_FPGA.Native_0 [2]),
        .I4(\Use_UART.fifo_Write_reg ),
        .I5(bus2ip_rdce),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_17
   (\Using_FPGA.Native_0 ,
    S,
    \Use_Uart.reset_RX_FIFO_reg ,
    data_Exists_I_reg,
    O,
    S_AXI_ACLK,
    Addr,
    \Use_UART.fifo_Write_reg ,
    bus2ip_rdce);
  output [0:0]\Using_FPGA.Native_0 ;
  output S;
  input \Use_Uart.reset_RX_FIFO_reg ;
  input data_Exists_I_reg;
  input O;
  input S_AXI_ACLK;
  input [2:0]Addr;
  input \Use_UART.fifo_Write_reg ;
  input [0:0]bus2ip_rdce;

  wire [2:0]Addr;
  wire O;
  wire S;
  wire S_AXI_ACLK;
  wire \Use_UART.fifo_Write_reg ;
  wire \Use_Uart.reset_RX_FIFO_reg ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]bus2ip_rdce;
  wire data_Exists_I_reg;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(S_AXI_ACLK),
        .CE(data_Exists_I_reg),
        .D(O),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Use_Uart.reset_RX_FIFO_reg ));
  LUT6 #(
    .INIT(64'h55555554AAAAAAAA)) 
    \Using_FPGA.Native_I1_i_1__3 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(Addr[1]),
        .I2(Addr[0]),
        .I3(Addr[2]),
        .I4(\Use_UART.fifo_Write_reg ),
        .I5(bus2ip_rdce),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_19
   (Addr,
    D,
    RX_Buffer_Full,
    S,
    CI,
    data_Exists_I_reg,
    \Use_Uart.reset_RX_FIFO_reg ,
    data_Exists_I_reg_0,
    O,
    S_AXI_ACLK,
    \Use_UART.tdo_reg_reg[3] ,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.command_reg[0] ,
    Data_Out,
    \Use_BSCAN.command_reg[0]_0 ,
    \Using_FPGA.Native_0 ,
    \Use_UART.fifo_Write_reg ,
    bus2ip_rdce,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg );
  output [0:0]Addr;
  output [0:0]D;
  output RX_Buffer_Full;
  output S;
  output CI;
  output data_Exists_I_reg;
  input \Use_Uart.reset_RX_FIFO_reg ;
  input data_Exists_I_reg_0;
  input O;
  input S_AXI_ACLK;
  input [0:0]\Use_UART.tdo_reg_reg[3] ;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.command_reg[0] ;
  input [0:0]Data_Out;
  input \Use_BSCAN.command_reg[0]_0 ;
  input [2:0]\Using_FPGA.Native_0 ;
  input \Use_UART.fifo_Write_reg ;
  input [0:0]bus2ip_rdce;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;

  wire [0:0]Addr;
  wire Bus_RNW_reg;
  wire CI;
  wire [0:0]D;
  wire [0:0]Data_Out;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire O;
  wire RX_Buffer_Full;
  wire S;
  wire S_AXI_ACLK;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[0]_0 ;
  wire \Use_UART.fifo_Write_reg ;
  wire [0:0]\Use_UART.tdo_reg_reg[3] ;
  wire \Use_Uart.reset_RX_FIFO_reg ;
  wire [2:0]\Using_FPGA.Native_0 ;
  wire buffer_Empty__2;
  wire [0:0]bus2ip_rdce;
  wire data_Exists_I_reg;
  wire data_Exists_I_reg_0;

  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \Use_UART.tdo_reg[4]_i_1 
       (.I0(\Use_UART.tdo_reg_reg[3] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I2(\Use_BSCAN.command_reg[0] ),
        .I3(RX_Buffer_Full),
        .I4(Data_Out),
        .I5(\Use_BSCAN.command_reg[0]_0 ),
        .O(D));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(S_AXI_ACLK),
        .CE(data_Exists_I_reg_0),
        .D(O),
        .Q(Addr),
        .R(\Use_Uart.reset_RX_FIFO_reg ));
  LUT6 #(
    .INIT(64'h55555554AAAAAAAA)) 
    \Using_FPGA.Native_I1_i_1__4 
       (.I0(Addr),
        .I1(\Using_FPGA.Native_0 [0]),
        .I2(\Using_FPGA.Native_0 [2]),
        .I3(\Using_FPGA.Native_0 [1]),
        .I4(\Use_UART.fifo_Write_reg ),
        .I5(bus2ip_rdce),
        .O(S));
  LUT6 #(
    .INIT(64'hBFFFFFFF00000000)) 
    \Using_FPGA.Native_I1_i_2__0 
       (.I0(bus2ip_rdce),
        .I1(Addr),
        .I2(\Using_FPGA.Native_0 [0]),
        .I3(\Using_FPGA.Native_0 [2]),
        .I4(\Using_FPGA.Native_0 [1]),
        .I5(\Use_UART.fifo_Write_reg ),
        .O(CI));
  LUT6 #(
    .INIT(64'h00000000FF2AAAAA)) 
    data_Exists_I_i_1__0
       (.I0(data_Exists_I_reg_0),
        .I1(Bus_RNW_reg),
        .I2(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I3(\Use_UART.fifo_Write_reg ),
        .I4(buffer_Empty__2),
        .I5(\Use_Uart.reset_RX_FIFO_reg ),
        .O(data_Exists_I_reg));
  LUT4 #(
    .INIT(16'h0001)) 
    data_Exists_I_i_2
       (.I0(Addr),
        .I1(\Using_FPGA.Native_0 [0]),
        .I2(\Using_FPGA.Native_0 [2]),
        .I3(\Using_FPGA.Native_0 [1]),
        .O(buffer_Empty__2));
  LUT4 #(
    .INIT(16'h8000)) 
    \s_axi_rdata_i[1]_i_2 
       (.I0(Addr),
        .I1(\Using_FPGA.Native_0 [0]),
        .I2(\Using_FPGA.Native_0 [2]),
        .I3(\Using_FPGA.Native_0 [1]),
        .O(RX_Buffer_Full));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_2
   (Addr,
    S,
    \Use_Uart.reset_TX_FIFO_reg ,
    data_Exists_I_reg,
    O,
    S_AXI_ACLK,
    \Using_FPGA.Native_0 ,
    FIFO_Write,
    \Use_UART.fifo_Read_reg );
  output [0:0]Addr;
  output S;
  input \Use_Uart.reset_TX_FIFO_reg ;
  input data_Exists_I_reg;
  input O;
  input S_AXI_ACLK;
  input [2:0]\Using_FPGA.Native_0 ;
  input FIFO_Write;
  input \Use_UART.fifo_Read_reg ;

  wire [0:0]Addr;
  wire FIFO_Write;
  wire O;
  wire S;
  wire S_AXI_ACLK;
  wire \Use_UART.fifo_Read_reg ;
  wire \Use_Uart.reset_TX_FIFO_reg ;
  wire [2:0]\Using_FPGA.Native_0 ;
  wire data_Exists_I_reg;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(S_AXI_ACLK),
        .CE(data_Exists_I_reg),
        .D(O),
        .Q(Addr),
        .R(\Use_Uart.reset_TX_FIFO_reg ));
  LUT6 #(
    .INIT(64'h55555554AAAAAAAA)) 
    \Using_FPGA.Native_I1_i_1 
       (.I0(Addr),
        .I1(\Using_FPGA.Native_0 [1]),
        .I2(\Using_FPGA.Native_0 [0]),
        .I3(\Using_FPGA.Native_0 [2]),
        .I4(FIFO_Write),
        .I5(\Use_UART.fifo_Read_reg ),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_21
   (\Using_FPGA.Native_0 ,
    LI,
    \Use_Uart.reset_RX_FIFO_reg ,
    data_Exists_I_reg,
    sum_A_0,
    S_AXI_ACLK,
    Addr,
    \Use_UART.fifo_Write_reg ,
    bus2ip_rdce);
  output [0:0]\Using_FPGA.Native_0 ;
  output LI;
  input \Use_Uart.reset_RX_FIFO_reg ;
  input data_Exists_I_reg;
  input sum_A_0;
  input S_AXI_ACLK;
  input [2:0]Addr;
  input \Use_UART.fifo_Write_reg ;
  input [0:0]bus2ip_rdce;

  wire [2:0]Addr;
  wire LI;
  wire S_AXI_ACLK;
  wire \Use_UART.fifo_Write_reg ;
  wire \Use_Uart.reset_RX_FIFO_reg ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]bus2ip_rdce;
  wire data_Exists_I_reg;
  wire sum_A_0;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(S_AXI_ACLK),
        .CE(data_Exists_I_reg),
        .D(sum_A_0),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Use_Uart.reset_RX_FIFO_reg ));
  LUT6 #(
    .INIT(64'h55555554AAAAAAAA)) 
    \Using_FPGA.Native_i_1__2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(Addr[0]),
        .I2(Addr[2]),
        .I3(Addr[1]),
        .I4(\Use_UART.fifo_Write_reg ),
        .I5(bus2ip_rdce),
        .O(LI));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_3
   (\Using_FPGA.Native_0 ,
    S,
    \Use_Uart.reset_TX_FIFO_reg ,
    data_Exists_I_reg,
    O,
    S_AXI_ACLK,
    Addr,
    FIFO_Write,
    \Use_UART.fifo_Read_reg );
  output [0:0]\Using_FPGA.Native_0 ;
  output S;
  input \Use_Uart.reset_TX_FIFO_reg ;
  input data_Exists_I_reg;
  input O;
  input S_AXI_ACLK;
  input [2:0]Addr;
  input FIFO_Write;
  input \Use_UART.fifo_Read_reg ;

  wire [2:0]Addr;
  wire FIFO_Write;
  wire O;
  wire S;
  wire S_AXI_ACLK;
  wire \Use_UART.fifo_Read_reg ;
  wire \Use_Uart.reset_TX_FIFO_reg ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire data_Exists_I_reg;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(S_AXI_ACLK),
        .CE(data_Exists_I_reg),
        .D(O),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Use_Uart.reset_TX_FIFO_reg ));
  LUT6 #(
    .INIT(64'h55555554AAAAAAAA)) 
    \Using_FPGA.Native_I1_i_1__0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(Addr[1]),
        .I2(Addr[0]),
        .I3(Addr[2]),
        .I4(FIFO_Write),
        .I5(\Use_UART.fifo_Read_reg ),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_5
   (Addr,
    D,
    tx_Buffer_Full,
    S,
    CI,
    data_Exists_I_reg,
    \Use_Uart.reset_TX_FIFO_reg ,
    data_Exists_I_reg_0,
    O,
    S_AXI_ACLK,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.command_reg[0] ,
    Data_Out,
    \Use_BSCAN.command_reg[0]_0 ,
    \Using_FPGA.Native_0 ,
    FIFO_Write,
    \Use_UART.fifo_Read_reg ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    out);
  output [0:0]Addr;
  output [0:0]D;
  output tx_Buffer_Full;
  output S;
  output CI;
  output data_Exists_I_reg;
  input \Use_Uart.reset_TX_FIFO_reg ;
  input data_Exists_I_reg_0;
  input O;
  input S_AXI_ACLK;
  input [0:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.command_reg[0] ;
  input [0:0]Data_Out;
  input \Use_BSCAN.command_reg[0]_0 ;
  input [2:0]\Using_FPGA.Native_0 ;
  input FIFO_Write;
  input \Use_UART.fifo_Read_reg ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input out;

  wire [0:0]Addr;
  wire Bus_RNW_reg;
  wire CI;
  wire [0:0]D;
  wire [0:0]Data_Out;
  wire FIFO_Write;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire O;
  wire [0:0]Q;
  wire S;
  wire S_AXI_ACLK;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[0]_0 ;
  wire \Use_UART.fifo_Read_reg ;
  wire \Use_Uart.reset_TX_FIFO_reg ;
  wire [2:0]\Using_FPGA.Native_0 ;
  wire buffer_Empty__2;
  wire data_Exists_I_reg;
  wire data_Exists_I_reg_0;
  wire out;
  wire tx_Buffer_Full;

  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \Use_UART.tdo_reg[6]_i_1 
       (.I0(Q),
        .I1(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I2(\Use_BSCAN.command_reg[0] ),
        .I3(tx_Buffer_Full),
        .I4(Data_Out),
        .I5(\Use_BSCAN.command_reg[0]_0 ),
        .O(D));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(S_AXI_ACLK),
        .CE(data_Exists_I_reg_0),
        .D(O),
        .Q(Addr),
        .R(\Use_Uart.reset_TX_FIFO_reg ));
  LUT6 #(
    .INIT(64'h55555554AAAAAAAA)) 
    \Using_FPGA.Native_I1_i_1__1 
       (.I0(Addr),
        .I1(\Using_FPGA.Native_0 [0]),
        .I2(\Using_FPGA.Native_0 [2]),
        .I3(\Using_FPGA.Native_0 [1]),
        .I4(FIFO_Write),
        .I5(\Use_UART.fifo_Read_reg ),
        .O(S));
  LUT5 #(
    .INIT(32'h0B000000)) 
    \Using_FPGA.Native_I1_i_2 
       (.I0(\Use_UART.fifo_Read_reg ),
        .I1(tx_Buffer_Full),
        .I2(Bus_RNW_reg),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(out),
        .O(CI));
  LUT5 #(
    .INIT(32'h0000F2AA)) 
    data_Exists_I_i_1
       (.I0(data_Exists_I_reg_0),
        .I1(\Use_UART.fifo_Read_reg ),
        .I2(FIFO_Write),
        .I3(buffer_Empty__2),
        .I4(\Use_Uart.reset_TX_FIFO_reg ),
        .O(data_Exists_I_reg));
  LUT4 #(
    .INIT(16'h0001)) 
    data_Exists_I_i_2__0
       (.I0(Addr),
        .I1(\Using_FPGA.Native_0 [0]),
        .I2(\Using_FPGA.Native_0 [2]),
        .I3(\Using_FPGA.Native_0 [1]),
        .O(buffer_Empty__2));
  LUT4 #(
    .INIT(16'h8000)) 
    \s_axi_rdata_i[3]_i_2 
       (.I0(Addr),
        .I1(\Using_FPGA.Native_0 [0]),
        .I2(\Using_FPGA.Native_0 [2]),
        .I3(\Using_FPGA.Native_0 [1]),
        .O(tx_Buffer_Full));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_mdm_0_0__MB_FDRE_7
   (\Using_FPGA.Native_0 ,
    LI,
    \Use_Uart.reset_TX_FIFO_reg ,
    data_Exists_I_reg,
    sum_A_0,
    S_AXI_ACLK,
    Addr,
    FIFO_Write,
    \Use_UART.fifo_Read_reg );
  output [0:0]\Using_FPGA.Native_0 ;
  output LI;
  input \Use_Uart.reset_TX_FIFO_reg ;
  input data_Exists_I_reg;
  input sum_A_0;
  input S_AXI_ACLK;
  input [2:0]Addr;
  input FIFO_Write;
  input \Use_UART.fifo_Read_reg ;

  wire [2:0]Addr;
  wire FIFO_Write;
  wire LI;
  wire S_AXI_ACLK;
  wire \Use_UART.fifo_Read_reg ;
  wire \Use_Uart.reset_TX_FIFO_reg ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire data_Exists_I_reg;
  wire sum_A_0;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(S_AXI_ACLK),
        .CE(data_Exists_I_reg),
        .D(sum_A_0),
        .Q(\Using_FPGA.Native_0 ),
        .R(\Use_Uart.reset_TX_FIFO_reg ));
  LUT6 #(
    .INIT(64'h55555554AAAAAAAA)) 
    \Using_FPGA.Native_i_1__0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(Addr[0]),
        .I2(Addr[2]),
        .I3(Addr[1]),
        .I4(FIFO_Write),
        .I5(\Use_UART.fifo_Read_reg ),
        .O(LI));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY
   (LO,
    O,
    S,
    Addr,
    CI,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output LO;
  output O;
  input S;
  input [0:0]Addr;
  input CI;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;
  output lopt_8;
  input lopt_9;

  wire [0:0]Addr;
  wire CI;
  wire O;
  wire S;
  wire lopt_10;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [3:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign lopt_10 = lopt_9;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_7 = \^lopt_8 ;
  assign lopt_8 = \^lopt_9 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(1'b0),
        .CO(\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(CI),
        .DI({\NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED [3],\^lopt_5 ,\^lopt_2 ,Addr}),
        .O({\^lopt_9 ,\^lopt_8 ,\^lopt_7 ,O}),
        .S({lopt_10,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_16
   (LO,
    O,
    S,
    Addr,
    CI,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output LO;
  output O;
  input S;
  input [0:0]Addr;
  input CI;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;
  output lopt_8;
  input lopt_9;

  wire [0:0]Addr;
  wire CI;
  wire O;
  wire S;
  wire lopt_10;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [3:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign lopt_10 = lopt_9;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_7 = \^lopt_8 ;
  assign lopt_8 = \^lopt_9 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(1'b0),
        .CO(\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(CI),
        .DI({\NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED [3],\^lopt_5 ,\^lopt_2 ,Addr}),
        .O({\^lopt_9 ,\^lopt_8 ,\^lopt_7 ,O}),
        .S({lopt_10,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_18
   (LO,
    O,
    S,
    \Using_FPGA.Native ,
    CI,
    lopt,
    lopt_1);
  output LO;
  output O;
  input S;
  input [0:0]\Using_FPGA.Native ;
  input CI;
  input lopt;
  input lopt_1;

  wire O;

  assign O = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_20
   (LO,
    O,
    S,
    Addr,
    CI,
    lopt,
    lopt_1);
  output LO;
  output O;
  input S;
  input [0:0]Addr;
  input CI;
  input lopt;
  input lopt_1;

  wire O;

  assign O = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_4
   (LO,
    O,
    S,
    \Using_FPGA.Native ,
    CI,
    lopt,
    lopt_1);
  output LO;
  output O;
  input S;
  input [0:0]\Using_FPGA.Native ;
  input CI;
  input lopt;
  input lopt_1;

  wire O;

  assign O = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_6
   (LO,
    O,
    S,
    Addr,
    CI,
    lopt,
    lopt_1);
  output LO;
  output O;
  input S;
  input [0:0]Addr;
  input CI;
  input lopt;
  input lopt_1;

  wire O;

  assign O = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E
   (sel_n_reg,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] );
  output sel_n_reg;
  input [3:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;

  wire [3:0]Q;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire sel_n_reg;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_Config_SRL16E.SRL16E_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0167),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0] ),
        .D(1'b0),
        .Q(sel_n_reg));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized1
   (config_TDO_2,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] );
  output config_TDO_2;
  input [3:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;

  wire [3:0]Q;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire config_TDO_2;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_Config_SRL16E.SRL16E_2/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h42A7),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0] ),
        .D(1'b0),
        .Q(config_TDO_2));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized3
   (Q0_out,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] );
  output Q0_out;
  input [3:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;

  wire [3:0]Q;
  wire Q0_out;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_ID_SRL16E.SRL16E_ID_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h4443),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0] ),
        .D(1'b0),
        .Q(Q0_out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized5
   (tdo,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[2] ,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.command_reg[0]_0 ,
    \Use_BSCAN.command_reg[6] ,
    Dbg_TDO_0,
    \Use_BSCAN.command_reg[5] ,
    \Use_BSCAN.command_reg[5]_0 ,
    config_TDO_2,
    Q0_out,
    \shift_Count_reg[0] );
  output tdo;
  input [4:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[2] ;
  input [0:0]\Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input \Use_BSCAN.command_reg[0] ;
  input [2:0]\Use_BSCAN.command_reg[0]_0 ;
  input \Use_BSCAN.command_reg[6] ;
  input Dbg_TDO_0;
  input \Use_BSCAN.command_reg[5] ;
  input \Use_BSCAN.command_reg[5]_0 ;
  input config_TDO_2;
  input Q0_out;
  input \shift_Count_reg[0] ;

  wire Dbg_TDO_0;
  wire ID_TDO_2;
  wire [4:0]Q;
  wire Q0_out;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire [0:0]\Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire \Use_BSCAN.PORT_Selector_reg[2] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire [2:0]\Use_BSCAN.command_reg[0]_0 ;
  wire \Use_BSCAN.command_reg[5] ;
  wire \Use_BSCAN.command_reg[5]_0 ;
  wire \Use_BSCAN.command_reg[6] ;
  wire \Use_E2.BSCANE2_I_i_5_n_0 ;
  wire \Use_E2.BSCANE2_I_i_8_n_0 ;
  wire config_TDO_2;
  wire \shift_Count_reg[0] ;
  wire tdo;

  LUT6 #(
    .INIT(64'hEAEEEAEEEAEEEAEA)) 
    \Use_E2.BSCANE2_I_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[2] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(\Use_BSCAN.command_reg[0] ),
        .I3(\Use_BSCAN.command_reg[0]_0 [2]),
        .I4(\Use_BSCAN.command_reg[6] ),
        .I5(\Use_E2.BSCANE2_I_i_5_n_0 ),
        .O(tdo));
  LUT5 #(
    .INIT(32'h2A2A3F00)) 
    \Use_E2.BSCANE2_I_i_5 
       (.I0(Dbg_TDO_0),
        .I1(\Use_BSCAN.command_reg[0]_0 [0]),
        .I2(\Use_BSCAN.command_reg[5] ),
        .I3(\Use_E2.BSCANE2_I_i_8_n_0 ),
        .I4(\Use_BSCAN.command_reg[5]_0 ),
        .O(\Use_E2.BSCANE2_I_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hCACAFFF0CACA0F00)) 
    \Use_E2.BSCANE2_I_i_8 
       (.I0(ID_TDO_2),
        .I1(config_TDO_2),
        .I2(\Use_BSCAN.command_reg[0]_0 [1]),
        .I3(Q0_out),
        .I4(Q[4]),
        .I5(\shift_Count_reg[0] ),
        .O(\Use_E2.BSCANE2_I_i_8_n_0 ));
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_ID_SRL16E.SRL16E_ID_2/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h584D),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0] ),
        .D(1'b0),
        .Q(ID_TDO_2));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7
   (D,
    CI,
    S_AXI_WDATA,
    Addr,
    S_AXI_ACLK,
    \Use_BSCAN.command_reg[0] );
  output [0:0]D;
  input CI;
  input [0:0]S_AXI_WDATA;
  input [0:3]Addr;
  input S_AXI_ACLK;
  input \Use_BSCAN.command_reg[0] ;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]D;
  wire [0:0]Data_Out;
  wire S_AXI_ACLK;
  wire [0:0]S_AXI_WDATA;
  wire \Use_BSCAN.command_reg[0] ;

  LUT2 #(
    .INIT(4'h8)) 
    \Use_UART.tdo_reg[0]_i_2 
       (.I0(\Use_BSCAN.command_reg[0] ),
        .I1(Data_Out),
        .O(D));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM[0].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(S_AXI_WDATA),
        .Q(Data_Out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_10
   (D,
    CI,
    S_AXI_WDATA,
    Addr,
    S_AXI_ACLK,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    Q);
  output [0:0]D;
  input CI;
  input [0:0]S_AXI_WDATA;
  input [0:3]Addr;
  input S_AXI_ACLK;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input [0:0]Q;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]D;
  wire [3:3]Data_Out;
  wire [0:0]Q;
  wire S_AXI_ACLK;
  wire [0:0]S_AXI_WDATA;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.command_reg[0] ;

  LUT4 #(
    .INIT(16'h8F88)) 
    \Use_UART.tdo_reg[3]_i_1 
       (.I0(Data_Out),
        .I1(\Use_BSCAN.command_reg[0] ),
        .I2(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I3(Q),
        .O(D));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM[3].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(S_AXI_WDATA),
        .Q(Data_Out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_11
   (\Use_UART.tdo_reg_reg[4] ,
    CI,
    S_AXI_WDATA,
    Addr,
    S_AXI_ACLK);
  output [0:0]\Use_UART.tdo_reg_reg[4] ;
  input CI;
  input [0:0]S_AXI_WDATA;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire S_AXI_ACLK;
  wire [0:0]S_AXI_WDATA;
  wire [0:0]\Use_UART.tdo_reg_reg[4] ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM[4].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(S_AXI_WDATA),
        .Q(\Use_UART.tdo_reg_reg[4] ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_12
   (\Use_UART.tdo_reg_reg[5] ,
    CI,
    S_AXI_WDATA,
    Addr,
    S_AXI_ACLK);
  output [0:0]\Use_UART.tdo_reg_reg[5] ;
  input CI;
  input [0:0]S_AXI_WDATA;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire S_AXI_ACLK;
  wire [0:0]S_AXI_WDATA;
  wire [0:0]\Use_UART.tdo_reg_reg[5] ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM[5].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(S_AXI_WDATA),
        .Q(\Use_UART.tdo_reg_reg[5] ));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_13
   (Data_Out,
    CI,
    S_AXI_WDATA,
    Addr,
    S_AXI_ACLK);
  output [0:0]Data_Out;
  input CI;
  input [0:0]S_AXI_WDATA;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Data_Out;
  wire S_AXI_ACLK;
  wire [0:0]S_AXI_WDATA;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM[6].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(S_AXI_WDATA),
        .Q(Data_Out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_14
   (D,
    CI,
    S_AXI_WDATA,
    Addr,
    S_AXI_ACLK,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.command_reg[0] ,
    data_Exists_I_reg,
    \Use_BSCAN.command_reg[0]_0 );
  output [0:0]D;
  input CI;
  input [0:0]S_AXI_WDATA;
  input [0:3]Addr;
  input S_AXI_ACLK;
  input [0:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.command_reg[0] ;
  input data_Exists_I_reg;
  input \Use_BSCAN.command_reg[0]_0 ;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]D;
  wire [7:7]Data_Out;
  wire [0:0]Q;
  wire S_AXI_ACLK;
  wire [0:0]S_AXI_WDATA;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[0]_0 ;
  wire data_Exists_I_reg;

  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \Use_UART.tdo_reg[7]_i_1 
       (.I0(Q),
        .I1(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I2(\Use_BSCAN.command_reg[0] ),
        .I3(data_Exists_I_reg),
        .I4(Data_Out),
        .I5(\Use_BSCAN.command_reg[0]_0 ),
        .O(D));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM[7].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(S_AXI_WDATA),
        .Q(Data_Out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_23
   (RX_Data,
    CI,
    Q,
    Addr,
    S_AXI_ACLK);
  output [0:0]RX_Data;
  input CI;
  input [0:0]Q;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Q;
  wire [0:0]RX_Data;
  wire S_AXI_ACLK;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM[0].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(Q),
        .Q(RX_Data));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_24
   (RX_Data,
    CI,
    Q,
    Addr,
    S_AXI_ACLK);
  output [0:0]RX_Data;
  input CI;
  input [0:0]Q;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Q;
  wire [0:0]RX_Data;
  wire S_AXI_ACLK;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM[1].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(Q),
        .Q(RX_Data));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_25
   (RX_Data,
    CI,
    Q,
    Addr,
    S_AXI_ACLK);
  output [0:0]RX_Data;
  input CI;
  input [0:0]Q;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Q;
  wire [0:0]RX_Data;
  wire S_AXI_ACLK;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM[2].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(Q),
        .Q(RX_Data));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_26
   (RX_Data,
    CI,
    Q,
    Addr,
    S_AXI_ACLK);
  output [0:0]RX_Data;
  input CI;
  input [0:0]Q;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Q;
  wire [0:0]RX_Data;
  wire S_AXI_ACLK;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM[3].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(Q),
        .Q(RX_Data));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_27
   (RX_Data,
    CI,
    Q,
    Addr,
    S_AXI_ACLK);
  output [0:0]RX_Data;
  input CI;
  input [0:0]Q;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Q;
  wire [0:0]RX_Data;
  wire S_AXI_ACLK;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM[4].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(Q),
        .Q(RX_Data));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_28
   (RX_Data,
    CI,
    Q,
    Addr,
    S_AXI_ACLK);
  output [0:0]RX_Data;
  input CI;
  input [0:0]Q;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Q;
  wire [0:0]RX_Data;
  wire S_AXI_ACLK;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM[5].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(Q),
        .Q(RX_Data));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_29
   (RX_Data,
    CI,
    Q,
    Addr,
    S_AXI_ACLK);
  output [0:0]RX_Data;
  input CI;
  input [0:0]Q;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Q;
  wire [0:0]RX_Data;
  wire S_AXI_ACLK;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM[6].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(Q),
        .Q(RX_Data));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_30
   (RX_Data,
    CI,
    Q,
    Addr,
    S_AXI_ACLK);
  output [0:0]RX_Data;
  input CI;
  input [0:0]Q;
  input [0:3]Addr;
  input S_AXI_ACLK;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]Q;
  wire [0:0]RX_Data;
  wire S_AXI_ACLK;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.RX_FIFO_I/FIFO_RAM[7].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(Q),
        .Q(RX_Data));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_8
   (D,
    CI,
    S_AXI_WDATA,
    Addr,
    S_AXI_ACLK,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    Q);
  output [0:0]D;
  input CI;
  input [0:0]S_AXI_WDATA;
  input [0:3]Addr;
  input S_AXI_ACLK;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input [0:0]Q;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]D;
  wire [1:1]Data_Out;
  wire [0:0]Q;
  wire S_AXI_ACLK;
  wire [0:0]S_AXI_WDATA;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.command_reg[0] ;

  LUT4 #(
    .INIT(16'h8F88)) 
    \Use_UART.tdo_reg[1]_i_1 
       (.I0(Data_Out),
        .I1(\Use_BSCAN.command_reg[0] ),
        .I2(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I3(Q),
        .O(D));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM[1].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(S_AXI_WDATA),
        .Q(Data_Out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_9
   (D,
    CI,
    S_AXI_WDATA,
    Addr,
    S_AXI_ACLK,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    Q);
  output [0:0]D;
  input CI;
  input [0:0]S_AXI_WDATA;
  input [0:3]Addr;
  input S_AXI_ACLK;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input [0:0]Q;

  wire [0:3]Addr;
  wire CI;
  wire [0:0]D;
  wire [2:2]Data_Out;
  wire [0:0]Q;
  wire S_AXI_ACLK;
  wire [0:0]S_AXI_WDATA;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.command_reg[0] ;

  LUT4 #(
    .INIT(16'h8F88)) 
    \Use_UART.tdo_reg[2]_i_1 
       (.I0(Data_Out),
        .I1(\Use_BSCAN.command_reg[0] ),
        .I2(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I3(Q),
        .O(D));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_UART.TX_FIFO_I/FIFO_RAM[2].D16.SRL16E_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Addr[0]),
        .A1(Addr[1]),
        .A2(Addr[2]),
        .A3(Addr[3]),
        .CE(CI),
        .CLK(S_AXI_ACLK),
        .D(S_AXI_WDATA),
        .Q(Data_Out));
endmodule

(* ORIG_REF_NAME = "MB_XORCY" *) 
module ublaze_sopc_mdm_0_0__MB_XORCY
   (sum_A_0,
    LI,
    LO,
    lopt);
  output sum_A_0;
  input LI;
  input LO;
  input lopt;

  wire sum_A_0;

  assign sum_A_0 = lopt;
endmodule

(* ORIG_REF_NAME = "MB_XORCY" *) 
module ublaze_sopc_mdm_0_0__MB_XORCY_22
   (sum_A_0,
    LI,
    LO,
    lopt);
  output sum_A_0;
  input LI;
  input LO;
  input lopt;

  wire sum_A_0;

  assign sum_A_0 = lopt;
endmodule

(* C_AVOID_PRIMITIVES = "0" *) (* C_BSCANID = "76547328" *) (* C_DATA_SIZE = "32" *) 
(* C_DBG_MEM_ACCESS = "0" *) (* C_DBG_REG_ACCESS = "0" *) (* C_DEBUG_INTERFACE = "0" *) 
(* C_EXT_TRIG_RESET_VALUE = "20'b11110001001000110100" *) (* C_FAMILY = "artix7" *) (* C_INTERCONNECT = "2" *) 
(* C_JTAG_CHAIN = "2" *) (* C_MB_DBG_PORTS = "1" *) (* C_M_AXIS_DATA_WIDTH = "32" *) 
(* C_M_AXIS_ID_WIDTH = "7" *) (* C_M_AXI_ADDR_WIDTH = "32" *) (* C_M_AXI_DATA_WIDTH = "32" *) 
(* C_M_AXI_THREAD_ID_WIDTH = "1" *) (* C_S_AXI_ACLK_FREQ_HZ = "50000000" *) (* C_S_AXI_ADDR_WIDTH = "4" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* C_TRACE_ASYNC_RESET = "0" *) (* C_TRACE_CLK_FREQ_HZ = "200000000" *) 
(* C_TRACE_CLK_OUT_PHASE = "90" *) (* C_TRACE_DATA_WIDTH = "32" *) (* C_TRACE_ID = "110" *) 
(* C_TRACE_OUTPUT = "0" *) (* C_TRACE_PROTOCOL = "1" *) (* C_USE_BSCAN = "0" *) 
(* C_USE_CONFIG_RESET = "0" *) (* C_USE_CROSS_TRIGGER = "0" *) (* C_USE_UART = "1" *) 
(* ORIG_REF_NAME = "MDM" *) 
module ublaze_sopc_mdm_0_0__MDM
   (Config_Reset,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    S_AXI_ACLK,
    S_AXI_ARESETN,
    M_AXI_ACLK,
    M_AXI_ARESETN,
    M_AXIS_ACLK,
    M_AXIS_ARESETN,
    Interrupt,
    Ext_BRK,
    Ext_NM_BRK,
    Debug_SYS_Rst,
    Trig_In_0,
    Trig_Ack_In_0,
    Trig_Out_0,
    Trig_Ack_Out_0,
    Trig_In_1,
    Trig_Ack_In_1,
    Trig_Out_1,
    Trig_Ack_Out_1,
    Trig_In_2,
    Trig_Ack_In_2,
    Trig_Out_2,
    Trig_Ack_Out_2,
    Trig_In_3,
    Trig_Ack_In_3,
    Trig_Out_3,
    Trig_Ack_Out_3,
    S_AXI_AWADDR,
    S_AXI_AWVALID,
    S_AXI_AWREADY,
    S_AXI_WDATA,
    S_AXI_WSTRB,
    S_AXI_WVALID,
    S_AXI_WREADY,
    S_AXI_BRESP,
    S_AXI_BVALID,
    S_AXI_BREADY,
    S_AXI_ARADDR,
    S_AXI_ARVALID,
    S_AXI_ARREADY,
    S_AXI_RDATA,
    S_AXI_RRESP,
    S_AXI_RVALID,
    S_AXI_RREADY,
    M_AXI_AWID,
    M_AXI_AWADDR,
    M_AXI_AWLEN,
    M_AXI_AWSIZE,
    M_AXI_AWBURST,
    M_AXI_AWLOCK,
    M_AXI_AWCACHE,
    M_AXI_AWPROT,
    M_AXI_AWQOS,
    M_AXI_AWVALID,
    M_AXI_AWREADY,
    M_AXI_WDATA,
    M_AXI_WSTRB,
    M_AXI_WLAST,
    M_AXI_WVALID,
    M_AXI_WREADY,
    M_AXI_BRESP,
    M_AXI_BID,
    M_AXI_BVALID,
    M_AXI_BREADY,
    M_AXI_ARID,
    M_AXI_ARADDR,
    M_AXI_ARLEN,
    M_AXI_ARSIZE,
    M_AXI_ARBURST,
    M_AXI_ARLOCK,
    M_AXI_ARCACHE,
    M_AXI_ARPROT,
    M_AXI_ARQOS,
    M_AXI_ARVALID,
    M_AXI_ARREADY,
    M_AXI_RID,
    M_AXI_RDATA,
    M_AXI_RRESP,
    M_AXI_RLAST,
    M_AXI_RVALID,
    M_AXI_RREADY,
    LMB_Data_Addr_0,
    LMB_Data_Read_0,
    LMB_Data_Write_0,
    LMB_Addr_Strobe_0,
    LMB_Read_Strobe_0,
    LMB_Write_Strobe_0,
    LMB_Ready_0,
    LMB_Wait_0,
    LMB_CE_0,
    LMB_UE_0,
    LMB_Byte_Enable_0,
    LMB_Data_Addr_1,
    LMB_Data_Read_1,
    LMB_Data_Write_1,
    LMB_Addr_Strobe_1,
    LMB_Read_Strobe_1,
    LMB_Write_Strobe_1,
    LMB_Ready_1,
    LMB_Wait_1,
    LMB_CE_1,
    LMB_UE_1,
    LMB_Byte_Enable_1,
    LMB_Data_Addr_2,
    LMB_Data_Read_2,
    LMB_Data_Write_2,
    LMB_Addr_Strobe_2,
    LMB_Read_Strobe_2,
    LMB_Write_Strobe_2,
    LMB_Ready_2,
    LMB_Wait_2,
    LMB_CE_2,
    LMB_UE_2,
    LMB_Byte_Enable_2,
    LMB_Data_Addr_3,
    LMB_Data_Read_3,
    LMB_Data_Write_3,
    LMB_Addr_Strobe_3,
    LMB_Read_Strobe_3,
    LMB_Write_Strobe_3,
    LMB_Ready_3,
    LMB_Wait_3,
    LMB_CE_3,
    LMB_UE_3,
    LMB_Byte_Enable_3,
    LMB_Data_Addr_4,
    LMB_Data_Read_4,
    LMB_Data_Write_4,
    LMB_Addr_Strobe_4,
    LMB_Read_Strobe_4,
    LMB_Write_Strobe_4,
    LMB_Ready_4,
    LMB_Wait_4,
    LMB_CE_4,
    LMB_UE_4,
    LMB_Byte_Enable_4,
    LMB_Data_Addr_5,
    LMB_Data_Read_5,
    LMB_Data_Write_5,
    LMB_Addr_Strobe_5,
    LMB_Read_Strobe_5,
    LMB_Write_Strobe_5,
    LMB_Ready_5,
    LMB_Wait_5,
    LMB_CE_5,
    LMB_UE_5,
    LMB_Byte_Enable_5,
    LMB_Data_Addr_6,
    LMB_Data_Read_6,
    LMB_Data_Write_6,
    LMB_Addr_Strobe_6,
    LMB_Read_Strobe_6,
    LMB_Write_Strobe_6,
    LMB_Ready_6,
    LMB_Wait_6,
    LMB_CE_6,
    LMB_UE_6,
    LMB_Byte_Enable_6,
    LMB_Data_Addr_7,
    LMB_Data_Read_7,
    LMB_Data_Write_7,
    LMB_Addr_Strobe_7,
    LMB_Read_Strobe_7,
    LMB_Write_Strobe_7,
    LMB_Ready_7,
    LMB_Wait_7,
    LMB_CE_7,
    LMB_UE_7,
    LMB_Byte_Enable_7,
    LMB_Data_Addr_8,
    LMB_Data_Read_8,
    LMB_Data_Write_8,
    LMB_Addr_Strobe_8,
    LMB_Read_Strobe_8,
    LMB_Write_Strobe_8,
    LMB_Ready_8,
    LMB_Wait_8,
    LMB_CE_8,
    LMB_UE_8,
    LMB_Byte_Enable_8,
    LMB_Data_Addr_9,
    LMB_Data_Read_9,
    LMB_Data_Write_9,
    LMB_Addr_Strobe_9,
    LMB_Read_Strobe_9,
    LMB_Write_Strobe_9,
    LMB_Ready_9,
    LMB_Wait_9,
    LMB_CE_9,
    LMB_UE_9,
    LMB_Byte_Enable_9,
    LMB_Data_Addr_10,
    LMB_Data_Read_10,
    LMB_Data_Write_10,
    LMB_Addr_Strobe_10,
    LMB_Read_Strobe_10,
    LMB_Write_Strobe_10,
    LMB_Ready_10,
    LMB_Wait_10,
    LMB_CE_10,
    LMB_UE_10,
    LMB_Byte_Enable_10,
    LMB_Data_Addr_11,
    LMB_Data_Read_11,
    LMB_Data_Write_11,
    LMB_Addr_Strobe_11,
    LMB_Read_Strobe_11,
    LMB_Write_Strobe_11,
    LMB_Ready_11,
    LMB_Wait_11,
    LMB_CE_11,
    LMB_UE_11,
    LMB_Byte_Enable_11,
    LMB_Data_Addr_12,
    LMB_Data_Read_12,
    LMB_Data_Write_12,
    LMB_Addr_Strobe_12,
    LMB_Read_Strobe_12,
    LMB_Write_Strobe_12,
    LMB_Ready_12,
    LMB_Wait_12,
    LMB_CE_12,
    LMB_UE_12,
    LMB_Byte_Enable_12,
    LMB_Data_Addr_13,
    LMB_Data_Read_13,
    LMB_Data_Write_13,
    LMB_Addr_Strobe_13,
    LMB_Read_Strobe_13,
    LMB_Write_Strobe_13,
    LMB_Ready_13,
    LMB_Wait_13,
    LMB_CE_13,
    LMB_UE_13,
    LMB_Byte_Enable_13,
    LMB_Data_Addr_14,
    LMB_Data_Read_14,
    LMB_Data_Write_14,
    LMB_Addr_Strobe_14,
    LMB_Read_Strobe_14,
    LMB_Write_Strobe_14,
    LMB_Ready_14,
    LMB_Wait_14,
    LMB_CE_14,
    LMB_UE_14,
    LMB_Byte_Enable_14,
    LMB_Data_Addr_15,
    LMB_Data_Read_15,
    LMB_Data_Write_15,
    LMB_Addr_Strobe_15,
    LMB_Read_Strobe_15,
    LMB_Write_Strobe_15,
    LMB_Ready_15,
    LMB_Wait_15,
    LMB_CE_15,
    LMB_UE_15,
    LMB_Byte_Enable_15,
    LMB_Data_Addr_16,
    LMB_Data_Read_16,
    LMB_Data_Write_16,
    LMB_Addr_Strobe_16,
    LMB_Read_Strobe_16,
    LMB_Write_Strobe_16,
    LMB_Ready_16,
    LMB_Wait_16,
    LMB_CE_16,
    LMB_UE_16,
    LMB_Byte_Enable_16,
    LMB_Data_Addr_17,
    LMB_Data_Read_17,
    LMB_Data_Write_17,
    LMB_Addr_Strobe_17,
    LMB_Read_Strobe_17,
    LMB_Write_Strobe_17,
    LMB_Ready_17,
    LMB_Wait_17,
    LMB_CE_17,
    LMB_UE_17,
    LMB_Byte_Enable_17,
    LMB_Data_Addr_18,
    LMB_Data_Read_18,
    LMB_Data_Write_18,
    LMB_Addr_Strobe_18,
    LMB_Read_Strobe_18,
    LMB_Write_Strobe_18,
    LMB_Ready_18,
    LMB_Wait_18,
    LMB_CE_18,
    LMB_UE_18,
    LMB_Byte_Enable_18,
    LMB_Data_Addr_19,
    LMB_Data_Read_19,
    LMB_Data_Write_19,
    LMB_Addr_Strobe_19,
    LMB_Read_Strobe_19,
    LMB_Write_Strobe_19,
    LMB_Ready_19,
    LMB_Wait_19,
    LMB_CE_19,
    LMB_UE_19,
    LMB_Byte_Enable_19,
    LMB_Data_Addr_20,
    LMB_Data_Read_20,
    LMB_Data_Write_20,
    LMB_Addr_Strobe_20,
    LMB_Read_Strobe_20,
    LMB_Write_Strobe_20,
    LMB_Ready_20,
    LMB_Wait_20,
    LMB_CE_20,
    LMB_UE_20,
    LMB_Byte_Enable_20,
    LMB_Data_Addr_21,
    LMB_Data_Read_21,
    LMB_Data_Write_21,
    LMB_Addr_Strobe_21,
    LMB_Read_Strobe_21,
    LMB_Write_Strobe_21,
    LMB_Ready_21,
    LMB_Wait_21,
    LMB_CE_21,
    LMB_UE_21,
    LMB_Byte_Enable_21,
    LMB_Data_Addr_22,
    LMB_Data_Read_22,
    LMB_Data_Write_22,
    LMB_Addr_Strobe_22,
    LMB_Read_Strobe_22,
    LMB_Write_Strobe_22,
    LMB_Ready_22,
    LMB_Wait_22,
    LMB_CE_22,
    LMB_UE_22,
    LMB_Byte_Enable_22,
    LMB_Data_Addr_23,
    LMB_Data_Read_23,
    LMB_Data_Write_23,
    LMB_Addr_Strobe_23,
    LMB_Read_Strobe_23,
    LMB_Write_Strobe_23,
    LMB_Ready_23,
    LMB_Wait_23,
    LMB_CE_23,
    LMB_UE_23,
    LMB_Byte_Enable_23,
    LMB_Data_Addr_24,
    LMB_Data_Read_24,
    LMB_Data_Write_24,
    LMB_Addr_Strobe_24,
    LMB_Read_Strobe_24,
    LMB_Write_Strobe_24,
    LMB_Ready_24,
    LMB_Wait_24,
    LMB_CE_24,
    LMB_UE_24,
    LMB_Byte_Enable_24,
    LMB_Data_Addr_25,
    LMB_Data_Read_25,
    LMB_Data_Write_25,
    LMB_Addr_Strobe_25,
    LMB_Read_Strobe_25,
    LMB_Write_Strobe_25,
    LMB_Ready_25,
    LMB_Wait_25,
    LMB_CE_25,
    LMB_UE_25,
    LMB_Byte_Enable_25,
    LMB_Data_Addr_26,
    LMB_Data_Read_26,
    LMB_Data_Write_26,
    LMB_Addr_Strobe_26,
    LMB_Read_Strobe_26,
    LMB_Write_Strobe_26,
    LMB_Ready_26,
    LMB_Wait_26,
    LMB_CE_26,
    LMB_UE_26,
    LMB_Byte_Enable_26,
    LMB_Data_Addr_27,
    LMB_Data_Read_27,
    LMB_Data_Write_27,
    LMB_Addr_Strobe_27,
    LMB_Read_Strobe_27,
    LMB_Write_Strobe_27,
    LMB_Ready_27,
    LMB_Wait_27,
    LMB_CE_27,
    LMB_UE_27,
    LMB_Byte_Enable_27,
    LMB_Data_Addr_28,
    LMB_Data_Read_28,
    LMB_Data_Write_28,
    LMB_Addr_Strobe_28,
    LMB_Read_Strobe_28,
    LMB_Write_Strobe_28,
    LMB_Ready_28,
    LMB_Wait_28,
    LMB_CE_28,
    LMB_UE_28,
    LMB_Byte_Enable_28,
    LMB_Data_Addr_29,
    LMB_Data_Read_29,
    LMB_Data_Write_29,
    LMB_Addr_Strobe_29,
    LMB_Read_Strobe_29,
    LMB_Write_Strobe_29,
    LMB_Ready_29,
    LMB_Wait_29,
    LMB_CE_29,
    LMB_UE_29,
    LMB_Byte_Enable_29,
    LMB_Data_Addr_30,
    LMB_Data_Read_30,
    LMB_Data_Write_30,
    LMB_Addr_Strobe_30,
    LMB_Read_Strobe_30,
    LMB_Write_Strobe_30,
    LMB_Ready_30,
    LMB_Wait_30,
    LMB_CE_30,
    LMB_UE_30,
    LMB_Byte_Enable_30,
    LMB_Data_Addr_31,
    LMB_Data_Read_31,
    LMB_Data_Write_31,
    LMB_Addr_Strobe_31,
    LMB_Read_Strobe_31,
    LMB_Write_Strobe_31,
    LMB_Ready_31,
    LMB_Wait_31,
    LMB_CE_31,
    LMB_UE_31,
    LMB_Byte_Enable_31,
    M_AXIS_TDATA,
    M_AXIS_TID,
    M_AXIS_TREADY,
    M_AXIS_TVALID,
    TRACE_CLK_OUT,
    TRACE_CLK,
    TRACE_CTL,
    TRACE_DATA,
    Dbg_Disable_0,
    Dbg_Clk_0,
    Dbg_TDI_0,
    Dbg_TDO_0,
    Dbg_Reg_En_0,
    Dbg_Capture_0,
    Dbg_Shift_0,
    Dbg_Update_0,
    Dbg_Rst_0,
    Dbg_Trig_In_0,
    Dbg_Trig_Ack_In_0,
    Dbg_Trig_Out_0,
    Dbg_Trig_Ack_Out_0,
    Dbg_TrClk_0,
    Dbg_TrData_0,
    Dbg_TrReady_0,
    Dbg_TrValid_0,
    Dbg_AWADDR_0,
    Dbg_AWVALID_0,
    Dbg_AWREADY_0,
    Dbg_WDATA_0,
    Dbg_WVALID_0,
    Dbg_WREADY_0,
    Dbg_BRESP_0,
    Dbg_BVALID_0,
    Dbg_BREADY_0,
    Dbg_ARADDR_0,
    Dbg_ARVALID_0,
    Dbg_ARREADY_0,
    Dbg_RDATA_0,
    Dbg_RRESP_0,
    Dbg_RVALID_0,
    Dbg_RREADY_0,
    Dbg_Disable_1,
    Dbg_Clk_1,
    Dbg_TDI_1,
    Dbg_TDO_1,
    Dbg_Reg_En_1,
    Dbg_Capture_1,
    Dbg_Shift_1,
    Dbg_Update_1,
    Dbg_Rst_1,
    Dbg_Trig_In_1,
    Dbg_Trig_Ack_In_1,
    Dbg_Trig_Out_1,
    Dbg_Trig_Ack_Out_1,
    Dbg_TrClk_1,
    Dbg_TrData_1,
    Dbg_TrReady_1,
    Dbg_TrValid_1,
    Dbg_AWADDR_1,
    Dbg_AWVALID_1,
    Dbg_AWREADY_1,
    Dbg_WDATA_1,
    Dbg_WVALID_1,
    Dbg_WREADY_1,
    Dbg_BRESP_1,
    Dbg_BVALID_1,
    Dbg_BREADY_1,
    Dbg_ARADDR_1,
    Dbg_ARVALID_1,
    Dbg_ARREADY_1,
    Dbg_RDATA_1,
    Dbg_RRESP_1,
    Dbg_RVALID_1,
    Dbg_RREADY_1,
    Dbg_Disable_2,
    Dbg_Clk_2,
    Dbg_TDI_2,
    Dbg_TDO_2,
    Dbg_Reg_En_2,
    Dbg_Capture_2,
    Dbg_Shift_2,
    Dbg_Update_2,
    Dbg_Rst_2,
    Dbg_Trig_In_2,
    Dbg_Trig_Ack_In_2,
    Dbg_Trig_Out_2,
    Dbg_Trig_Ack_Out_2,
    Dbg_TrClk_2,
    Dbg_TrData_2,
    Dbg_TrReady_2,
    Dbg_TrValid_2,
    Dbg_AWADDR_2,
    Dbg_AWVALID_2,
    Dbg_AWREADY_2,
    Dbg_WDATA_2,
    Dbg_WVALID_2,
    Dbg_WREADY_2,
    Dbg_BRESP_2,
    Dbg_BVALID_2,
    Dbg_BREADY_2,
    Dbg_ARADDR_2,
    Dbg_ARVALID_2,
    Dbg_ARREADY_2,
    Dbg_RDATA_2,
    Dbg_RRESP_2,
    Dbg_RVALID_2,
    Dbg_RREADY_2,
    Dbg_Disable_3,
    Dbg_Clk_3,
    Dbg_TDI_3,
    Dbg_TDO_3,
    Dbg_Reg_En_3,
    Dbg_Capture_3,
    Dbg_Shift_3,
    Dbg_Update_3,
    Dbg_Rst_3,
    Dbg_Trig_In_3,
    Dbg_Trig_Ack_In_3,
    Dbg_Trig_Out_3,
    Dbg_Trig_Ack_Out_3,
    Dbg_TrClk_3,
    Dbg_TrData_3,
    Dbg_TrReady_3,
    Dbg_TrValid_3,
    Dbg_AWADDR_3,
    Dbg_AWVALID_3,
    Dbg_AWREADY_3,
    Dbg_WDATA_3,
    Dbg_WVALID_3,
    Dbg_WREADY_3,
    Dbg_BRESP_3,
    Dbg_BVALID_3,
    Dbg_BREADY_3,
    Dbg_ARADDR_3,
    Dbg_ARVALID_3,
    Dbg_ARREADY_3,
    Dbg_RDATA_3,
    Dbg_RRESP_3,
    Dbg_RVALID_3,
    Dbg_RREADY_3,
    Dbg_Disable_4,
    Dbg_Clk_4,
    Dbg_TDI_4,
    Dbg_TDO_4,
    Dbg_Reg_En_4,
    Dbg_Capture_4,
    Dbg_Shift_4,
    Dbg_Update_4,
    Dbg_Rst_4,
    Dbg_Trig_In_4,
    Dbg_Trig_Ack_In_4,
    Dbg_Trig_Out_4,
    Dbg_Trig_Ack_Out_4,
    Dbg_TrClk_4,
    Dbg_TrData_4,
    Dbg_TrReady_4,
    Dbg_TrValid_4,
    Dbg_AWADDR_4,
    Dbg_AWVALID_4,
    Dbg_AWREADY_4,
    Dbg_WDATA_4,
    Dbg_WVALID_4,
    Dbg_WREADY_4,
    Dbg_BRESP_4,
    Dbg_BVALID_4,
    Dbg_BREADY_4,
    Dbg_ARADDR_4,
    Dbg_ARVALID_4,
    Dbg_ARREADY_4,
    Dbg_RDATA_4,
    Dbg_RRESP_4,
    Dbg_RVALID_4,
    Dbg_RREADY_4,
    Dbg_Disable_5,
    Dbg_Clk_5,
    Dbg_TDI_5,
    Dbg_TDO_5,
    Dbg_Reg_En_5,
    Dbg_Capture_5,
    Dbg_Shift_5,
    Dbg_Update_5,
    Dbg_Rst_5,
    Dbg_Trig_In_5,
    Dbg_Trig_Ack_In_5,
    Dbg_Trig_Out_5,
    Dbg_Trig_Ack_Out_5,
    Dbg_TrClk_5,
    Dbg_TrData_5,
    Dbg_TrReady_5,
    Dbg_TrValid_5,
    Dbg_AWADDR_5,
    Dbg_AWVALID_5,
    Dbg_AWREADY_5,
    Dbg_WDATA_5,
    Dbg_WVALID_5,
    Dbg_WREADY_5,
    Dbg_BRESP_5,
    Dbg_BVALID_5,
    Dbg_BREADY_5,
    Dbg_ARADDR_5,
    Dbg_ARVALID_5,
    Dbg_ARREADY_5,
    Dbg_RDATA_5,
    Dbg_RRESP_5,
    Dbg_RVALID_5,
    Dbg_RREADY_5,
    Dbg_Disable_6,
    Dbg_Clk_6,
    Dbg_TDI_6,
    Dbg_TDO_6,
    Dbg_Reg_En_6,
    Dbg_Capture_6,
    Dbg_Shift_6,
    Dbg_Update_6,
    Dbg_Rst_6,
    Dbg_Trig_In_6,
    Dbg_Trig_Ack_In_6,
    Dbg_Trig_Out_6,
    Dbg_Trig_Ack_Out_6,
    Dbg_TrClk_6,
    Dbg_TrData_6,
    Dbg_TrReady_6,
    Dbg_TrValid_6,
    Dbg_AWADDR_6,
    Dbg_AWVALID_6,
    Dbg_AWREADY_6,
    Dbg_WDATA_6,
    Dbg_WVALID_6,
    Dbg_WREADY_6,
    Dbg_BRESP_6,
    Dbg_BVALID_6,
    Dbg_BREADY_6,
    Dbg_ARADDR_6,
    Dbg_ARVALID_6,
    Dbg_ARREADY_6,
    Dbg_RDATA_6,
    Dbg_RRESP_6,
    Dbg_RVALID_6,
    Dbg_RREADY_6,
    Dbg_Disable_7,
    Dbg_Clk_7,
    Dbg_TDI_7,
    Dbg_TDO_7,
    Dbg_Reg_En_7,
    Dbg_Capture_7,
    Dbg_Shift_7,
    Dbg_Update_7,
    Dbg_Rst_7,
    Dbg_Trig_In_7,
    Dbg_Trig_Ack_In_7,
    Dbg_Trig_Out_7,
    Dbg_Trig_Ack_Out_7,
    Dbg_TrClk_7,
    Dbg_TrData_7,
    Dbg_TrReady_7,
    Dbg_TrValid_7,
    Dbg_AWADDR_7,
    Dbg_AWVALID_7,
    Dbg_AWREADY_7,
    Dbg_WDATA_7,
    Dbg_WVALID_7,
    Dbg_WREADY_7,
    Dbg_BRESP_7,
    Dbg_BVALID_7,
    Dbg_BREADY_7,
    Dbg_ARADDR_7,
    Dbg_ARVALID_7,
    Dbg_ARREADY_7,
    Dbg_RDATA_7,
    Dbg_RRESP_7,
    Dbg_RVALID_7,
    Dbg_RREADY_7,
    Dbg_Disable_8,
    Dbg_Clk_8,
    Dbg_TDI_8,
    Dbg_TDO_8,
    Dbg_Reg_En_8,
    Dbg_Capture_8,
    Dbg_Shift_8,
    Dbg_Update_8,
    Dbg_Rst_8,
    Dbg_Trig_In_8,
    Dbg_Trig_Ack_In_8,
    Dbg_Trig_Out_8,
    Dbg_Trig_Ack_Out_8,
    Dbg_TrClk_8,
    Dbg_TrData_8,
    Dbg_TrReady_8,
    Dbg_TrValid_8,
    Dbg_AWADDR_8,
    Dbg_AWVALID_8,
    Dbg_AWREADY_8,
    Dbg_WDATA_8,
    Dbg_WVALID_8,
    Dbg_WREADY_8,
    Dbg_BRESP_8,
    Dbg_BVALID_8,
    Dbg_BREADY_8,
    Dbg_ARADDR_8,
    Dbg_ARVALID_8,
    Dbg_ARREADY_8,
    Dbg_RDATA_8,
    Dbg_RRESP_8,
    Dbg_RVALID_8,
    Dbg_RREADY_8,
    Dbg_Disable_9,
    Dbg_Clk_9,
    Dbg_TDI_9,
    Dbg_TDO_9,
    Dbg_Reg_En_9,
    Dbg_Capture_9,
    Dbg_Shift_9,
    Dbg_Update_9,
    Dbg_Rst_9,
    Dbg_Trig_In_9,
    Dbg_Trig_Ack_In_9,
    Dbg_Trig_Out_9,
    Dbg_Trig_Ack_Out_9,
    Dbg_TrClk_9,
    Dbg_TrData_9,
    Dbg_TrReady_9,
    Dbg_TrValid_9,
    Dbg_AWADDR_9,
    Dbg_AWVALID_9,
    Dbg_AWREADY_9,
    Dbg_WDATA_9,
    Dbg_WVALID_9,
    Dbg_WREADY_9,
    Dbg_BRESP_9,
    Dbg_BVALID_9,
    Dbg_BREADY_9,
    Dbg_ARADDR_9,
    Dbg_ARVALID_9,
    Dbg_ARREADY_9,
    Dbg_RDATA_9,
    Dbg_RRESP_9,
    Dbg_RVALID_9,
    Dbg_RREADY_9,
    Dbg_Disable_10,
    Dbg_Clk_10,
    Dbg_TDI_10,
    Dbg_TDO_10,
    Dbg_Reg_En_10,
    Dbg_Capture_10,
    Dbg_Shift_10,
    Dbg_Update_10,
    Dbg_Rst_10,
    Dbg_Trig_In_10,
    Dbg_Trig_Ack_In_10,
    Dbg_Trig_Out_10,
    Dbg_Trig_Ack_Out_10,
    Dbg_TrClk_10,
    Dbg_TrData_10,
    Dbg_TrReady_10,
    Dbg_TrValid_10,
    Dbg_AWADDR_10,
    Dbg_AWVALID_10,
    Dbg_AWREADY_10,
    Dbg_WDATA_10,
    Dbg_WVALID_10,
    Dbg_WREADY_10,
    Dbg_BRESP_10,
    Dbg_BVALID_10,
    Dbg_BREADY_10,
    Dbg_ARADDR_10,
    Dbg_ARVALID_10,
    Dbg_ARREADY_10,
    Dbg_RDATA_10,
    Dbg_RRESP_10,
    Dbg_RVALID_10,
    Dbg_RREADY_10,
    Dbg_Disable_11,
    Dbg_Clk_11,
    Dbg_TDI_11,
    Dbg_TDO_11,
    Dbg_Reg_En_11,
    Dbg_Capture_11,
    Dbg_Shift_11,
    Dbg_Update_11,
    Dbg_Rst_11,
    Dbg_Trig_In_11,
    Dbg_Trig_Ack_In_11,
    Dbg_Trig_Out_11,
    Dbg_Trig_Ack_Out_11,
    Dbg_TrClk_11,
    Dbg_TrData_11,
    Dbg_TrReady_11,
    Dbg_TrValid_11,
    Dbg_AWADDR_11,
    Dbg_AWVALID_11,
    Dbg_AWREADY_11,
    Dbg_WDATA_11,
    Dbg_WVALID_11,
    Dbg_WREADY_11,
    Dbg_BRESP_11,
    Dbg_BVALID_11,
    Dbg_BREADY_11,
    Dbg_ARADDR_11,
    Dbg_ARVALID_11,
    Dbg_ARREADY_11,
    Dbg_RDATA_11,
    Dbg_RRESP_11,
    Dbg_RVALID_11,
    Dbg_RREADY_11,
    Dbg_Disable_12,
    Dbg_Clk_12,
    Dbg_TDI_12,
    Dbg_TDO_12,
    Dbg_Reg_En_12,
    Dbg_Capture_12,
    Dbg_Shift_12,
    Dbg_Update_12,
    Dbg_Rst_12,
    Dbg_Trig_In_12,
    Dbg_Trig_Ack_In_12,
    Dbg_Trig_Out_12,
    Dbg_Trig_Ack_Out_12,
    Dbg_TrClk_12,
    Dbg_TrData_12,
    Dbg_TrReady_12,
    Dbg_TrValid_12,
    Dbg_AWADDR_12,
    Dbg_AWVALID_12,
    Dbg_AWREADY_12,
    Dbg_WDATA_12,
    Dbg_WVALID_12,
    Dbg_WREADY_12,
    Dbg_BRESP_12,
    Dbg_BVALID_12,
    Dbg_BREADY_12,
    Dbg_ARADDR_12,
    Dbg_ARVALID_12,
    Dbg_ARREADY_12,
    Dbg_RDATA_12,
    Dbg_RRESP_12,
    Dbg_RVALID_12,
    Dbg_RREADY_12,
    Dbg_Disable_13,
    Dbg_Clk_13,
    Dbg_TDI_13,
    Dbg_TDO_13,
    Dbg_Reg_En_13,
    Dbg_Capture_13,
    Dbg_Shift_13,
    Dbg_Update_13,
    Dbg_Rst_13,
    Dbg_Trig_In_13,
    Dbg_Trig_Ack_In_13,
    Dbg_Trig_Out_13,
    Dbg_Trig_Ack_Out_13,
    Dbg_TrClk_13,
    Dbg_TrData_13,
    Dbg_TrReady_13,
    Dbg_TrValid_13,
    Dbg_AWADDR_13,
    Dbg_AWVALID_13,
    Dbg_AWREADY_13,
    Dbg_WDATA_13,
    Dbg_WVALID_13,
    Dbg_WREADY_13,
    Dbg_BRESP_13,
    Dbg_BVALID_13,
    Dbg_BREADY_13,
    Dbg_ARADDR_13,
    Dbg_ARVALID_13,
    Dbg_ARREADY_13,
    Dbg_RDATA_13,
    Dbg_RRESP_13,
    Dbg_RVALID_13,
    Dbg_RREADY_13,
    Dbg_Disable_14,
    Dbg_Clk_14,
    Dbg_TDI_14,
    Dbg_TDO_14,
    Dbg_Reg_En_14,
    Dbg_Capture_14,
    Dbg_Shift_14,
    Dbg_Update_14,
    Dbg_Rst_14,
    Dbg_Trig_In_14,
    Dbg_Trig_Ack_In_14,
    Dbg_Trig_Out_14,
    Dbg_Trig_Ack_Out_14,
    Dbg_TrClk_14,
    Dbg_TrData_14,
    Dbg_TrReady_14,
    Dbg_TrValid_14,
    Dbg_AWADDR_14,
    Dbg_AWVALID_14,
    Dbg_AWREADY_14,
    Dbg_WDATA_14,
    Dbg_WVALID_14,
    Dbg_WREADY_14,
    Dbg_BRESP_14,
    Dbg_BVALID_14,
    Dbg_BREADY_14,
    Dbg_ARADDR_14,
    Dbg_ARVALID_14,
    Dbg_ARREADY_14,
    Dbg_RDATA_14,
    Dbg_RRESP_14,
    Dbg_RVALID_14,
    Dbg_RREADY_14,
    Dbg_Disable_15,
    Dbg_Clk_15,
    Dbg_TDI_15,
    Dbg_TDO_15,
    Dbg_Reg_En_15,
    Dbg_Capture_15,
    Dbg_Shift_15,
    Dbg_Update_15,
    Dbg_Rst_15,
    Dbg_Trig_In_15,
    Dbg_Trig_Ack_In_15,
    Dbg_Trig_Out_15,
    Dbg_Trig_Ack_Out_15,
    Dbg_TrClk_15,
    Dbg_TrData_15,
    Dbg_TrReady_15,
    Dbg_TrValid_15,
    Dbg_AWADDR_15,
    Dbg_AWVALID_15,
    Dbg_AWREADY_15,
    Dbg_WDATA_15,
    Dbg_WVALID_15,
    Dbg_WREADY_15,
    Dbg_BRESP_15,
    Dbg_BVALID_15,
    Dbg_BREADY_15,
    Dbg_ARADDR_15,
    Dbg_ARVALID_15,
    Dbg_ARREADY_15,
    Dbg_RDATA_15,
    Dbg_RRESP_15,
    Dbg_RVALID_15,
    Dbg_RREADY_15,
    Dbg_Disable_16,
    Dbg_Clk_16,
    Dbg_TDI_16,
    Dbg_TDO_16,
    Dbg_Reg_En_16,
    Dbg_Capture_16,
    Dbg_Shift_16,
    Dbg_Update_16,
    Dbg_Rst_16,
    Dbg_Trig_In_16,
    Dbg_Trig_Ack_In_16,
    Dbg_Trig_Out_16,
    Dbg_Trig_Ack_Out_16,
    Dbg_TrClk_16,
    Dbg_TrData_16,
    Dbg_TrReady_16,
    Dbg_TrValid_16,
    Dbg_AWADDR_16,
    Dbg_AWVALID_16,
    Dbg_AWREADY_16,
    Dbg_WDATA_16,
    Dbg_WVALID_16,
    Dbg_WREADY_16,
    Dbg_BRESP_16,
    Dbg_BVALID_16,
    Dbg_BREADY_16,
    Dbg_ARADDR_16,
    Dbg_ARVALID_16,
    Dbg_ARREADY_16,
    Dbg_RDATA_16,
    Dbg_RRESP_16,
    Dbg_RVALID_16,
    Dbg_RREADY_16,
    Dbg_Disable_17,
    Dbg_Clk_17,
    Dbg_TDI_17,
    Dbg_TDO_17,
    Dbg_Reg_En_17,
    Dbg_Capture_17,
    Dbg_Shift_17,
    Dbg_Update_17,
    Dbg_Rst_17,
    Dbg_Trig_In_17,
    Dbg_Trig_Ack_In_17,
    Dbg_Trig_Out_17,
    Dbg_Trig_Ack_Out_17,
    Dbg_TrClk_17,
    Dbg_TrData_17,
    Dbg_TrReady_17,
    Dbg_TrValid_17,
    Dbg_AWADDR_17,
    Dbg_AWVALID_17,
    Dbg_AWREADY_17,
    Dbg_WDATA_17,
    Dbg_WVALID_17,
    Dbg_WREADY_17,
    Dbg_BRESP_17,
    Dbg_BVALID_17,
    Dbg_BREADY_17,
    Dbg_ARADDR_17,
    Dbg_ARVALID_17,
    Dbg_ARREADY_17,
    Dbg_RDATA_17,
    Dbg_RRESP_17,
    Dbg_RVALID_17,
    Dbg_RREADY_17,
    Dbg_Disable_18,
    Dbg_Clk_18,
    Dbg_TDI_18,
    Dbg_TDO_18,
    Dbg_Reg_En_18,
    Dbg_Capture_18,
    Dbg_Shift_18,
    Dbg_Update_18,
    Dbg_Rst_18,
    Dbg_Trig_In_18,
    Dbg_Trig_Ack_In_18,
    Dbg_Trig_Out_18,
    Dbg_Trig_Ack_Out_18,
    Dbg_TrClk_18,
    Dbg_TrData_18,
    Dbg_TrReady_18,
    Dbg_TrValid_18,
    Dbg_AWADDR_18,
    Dbg_AWVALID_18,
    Dbg_AWREADY_18,
    Dbg_WDATA_18,
    Dbg_WVALID_18,
    Dbg_WREADY_18,
    Dbg_BRESP_18,
    Dbg_BVALID_18,
    Dbg_BREADY_18,
    Dbg_ARADDR_18,
    Dbg_ARVALID_18,
    Dbg_ARREADY_18,
    Dbg_RDATA_18,
    Dbg_RRESP_18,
    Dbg_RVALID_18,
    Dbg_RREADY_18,
    Dbg_Disable_19,
    Dbg_Clk_19,
    Dbg_TDI_19,
    Dbg_TDO_19,
    Dbg_Reg_En_19,
    Dbg_Capture_19,
    Dbg_Shift_19,
    Dbg_Update_19,
    Dbg_Rst_19,
    Dbg_Trig_In_19,
    Dbg_Trig_Ack_In_19,
    Dbg_Trig_Out_19,
    Dbg_Trig_Ack_Out_19,
    Dbg_TrClk_19,
    Dbg_TrData_19,
    Dbg_TrReady_19,
    Dbg_TrValid_19,
    Dbg_AWADDR_19,
    Dbg_AWVALID_19,
    Dbg_AWREADY_19,
    Dbg_WDATA_19,
    Dbg_WVALID_19,
    Dbg_WREADY_19,
    Dbg_BRESP_19,
    Dbg_BVALID_19,
    Dbg_BREADY_19,
    Dbg_ARADDR_19,
    Dbg_ARVALID_19,
    Dbg_ARREADY_19,
    Dbg_RDATA_19,
    Dbg_RRESP_19,
    Dbg_RVALID_19,
    Dbg_RREADY_19,
    Dbg_Disable_20,
    Dbg_Clk_20,
    Dbg_TDI_20,
    Dbg_TDO_20,
    Dbg_Reg_En_20,
    Dbg_Capture_20,
    Dbg_Shift_20,
    Dbg_Update_20,
    Dbg_Rst_20,
    Dbg_Trig_In_20,
    Dbg_Trig_Ack_In_20,
    Dbg_Trig_Out_20,
    Dbg_Trig_Ack_Out_20,
    Dbg_TrClk_20,
    Dbg_TrData_20,
    Dbg_TrReady_20,
    Dbg_TrValid_20,
    Dbg_AWADDR_20,
    Dbg_AWVALID_20,
    Dbg_AWREADY_20,
    Dbg_WDATA_20,
    Dbg_WVALID_20,
    Dbg_WREADY_20,
    Dbg_BRESP_20,
    Dbg_BVALID_20,
    Dbg_BREADY_20,
    Dbg_ARADDR_20,
    Dbg_ARVALID_20,
    Dbg_ARREADY_20,
    Dbg_RDATA_20,
    Dbg_RRESP_20,
    Dbg_RVALID_20,
    Dbg_RREADY_20,
    Dbg_Disable_21,
    Dbg_Clk_21,
    Dbg_TDI_21,
    Dbg_TDO_21,
    Dbg_Reg_En_21,
    Dbg_Capture_21,
    Dbg_Shift_21,
    Dbg_Update_21,
    Dbg_Rst_21,
    Dbg_Trig_In_21,
    Dbg_Trig_Ack_In_21,
    Dbg_Trig_Out_21,
    Dbg_Trig_Ack_Out_21,
    Dbg_TrClk_21,
    Dbg_TrData_21,
    Dbg_TrReady_21,
    Dbg_TrValid_21,
    Dbg_AWADDR_21,
    Dbg_AWVALID_21,
    Dbg_AWREADY_21,
    Dbg_WDATA_21,
    Dbg_WVALID_21,
    Dbg_WREADY_21,
    Dbg_BRESP_21,
    Dbg_BVALID_21,
    Dbg_BREADY_21,
    Dbg_ARADDR_21,
    Dbg_ARVALID_21,
    Dbg_ARREADY_21,
    Dbg_RDATA_21,
    Dbg_RRESP_21,
    Dbg_RVALID_21,
    Dbg_RREADY_21,
    Dbg_Disable_22,
    Dbg_Clk_22,
    Dbg_TDI_22,
    Dbg_TDO_22,
    Dbg_Reg_En_22,
    Dbg_Capture_22,
    Dbg_Shift_22,
    Dbg_Update_22,
    Dbg_Rst_22,
    Dbg_Trig_In_22,
    Dbg_Trig_Ack_In_22,
    Dbg_Trig_Out_22,
    Dbg_Trig_Ack_Out_22,
    Dbg_TrClk_22,
    Dbg_TrData_22,
    Dbg_TrReady_22,
    Dbg_TrValid_22,
    Dbg_AWADDR_22,
    Dbg_AWVALID_22,
    Dbg_AWREADY_22,
    Dbg_WDATA_22,
    Dbg_WVALID_22,
    Dbg_WREADY_22,
    Dbg_BRESP_22,
    Dbg_BVALID_22,
    Dbg_BREADY_22,
    Dbg_ARADDR_22,
    Dbg_ARVALID_22,
    Dbg_ARREADY_22,
    Dbg_RDATA_22,
    Dbg_RRESP_22,
    Dbg_RVALID_22,
    Dbg_RREADY_22,
    Dbg_Disable_23,
    Dbg_Clk_23,
    Dbg_TDI_23,
    Dbg_TDO_23,
    Dbg_Reg_En_23,
    Dbg_Capture_23,
    Dbg_Shift_23,
    Dbg_Update_23,
    Dbg_Rst_23,
    Dbg_Trig_In_23,
    Dbg_Trig_Ack_In_23,
    Dbg_Trig_Out_23,
    Dbg_Trig_Ack_Out_23,
    Dbg_TrClk_23,
    Dbg_TrData_23,
    Dbg_TrReady_23,
    Dbg_TrValid_23,
    Dbg_AWADDR_23,
    Dbg_AWVALID_23,
    Dbg_AWREADY_23,
    Dbg_WDATA_23,
    Dbg_WVALID_23,
    Dbg_WREADY_23,
    Dbg_BRESP_23,
    Dbg_BVALID_23,
    Dbg_BREADY_23,
    Dbg_ARADDR_23,
    Dbg_ARVALID_23,
    Dbg_ARREADY_23,
    Dbg_RDATA_23,
    Dbg_RRESP_23,
    Dbg_RVALID_23,
    Dbg_RREADY_23,
    Dbg_Disable_24,
    Dbg_Clk_24,
    Dbg_TDI_24,
    Dbg_TDO_24,
    Dbg_Reg_En_24,
    Dbg_Capture_24,
    Dbg_Shift_24,
    Dbg_Update_24,
    Dbg_Rst_24,
    Dbg_Trig_In_24,
    Dbg_Trig_Ack_In_24,
    Dbg_Trig_Out_24,
    Dbg_Trig_Ack_Out_24,
    Dbg_TrClk_24,
    Dbg_TrData_24,
    Dbg_TrReady_24,
    Dbg_TrValid_24,
    Dbg_AWADDR_24,
    Dbg_AWVALID_24,
    Dbg_AWREADY_24,
    Dbg_WDATA_24,
    Dbg_WVALID_24,
    Dbg_WREADY_24,
    Dbg_BRESP_24,
    Dbg_BVALID_24,
    Dbg_BREADY_24,
    Dbg_ARADDR_24,
    Dbg_ARVALID_24,
    Dbg_ARREADY_24,
    Dbg_RDATA_24,
    Dbg_RRESP_24,
    Dbg_RVALID_24,
    Dbg_RREADY_24,
    Dbg_Disable_25,
    Dbg_Clk_25,
    Dbg_TDI_25,
    Dbg_TDO_25,
    Dbg_Reg_En_25,
    Dbg_Capture_25,
    Dbg_Shift_25,
    Dbg_Update_25,
    Dbg_Rst_25,
    Dbg_Trig_In_25,
    Dbg_Trig_Ack_In_25,
    Dbg_Trig_Out_25,
    Dbg_Trig_Ack_Out_25,
    Dbg_TrClk_25,
    Dbg_TrData_25,
    Dbg_TrReady_25,
    Dbg_TrValid_25,
    Dbg_AWADDR_25,
    Dbg_AWVALID_25,
    Dbg_AWREADY_25,
    Dbg_WDATA_25,
    Dbg_WVALID_25,
    Dbg_WREADY_25,
    Dbg_BRESP_25,
    Dbg_BVALID_25,
    Dbg_BREADY_25,
    Dbg_ARADDR_25,
    Dbg_ARVALID_25,
    Dbg_ARREADY_25,
    Dbg_RDATA_25,
    Dbg_RRESP_25,
    Dbg_RVALID_25,
    Dbg_RREADY_25,
    Dbg_Disable_26,
    Dbg_Clk_26,
    Dbg_TDI_26,
    Dbg_TDO_26,
    Dbg_Reg_En_26,
    Dbg_Capture_26,
    Dbg_Shift_26,
    Dbg_Update_26,
    Dbg_Rst_26,
    Dbg_Trig_In_26,
    Dbg_Trig_Ack_In_26,
    Dbg_Trig_Out_26,
    Dbg_Trig_Ack_Out_26,
    Dbg_TrClk_26,
    Dbg_TrData_26,
    Dbg_TrReady_26,
    Dbg_TrValid_26,
    Dbg_AWADDR_26,
    Dbg_AWVALID_26,
    Dbg_AWREADY_26,
    Dbg_WDATA_26,
    Dbg_WVALID_26,
    Dbg_WREADY_26,
    Dbg_BRESP_26,
    Dbg_BVALID_26,
    Dbg_BREADY_26,
    Dbg_ARADDR_26,
    Dbg_ARVALID_26,
    Dbg_ARREADY_26,
    Dbg_RDATA_26,
    Dbg_RRESP_26,
    Dbg_RVALID_26,
    Dbg_RREADY_26,
    Dbg_Disable_27,
    Dbg_Clk_27,
    Dbg_TDI_27,
    Dbg_TDO_27,
    Dbg_Reg_En_27,
    Dbg_Capture_27,
    Dbg_Shift_27,
    Dbg_Update_27,
    Dbg_Rst_27,
    Dbg_Trig_In_27,
    Dbg_Trig_Ack_In_27,
    Dbg_Trig_Out_27,
    Dbg_Trig_Ack_Out_27,
    Dbg_TrClk_27,
    Dbg_TrData_27,
    Dbg_TrReady_27,
    Dbg_TrValid_27,
    Dbg_AWADDR_27,
    Dbg_AWVALID_27,
    Dbg_AWREADY_27,
    Dbg_WDATA_27,
    Dbg_WVALID_27,
    Dbg_WREADY_27,
    Dbg_BRESP_27,
    Dbg_BVALID_27,
    Dbg_BREADY_27,
    Dbg_ARADDR_27,
    Dbg_ARVALID_27,
    Dbg_ARREADY_27,
    Dbg_RDATA_27,
    Dbg_RRESP_27,
    Dbg_RVALID_27,
    Dbg_RREADY_27,
    Dbg_Disable_28,
    Dbg_Clk_28,
    Dbg_TDI_28,
    Dbg_TDO_28,
    Dbg_Reg_En_28,
    Dbg_Capture_28,
    Dbg_Shift_28,
    Dbg_Update_28,
    Dbg_Rst_28,
    Dbg_Trig_In_28,
    Dbg_Trig_Ack_In_28,
    Dbg_Trig_Out_28,
    Dbg_Trig_Ack_Out_28,
    Dbg_TrClk_28,
    Dbg_TrData_28,
    Dbg_TrReady_28,
    Dbg_TrValid_28,
    Dbg_AWADDR_28,
    Dbg_AWVALID_28,
    Dbg_AWREADY_28,
    Dbg_WDATA_28,
    Dbg_WVALID_28,
    Dbg_WREADY_28,
    Dbg_BRESP_28,
    Dbg_BVALID_28,
    Dbg_BREADY_28,
    Dbg_ARADDR_28,
    Dbg_ARVALID_28,
    Dbg_ARREADY_28,
    Dbg_RDATA_28,
    Dbg_RRESP_28,
    Dbg_RVALID_28,
    Dbg_RREADY_28,
    Dbg_Disable_29,
    Dbg_Clk_29,
    Dbg_TDI_29,
    Dbg_TDO_29,
    Dbg_Reg_En_29,
    Dbg_Capture_29,
    Dbg_Shift_29,
    Dbg_Update_29,
    Dbg_Rst_29,
    Dbg_Trig_In_29,
    Dbg_Trig_Ack_In_29,
    Dbg_Trig_Out_29,
    Dbg_Trig_Ack_Out_29,
    Dbg_TrClk_29,
    Dbg_TrData_29,
    Dbg_TrReady_29,
    Dbg_TrValid_29,
    Dbg_AWADDR_29,
    Dbg_AWVALID_29,
    Dbg_AWREADY_29,
    Dbg_WDATA_29,
    Dbg_WVALID_29,
    Dbg_WREADY_29,
    Dbg_BRESP_29,
    Dbg_BVALID_29,
    Dbg_BREADY_29,
    Dbg_ARADDR_29,
    Dbg_ARVALID_29,
    Dbg_ARREADY_29,
    Dbg_RDATA_29,
    Dbg_RRESP_29,
    Dbg_RVALID_29,
    Dbg_RREADY_29,
    Dbg_Disable_30,
    Dbg_Clk_30,
    Dbg_TDI_30,
    Dbg_TDO_30,
    Dbg_Reg_En_30,
    Dbg_Capture_30,
    Dbg_Shift_30,
    Dbg_Update_30,
    Dbg_Rst_30,
    Dbg_Trig_In_30,
    Dbg_Trig_Ack_In_30,
    Dbg_Trig_Out_30,
    Dbg_Trig_Ack_Out_30,
    Dbg_TrClk_30,
    Dbg_TrData_30,
    Dbg_TrReady_30,
    Dbg_TrValid_30,
    Dbg_AWADDR_30,
    Dbg_AWVALID_30,
    Dbg_AWREADY_30,
    Dbg_WDATA_30,
    Dbg_WVALID_30,
    Dbg_WREADY_30,
    Dbg_BRESP_30,
    Dbg_BVALID_30,
    Dbg_BREADY_30,
    Dbg_ARADDR_30,
    Dbg_ARVALID_30,
    Dbg_ARREADY_30,
    Dbg_RDATA_30,
    Dbg_RRESP_30,
    Dbg_RVALID_30,
    Dbg_RREADY_30,
    Dbg_Disable_31,
    Dbg_Clk_31,
    Dbg_TDI_31,
    Dbg_TDO_31,
    Dbg_Reg_En_31,
    Dbg_Capture_31,
    Dbg_Shift_31,
    Dbg_Update_31,
    Dbg_Rst_31,
    Dbg_Trig_In_31,
    Dbg_Trig_Ack_In_31,
    Dbg_Trig_Out_31,
    Dbg_Trig_Ack_Out_31,
    Dbg_TrClk_31,
    Dbg_TrData_31,
    Dbg_TrReady_31,
    Dbg_TrValid_31,
    Dbg_AWADDR_31,
    Dbg_AWVALID_31,
    Dbg_AWREADY_31,
    Dbg_WDATA_31,
    Dbg_WVALID_31,
    Dbg_WREADY_31,
    Dbg_BRESP_31,
    Dbg_BVALID_31,
    Dbg_BREADY_31,
    Dbg_ARADDR_31,
    Dbg_ARVALID_31,
    Dbg_ARREADY_31,
    Dbg_RDATA_31,
    Dbg_RRESP_31,
    Dbg_RVALID_31,
    Dbg_RREADY_31,
    bscan_ext_tdi,
    bscan_ext_reset,
    bscan_ext_shift,
    bscan_ext_update,
    bscan_ext_capture,
    bscan_ext_sel,
    bscan_ext_drck,
    bscan_ext_tdo,
    bscan_ext_tck,
    bscan_ext_bscanid_en,
    Ext_JTAG_DRCK,
    Ext_JTAG_RESET,
    Ext_JTAG_SEL,
    Ext_JTAG_CAPTURE,
    Ext_JTAG_SHIFT,
    Ext_JTAG_UPDATE,
    Ext_JTAG_TDI,
    Ext_JTAG_TDO);
  input Config_Reset;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input S_AXI_ACLK;
  input S_AXI_ARESETN;
  input M_AXI_ACLK;
  input M_AXI_ARESETN;
  input M_AXIS_ACLK;
  input M_AXIS_ARESETN;
  output Interrupt;
  output Ext_BRK;
  output Ext_NM_BRK;
  output Debug_SYS_Rst;
  input Trig_In_0;
  output Trig_Ack_In_0;
  output Trig_Out_0;
  input Trig_Ack_Out_0;
  input Trig_In_1;
  output Trig_Ack_In_1;
  output Trig_Out_1;
  input Trig_Ack_Out_1;
  input Trig_In_2;
  output Trig_Ack_In_2;
  output Trig_Out_2;
  input Trig_Ack_Out_2;
  input Trig_In_3;
  output Trig_Ack_In_3;
  output Trig_Out_3;
  input Trig_Ack_Out_3;
  input [3:0]S_AXI_AWADDR;
  input S_AXI_AWVALID;
  output S_AXI_AWREADY;
  input [31:0]S_AXI_WDATA;
  input [3:0]S_AXI_WSTRB;
  input S_AXI_WVALID;
  output S_AXI_WREADY;
  output [1:0]S_AXI_BRESP;
  output S_AXI_BVALID;
  input S_AXI_BREADY;
  input [3:0]S_AXI_ARADDR;
  input S_AXI_ARVALID;
  output S_AXI_ARREADY;
  output [31:0]S_AXI_RDATA;
  output [1:0]S_AXI_RRESP;
  output S_AXI_RVALID;
  input S_AXI_RREADY;
  output [0:0]M_AXI_AWID;
  output [31:0]M_AXI_AWADDR;
  output [7:0]M_AXI_AWLEN;
  output [2:0]M_AXI_AWSIZE;
  output [1:0]M_AXI_AWBURST;
  output M_AXI_AWLOCK;
  output [3:0]M_AXI_AWCACHE;
  output [2:0]M_AXI_AWPROT;
  output [3:0]M_AXI_AWQOS;
  output M_AXI_AWVALID;
  input M_AXI_AWREADY;
  output [31:0]M_AXI_WDATA;
  output [3:0]M_AXI_WSTRB;
  output M_AXI_WLAST;
  output M_AXI_WVALID;
  input M_AXI_WREADY;
  input [1:0]M_AXI_BRESP;
  input [0:0]M_AXI_BID;
  input M_AXI_BVALID;
  output M_AXI_BREADY;
  output [0:0]M_AXI_ARID;
  output [31:0]M_AXI_ARADDR;
  output [7:0]M_AXI_ARLEN;
  output [2:0]M_AXI_ARSIZE;
  output [1:0]M_AXI_ARBURST;
  output M_AXI_ARLOCK;
  output [3:0]M_AXI_ARCACHE;
  output [2:0]M_AXI_ARPROT;
  output [3:0]M_AXI_ARQOS;
  output M_AXI_ARVALID;
  input M_AXI_ARREADY;
  input [0:0]M_AXI_RID;
  input [31:0]M_AXI_RDATA;
  input [1:0]M_AXI_RRESP;
  input M_AXI_RLAST;
  input M_AXI_RVALID;
  output M_AXI_RREADY;
  output [0:31]LMB_Data_Addr_0;
  input [0:31]LMB_Data_Read_0;
  output [0:31]LMB_Data_Write_0;
  output LMB_Addr_Strobe_0;
  output LMB_Read_Strobe_0;
  output LMB_Write_Strobe_0;
  input LMB_Ready_0;
  input LMB_Wait_0;
  input LMB_CE_0;
  input LMB_UE_0;
  output [0:3]LMB_Byte_Enable_0;
  output [0:31]LMB_Data_Addr_1;
  input [0:31]LMB_Data_Read_1;
  output [0:31]LMB_Data_Write_1;
  output LMB_Addr_Strobe_1;
  output LMB_Read_Strobe_1;
  output LMB_Write_Strobe_1;
  input LMB_Ready_1;
  input LMB_Wait_1;
  input LMB_CE_1;
  input LMB_UE_1;
  output [0:3]LMB_Byte_Enable_1;
  output [0:31]LMB_Data_Addr_2;
  input [0:31]LMB_Data_Read_2;
  output [0:31]LMB_Data_Write_2;
  output LMB_Addr_Strobe_2;
  output LMB_Read_Strobe_2;
  output LMB_Write_Strobe_2;
  input LMB_Ready_2;
  input LMB_Wait_2;
  input LMB_CE_2;
  input LMB_UE_2;
  output [0:3]LMB_Byte_Enable_2;
  output [0:31]LMB_Data_Addr_3;
  input [0:31]LMB_Data_Read_3;
  output [0:31]LMB_Data_Write_3;
  output LMB_Addr_Strobe_3;
  output LMB_Read_Strobe_3;
  output LMB_Write_Strobe_3;
  input LMB_Ready_3;
  input LMB_Wait_3;
  input LMB_CE_3;
  input LMB_UE_3;
  output [0:3]LMB_Byte_Enable_3;
  output [0:31]LMB_Data_Addr_4;
  input [0:31]LMB_Data_Read_4;
  output [0:31]LMB_Data_Write_4;
  output LMB_Addr_Strobe_4;
  output LMB_Read_Strobe_4;
  output LMB_Write_Strobe_4;
  input LMB_Ready_4;
  input LMB_Wait_4;
  input LMB_CE_4;
  input LMB_UE_4;
  output [0:3]LMB_Byte_Enable_4;
  output [0:31]LMB_Data_Addr_5;
  input [0:31]LMB_Data_Read_5;
  output [0:31]LMB_Data_Write_5;
  output LMB_Addr_Strobe_5;
  output LMB_Read_Strobe_5;
  output LMB_Write_Strobe_5;
  input LMB_Ready_5;
  input LMB_Wait_5;
  input LMB_CE_5;
  input LMB_UE_5;
  output [0:3]LMB_Byte_Enable_5;
  output [0:31]LMB_Data_Addr_6;
  input [0:31]LMB_Data_Read_6;
  output [0:31]LMB_Data_Write_6;
  output LMB_Addr_Strobe_6;
  output LMB_Read_Strobe_6;
  output LMB_Write_Strobe_6;
  input LMB_Ready_6;
  input LMB_Wait_6;
  input LMB_CE_6;
  input LMB_UE_6;
  output [0:3]LMB_Byte_Enable_6;
  output [0:31]LMB_Data_Addr_7;
  input [0:31]LMB_Data_Read_7;
  output [0:31]LMB_Data_Write_7;
  output LMB_Addr_Strobe_7;
  output LMB_Read_Strobe_7;
  output LMB_Write_Strobe_7;
  input LMB_Ready_7;
  input LMB_Wait_7;
  input LMB_CE_7;
  input LMB_UE_7;
  output [0:3]LMB_Byte_Enable_7;
  output [0:31]LMB_Data_Addr_8;
  input [0:31]LMB_Data_Read_8;
  output [0:31]LMB_Data_Write_8;
  output LMB_Addr_Strobe_8;
  output LMB_Read_Strobe_8;
  output LMB_Write_Strobe_8;
  input LMB_Ready_8;
  input LMB_Wait_8;
  input LMB_CE_8;
  input LMB_UE_8;
  output [0:3]LMB_Byte_Enable_8;
  output [0:31]LMB_Data_Addr_9;
  input [0:31]LMB_Data_Read_9;
  output [0:31]LMB_Data_Write_9;
  output LMB_Addr_Strobe_9;
  output LMB_Read_Strobe_9;
  output LMB_Write_Strobe_9;
  input LMB_Ready_9;
  input LMB_Wait_9;
  input LMB_CE_9;
  input LMB_UE_9;
  output [0:3]LMB_Byte_Enable_9;
  output [0:31]LMB_Data_Addr_10;
  input [0:31]LMB_Data_Read_10;
  output [0:31]LMB_Data_Write_10;
  output LMB_Addr_Strobe_10;
  output LMB_Read_Strobe_10;
  output LMB_Write_Strobe_10;
  input LMB_Ready_10;
  input LMB_Wait_10;
  input LMB_CE_10;
  input LMB_UE_10;
  output [0:3]LMB_Byte_Enable_10;
  output [0:31]LMB_Data_Addr_11;
  input [0:31]LMB_Data_Read_11;
  output [0:31]LMB_Data_Write_11;
  output LMB_Addr_Strobe_11;
  output LMB_Read_Strobe_11;
  output LMB_Write_Strobe_11;
  input LMB_Ready_11;
  input LMB_Wait_11;
  input LMB_CE_11;
  input LMB_UE_11;
  output [0:3]LMB_Byte_Enable_11;
  output [0:31]LMB_Data_Addr_12;
  input [0:31]LMB_Data_Read_12;
  output [0:31]LMB_Data_Write_12;
  output LMB_Addr_Strobe_12;
  output LMB_Read_Strobe_12;
  output LMB_Write_Strobe_12;
  input LMB_Ready_12;
  input LMB_Wait_12;
  input LMB_CE_12;
  input LMB_UE_12;
  output [0:3]LMB_Byte_Enable_12;
  output [0:31]LMB_Data_Addr_13;
  input [0:31]LMB_Data_Read_13;
  output [0:31]LMB_Data_Write_13;
  output LMB_Addr_Strobe_13;
  output LMB_Read_Strobe_13;
  output LMB_Write_Strobe_13;
  input LMB_Ready_13;
  input LMB_Wait_13;
  input LMB_CE_13;
  input LMB_UE_13;
  output [0:3]LMB_Byte_Enable_13;
  output [0:31]LMB_Data_Addr_14;
  input [0:31]LMB_Data_Read_14;
  output [0:31]LMB_Data_Write_14;
  output LMB_Addr_Strobe_14;
  output LMB_Read_Strobe_14;
  output LMB_Write_Strobe_14;
  input LMB_Ready_14;
  input LMB_Wait_14;
  input LMB_CE_14;
  input LMB_UE_14;
  output [0:3]LMB_Byte_Enable_14;
  output [0:31]LMB_Data_Addr_15;
  input [0:31]LMB_Data_Read_15;
  output [0:31]LMB_Data_Write_15;
  output LMB_Addr_Strobe_15;
  output LMB_Read_Strobe_15;
  output LMB_Write_Strobe_15;
  input LMB_Ready_15;
  input LMB_Wait_15;
  input LMB_CE_15;
  input LMB_UE_15;
  output [0:3]LMB_Byte_Enable_15;
  output [0:31]LMB_Data_Addr_16;
  input [0:31]LMB_Data_Read_16;
  output [0:31]LMB_Data_Write_16;
  output LMB_Addr_Strobe_16;
  output LMB_Read_Strobe_16;
  output LMB_Write_Strobe_16;
  input LMB_Ready_16;
  input LMB_Wait_16;
  input LMB_CE_16;
  input LMB_UE_16;
  output [0:3]LMB_Byte_Enable_16;
  output [0:31]LMB_Data_Addr_17;
  input [0:31]LMB_Data_Read_17;
  output [0:31]LMB_Data_Write_17;
  output LMB_Addr_Strobe_17;
  output LMB_Read_Strobe_17;
  output LMB_Write_Strobe_17;
  input LMB_Ready_17;
  input LMB_Wait_17;
  input LMB_CE_17;
  input LMB_UE_17;
  output [0:3]LMB_Byte_Enable_17;
  output [0:31]LMB_Data_Addr_18;
  input [0:31]LMB_Data_Read_18;
  output [0:31]LMB_Data_Write_18;
  output LMB_Addr_Strobe_18;
  output LMB_Read_Strobe_18;
  output LMB_Write_Strobe_18;
  input LMB_Ready_18;
  input LMB_Wait_18;
  input LMB_CE_18;
  input LMB_UE_18;
  output [0:3]LMB_Byte_Enable_18;
  output [0:31]LMB_Data_Addr_19;
  input [0:31]LMB_Data_Read_19;
  output [0:31]LMB_Data_Write_19;
  output LMB_Addr_Strobe_19;
  output LMB_Read_Strobe_19;
  output LMB_Write_Strobe_19;
  input LMB_Ready_19;
  input LMB_Wait_19;
  input LMB_CE_19;
  input LMB_UE_19;
  output [0:3]LMB_Byte_Enable_19;
  output [0:31]LMB_Data_Addr_20;
  input [0:31]LMB_Data_Read_20;
  output [0:31]LMB_Data_Write_20;
  output LMB_Addr_Strobe_20;
  output LMB_Read_Strobe_20;
  output LMB_Write_Strobe_20;
  input LMB_Ready_20;
  input LMB_Wait_20;
  input LMB_CE_20;
  input LMB_UE_20;
  output [0:3]LMB_Byte_Enable_20;
  output [0:31]LMB_Data_Addr_21;
  input [0:31]LMB_Data_Read_21;
  output [0:31]LMB_Data_Write_21;
  output LMB_Addr_Strobe_21;
  output LMB_Read_Strobe_21;
  output LMB_Write_Strobe_21;
  input LMB_Ready_21;
  input LMB_Wait_21;
  input LMB_CE_21;
  input LMB_UE_21;
  output [0:3]LMB_Byte_Enable_21;
  output [0:31]LMB_Data_Addr_22;
  input [0:31]LMB_Data_Read_22;
  output [0:31]LMB_Data_Write_22;
  output LMB_Addr_Strobe_22;
  output LMB_Read_Strobe_22;
  output LMB_Write_Strobe_22;
  input LMB_Ready_22;
  input LMB_Wait_22;
  input LMB_CE_22;
  input LMB_UE_22;
  output [0:3]LMB_Byte_Enable_22;
  output [0:31]LMB_Data_Addr_23;
  input [0:31]LMB_Data_Read_23;
  output [0:31]LMB_Data_Write_23;
  output LMB_Addr_Strobe_23;
  output LMB_Read_Strobe_23;
  output LMB_Write_Strobe_23;
  input LMB_Ready_23;
  input LMB_Wait_23;
  input LMB_CE_23;
  input LMB_UE_23;
  output [0:3]LMB_Byte_Enable_23;
  output [0:31]LMB_Data_Addr_24;
  input [0:31]LMB_Data_Read_24;
  output [0:31]LMB_Data_Write_24;
  output LMB_Addr_Strobe_24;
  output LMB_Read_Strobe_24;
  output LMB_Write_Strobe_24;
  input LMB_Ready_24;
  input LMB_Wait_24;
  input LMB_CE_24;
  input LMB_UE_24;
  output [0:3]LMB_Byte_Enable_24;
  output [0:31]LMB_Data_Addr_25;
  input [0:31]LMB_Data_Read_25;
  output [0:31]LMB_Data_Write_25;
  output LMB_Addr_Strobe_25;
  output LMB_Read_Strobe_25;
  output LMB_Write_Strobe_25;
  input LMB_Ready_25;
  input LMB_Wait_25;
  input LMB_CE_25;
  input LMB_UE_25;
  output [0:3]LMB_Byte_Enable_25;
  output [0:31]LMB_Data_Addr_26;
  input [0:31]LMB_Data_Read_26;
  output [0:31]LMB_Data_Write_26;
  output LMB_Addr_Strobe_26;
  output LMB_Read_Strobe_26;
  output LMB_Write_Strobe_26;
  input LMB_Ready_26;
  input LMB_Wait_26;
  input LMB_CE_26;
  input LMB_UE_26;
  output [0:3]LMB_Byte_Enable_26;
  output [0:31]LMB_Data_Addr_27;
  input [0:31]LMB_Data_Read_27;
  output [0:31]LMB_Data_Write_27;
  output LMB_Addr_Strobe_27;
  output LMB_Read_Strobe_27;
  output LMB_Write_Strobe_27;
  input LMB_Ready_27;
  input LMB_Wait_27;
  input LMB_CE_27;
  input LMB_UE_27;
  output [0:3]LMB_Byte_Enable_27;
  output [0:31]LMB_Data_Addr_28;
  input [0:31]LMB_Data_Read_28;
  output [0:31]LMB_Data_Write_28;
  output LMB_Addr_Strobe_28;
  output LMB_Read_Strobe_28;
  output LMB_Write_Strobe_28;
  input LMB_Ready_28;
  input LMB_Wait_28;
  input LMB_CE_28;
  input LMB_UE_28;
  output [0:3]LMB_Byte_Enable_28;
  output [0:31]LMB_Data_Addr_29;
  input [0:31]LMB_Data_Read_29;
  output [0:31]LMB_Data_Write_29;
  output LMB_Addr_Strobe_29;
  output LMB_Read_Strobe_29;
  output LMB_Write_Strobe_29;
  input LMB_Ready_29;
  input LMB_Wait_29;
  input LMB_CE_29;
  input LMB_UE_29;
  output [0:3]LMB_Byte_Enable_29;
  output [0:31]LMB_Data_Addr_30;
  input [0:31]LMB_Data_Read_30;
  output [0:31]LMB_Data_Write_30;
  output LMB_Addr_Strobe_30;
  output LMB_Read_Strobe_30;
  output LMB_Write_Strobe_30;
  input LMB_Ready_30;
  input LMB_Wait_30;
  input LMB_CE_30;
  input LMB_UE_30;
  output [0:3]LMB_Byte_Enable_30;
  output [0:31]LMB_Data_Addr_31;
  input [0:31]LMB_Data_Read_31;
  output [0:31]LMB_Data_Write_31;
  output LMB_Addr_Strobe_31;
  output LMB_Read_Strobe_31;
  output LMB_Write_Strobe_31;
  input LMB_Ready_31;
  input LMB_Wait_31;
  input LMB_CE_31;
  input LMB_UE_31;
  output [0:3]LMB_Byte_Enable_31;
  output [31:0]M_AXIS_TDATA;
  output [6:0]M_AXIS_TID;
  input M_AXIS_TREADY;
  output M_AXIS_TVALID;
  output TRACE_CLK_OUT;
  input TRACE_CLK;
  output TRACE_CTL;
  output [31:0]TRACE_DATA;
  output Dbg_Disable_0;
  output Dbg_Clk_0;
  output Dbg_TDI_0;
  input Dbg_TDO_0;
  output [0:7]Dbg_Reg_En_0;
  output Dbg_Capture_0;
  output Dbg_Shift_0;
  output Dbg_Update_0;
  output Dbg_Rst_0;
  input [0:7]Dbg_Trig_In_0;
  output [0:7]Dbg_Trig_Ack_In_0;
  output [0:7]Dbg_Trig_Out_0;
  input [0:7]Dbg_Trig_Ack_Out_0;
  output Dbg_TrClk_0;
  input [0:35]Dbg_TrData_0;
  output Dbg_TrReady_0;
  input Dbg_TrValid_0;
  output [14:2]Dbg_AWADDR_0;
  output Dbg_AWVALID_0;
  input Dbg_AWREADY_0;
  output [31:0]Dbg_WDATA_0;
  output Dbg_WVALID_0;
  input Dbg_WREADY_0;
  input [1:0]Dbg_BRESP_0;
  input Dbg_BVALID_0;
  output Dbg_BREADY_0;
  output [14:2]Dbg_ARADDR_0;
  output Dbg_ARVALID_0;
  input Dbg_ARREADY_0;
  input [31:0]Dbg_RDATA_0;
  input [1:0]Dbg_RRESP_0;
  input Dbg_RVALID_0;
  output Dbg_RREADY_0;
  output Dbg_Disable_1;
  output Dbg_Clk_1;
  output Dbg_TDI_1;
  input Dbg_TDO_1;
  output [0:7]Dbg_Reg_En_1;
  output Dbg_Capture_1;
  output Dbg_Shift_1;
  output Dbg_Update_1;
  output Dbg_Rst_1;
  input [0:7]Dbg_Trig_In_1;
  output [0:7]Dbg_Trig_Ack_In_1;
  output [0:7]Dbg_Trig_Out_1;
  input [0:7]Dbg_Trig_Ack_Out_1;
  output Dbg_TrClk_1;
  input [0:35]Dbg_TrData_1;
  output Dbg_TrReady_1;
  input Dbg_TrValid_1;
  output [14:2]Dbg_AWADDR_1;
  output Dbg_AWVALID_1;
  input Dbg_AWREADY_1;
  output [31:0]Dbg_WDATA_1;
  output Dbg_WVALID_1;
  input Dbg_WREADY_1;
  input [1:0]Dbg_BRESP_1;
  input Dbg_BVALID_1;
  output Dbg_BREADY_1;
  output [14:2]Dbg_ARADDR_1;
  output Dbg_ARVALID_1;
  input Dbg_ARREADY_1;
  input [31:0]Dbg_RDATA_1;
  input [1:0]Dbg_RRESP_1;
  input Dbg_RVALID_1;
  output Dbg_RREADY_1;
  output Dbg_Disable_2;
  output Dbg_Clk_2;
  output Dbg_TDI_2;
  input Dbg_TDO_2;
  output [0:7]Dbg_Reg_En_2;
  output Dbg_Capture_2;
  output Dbg_Shift_2;
  output Dbg_Update_2;
  output Dbg_Rst_2;
  input [0:7]Dbg_Trig_In_2;
  output [0:7]Dbg_Trig_Ack_In_2;
  output [0:7]Dbg_Trig_Out_2;
  input [0:7]Dbg_Trig_Ack_Out_2;
  output Dbg_TrClk_2;
  input [0:35]Dbg_TrData_2;
  output Dbg_TrReady_2;
  input Dbg_TrValid_2;
  output [14:2]Dbg_AWADDR_2;
  output Dbg_AWVALID_2;
  input Dbg_AWREADY_2;
  output [31:0]Dbg_WDATA_2;
  output Dbg_WVALID_2;
  input Dbg_WREADY_2;
  input [1:0]Dbg_BRESP_2;
  input Dbg_BVALID_2;
  output Dbg_BREADY_2;
  output [14:2]Dbg_ARADDR_2;
  output Dbg_ARVALID_2;
  input Dbg_ARREADY_2;
  input [31:0]Dbg_RDATA_2;
  input [1:0]Dbg_RRESP_2;
  input Dbg_RVALID_2;
  output Dbg_RREADY_2;
  output Dbg_Disable_3;
  output Dbg_Clk_3;
  output Dbg_TDI_3;
  input Dbg_TDO_3;
  output [0:7]Dbg_Reg_En_3;
  output Dbg_Capture_3;
  output Dbg_Shift_3;
  output Dbg_Update_3;
  output Dbg_Rst_3;
  input [0:7]Dbg_Trig_In_3;
  output [0:7]Dbg_Trig_Ack_In_3;
  output [0:7]Dbg_Trig_Out_3;
  input [0:7]Dbg_Trig_Ack_Out_3;
  output Dbg_TrClk_3;
  input [0:35]Dbg_TrData_3;
  output Dbg_TrReady_3;
  input Dbg_TrValid_3;
  output [14:2]Dbg_AWADDR_3;
  output Dbg_AWVALID_3;
  input Dbg_AWREADY_3;
  output [31:0]Dbg_WDATA_3;
  output Dbg_WVALID_3;
  input Dbg_WREADY_3;
  input [1:0]Dbg_BRESP_3;
  input Dbg_BVALID_3;
  output Dbg_BREADY_3;
  output [14:2]Dbg_ARADDR_3;
  output Dbg_ARVALID_3;
  input Dbg_ARREADY_3;
  input [31:0]Dbg_RDATA_3;
  input [1:0]Dbg_RRESP_3;
  input Dbg_RVALID_3;
  output Dbg_RREADY_3;
  output Dbg_Disable_4;
  output Dbg_Clk_4;
  output Dbg_TDI_4;
  input Dbg_TDO_4;
  output [0:7]Dbg_Reg_En_4;
  output Dbg_Capture_4;
  output Dbg_Shift_4;
  output Dbg_Update_4;
  output Dbg_Rst_4;
  input [0:7]Dbg_Trig_In_4;
  output [0:7]Dbg_Trig_Ack_In_4;
  output [0:7]Dbg_Trig_Out_4;
  input [0:7]Dbg_Trig_Ack_Out_4;
  output Dbg_TrClk_4;
  input [0:35]Dbg_TrData_4;
  output Dbg_TrReady_4;
  input Dbg_TrValid_4;
  output [14:2]Dbg_AWADDR_4;
  output Dbg_AWVALID_4;
  input Dbg_AWREADY_4;
  output [31:0]Dbg_WDATA_4;
  output Dbg_WVALID_4;
  input Dbg_WREADY_4;
  input [1:0]Dbg_BRESP_4;
  input Dbg_BVALID_4;
  output Dbg_BREADY_4;
  output [14:2]Dbg_ARADDR_4;
  output Dbg_ARVALID_4;
  input Dbg_ARREADY_4;
  input [31:0]Dbg_RDATA_4;
  input [1:0]Dbg_RRESP_4;
  input Dbg_RVALID_4;
  output Dbg_RREADY_4;
  output Dbg_Disable_5;
  output Dbg_Clk_5;
  output Dbg_TDI_5;
  input Dbg_TDO_5;
  output [0:7]Dbg_Reg_En_5;
  output Dbg_Capture_5;
  output Dbg_Shift_5;
  output Dbg_Update_5;
  output Dbg_Rst_5;
  input [0:7]Dbg_Trig_In_5;
  output [0:7]Dbg_Trig_Ack_In_5;
  output [0:7]Dbg_Trig_Out_5;
  input [0:7]Dbg_Trig_Ack_Out_5;
  output Dbg_TrClk_5;
  input [0:35]Dbg_TrData_5;
  output Dbg_TrReady_5;
  input Dbg_TrValid_5;
  output [14:2]Dbg_AWADDR_5;
  output Dbg_AWVALID_5;
  input Dbg_AWREADY_5;
  output [31:0]Dbg_WDATA_5;
  output Dbg_WVALID_5;
  input Dbg_WREADY_5;
  input [1:0]Dbg_BRESP_5;
  input Dbg_BVALID_5;
  output Dbg_BREADY_5;
  output [14:2]Dbg_ARADDR_5;
  output Dbg_ARVALID_5;
  input Dbg_ARREADY_5;
  input [31:0]Dbg_RDATA_5;
  input [1:0]Dbg_RRESP_5;
  input Dbg_RVALID_5;
  output Dbg_RREADY_5;
  output Dbg_Disable_6;
  output Dbg_Clk_6;
  output Dbg_TDI_6;
  input Dbg_TDO_6;
  output [0:7]Dbg_Reg_En_6;
  output Dbg_Capture_6;
  output Dbg_Shift_6;
  output Dbg_Update_6;
  output Dbg_Rst_6;
  input [0:7]Dbg_Trig_In_6;
  output [0:7]Dbg_Trig_Ack_In_6;
  output [0:7]Dbg_Trig_Out_6;
  input [0:7]Dbg_Trig_Ack_Out_6;
  output Dbg_TrClk_6;
  input [0:35]Dbg_TrData_6;
  output Dbg_TrReady_6;
  input Dbg_TrValid_6;
  output [14:2]Dbg_AWADDR_6;
  output Dbg_AWVALID_6;
  input Dbg_AWREADY_6;
  output [31:0]Dbg_WDATA_6;
  output Dbg_WVALID_6;
  input Dbg_WREADY_6;
  input [1:0]Dbg_BRESP_6;
  input Dbg_BVALID_6;
  output Dbg_BREADY_6;
  output [14:2]Dbg_ARADDR_6;
  output Dbg_ARVALID_6;
  input Dbg_ARREADY_6;
  input [31:0]Dbg_RDATA_6;
  input [1:0]Dbg_RRESP_6;
  input Dbg_RVALID_6;
  output Dbg_RREADY_6;
  output Dbg_Disable_7;
  output Dbg_Clk_7;
  output Dbg_TDI_7;
  input Dbg_TDO_7;
  output [0:7]Dbg_Reg_En_7;
  output Dbg_Capture_7;
  output Dbg_Shift_7;
  output Dbg_Update_7;
  output Dbg_Rst_7;
  input [0:7]Dbg_Trig_In_7;
  output [0:7]Dbg_Trig_Ack_In_7;
  output [0:7]Dbg_Trig_Out_7;
  input [0:7]Dbg_Trig_Ack_Out_7;
  output Dbg_TrClk_7;
  input [0:35]Dbg_TrData_7;
  output Dbg_TrReady_7;
  input Dbg_TrValid_7;
  output [14:2]Dbg_AWADDR_7;
  output Dbg_AWVALID_7;
  input Dbg_AWREADY_7;
  output [31:0]Dbg_WDATA_7;
  output Dbg_WVALID_7;
  input Dbg_WREADY_7;
  input [1:0]Dbg_BRESP_7;
  input Dbg_BVALID_7;
  output Dbg_BREADY_7;
  output [14:2]Dbg_ARADDR_7;
  output Dbg_ARVALID_7;
  input Dbg_ARREADY_7;
  input [31:0]Dbg_RDATA_7;
  input [1:0]Dbg_RRESP_7;
  input Dbg_RVALID_7;
  output Dbg_RREADY_7;
  output Dbg_Disable_8;
  output Dbg_Clk_8;
  output Dbg_TDI_8;
  input Dbg_TDO_8;
  output [0:7]Dbg_Reg_En_8;
  output Dbg_Capture_8;
  output Dbg_Shift_8;
  output Dbg_Update_8;
  output Dbg_Rst_8;
  input [0:7]Dbg_Trig_In_8;
  output [0:7]Dbg_Trig_Ack_In_8;
  output [0:7]Dbg_Trig_Out_8;
  input [0:7]Dbg_Trig_Ack_Out_8;
  output Dbg_TrClk_8;
  input [0:35]Dbg_TrData_8;
  output Dbg_TrReady_8;
  input Dbg_TrValid_8;
  output [14:2]Dbg_AWADDR_8;
  output Dbg_AWVALID_8;
  input Dbg_AWREADY_8;
  output [31:0]Dbg_WDATA_8;
  output Dbg_WVALID_8;
  input Dbg_WREADY_8;
  input [1:0]Dbg_BRESP_8;
  input Dbg_BVALID_8;
  output Dbg_BREADY_8;
  output [14:2]Dbg_ARADDR_8;
  output Dbg_ARVALID_8;
  input Dbg_ARREADY_8;
  input [31:0]Dbg_RDATA_8;
  input [1:0]Dbg_RRESP_8;
  input Dbg_RVALID_8;
  output Dbg_RREADY_8;
  output Dbg_Disable_9;
  output Dbg_Clk_9;
  output Dbg_TDI_9;
  input Dbg_TDO_9;
  output [0:7]Dbg_Reg_En_9;
  output Dbg_Capture_9;
  output Dbg_Shift_9;
  output Dbg_Update_9;
  output Dbg_Rst_9;
  input [0:7]Dbg_Trig_In_9;
  output [0:7]Dbg_Trig_Ack_In_9;
  output [0:7]Dbg_Trig_Out_9;
  input [0:7]Dbg_Trig_Ack_Out_9;
  output Dbg_TrClk_9;
  input [0:35]Dbg_TrData_9;
  output Dbg_TrReady_9;
  input Dbg_TrValid_9;
  output [14:2]Dbg_AWADDR_9;
  output Dbg_AWVALID_9;
  input Dbg_AWREADY_9;
  output [31:0]Dbg_WDATA_9;
  output Dbg_WVALID_9;
  input Dbg_WREADY_9;
  input [1:0]Dbg_BRESP_9;
  input Dbg_BVALID_9;
  output Dbg_BREADY_9;
  output [14:2]Dbg_ARADDR_9;
  output Dbg_ARVALID_9;
  input Dbg_ARREADY_9;
  input [31:0]Dbg_RDATA_9;
  input [1:0]Dbg_RRESP_9;
  input Dbg_RVALID_9;
  output Dbg_RREADY_9;
  output Dbg_Disable_10;
  output Dbg_Clk_10;
  output Dbg_TDI_10;
  input Dbg_TDO_10;
  output [0:7]Dbg_Reg_En_10;
  output Dbg_Capture_10;
  output Dbg_Shift_10;
  output Dbg_Update_10;
  output Dbg_Rst_10;
  input [0:7]Dbg_Trig_In_10;
  output [0:7]Dbg_Trig_Ack_In_10;
  output [0:7]Dbg_Trig_Out_10;
  input [0:7]Dbg_Trig_Ack_Out_10;
  output Dbg_TrClk_10;
  input [0:35]Dbg_TrData_10;
  output Dbg_TrReady_10;
  input Dbg_TrValid_10;
  output [14:2]Dbg_AWADDR_10;
  output Dbg_AWVALID_10;
  input Dbg_AWREADY_10;
  output [31:0]Dbg_WDATA_10;
  output Dbg_WVALID_10;
  input Dbg_WREADY_10;
  input [1:0]Dbg_BRESP_10;
  input Dbg_BVALID_10;
  output Dbg_BREADY_10;
  output [14:2]Dbg_ARADDR_10;
  output Dbg_ARVALID_10;
  input Dbg_ARREADY_10;
  input [31:0]Dbg_RDATA_10;
  input [1:0]Dbg_RRESP_10;
  input Dbg_RVALID_10;
  output Dbg_RREADY_10;
  output Dbg_Disable_11;
  output Dbg_Clk_11;
  output Dbg_TDI_11;
  input Dbg_TDO_11;
  output [0:7]Dbg_Reg_En_11;
  output Dbg_Capture_11;
  output Dbg_Shift_11;
  output Dbg_Update_11;
  output Dbg_Rst_11;
  input [0:7]Dbg_Trig_In_11;
  output [0:7]Dbg_Trig_Ack_In_11;
  output [0:7]Dbg_Trig_Out_11;
  input [0:7]Dbg_Trig_Ack_Out_11;
  output Dbg_TrClk_11;
  input [0:35]Dbg_TrData_11;
  output Dbg_TrReady_11;
  input Dbg_TrValid_11;
  output [14:2]Dbg_AWADDR_11;
  output Dbg_AWVALID_11;
  input Dbg_AWREADY_11;
  output [31:0]Dbg_WDATA_11;
  output Dbg_WVALID_11;
  input Dbg_WREADY_11;
  input [1:0]Dbg_BRESP_11;
  input Dbg_BVALID_11;
  output Dbg_BREADY_11;
  output [14:2]Dbg_ARADDR_11;
  output Dbg_ARVALID_11;
  input Dbg_ARREADY_11;
  input [31:0]Dbg_RDATA_11;
  input [1:0]Dbg_RRESP_11;
  input Dbg_RVALID_11;
  output Dbg_RREADY_11;
  output Dbg_Disable_12;
  output Dbg_Clk_12;
  output Dbg_TDI_12;
  input Dbg_TDO_12;
  output [0:7]Dbg_Reg_En_12;
  output Dbg_Capture_12;
  output Dbg_Shift_12;
  output Dbg_Update_12;
  output Dbg_Rst_12;
  input [0:7]Dbg_Trig_In_12;
  output [0:7]Dbg_Trig_Ack_In_12;
  output [0:7]Dbg_Trig_Out_12;
  input [0:7]Dbg_Trig_Ack_Out_12;
  output Dbg_TrClk_12;
  input [0:35]Dbg_TrData_12;
  output Dbg_TrReady_12;
  input Dbg_TrValid_12;
  output [14:2]Dbg_AWADDR_12;
  output Dbg_AWVALID_12;
  input Dbg_AWREADY_12;
  output [31:0]Dbg_WDATA_12;
  output Dbg_WVALID_12;
  input Dbg_WREADY_12;
  input [1:0]Dbg_BRESP_12;
  input Dbg_BVALID_12;
  output Dbg_BREADY_12;
  output [14:2]Dbg_ARADDR_12;
  output Dbg_ARVALID_12;
  input Dbg_ARREADY_12;
  input [31:0]Dbg_RDATA_12;
  input [1:0]Dbg_RRESP_12;
  input Dbg_RVALID_12;
  output Dbg_RREADY_12;
  output Dbg_Disable_13;
  output Dbg_Clk_13;
  output Dbg_TDI_13;
  input Dbg_TDO_13;
  output [0:7]Dbg_Reg_En_13;
  output Dbg_Capture_13;
  output Dbg_Shift_13;
  output Dbg_Update_13;
  output Dbg_Rst_13;
  input [0:7]Dbg_Trig_In_13;
  output [0:7]Dbg_Trig_Ack_In_13;
  output [0:7]Dbg_Trig_Out_13;
  input [0:7]Dbg_Trig_Ack_Out_13;
  output Dbg_TrClk_13;
  input [0:35]Dbg_TrData_13;
  output Dbg_TrReady_13;
  input Dbg_TrValid_13;
  output [14:2]Dbg_AWADDR_13;
  output Dbg_AWVALID_13;
  input Dbg_AWREADY_13;
  output [31:0]Dbg_WDATA_13;
  output Dbg_WVALID_13;
  input Dbg_WREADY_13;
  input [1:0]Dbg_BRESP_13;
  input Dbg_BVALID_13;
  output Dbg_BREADY_13;
  output [14:2]Dbg_ARADDR_13;
  output Dbg_ARVALID_13;
  input Dbg_ARREADY_13;
  input [31:0]Dbg_RDATA_13;
  input [1:0]Dbg_RRESP_13;
  input Dbg_RVALID_13;
  output Dbg_RREADY_13;
  output Dbg_Disable_14;
  output Dbg_Clk_14;
  output Dbg_TDI_14;
  input Dbg_TDO_14;
  output [0:7]Dbg_Reg_En_14;
  output Dbg_Capture_14;
  output Dbg_Shift_14;
  output Dbg_Update_14;
  output Dbg_Rst_14;
  input [0:7]Dbg_Trig_In_14;
  output [0:7]Dbg_Trig_Ack_In_14;
  output [0:7]Dbg_Trig_Out_14;
  input [0:7]Dbg_Trig_Ack_Out_14;
  output Dbg_TrClk_14;
  input [0:35]Dbg_TrData_14;
  output Dbg_TrReady_14;
  input Dbg_TrValid_14;
  output [14:2]Dbg_AWADDR_14;
  output Dbg_AWVALID_14;
  input Dbg_AWREADY_14;
  output [31:0]Dbg_WDATA_14;
  output Dbg_WVALID_14;
  input Dbg_WREADY_14;
  input [1:0]Dbg_BRESP_14;
  input Dbg_BVALID_14;
  output Dbg_BREADY_14;
  output [14:2]Dbg_ARADDR_14;
  output Dbg_ARVALID_14;
  input Dbg_ARREADY_14;
  input [31:0]Dbg_RDATA_14;
  input [1:0]Dbg_RRESP_14;
  input Dbg_RVALID_14;
  output Dbg_RREADY_14;
  output Dbg_Disable_15;
  output Dbg_Clk_15;
  output Dbg_TDI_15;
  input Dbg_TDO_15;
  output [0:7]Dbg_Reg_En_15;
  output Dbg_Capture_15;
  output Dbg_Shift_15;
  output Dbg_Update_15;
  output Dbg_Rst_15;
  input [0:7]Dbg_Trig_In_15;
  output [0:7]Dbg_Trig_Ack_In_15;
  output [0:7]Dbg_Trig_Out_15;
  input [0:7]Dbg_Trig_Ack_Out_15;
  output Dbg_TrClk_15;
  input [0:35]Dbg_TrData_15;
  output Dbg_TrReady_15;
  input Dbg_TrValid_15;
  output [14:2]Dbg_AWADDR_15;
  output Dbg_AWVALID_15;
  input Dbg_AWREADY_15;
  output [31:0]Dbg_WDATA_15;
  output Dbg_WVALID_15;
  input Dbg_WREADY_15;
  input [1:0]Dbg_BRESP_15;
  input Dbg_BVALID_15;
  output Dbg_BREADY_15;
  output [14:2]Dbg_ARADDR_15;
  output Dbg_ARVALID_15;
  input Dbg_ARREADY_15;
  input [31:0]Dbg_RDATA_15;
  input [1:0]Dbg_RRESP_15;
  input Dbg_RVALID_15;
  output Dbg_RREADY_15;
  output Dbg_Disable_16;
  output Dbg_Clk_16;
  output Dbg_TDI_16;
  input Dbg_TDO_16;
  output [0:7]Dbg_Reg_En_16;
  output Dbg_Capture_16;
  output Dbg_Shift_16;
  output Dbg_Update_16;
  output Dbg_Rst_16;
  input [0:7]Dbg_Trig_In_16;
  output [0:7]Dbg_Trig_Ack_In_16;
  output [0:7]Dbg_Trig_Out_16;
  input [0:7]Dbg_Trig_Ack_Out_16;
  output Dbg_TrClk_16;
  input [0:35]Dbg_TrData_16;
  output Dbg_TrReady_16;
  input Dbg_TrValid_16;
  output [14:2]Dbg_AWADDR_16;
  output Dbg_AWVALID_16;
  input Dbg_AWREADY_16;
  output [31:0]Dbg_WDATA_16;
  output Dbg_WVALID_16;
  input Dbg_WREADY_16;
  input [1:0]Dbg_BRESP_16;
  input Dbg_BVALID_16;
  output Dbg_BREADY_16;
  output [14:2]Dbg_ARADDR_16;
  output Dbg_ARVALID_16;
  input Dbg_ARREADY_16;
  input [31:0]Dbg_RDATA_16;
  input [1:0]Dbg_RRESP_16;
  input Dbg_RVALID_16;
  output Dbg_RREADY_16;
  output Dbg_Disable_17;
  output Dbg_Clk_17;
  output Dbg_TDI_17;
  input Dbg_TDO_17;
  output [0:7]Dbg_Reg_En_17;
  output Dbg_Capture_17;
  output Dbg_Shift_17;
  output Dbg_Update_17;
  output Dbg_Rst_17;
  input [0:7]Dbg_Trig_In_17;
  output [0:7]Dbg_Trig_Ack_In_17;
  output [0:7]Dbg_Trig_Out_17;
  input [0:7]Dbg_Trig_Ack_Out_17;
  output Dbg_TrClk_17;
  input [0:35]Dbg_TrData_17;
  output Dbg_TrReady_17;
  input Dbg_TrValid_17;
  output [14:2]Dbg_AWADDR_17;
  output Dbg_AWVALID_17;
  input Dbg_AWREADY_17;
  output [31:0]Dbg_WDATA_17;
  output Dbg_WVALID_17;
  input Dbg_WREADY_17;
  input [1:0]Dbg_BRESP_17;
  input Dbg_BVALID_17;
  output Dbg_BREADY_17;
  output [14:2]Dbg_ARADDR_17;
  output Dbg_ARVALID_17;
  input Dbg_ARREADY_17;
  input [31:0]Dbg_RDATA_17;
  input [1:0]Dbg_RRESP_17;
  input Dbg_RVALID_17;
  output Dbg_RREADY_17;
  output Dbg_Disable_18;
  output Dbg_Clk_18;
  output Dbg_TDI_18;
  input Dbg_TDO_18;
  output [0:7]Dbg_Reg_En_18;
  output Dbg_Capture_18;
  output Dbg_Shift_18;
  output Dbg_Update_18;
  output Dbg_Rst_18;
  input [0:7]Dbg_Trig_In_18;
  output [0:7]Dbg_Trig_Ack_In_18;
  output [0:7]Dbg_Trig_Out_18;
  input [0:7]Dbg_Trig_Ack_Out_18;
  output Dbg_TrClk_18;
  input [0:35]Dbg_TrData_18;
  output Dbg_TrReady_18;
  input Dbg_TrValid_18;
  output [14:2]Dbg_AWADDR_18;
  output Dbg_AWVALID_18;
  input Dbg_AWREADY_18;
  output [31:0]Dbg_WDATA_18;
  output Dbg_WVALID_18;
  input Dbg_WREADY_18;
  input [1:0]Dbg_BRESP_18;
  input Dbg_BVALID_18;
  output Dbg_BREADY_18;
  output [14:2]Dbg_ARADDR_18;
  output Dbg_ARVALID_18;
  input Dbg_ARREADY_18;
  input [31:0]Dbg_RDATA_18;
  input [1:0]Dbg_RRESP_18;
  input Dbg_RVALID_18;
  output Dbg_RREADY_18;
  output Dbg_Disable_19;
  output Dbg_Clk_19;
  output Dbg_TDI_19;
  input Dbg_TDO_19;
  output [0:7]Dbg_Reg_En_19;
  output Dbg_Capture_19;
  output Dbg_Shift_19;
  output Dbg_Update_19;
  output Dbg_Rst_19;
  input [0:7]Dbg_Trig_In_19;
  output [0:7]Dbg_Trig_Ack_In_19;
  output [0:7]Dbg_Trig_Out_19;
  input [0:7]Dbg_Trig_Ack_Out_19;
  output Dbg_TrClk_19;
  input [0:35]Dbg_TrData_19;
  output Dbg_TrReady_19;
  input Dbg_TrValid_19;
  output [14:2]Dbg_AWADDR_19;
  output Dbg_AWVALID_19;
  input Dbg_AWREADY_19;
  output [31:0]Dbg_WDATA_19;
  output Dbg_WVALID_19;
  input Dbg_WREADY_19;
  input [1:0]Dbg_BRESP_19;
  input Dbg_BVALID_19;
  output Dbg_BREADY_19;
  output [14:2]Dbg_ARADDR_19;
  output Dbg_ARVALID_19;
  input Dbg_ARREADY_19;
  input [31:0]Dbg_RDATA_19;
  input [1:0]Dbg_RRESP_19;
  input Dbg_RVALID_19;
  output Dbg_RREADY_19;
  output Dbg_Disable_20;
  output Dbg_Clk_20;
  output Dbg_TDI_20;
  input Dbg_TDO_20;
  output [0:7]Dbg_Reg_En_20;
  output Dbg_Capture_20;
  output Dbg_Shift_20;
  output Dbg_Update_20;
  output Dbg_Rst_20;
  input [0:7]Dbg_Trig_In_20;
  output [0:7]Dbg_Trig_Ack_In_20;
  output [0:7]Dbg_Trig_Out_20;
  input [0:7]Dbg_Trig_Ack_Out_20;
  output Dbg_TrClk_20;
  input [0:35]Dbg_TrData_20;
  output Dbg_TrReady_20;
  input Dbg_TrValid_20;
  output [14:2]Dbg_AWADDR_20;
  output Dbg_AWVALID_20;
  input Dbg_AWREADY_20;
  output [31:0]Dbg_WDATA_20;
  output Dbg_WVALID_20;
  input Dbg_WREADY_20;
  input [1:0]Dbg_BRESP_20;
  input Dbg_BVALID_20;
  output Dbg_BREADY_20;
  output [14:2]Dbg_ARADDR_20;
  output Dbg_ARVALID_20;
  input Dbg_ARREADY_20;
  input [31:0]Dbg_RDATA_20;
  input [1:0]Dbg_RRESP_20;
  input Dbg_RVALID_20;
  output Dbg_RREADY_20;
  output Dbg_Disable_21;
  output Dbg_Clk_21;
  output Dbg_TDI_21;
  input Dbg_TDO_21;
  output [0:7]Dbg_Reg_En_21;
  output Dbg_Capture_21;
  output Dbg_Shift_21;
  output Dbg_Update_21;
  output Dbg_Rst_21;
  input [0:7]Dbg_Trig_In_21;
  output [0:7]Dbg_Trig_Ack_In_21;
  output [0:7]Dbg_Trig_Out_21;
  input [0:7]Dbg_Trig_Ack_Out_21;
  output Dbg_TrClk_21;
  input [0:35]Dbg_TrData_21;
  output Dbg_TrReady_21;
  input Dbg_TrValid_21;
  output [14:2]Dbg_AWADDR_21;
  output Dbg_AWVALID_21;
  input Dbg_AWREADY_21;
  output [31:0]Dbg_WDATA_21;
  output Dbg_WVALID_21;
  input Dbg_WREADY_21;
  input [1:0]Dbg_BRESP_21;
  input Dbg_BVALID_21;
  output Dbg_BREADY_21;
  output [14:2]Dbg_ARADDR_21;
  output Dbg_ARVALID_21;
  input Dbg_ARREADY_21;
  input [31:0]Dbg_RDATA_21;
  input [1:0]Dbg_RRESP_21;
  input Dbg_RVALID_21;
  output Dbg_RREADY_21;
  output Dbg_Disable_22;
  output Dbg_Clk_22;
  output Dbg_TDI_22;
  input Dbg_TDO_22;
  output [0:7]Dbg_Reg_En_22;
  output Dbg_Capture_22;
  output Dbg_Shift_22;
  output Dbg_Update_22;
  output Dbg_Rst_22;
  input [0:7]Dbg_Trig_In_22;
  output [0:7]Dbg_Trig_Ack_In_22;
  output [0:7]Dbg_Trig_Out_22;
  input [0:7]Dbg_Trig_Ack_Out_22;
  output Dbg_TrClk_22;
  input [0:35]Dbg_TrData_22;
  output Dbg_TrReady_22;
  input Dbg_TrValid_22;
  output [14:2]Dbg_AWADDR_22;
  output Dbg_AWVALID_22;
  input Dbg_AWREADY_22;
  output [31:0]Dbg_WDATA_22;
  output Dbg_WVALID_22;
  input Dbg_WREADY_22;
  input [1:0]Dbg_BRESP_22;
  input Dbg_BVALID_22;
  output Dbg_BREADY_22;
  output [14:2]Dbg_ARADDR_22;
  output Dbg_ARVALID_22;
  input Dbg_ARREADY_22;
  input [31:0]Dbg_RDATA_22;
  input [1:0]Dbg_RRESP_22;
  input Dbg_RVALID_22;
  output Dbg_RREADY_22;
  output Dbg_Disable_23;
  output Dbg_Clk_23;
  output Dbg_TDI_23;
  input Dbg_TDO_23;
  output [0:7]Dbg_Reg_En_23;
  output Dbg_Capture_23;
  output Dbg_Shift_23;
  output Dbg_Update_23;
  output Dbg_Rst_23;
  input [0:7]Dbg_Trig_In_23;
  output [0:7]Dbg_Trig_Ack_In_23;
  output [0:7]Dbg_Trig_Out_23;
  input [0:7]Dbg_Trig_Ack_Out_23;
  output Dbg_TrClk_23;
  input [0:35]Dbg_TrData_23;
  output Dbg_TrReady_23;
  input Dbg_TrValid_23;
  output [14:2]Dbg_AWADDR_23;
  output Dbg_AWVALID_23;
  input Dbg_AWREADY_23;
  output [31:0]Dbg_WDATA_23;
  output Dbg_WVALID_23;
  input Dbg_WREADY_23;
  input [1:0]Dbg_BRESP_23;
  input Dbg_BVALID_23;
  output Dbg_BREADY_23;
  output [14:2]Dbg_ARADDR_23;
  output Dbg_ARVALID_23;
  input Dbg_ARREADY_23;
  input [31:0]Dbg_RDATA_23;
  input [1:0]Dbg_RRESP_23;
  input Dbg_RVALID_23;
  output Dbg_RREADY_23;
  output Dbg_Disable_24;
  output Dbg_Clk_24;
  output Dbg_TDI_24;
  input Dbg_TDO_24;
  output [0:7]Dbg_Reg_En_24;
  output Dbg_Capture_24;
  output Dbg_Shift_24;
  output Dbg_Update_24;
  output Dbg_Rst_24;
  input [0:7]Dbg_Trig_In_24;
  output [0:7]Dbg_Trig_Ack_In_24;
  output [0:7]Dbg_Trig_Out_24;
  input [0:7]Dbg_Trig_Ack_Out_24;
  output Dbg_TrClk_24;
  input [0:35]Dbg_TrData_24;
  output Dbg_TrReady_24;
  input Dbg_TrValid_24;
  output [14:2]Dbg_AWADDR_24;
  output Dbg_AWVALID_24;
  input Dbg_AWREADY_24;
  output [31:0]Dbg_WDATA_24;
  output Dbg_WVALID_24;
  input Dbg_WREADY_24;
  input [1:0]Dbg_BRESP_24;
  input Dbg_BVALID_24;
  output Dbg_BREADY_24;
  output [14:2]Dbg_ARADDR_24;
  output Dbg_ARVALID_24;
  input Dbg_ARREADY_24;
  input [31:0]Dbg_RDATA_24;
  input [1:0]Dbg_RRESP_24;
  input Dbg_RVALID_24;
  output Dbg_RREADY_24;
  output Dbg_Disable_25;
  output Dbg_Clk_25;
  output Dbg_TDI_25;
  input Dbg_TDO_25;
  output [0:7]Dbg_Reg_En_25;
  output Dbg_Capture_25;
  output Dbg_Shift_25;
  output Dbg_Update_25;
  output Dbg_Rst_25;
  input [0:7]Dbg_Trig_In_25;
  output [0:7]Dbg_Trig_Ack_In_25;
  output [0:7]Dbg_Trig_Out_25;
  input [0:7]Dbg_Trig_Ack_Out_25;
  output Dbg_TrClk_25;
  input [0:35]Dbg_TrData_25;
  output Dbg_TrReady_25;
  input Dbg_TrValid_25;
  output [14:2]Dbg_AWADDR_25;
  output Dbg_AWVALID_25;
  input Dbg_AWREADY_25;
  output [31:0]Dbg_WDATA_25;
  output Dbg_WVALID_25;
  input Dbg_WREADY_25;
  input [1:0]Dbg_BRESP_25;
  input Dbg_BVALID_25;
  output Dbg_BREADY_25;
  output [14:2]Dbg_ARADDR_25;
  output Dbg_ARVALID_25;
  input Dbg_ARREADY_25;
  input [31:0]Dbg_RDATA_25;
  input [1:0]Dbg_RRESP_25;
  input Dbg_RVALID_25;
  output Dbg_RREADY_25;
  output Dbg_Disable_26;
  output Dbg_Clk_26;
  output Dbg_TDI_26;
  input Dbg_TDO_26;
  output [0:7]Dbg_Reg_En_26;
  output Dbg_Capture_26;
  output Dbg_Shift_26;
  output Dbg_Update_26;
  output Dbg_Rst_26;
  input [0:7]Dbg_Trig_In_26;
  output [0:7]Dbg_Trig_Ack_In_26;
  output [0:7]Dbg_Trig_Out_26;
  input [0:7]Dbg_Trig_Ack_Out_26;
  output Dbg_TrClk_26;
  input [0:35]Dbg_TrData_26;
  output Dbg_TrReady_26;
  input Dbg_TrValid_26;
  output [14:2]Dbg_AWADDR_26;
  output Dbg_AWVALID_26;
  input Dbg_AWREADY_26;
  output [31:0]Dbg_WDATA_26;
  output Dbg_WVALID_26;
  input Dbg_WREADY_26;
  input [1:0]Dbg_BRESP_26;
  input Dbg_BVALID_26;
  output Dbg_BREADY_26;
  output [14:2]Dbg_ARADDR_26;
  output Dbg_ARVALID_26;
  input Dbg_ARREADY_26;
  input [31:0]Dbg_RDATA_26;
  input [1:0]Dbg_RRESP_26;
  input Dbg_RVALID_26;
  output Dbg_RREADY_26;
  output Dbg_Disable_27;
  output Dbg_Clk_27;
  output Dbg_TDI_27;
  input Dbg_TDO_27;
  output [0:7]Dbg_Reg_En_27;
  output Dbg_Capture_27;
  output Dbg_Shift_27;
  output Dbg_Update_27;
  output Dbg_Rst_27;
  input [0:7]Dbg_Trig_In_27;
  output [0:7]Dbg_Trig_Ack_In_27;
  output [0:7]Dbg_Trig_Out_27;
  input [0:7]Dbg_Trig_Ack_Out_27;
  output Dbg_TrClk_27;
  input [0:35]Dbg_TrData_27;
  output Dbg_TrReady_27;
  input Dbg_TrValid_27;
  output [14:2]Dbg_AWADDR_27;
  output Dbg_AWVALID_27;
  input Dbg_AWREADY_27;
  output [31:0]Dbg_WDATA_27;
  output Dbg_WVALID_27;
  input Dbg_WREADY_27;
  input [1:0]Dbg_BRESP_27;
  input Dbg_BVALID_27;
  output Dbg_BREADY_27;
  output [14:2]Dbg_ARADDR_27;
  output Dbg_ARVALID_27;
  input Dbg_ARREADY_27;
  input [31:0]Dbg_RDATA_27;
  input [1:0]Dbg_RRESP_27;
  input Dbg_RVALID_27;
  output Dbg_RREADY_27;
  output Dbg_Disable_28;
  output Dbg_Clk_28;
  output Dbg_TDI_28;
  input Dbg_TDO_28;
  output [0:7]Dbg_Reg_En_28;
  output Dbg_Capture_28;
  output Dbg_Shift_28;
  output Dbg_Update_28;
  output Dbg_Rst_28;
  input [0:7]Dbg_Trig_In_28;
  output [0:7]Dbg_Trig_Ack_In_28;
  output [0:7]Dbg_Trig_Out_28;
  input [0:7]Dbg_Trig_Ack_Out_28;
  output Dbg_TrClk_28;
  input [0:35]Dbg_TrData_28;
  output Dbg_TrReady_28;
  input Dbg_TrValid_28;
  output [14:2]Dbg_AWADDR_28;
  output Dbg_AWVALID_28;
  input Dbg_AWREADY_28;
  output [31:0]Dbg_WDATA_28;
  output Dbg_WVALID_28;
  input Dbg_WREADY_28;
  input [1:0]Dbg_BRESP_28;
  input Dbg_BVALID_28;
  output Dbg_BREADY_28;
  output [14:2]Dbg_ARADDR_28;
  output Dbg_ARVALID_28;
  input Dbg_ARREADY_28;
  input [31:0]Dbg_RDATA_28;
  input [1:0]Dbg_RRESP_28;
  input Dbg_RVALID_28;
  output Dbg_RREADY_28;
  output Dbg_Disable_29;
  output Dbg_Clk_29;
  output Dbg_TDI_29;
  input Dbg_TDO_29;
  output [0:7]Dbg_Reg_En_29;
  output Dbg_Capture_29;
  output Dbg_Shift_29;
  output Dbg_Update_29;
  output Dbg_Rst_29;
  input [0:7]Dbg_Trig_In_29;
  output [0:7]Dbg_Trig_Ack_In_29;
  output [0:7]Dbg_Trig_Out_29;
  input [0:7]Dbg_Trig_Ack_Out_29;
  output Dbg_TrClk_29;
  input [0:35]Dbg_TrData_29;
  output Dbg_TrReady_29;
  input Dbg_TrValid_29;
  output [14:2]Dbg_AWADDR_29;
  output Dbg_AWVALID_29;
  input Dbg_AWREADY_29;
  output [31:0]Dbg_WDATA_29;
  output Dbg_WVALID_29;
  input Dbg_WREADY_29;
  input [1:0]Dbg_BRESP_29;
  input Dbg_BVALID_29;
  output Dbg_BREADY_29;
  output [14:2]Dbg_ARADDR_29;
  output Dbg_ARVALID_29;
  input Dbg_ARREADY_29;
  input [31:0]Dbg_RDATA_29;
  input [1:0]Dbg_RRESP_29;
  input Dbg_RVALID_29;
  output Dbg_RREADY_29;
  output Dbg_Disable_30;
  output Dbg_Clk_30;
  output Dbg_TDI_30;
  input Dbg_TDO_30;
  output [0:7]Dbg_Reg_En_30;
  output Dbg_Capture_30;
  output Dbg_Shift_30;
  output Dbg_Update_30;
  output Dbg_Rst_30;
  input [0:7]Dbg_Trig_In_30;
  output [0:7]Dbg_Trig_Ack_In_30;
  output [0:7]Dbg_Trig_Out_30;
  input [0:7]Dbg_Trig_Ack_Out_30;
  output Dbg_TrClk_30;
  input [0:35]Dbg_TrData_30;
  output Dbg_TrReady_30;
  input Dbg_TrValid_30;
  output [14:2]Dbg_AWADDR_30;
  output Dbg_AWVALID_30;
  input Dbg_AWREADY_30;
  output [31:0]Dbg_WDATA_30;
  output Dbg_WVALID_30;
  input Dbg_WREADY_30;
  input [1:0]Dbg_BRESP_30;
  input Dbg_BVALID_30;
  output Dbg_BREADY_30;
  output [14:2]Dbg_ARADDR_30;
  output Dbg_ARVALID_30;
  input Dbg_ARREADY_30;
  input [31:0]Dbg_RDATA_30;
  input [1:0]Dbg_RRESP_30;
  input Dbg_RVALID_30;
  output Dbg_RREADY_30;
  output Dbg_Disable_31;
  output Dbg_Clk_31;
  output Dbg_TDI_31;
  input Dbg_TDO_31;
  output [0:7]Dbg_Reg_En_31;
  output Dbg_Capture_31;
  output Dbg_Shift_31;
  output Dbg_Update_31;
  output Dbg_Rst_31;
  input [0:7]Dbg_Trig_In_31;
  output [0:7]Dbg_Trig_Ack_In_31;
  output [0:7]Dbg_Trig_Out_31;
  input [0:7]Dbg_Trig_Ack_Out_31;
  output Dbg_TrClk_31;
  input [0:35]Dbg_TrData_31;
  output Dbg_TrReady_31;
  input Dbg_TrValid_31;
  output [14:2]Dbg_AWADDR_31;
  output Dbg_AWVALID_31;
  input Dbg_AWREADY_31;
  output [31:0]Dbg_WDATA_31;
  output Dbg_WVALID_31;
  input Dbg_WREADY_31;
  input [1:0]Dbg_BRESP_31;
  input Dbg_BVALID_31;
  output Dbg_BREADY_31;
  output [14:2]Dbg_ARADDR_31;
  output Dbg_ARVALID_31;
  input Dbg_ARREADY_31;
  input [31:0]Dbg_RDATA_31;
  input [1:0]Dbg_RRESP_31;
  input Dbg_RVALID_31;
  output Dbg_RREADY_31;
  input bscan_ext_tdi;
  input bscan_ext_reset;
  input bscan_ext_shift;
  input bscan_ext_update;
  input bscan_ext_capture;
  input bscan_ext_sel;
  input bscan_ext_drck;
  output bscan_ext_tdo;
  input bscan_ext_tck;
  input bscan_ext_bscanid_en;
  output Ext_JTAG_DRCK;
  output Ext_JTAG_RESET;
  output Ext_JTAG_SEL;
  output Ext_JTAG_CAPTURE;
  output Ext_JTAG_SHIFT;
  output Ext_JTAG_UPDATE;
  output Ext_JTAG_TDI;
  input Ext_JTAG_TDO;

  wire \^Dbg_Clk_31 ;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire \^Dbg_TDI_31 ;
  wire Dbg_TDO_0;
  wire \^Dbg_Update_31 ;
  wire \^Ext_JTAG_CAPTURE ;
  wire \^Ext_JTAG_SHIFT ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \JTAG_CONTROL_I/FIFO_Write ;
  wire [5:5]\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg ;
  wire \JTAG_CONTROL_I/fifo_Data_Present ;
  wire \JTAG_CONTROL_I/p_0_in32_in ;
  wire \JTAG_CONTROL_I/p_35_out__0 ;
  wire \JTAG_CONTROL_I/p_58_out__0 ;
  wire \JTAG_CONTROL_I/sel ;
  wire MDM_Core_I1_n_0;
  wire MDM_Core_I1_n_12;
  wire MDM_Core_I1_n_34;
  wire RX_Buffer_Full;
  wire [0:7]RX_Data;
  wire S_AXI_ACLK;
  wire [3:0]S_AXI_ARADDR;
  wire S_AXI_ARESETN;
  wire S_AXI_ARREADY;
  wire S_AXI_ARVALID;
  wire S_AXI_AWVALID;
  wire S_AXI_BREADY;
  wire S_AXI_BVALID;
  wire [31:0]S_AXI_RDATA;
  wire S_AXI_RREADY;
  wire S_AXI_RVALID;
  wire [31:0]S_AXI_WDATA;
  wire S_AXI_WREADY;
  wire S_AXI_WVALID;
  wire \Use_AXI_IPIF.AXI_LITE_IPIF_I_n_15 ;
  wire \Use_E2.BSCAN_I_n_10 ;
  wire \Use_E2.BSCAN_I_n_11 ;
  wire \Use_E2.BSCAN_I_n_14 ;
  wire [3:3]bus2ip_rdce;
  wire drck_i;
  wire enable_interrupts;
  wire [0:0]p_0_in;
  wire [0:0]p_0_in__0;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx_Data_Present;
  wire sel;
  wire sel_n_reset3_out;
  wire shift_n_reset1_out;
  wire tdo;
  wire tx_Buffer_Full;
  wire NLW_MDM_Core_I1_Dbg_Disable_0_UNCONNECTED;
  wire NLW_MDM_Core_I1_Debug_SYS_Rst_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_BRK_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_JTAG_SEL_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_JTAG_TDO_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_NM_BRK_UNCONNECTED;
  wire NLW_MDM_Core_I1_Interrupt_UNCONNECTED;
  wire NLW_MDM_Core_I1_Scan_En_UNCONNECTED;
  wire NLW_MDM_Core_I1_Scan_Reset_UNCONNECTED;
  wire NLW_MDM_Core_I1_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_MDM_Core_I1_clear_Ext_BRK_UNCONNECTED;
  wire [0:0]NLW_MDM_Core_I1_bus2ip_wrce_UNCONNECTED;
  wire \NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_clear_Ext_BRK_UNCONNECTED ;
  wire [1:0]\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_S_AXI_AWADDR_UNCONNECTED ;
  wire [0:0]\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_S_AXI_BRESP_UNCONNECTED ;
  wire [0:0]\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_S_AXI_RRESP_UNCONNECTED ;
  wire [2:2]\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_S_AXI_WDATA_UNCONNECTED ;
  wire [0:0]\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_bus2ip_wrce_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Ext_JTAG_RESET_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Scan_En_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Scan_Reset_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Scan_Reset_Sel_UNCONNECTED ;

  assign Dbg_Capture_0 = \^Ext_JTAG_CAPTURE ;
  assign Dbg_Clk_0 = \^Dbg_Clk_31 ;
  assign Dbg_TDI_0 = \^Dbg_TDI_31 ;
  assign Dbg_Update_0 = \^Dbg_Update_31 ;
  assign S_AXI_AWREADY = S_AXI_WREADY;
  ublaze_sopc_mdm_0_0__MDM_Core MDM_Core_I1
       (.AR(sel_n_reset3_out),
        .Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .CLK(\^Dbg_Update_31 ),
        .D(p_0_in),
        .Dbg_Disable_0(NLW_MDM_Core_I1_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_TDI_31(\^Dbg_TDI_31 ),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Debug_SYS_Rst(NLW_MDM_Core_I1_Debug_SYS_Rst_UNCONNECTED),
        .E(Dbg_Shift_0),
        .Ext_BRK(NLW_MDM_Core_I1_Ext_BRK_UNCONNECTED),
        .Ext_JTAG_SEL(NLW_MDM_Core_I1_Ext_JTAG_SEL_UNCONNECTED),
        .Ext_JTAG_TDO(NLW_MDM_Core_I1_Ext_JTAG_TDO_UNCONNECTED),
        .Ext_NM_BRK(NLW_MDM_Core_I1_Ext_NM_BRK_UNCONNECTED),
        .FIFO_Write(\JTAG_CONTROL_I/FIFO_Write ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] (\Use_AXI_IPIF.AXI_LITE_IPIF_I_n_15 ),
        .Interrupt(NLW_MDM_Core_I1_Interrupt_UNCONNECTED),
        .Q(MDM_Core_I1_n_0),
        .RX_Buffer_Full(RX_Buffer_Full),
        .RX_Data(RX_Data),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_ARESETN(S_AXI_ARESETN),
        .S_AXI_WDATA(S_AXI_WDATA[7:0]),
        .Scan_En(NLW_MDM_Core_I1_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_MDM_Core_I1_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_MDM_Core_I1_Scan_Reset_Sel_UNCONNECTED),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\^Dbg_Clk_31 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_1 (\^Ext_JTAG_CAPTURE ),
        .\Use_BSCAN.PORT_Selector_reg[0]_2 (\^Ext_JTAG_SHIFT ),
        .\Use_BSCAN.PORT_Selector_reg[0]_3 (\Use_E2.BSCAN_I_n_11 ),
        .\Use_BSCAN.command_reg[5] (\JTAG_CONTROL_I/sel ),
        .\Use_Serial_Unified_Completion.completion_status_reg[15] (MDM_Core_I1_n_34),
        .\Use_Serial_Unified_Completion.count_reg[4] (\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg ),
        .\Use_Serial_Unified_Completion.sample_1_reg[15] (\Use_E2.BSCAN_I_n_14 ),
        .\Use_Uart.clear_Ext_BRK_reg_0 (MDM_Core_I1_n_12),
        .\Using_FPGA.Native (\Use_E2.BSCAN_I_n_10 ),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_wrce(NLW_MDM_Core_I1_bus2ip_wrce_UNCONNECTED[0]),
        .clear_Ext_BRK(NLW_MDM_Core_I1_clear_Ext_BRK_UNCONNECTED),
        .enable_interrupts(enable_interrupts),
        .fifo_Data_Present(\JTAG_CONTROL_I/fifo_Data_Present ),
        .out(\JTAG_CONTROL_I/p_0_in32_in ),
        .p_35_out__0(\JTAG_CONTROL_I/p_35_out__0 ),
        .p_58_out__0(\JTAG_CONTROL_I/p_58_out__0 ),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Data_Present(rx_Data_Present),
        .sel(sel),
        .\shift_Count_reg[0] (p_0_in__0),
        .shift_n_reset1_out(shift_n_reset1_out),
        .tdo(tdo),
        .tx_Buffer_Full(tx_Buffer_Full));
  ublaze_sopc_mdm_0_0__MB_BUFG \No_Dbg_Reg_Access.BUFG_DRCK 
       (.Dbg_Clk_31(\^Dbg_Clk_31 ),
        .drck_i(drck_i));
  ublaze_sopc_mdm_0_0__axi_lite_ipif \Use_AXI_IPIF.AXI_LITE_IPIF_I 
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .FIFO_Write(\JTAG_CONTROL_I/FIFO_Write ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .RX_Buffer_Full(RX_Buffer_Full),
        .RX_Data(RX_Data),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_ARADDR(S_AXI_ARADDR[3:2]),
        .S_AXI_ARESETN(S_AXI_ARESETN),
        .S_AXI_ARESETN_0(MDM_Core_I1_n_12),
        .S_AXI_ARREADY(S_AXI_ARREADY),
        .S_AXI_ARVALID(S_AXI_ARVALID),
        .S_AXI_AWADDR(\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_S_AXI_AWADDR_UNCONNECTED [1:0]),
        .S_AXI_AWVALID(S_AXI_AWVALID),
        .S_AXI_BREADY(S_AXI_BREADY),
        .S_AXI_BRESP(\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_S_AXI_BRESP_UNCONNECTED [0]),
        .S_AXI_BVALID(S_AXI_BVALID),
        .S_AXI_RDATA(S_AXI_RDATA[7:0]),
        .S_AXI_RREADY(S_AXI_RREADY),
        .S_AXI_RRESP(\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_S_AXI_RRESP_UNCONNECTED [0]),
        .S_AXI_RVALID(S_AXI_RVALID),
        .S_AXI_WDATA({S_AXI_WDATA[4],\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_S_AXI_WDATA_UNCONNECTED [2],S_AXI_WDATA[1:0]}),
        .S_AXI_WREADY(S_AXI_WREADY),
        .S_AXI_WVALID(S_AXI_WVALID),
        .\Use_Uart.enable_interrupts_reg (\Use_AXI_IPIF.AXI_LITE_IPIF_I_n_15 ),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_wrce(\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_bus2ip_wrce_UNCONNECTED [0]),
        .clear_Ext_BRK(\NLW_Use_AXI_IPIF.AXI_LITE_IPIF_I_clear_Ext_BRK_UNCONNECTED ),
        .enable_interrupts(enable_interrupts),
        .fifo_Data_Present(\JTAG_CONTROL_I/fifo_Data_Present ),
        .out(\JTAG_CONTROL_I/p_0_in32_in ),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Data_Present(rx_Data_Present),
        .tx_Buffer_Full(tx_Buffer_Full));
  ublaze_sopc_mdm_0_0__MB_BSCANE2 \Use_E2.BSCAN_I 
       (.AR(sel_n_reset3_out),
        .D(p_0_in),
        .Dbg_Capture_0(\^Ext_JTAG_CAPTURE ),
        .Dbg_TDI_31(\^Dbg_TDI_31 ),
        .Dbg_Update_31(\^Dbg_Update_31 ),
        .Ext_JTAG_RESET(\NLW_Use_E2.BSCAN_I_Ext_JTAG_RESET_UNCONNECTED ),
        .Q(MDM_Core_I1_n_0),
        .Scan_En(\NLW_Use_E2.BSCAN_I_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Use_E2.BSCAN_I_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Use_E2.BSCAN_I_Scan_Reset_Sel_UNCONNECTED ),
        .\Use_BSCAN.Config_Reg_reg[30] (\^Ext_JTAG_SHIFT ),
        .\Use_Serial_Unified_Completion.completion_status_reg[10] (\Use_E2.BSCAN_I_n_10 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[15] (\Use_E2.BSCAN_I_n_14 ),
        .\Use_Serial_Unified_Completion.count_reg[5] (\JTAG_CONTROL_I/sel ),
        .\Use_Serial_Unified_Completion.count_reg[5]_0 (\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg ),
        .\Use_Serial_Unified_Completion.sample_1_reg[15] (MDM_Core_I1_n_34),
        .\Use_UART.tdo_reg_reg[7] (\Use_E2.BSCAN_I_n_11 ),
        .drck_i(drck_i),
        .p_35_out__0(\JTAG_CONTROL_I/p_35_out__0 ),
        .p_58_out__0(\JTAG_CONTROL_I/p_58_out__0 ),
        .sel(sel),
        .\shift_Count_reg[0] (p_0_in__0),
        .shift_n_reset1_out(shift_n_reset1_out),
        .tdo(tdo));
endmodule

(* ORIG_REF_NAME = "MDM_Core" *) 
module ublaze_sopc_mdm_0_0__MDM_Core
   (Q,
    rx_Data_Present,
    RX_Data,
    fifo_Data_Present,
    out,
    \Use_Uart.clear_Ext_BRK_reg_0 ,
    Ext_NM_BRK,
    Debug_SYS_Rst,
    Dbg_Rst_0,
    Dbg_Disable_0,
    Ext_BRK,
    enable_interrupts,
    Dbg_Reg_En_0,
    p_35_out__0,
    p_58_out__0,
    E,
    Ext_JTAG_SEL,
    tdo,
    tx_Buffer_Full,
    RX_Buffer_Full,
    \Use_Serial_Unified_Completion.completion_status_reg[15] ,
    \Use_Serial_Unified_Completion.count_reg[4] ,
    Interrupt,
    CLK,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    S_AXI_ACLK,
    S_AXI_WDATA,
    bus2ip_wrce,
    reset_RX_FIFO,
    reset_TX_FIFO,
    \Use_BSCAN.PORT_Selector_reg[0]_1 ,
    clear_Ext_BRK,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] ,
    shift_n_reset1_out,
    Scan_En,
    Scan_Reset,
    Scan_Reset_Sel,
    \Use_BSCAN.PORT_Selector_reg[0]_2 ,
    sel,
    Ext_JTAG_TDO,
    Dbg_TDO_0,
    FIFO_Write,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    bus2ip_rdce,
    S_AXI_ARESETN,
    D,
    \shift_Count_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Dbg_TDI_31,
    \Use_BSCAN.PORT_Selector_reg[0]_3 ,
    \Using_FPGA.Native ,
    \Use_Serial_Unified_Completion.sample_1_reg[15] ,
    AR,
    \Use_BSCAN.command_reg[5] );
  output [0:0]Q;
  output rx_Data_Present;
  output [0:7]RX_Data;
  output fifo_Data_Present;
  output out;
  output \Use_Uart.clear_Ext_BRK_reg_0 ;
  output Ext_NM_BRK;
  output Debug_SYS_Rst;
  output Dbg_Rst_0;
  output Dbg_Disable_0;
  output Ext_BRK;
  output enable_interrupts;
  output [0:7]Dbg_Reg_En_0;
  output p_35_out__0;
  output p_58_out__0;
  output [0:0]E;
  output Ext_JTAG_SEL;
  output tdo;
  output tx_Buffer_Full;
  output RX_Buffer_Full;
  output [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15] ;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[4] ;
  output Interrupt;
  input CLK;
  input \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input S_AXI_ACLK;
  input [7:0]S_AXI_WDATA;
  input [0:0]bus2ip_wrce;
  input reset_RX_FIFO;
  input reset_TX_FIFO;
  input \Use_BSCAN.PORT_Selector_reg[0]_1 ;
  input clear_Ext_BRK;
  input \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] ;
  input shift_n_reset1_out;
  input Scan_En;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input \Use_BSCAN.PORT_Selector_reg[0]_2 ;
  input sel;
  input Ext_JTAG_TDO;
  input Dbg_TDO_0;
  input FIFO_Write;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input [0:0]bus2ip_rdce;
  input S_AXI_ARESETN;
  input [0:0]D;
  input [0:0]\shift_Count_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Dbg_TDI_31;
  input [0:0]\Use_BSCAN.PORT_Selector_reg[0]_3 ;
  input [0:0]\Using_FPGA.Native ;
  input [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15] ;
  input [0:0]AR;
  input [0:0]\Use_BSCAN.command_reg[5] ;

  wire [0:0]AR;
  wire Bus_RNW_reg;
  wire CLK;
  wire [0:0]Config_Reg;
  wire [0:0]D;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_TDI_31;
  wire Dbg_TDO_0;
  wire [0:0]E;
  wire FIFO_Write;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] ;
  wire MDM_SEL;
  wire [3:0]PORT_Selector;
  wire [3:0]PORT_Selector_1;
  wire [0:0]Q;
  wire RX_Buffer_Full;
  wire [0:7]RX_Data;
  wire S_AXI_ACLK;
  wire S_AXI_ARESETN;
  wire [7:0]S_AXI_WDATA;
  wire [3:0]TDI_Shifter;
  wire \Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_10_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_11_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_12_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_2_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_3_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_4_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_5_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_6_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_7_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_8_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_9_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate__0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate__1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[10] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[1] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[25] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[26] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[2] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[30] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[3] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[9] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_1 ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_2 ;
  wire [0:0]\Use_BSCAN.PORT_Selector_reg[0]_3 ;
  wire [0:0]\Use_BSCAN.command_reg[5] ;
  wire \Use_E2.BSCANE2_I_i_2_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[4] ;
  wire [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15] ;
  wire \Use_Uart.clear_Ext_BRK_reg_0 ;
  wire \Use_Uart.reset_RX_FIFO_reg_n_0 ;
  wire \Use_Uart.reset_TX_FIFO_reg_n_0 ;
  wire [0:0]\Using_FPGA.Native ;
  wire [0:0]bus2ip_rdce;
  wire enable_interrupts;
  wire fifo_Data_Present;
  wire out;
  wire p_35_out__0;
  wire p_58_out__0;
  wire p_5_out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx_Data_Present;
  wire sel;
  wire [0:0]\shift_Count_reg[0] ;
  wire shift_n_reset1_out;
  wire tdo;
  wire tx_Buffer_Full;
  wire NLW_JTAG_CONTROL_I_Debug_SYS_Rst_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Ext_BRK_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Ext_NM_BRK_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Interrupt_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Q_0_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Scan_En_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Scan_Reset_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Scan_Reset_Sel_UNCONNECTED;
  wire \NLW_JTAG_CONTROL_I_Use_Uart.clear_Ext_BRK_reg_UNCONNECTED ;
  wire NLW_JTAG_CONTROL_I_enable_interrupts_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_tx_Buffer_Empty_UNCONNECTED;
  wire [0:0]NLW_JTAG_CONTROL_I_AR_UNCONNECTED;

  ublaze_sopc_mdm_0_0__JTAG_CONTROL JTAG_CONTROL_I
       (.AR(NLW_JTAG_CONTROL_I_AR_UNCONNECTED[0]),
        .Bus_RNW_reg(Bus_RNW_reg),
        .CLK(CLK),
        .D(D),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_TDI_31(Dbg_TDI_31),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Debug_SYS_Rst(NLW_JTAG_CONTROL_I_Debug_SYS_Rst_UNCONNECTED),
        .E(E),
        .Ext_BRK(NLW_JTAG_CONTROL_I_Ext_BRK_UNCONNECTED),
        .Ext_NM_BRK(NLW_JTAG_CONTROL_I_Ext_NM_BRK_UNCONNECTED),
        .FIFO_Write(FIFO_Write),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .Interrupt(NLW_JTAG_CONTROL_I_Interrupt_UNCONNECTED),
        .Q(Q),
        .Q_0(NLW_JTAG_CONTROL_I_Q_0_UNCONNECTED),
        .RX_Buffer_Full(RX_Buffer_Full),
        .RX_Data(RX_Data),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA),
        .Scan_En(NLW_JTAG_CONTROL_I_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_JTAG_CONTROL_I_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_JTAG_CONTROL_I_Scan_Reset_Sel_UNCONNECTED),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_1 (\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_2 (\Use_BSCAN.PORT_Selector_reg[0]_3 ),
        .\Use_BSCAN.PORT_Selector_reg[2] (\Use_E2.BSCANE2_I_i_2_n_0 ),
        .\Use_BSCAN.PORT_Selector_reg[3] (PORT_Selector),
        .\Use_BSCAN.command_reg[5]_0 (\Use_BSCAN.command_reg[5] ),
        .\Use_Serial_Unified_Completion.completion_block_reg_0 (p_58_out__0),
        .\Use_Serial_Unified_Completion.completion_status_reg[15]_0 (\Use_Serial_Unified_Completion.completion_status_reg[15] ),
        .\Use_Serial_Unified_Completion.count_reg[4]_0 (\Use_Serial_Unified_Completion.count_reg[4] ),
        .\Use_Serial_Unified_Completion.sample_1_reg[15]_0 (\Use_Serial_Unified_Completion.sample_1_reg[15] ),
        .\Use_Uart.clear_Ext_BRK_reg (\NLW_JTAG_CONTROL_I_Use_Uart.clear_Ext_BRK_reg_UNCONNECTED ),
        .\Use_Uart.reset_RX_FIFO_reg (\Use_Uart.reset_RX_FIFO_reg_n_0 ),
        .\Use_Uart.reset_TX_FIFO_reg (\Use_Uart.reset_TX_FIFO_reg_n_0 ),
        .\Using_FPGA.Native (rx_Data_Present),
        .\Using_FPGA.Native_0 (fifo_Data_Present),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .bus2ip_rdce(bus2ip_rdce),
        .enable_interrupts(NLW_JTAG_CONTROL_I_enable_interrupts_UNCONNECTED),
        .out(out),
        .p_35_out__0(p_35_out__0),
        .sel(sel),
        .\shift_Count_reg[0]_0 (\shift_Count_reg[0] ),
        .tdo(tdo),
        .tx_Buffer_Empty(NLW_JTAG_CONTROL_I_tx_Buffer_Empty_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full));
  (* SHREG_EXTRACT = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[1] ),
        .Q(Config_Reg));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[10] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_gate__0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[10] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[25] ),
        .Q(\Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[2] ),
        .PRE(shift_n_reset1_out),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[1] ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[25] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[26] ),
        .PRE(shift_n_reset1_out),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[26] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_gate_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[26] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[30] ),
        .Q(\Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[3] ),
        .PRE(shift_n_reset1_out),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[2] ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[30] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(1'b0),
        .PRE(shift_n_reset1_out),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[30] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_gate__1_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[3] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[9] ),
        .Q(\Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[9] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[10] ),
        .PRE(shift_n_reset1_out),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[9] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(1'b1),
        .Q(\Use_BSCAN.Config_Reg_reg_c_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_0 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_1 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_10 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_9_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_10_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_11 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_10_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_11_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_12 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_11_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_12_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_2 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_3 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_2_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_4 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_5 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_4_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_5_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_6 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_5_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_6_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_7 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_6_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_7_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_8 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_7_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_8_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_9 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset1_out),
        .D(\Use_BSCAN.Config_Reg_reg_c_8_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_9_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate 
       (.I0(\Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate__0 
       (.I0(\Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate__1 
       (.I0(\Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate__1_n_0 ));
  LUT5 #(
    .INIT(32'h00000002)) 
    \Use_BSCAN.PORT_Selector_1[3]_i_1 
       (.I0(sel),
        .I1(PORT_Selector[0]),
        .I2(PORT_Selector[1]),
        .I3(PORT_Selector[3]),
        .I4(PORT_Selector[2]),
        .O(MDM_SEL));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[0] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[0]),
        .Q(PORT_Selector_1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[1] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[1]),
        .Q(PORT_Selector_1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[2] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[2]),
        .Q(PORT_Selector_1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[3] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[3]),
        .Q(PORT_Selector_1[3]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[0]),
        .Q(PORT_Selector[0]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[1]),
        .Q(PORT_Selector[1]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[2]),
        .Q(PORT_Selector[2]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[3]),
        .Q(PORT_Selector[3]));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \Use_BSCAN.TDI_Shifter[3]_i_1 
       (.I0(PORT_Selector[2]),
        .I1(PORT_Selector[3]),
        .I2(PORT_Selector[1]),
        .I3(PORT_Selector[0]),
        .I4(sel),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .O(p_5_out));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(p_5_out),
        .CLR(AR),
        .D(TDI_Shifter[1]),
        .Q(TDI_Shifter[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(p_5_out),
        .CLR(AR),
        .D(TDI_Shifter[2]),
        .Q(TDI_Shifter[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(p_5_out),
        .CLR(AR),
        .D(TDI_Shifter[3]),
        .Q(TDI_Shifter[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(p_5_out),
        .CLR(AR),
        .D(Dbg_TDI_31),
        .Q(TDI_Shifter[3]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hEEEEEFEE)) 
    \Use_E2.BSCANE2_I_i_2 
       (.I0(PORT_Selector[2]),
        .I1(PORT_Selector[3]),
        .I2(PORT_Selector[0]),
        .I3(Config_Reg),
        .I4(PORT_Selector[1]),
        .O(\Use_E2.BSCANE2_I_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_Uart.enable_interrupts_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] ),
        .Q(enable_interrupts),
        .R(\Use_Uart.clear_Ext_BRK_reg_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \Use_Uart.reset_RX_FIFO_i_1 
       (.I0(S_AXI_ARESETN),
        .O(\Use_Uart.clear_Ext_BRK_reg_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \Use_Uart.reset_RX_FIFO_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(reset_RX_FIFO),
        .Q(\Use_Uart.reset_RX_FIFO_reg_n_0 ),
        .S(\Use_Uart.clear_Ext_BRK_reg_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \Use_Uart.reset_TX_FIFO_reg 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(reset_TX_FIFO),
        .Q(\Use_Uart.reset_TX_FIFO_reg_n_0 ),
        .S(\Use_Uart.clear_Ext_BRK_reg_0 ));
endmodule

(* ORIG_REF_NAME = "SRL_FIFO" *) 
module ublaze_sopc_mdm_0_0__SRL_FIFO
   (\Using_FPGA.Native ,
    RX_Data,
    D,
    RX_Buffer_Full,
    \Use_Uart.reset_RX_FIFO_reg ,
    S_AXI_ACLK,
    Q,
    \Use_UART.tdo_reg_reg[3] ,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.command_reg[0] ,
    Data_Out,
    \Use_BSCAN.command_reg[0]_0 ,
    \Use_UART.fifo_Write_reg ,
    bus2ip_rdce,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg );
  output \Using_FPGA.Native ;
  output [0:7]RX_Data;
  output [1:0]D;
  output RX_Buffer_Full;
  input \Use_Uart.reset_RX_FIFO_reg ;
  input S_AXI_ACLK;
  input [7:0]Q;
  input [1:0]\Use_UART.tdo_reg_reg[3] ;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.command_reg[0] ;
  input [1:0]Data_Out;
  input \Use_BSCAN.command_reg[0]_0 ;
  input \Use_UART.fifo_Write_reg ;
  input [0:0]bus2ip_rdce;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;

  wire [0:3]Addr;
  wire \Addr_Counters[2].FDRE_I_n_5 ;
  wire Bus_RNW_reg;
  wire CI;
  wire [1:0]D;
  wire [1:0]Data_Out;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire LI;
  wire [7:0]Q;
  wire RX_Buffer_Full;
  wire [0:7]RX_Data;
  wire S;
  wire S1_out;
  wire S2_out;
  wire S_AXI_ACLK;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[0]_0 ;
  wire \Use_UART.fifo_Write_reg ;
  wire [1:0]\Use_UART.tdo_reg_reg[3] ;
  wire \Use_Uart.reset_RX_FIFO_reg ;
  wire \Using_FPGA.Native ;
  wire [0:0]bus2ip_rdce;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire sum_A_0;
  wire sum_A_1;
  wire sum_A_2;
  wire sum_A_3;
  wire \NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ;
  wire \NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ;
  wire \NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_lopt_3_UNCONNECTED ;
  wire \NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_CI_UNCONNECTED ;
  wire \NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ;
  wire \NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_S_UNCONNECTED ;
  wire \NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_CI_UNCONNECTED ;
  wire \NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ;
  wire \NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_S_UNCONNECTED ;
  wire \NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_Addr_UNCONNECTED ;
  wire \NLW_Addr_Counters[3].No_MuxCY.XORCY_I_LI_UNCONNECTED ;
  wire \NLW_Addr_Counters[3].No_MuxCY.XORCY_I_LO_UNCONNECTED ;

  ublaze_sopc_mdm_0_0__MB_FDRE_15 \Addr_Counters[0].FDRE_I 
       (.Addr(Addr[0]),
        .O(sum_A_3),
        .S(S),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_UART.fifo_Write_reg (\Use_UART.fifo_Write_reg ),
        .\Use_Uart.reset_RX_FIFO_reg (\Use_Uart.reset_RX_FIFO_reg ),
        .\Using_FPGA.Native_0 ({Addr[1],Addr[2],Addr[3]}),
        .bus2ip_rdce(bus2ip_rdce),
        .data_Exists_I_reg(\Using_FPGA.Native ));
  ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_16 \Addr_Counters[0].Used_MuxCY.MUXCY_L_I 
       (.Addr(Addr[0]),
        .CI(CI),
        .LO(\NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ),
        .O(sum_A_3),
        .S(S),
        .lopt(\NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ),
        .lopt_1(Addr[1]),
        .lopt_2(S2_out),
        .lopt_3(\NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_lopt_3_UNCONNECTED ),
        .lopt_4(Addr[2]),
        .lopt_5(S1_out),
        .lopt_6(lopt_2),
        .lopt_7(lopt_3),
        .lopt_8(lopt_4),
        .lopt_9(LI));
  ublaze_sopc_mdm_0_0__MB_FDRE_17 \Addr_Counters[1].FDRE_I 
       (.Addr({Addr[0],Addr[2],Addr[3]}),
        .O(sum_A_2),
        .S(S2_out),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_UART.fifo_Write_reg (\Use_UART.fifo_Write_reg ),
        .\Use_Uart.reset_RX_FIFO_reg (\Use_Uart.reset_RX_FIFO_reg ),
        .\Using_FPGA.Native_0 (Addr[1]),
        .bus2ip_rdce(bus2ip_rdce),
        .data_Exists_I_reg(\Using_FPGA.Native ));
  ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_18 \Addr_Counters[1].Used_MuxCY.MUXCY_L_I 
       (.CI(\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_CI_UNCONNECTED ),
        .LO(\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ),
        .O(sum_A_2),
        .S(\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_Using_FPGA.Native_UNCONNECTED [0]),
        .lopt(\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_2));
  ublaze_sopc_mdm_0_0__MB_FDRE_19 \Addr_Counters[2].FDRE_I 
       (.Addr(Addr[2]),
        .Bus_RNW_reg(Bus_RNW_reg),
        .CI(CI),
        .D(D[1]),
        .Data_Out(Data_Out[1]),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .O(sum_A_1),
        .RX_Buffer_Full(RX_Buffer_Full),
        .S(S1_out),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.command_reg[0] (\Use_BSCAN.command_reg[0] ),
        .\Use_BSCAN.command_reg[0]_0 (\Use_BSCAN.command_reg[0]_0 ),
        .\Use_UART.fifo_Write_reg (\Use_UART.fifo_Write_reg ),
        .\Use_UART.tdo_reg_reg[3] (\Use_UART.tdo_reg_reg[3] [1]),
        .\Use_Uart.reset_RX_FIFO_reg (\Use_Uart.reset_RX_FIFO_reg ),
        .\Using_FPGA.Native_0 ({Addr[0],Addr[1],Addr[3]}),
        .bus2ip_rdce(bus2ip_rdce),
        .data_Exists_I_reg(\Addr_Counters[2].FDRE_I_n_5 ),
        .data_Exists_I_reg_0(\Using_FPGA.Native ));
  ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_20 \Addr_Counters[2].Used_MuxCY.MUXCY_L_I 
       (.Addr(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_Addr_UNCONNECTED [0]),
        .CI(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_CI_UNCONNECTED ),
        .LO(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ),
        .O(sum_A_1),
        .S(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_S_UNCONNECTED ),
        .lopt(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_3));
  ublaze_sopc_mdm_0_0__MB_FDRE_21 \Addr_Counters[3].FDRE_I 
       (.Addr({Addr[0],Addr[1],Addr[2]}),
        .LI(LI),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_UART.fifo_Write_reg (\Use_UART.fifo_Write_reg ),
        .\Use_Uart.reset_RX_FIFO_reg (\Use_Uart.reset_RX_FIFO_reg ),
        .\Using_FPGA.Native_0 (Addr[3]),
        .bus2ip_rdce(bus2ip_rdce),
        .data_Exists_I_reg(\Using_FPGA.Native ),
        .sum_A_0(sum_A_0));
  ublaze_sopc_mdm_0_0__MB_XORCY_22 \Addr_Counters[3].No_MuxCY.XORCY_I 
       (.LI(\NLW_Addr_Counters[3].No_MuxCY.XORCY_I_LI_UNCONNECTED ),
        .LO(\NLW_Addr_Counters[3].No_MuxCY.XORCY_I_LO_UNCONNECTED ),
        .lopt(lopt_4),
        .sum_A_0(sum_A_0));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_23 \FIFO_RAM[0].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Q(Q[7]),
        .RX_Data(RX_Data[0]),
        .S_AXI_ACLK(S_AXI_ACLK));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_24 \FIFO_RAM[1].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Q(Q[6]),
        .RX_Data(RX_Data[1]),
        .S_AXI_ACLK(S_AXI_ACLK));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_25 \FIFO_RAM[2].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Q(Q[5]),
        .RX_Data(RX_Data[2]),
        .S_AXI_ACLK(S_AXI_ACLK));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_26 \FIFO_RAM[3].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Q(Q[4]),
        .RX_Data(RX_Data[3]),
        .S_AXI_ACLK(S_AXI_ACLK));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_27 \FIFO_RAM[4].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Q(Q[3]),
        .RX_Data(RX_Data[4]),
        .S_AXI_ACLK(S_AXI_ACLK));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_28 \FIFO_RAM[5].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Q(Q[2]),
        .RX_Data(RX_Data[5]),
        .S_AXI_ACLK(S_AXI_ACLK));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_29 \FIFO_RAM[6].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Q(Q[1]),
        .RX_Data(RX_Data[6]),
        .S_AXI_ACLK(S_AXI_ACLK));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_30 \FIFO_RAM[7].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Q(Q[0]),
        .RX_Data(RX_Data[7]),
        .S_AXI_ACLK(S_AXI_ACLK));
  LUT6 #(
    .INIT(64'hFFFF22F222F222F2)) 
    \Use_UART.tdo_reg[5]_i_1 
       (.I0(\Use_UART.tdo_reg_reg[3] [0]),
        .I1(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I2(\Use_BSCAN.command_reg[0] ),
        .I3(\Using_FPGA.Native ),
        .I4(Data_Out[0]),
        .I5(\Use_BSCAN.command_reg[0]_0 ),
        .O(D[0]));
  FDRE #(
    .INIT(1'b0)) 
    data_Exists_I_reg
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(\Addr_Counters[2].FDRE_I_n_5 ),
        .Q(\Using_FPGA.Native ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "SRL_FIFO" *) 
module ublaze_sopc_mdm_0_0__SRL_FIFO_0
   (\Using_FPGA.Native ,
    \Use_UART.tdo_reg_reg[4] ,
    D,
    tx_Buffer_Full,
    tx_Buffer_Empty,
    Interrupt,
    \Use_Uart.reset_TX_FIFO_reg ,
    S_AXI_ACLK,
    S_AXI_WDATA,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.command_reg[0]_0 ,
    FIFO_Write,
    \Use_UART.fifo_Read_reg ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    out,
    Q_0,
    data_Exists_I_reg_0,
    enable_interrupts);
  output \Using_FPGA.Native ;
  output [1:0]\Use_UART.tdo_reg_reg[4] ;
  output [5:0]D;
  output tx_Buffer_Full;
  output tx_Buffer_Empty;
  output Interrupt;
  input \Use_Uart.reset_TX_FIFO_reg ;
  input S_AXI_ACLK;
  input [7:0]S_AXI_WDATA;
  input [4:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_BSCAN.command_reg[0]_0 ;
  input FIFO_Write;
  input \Use_UART.fifo_Read_reg ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input out;
  input Q_0;
  input data_Exists_I_reg_0;
  input enable_interrupts;

  wire [0:3]Addr;
  wire \Addr_Counters[2].FDRE_I_n_5 ;
  wire Bus_RNW_reg;
  wire CI;
  wire [5:0]D;
  wire [6:6]Data_Out;
  wire FIFO_Write;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire LI;
  wire [4:0]Q;
  wire S;
  wire S1_out;
  wire S2_out;
  wire S_AXI_ACLK;
  wire [7:0]S_AXI_WDATA;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[0]_0 ;
  wire \Use_UART.fifo_Read_reg ;
  wire [1:0]\Use_UART.tdo_reg_reg[4] ;
  wire \Use_Uart.reset_TX_FIFO_reg ;
  wire \Using_FPGA.Native ;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire out;
  wire sum_A_0;
  wire sum_A_1;
  wire sum_A_2;
  wire sum_A_3;
  wire tx_Buffer_Full;
  wire \NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ;
  wire \NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ;
  wire \NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_lopt_3_UNCONNECTED ;
  wire \NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_CI_UNCONNECTED ;
  wire \NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ;
  wire \NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_S_UNCONNECTED ;
  wire \NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_CI_UNCONNECTED ;
  wire \NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ;
  wire \NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_S_UNCONNECTED ;
  wire \NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_Addr_UNCONNECTED ;
  wire \NLW_Addr_Counters[3].No_MuxCY.XORCY_I_LI_UNCONNECTED ;
  wire \NLW_Addr_Counters[3].No_MuxCY.XORCY_I_LO_UNCONNECTED ;

  ublaze_sopc_mdm_0_0__MB_FDRE_2 \Addr_Counters[0].FDRE_I 
       (.Addr(Addr[0]),
        .FIFO_Write(FIFO_Write),
        .O(sum_A_3),
        .S(S),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_UART.fifo_Read_reg (\Use_UART.fifo_Read_reg ),
        .\Use_Uart.reset_TX_FIFO_reg (\Use_Uart.reset_TX_FIFO_reg ),
        .\Using_FPGA.Native_0 ({Addr[1],Addr[2],Addr[3]}),
        .data_Exists_I_reg(\Using_FPGA.Native ));
  ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY \Addr_Counters[0].Used_MuxCY.MUXCY_L_I 
       (.Addr(Addr[0]),
        .CI(CI),
        .LO(\NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ),
        .O(sum_A_3),
        .S(S),
        .lopt(\NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ),
        .lopt_1(Addr[1]),
        .lopt_2(S2_out),
        .lopt_3(\NLW_Addr_Counters[0].Used_MuxCY.MUXCY_L_I_lopt_3_UNCONNECTED ),
        .lopt_4(Addr[2]),
        .lopt_5(S1_out),
        .lopt_6(lopt_2),
        .lopt_7(lopt_3),
        .lopt_8(lopt_4),
        .lopt_9(LI));
  ublaze_sopc_mdm_0_0__MB_FDRE_3 \Addr_Counters[1].FDRE_I 
       (.Addr({Addr[0],Addr[2],Addr[3]}),
        .FIFO_Write(FIFO_Write),
        .O(sum_A_2),
        .S(S2_out),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_UART.fifo_Read_reg (\Use_UART.fifo_Read_reg ),
        .\Use_Uart.reset_TX_FIFO_reg (\Use_Uart.reset_TX_FIFO_reg ),
        .\Using_FPGA.Native_0 (Addr[1]),
        .data_Exists_I_reg(\Using_FPGA.Native ));
  ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_4 \Addr_Counters[1].Used_MuxCY.MUXCY_L_I 
       (.CI(\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_CI_UNCONNECTED ),
        .LO(\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ),
        .O(sum_A_2),
        .S(\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_Using_FPGA.Native_UNCONNECTED [0]),
        .lopt(\NLW_Addr_Counters[1].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_2));
  ublaze_sopc_mdm_0_0__MB_FDRE_5 \Addr_Counters[2].FDRE_I 
       (.Addr(Addr[2]),
        .Bus_RNW_reg(Bus_RNW_reg),
        .CI(CI),
        .D(D[1]),
        .Data_Out(Data_Out),
        .FIFO_Write(FIFO_Write),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .O(sum_A_1),
        .Q(Q[1]),
        .S(S1_out),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.command_reg[0] (\Use_BSCAN.command_reg[0] ),
        .\Use_BSCAN.command_reg[0]_0 (\Use_BSCAN.command_reg[0]_0 ),
        .\Use_UART.fifo_Read_reg (\Use_UART.fifo_Read_reg ),
        .\Use_Uart.reset_TX_FIFO_reg (\Use_Uart.reset_TX_FIFO_reg ),
        .\Using_FPGA.Native_0 ({Addr[0],Addr[1],Addr[3]}),
        .data_Exists_I_reg(\Addr_Counters[2].FDRE_I_n_5 ),
        .data_Exists_I_reg_0(\Using_FPGA.Native ),
        .out(out),
        .tx_Buffer_Full(tx_Buffer_Full));
  ublaze_sopc_mdm_0_0__MB_MUXCY_XORCY_6 \Addr_Counters[2].Used_MuxCY.MUXCY_L_I 
       (.Addr(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_Addr_UNCONNECTED [0]),
        .CI(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_CI_UNCONNECTED ),
        .LO(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_LO_UNCONNECTED ),
        .O(sum_A_1),
        .S(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_S_UNCONNECTED ),
        .lopt(\NLW_Addr_Counters[2].Used_MuxCY.MUXCY_L_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_3));
  ublaze_sopc_mdm_0_0__MB_FDRE_7 \Addr_Counters[3].FDRE_I 
       (.Addr({Addr[0],Addr[1],Addr[2]}),
        .FIFO_Write(FIFO_Write),
        .LI(LI),
        .S_AXI_ACLK(S_AXI_ACLK),
        .\Use_UART.fifo_Read_reg (\Use_UART.fifo_Read_reg ),
        .\Use_Uart.reset_TX_FIFO_reg (\Use_Uart.reset_TX_FIFO_reg ),
        .\Using_FPGA.Native_0 (Addr[3]),
        .data_Exists_I_reg(\Using_FPGA.Native ),
        .sum_A_0(sum_A_0));
  ublaze_sopc_mdm_0_0__MB_XORCY \Addr_Counters[3].No_MuxCY.XORCY_I 
       (.LI(\NLW_Addr_Counters[3].No_MuxCY.XORCY_I_LI_UNCONNECTED ),
        .LO(\NLW_Addr_Counters[3].No_MuxCY.XORCY_I_LO_UNCONNECTED ),
        .lopt(lopt_4),
        .sum_A_0(sum_A_0));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7 \FIFO_RAM[0].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .D(D[5]),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA[7]),
        .\Use_BSCAN.command_reg[0] (\Use_BSCAN.command_reg[0]_0 ));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_8 \FIFO_RAM[1].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .D(D[4]),
        .Q(Q[4]),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA[6]),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.command_reg[0] (\Use_BSCAN.command_reg[0]_0 ));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_9 \FIFO_RAM[2].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .D(D[3]),
        .Q(Q[3]),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA[5]),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.command_reg[0] (\Use_BSCAN.command_reg[0]_0 ));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_10 \FIFO_RAM[3].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .D(D[2]),
        .Q(Q[2]),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA[4]),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.command_reg[0] (\Use_BSCAN.command_reg[0]_0 ));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_11 \FIFO_RAM[4].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA[3]),
        .\Use_UART.tdo_reg_reg[4] (\Use_UART.tdo_reg_reg[4] [1]));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_12 \FIFO_RAM[5].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA[2]),
        .\Use_UART.tdo_reg_reg[5] (\Use_UART.tdo_reg_reg[4] [0]));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_13 \FIFO_RAM[6].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .Data_Out(Data_Out),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA[1]));
  ublaze_sopc_mdm_0_0__MB_SRL16E__parameterized7_14 \FIFO_RAM[7].D16.SRL16E_I 
       (.Addr(Addr),
        .CI(CI),
        .D(D[0]),
        .Q(Q[0]),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_WDATA(S_AXI_WDATA[0]),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.command_reg[0] (\Use_BSCAN.command_reg[0] ),
        .\Use_BSCAN.command_reg[0]_0 (\Use_BSCAN.command_reg[0]_0 ),
        .data_Exists_I_reg(\Using_FPGA.Native ));
  FDRE #(
    .INIT(1'b0)) 
    data_Exists_I_reg
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(\Addr_Counters[2].FDRE_I_n_5 ),
        .Q(\Using_FPGA.Native ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "address_decoder" *) 
module ublaze_sopc_mdm_0_0__address_decoder
   (\s_axi_rresp_i_reg[1] ,
    \s_axi_rresp_i_reg[1]_0 ,
    \Use_Uart.enable_interrupts_reg ,
    D,
    S_AXI_ARREADY,
    S_AXI_WREADY,
    FIFO_Write,
    ip2bus_error,
    bus2ip_wrce,
    clear_Ext_BRK,
    reset_RX_FIFO,
    reset_TX_FIFO,
    \s_axi_rdata_i_reg[7] ,
    bus2ip_rdce,
    \Use_Uart.enable_interrupts_reg_0 ,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    \s_axi_bresp_i_reg[1] ,
    start2,
    S_AXI_ACLK,
    out,
    state1__2,
    S_AXI_AWVALID,
    S_AXI_WVALID,
    S_AXI_ARVALID,
    \Use_UART.tx_buffered_2_reg ,
    tx_Buffer_Full,
    rx_Data_Present,
    S_AXI_WDATA,
    RX_Data,
    RX_Buffer_Full,
    fifo_Data_Present,
    enable_interrupts,
    S_AXI_ARESETN,
    S_AXI_RREADY,
    S_AXI_RVALID,
    S_AXI_BREADY,
    S_AXI_BVALID,
    S_AXI_BRESP,
    rst,
    bus2ip_rnw_i,
    \bus2ip_addr_i_reg[3] ,
    \bus2ip_addr_i_reg[2] );
  output \s_axi_rresp_i_reg[1] ;
  output \s_axi_rresp_i_reg[1]_0 ;
  output \Use_Uart.enable_interrupts_reg ;
  output [2:0]D;
  output S_AXI_ARREADY;
  output S_AXI_WREADY;
  output FIFO_Write;
  output ip2bus_error;
  output [0:0]bus2ip_wrce;
  output clear_Ext_BRK;
  output reset_RX_FIFO;
  output reset_TX_FIFO;
  output [7:0]\s_axi_rdata_i_reg[7] ;
  output [0:0]bus2ip_rdce;
  output \Use_Uart.enable_interrupts_reg_0 ;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output \s_axi_bresp_i_reg[1] ;
  input start2;
  input S_AXI_ACLK;
  input [3:0]out;
  input state1__2;
  input S_AXI_AWVALID;
  input S_AXI_WVALID;
  input S_AXI_ARVALID;
  input \Use_UART.tx_buffered_2_reg ;
  input tx_Buffer_Full;
  input rx_Data_Present;
  input [3:0]S_AXI_WDATA;
  input [0:7]RX_Data;
  input RX_Buffer_Full;
  input fifo_Data_Present;
  input enable_interrupts;
  input S_AXI_ARESETN;
  input S_AXI_RREADY;
  input S_AXI_RVALID;
  input S_AXI_BREADY;
  input S_AXI_BVALID;
  input [0:0]S_AXI_BRESP;
  input rst;
  input bus2ip_rnw_i;
  input \bus2ip_addr_i_reg[3] ;
  input \bus2ip_addr_i_reg[2] ;

  wire Bus_RNW_reg_i_1_n_0;
  wire [2:0]D;
  wire FIFO_Write;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire RX_Buffer_Full;
  wire [0:7]RX_Data;
  wire S_AXI_ACLK;
  wire S_AXI_ARESETN;
  wire S_AXI_ARREADY;
  wire S_AXI_ARVALID;
  wire S_AXI_AWVALID;
  wire S_AXI_BREADY;
  wire S_AXI_BVALID;
  wire S_AXI_RREADY;
  wire S_AXI_RVALID;
  wire [3:0]S_AXI_WDATA;
  wire S_AXI_WREADY;
  wire S_AXI_WVALID;
  wire \Use_UART.tx_buffered_2_reg ;
  wire \Use_Uart.enable_interrupts_reg ;
  wire \Use_Uart.enable_interrupts_reg_0 ;
  wire \bus2ip_addr_i_reg[2] ;
  wire \bus2ip_addr_i_reg[3] ;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_rnw_i;
  wire ce_expnd_i_0;
  wire ce_expnd_i_1;
  wire ce_expnd_i_2;
  wire ce_expnd_i_3;
  wire cs_ce_clr;
  wire enable_interrupts;
  wire fifo_Data_Present;
  wire [3:0]out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx_Data_Present;
  wire s_axi_bvalid_i_reg;
  wire [7:0]\s_axi_rdata_i_reg[7] ;
  wire \s_axi_rresp_i_reg[1] ;
  wire \s_axi_rresp_i_reg[1]_0 ;
  wire s_axi_rvalid_i_reg;
  wire start2;
  wire state1__2;
  wire tx_Buffer_Full;

  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(bus2ip_rnw_i),
        .I1(start2),
        .I2(\Use_Uart.enable_interrupts_reg ),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(\Use_Uart.enable_interrupts_reg ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF888FFFFF888F888)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(out[3]),
        .I1(S_AXI_ARREADY),
        .I2(out[2]),
        .I3(S_AXI_WREADY),
        .I4(state1__2),
        .I5(out[0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0080FFFF00800080)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(S_AXI_AWVALID),
        .I1(S_AXI_WVALID),
        .I2(out[1]),
        .I3(S_AXI_ARVALID),
        .I4(S_AXI_WREADY),
        .I5(out[2]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(S_AXI_ARREADY),
        .I1(out[3]),
        .I2(S_AXI_ARVALID),
        .I3(out[1]),
        .O(D[2]));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] 
       (.C(S_AXI_ACLK),
        .CE(start2),
        .D(ce_expnd_i_3),
        .Q(\s_axi_rresp_i_reg[1]_0 ),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i[1]_i_1 
       (.I0(\bus2ip_addr_i_reg[2] ),
        .I1(\bus2ip_addr_i_reg[3] ),
        .O(ce_expnd_i_2));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] 
       (.C(S_AXI_ACLK),
        .CE(start2),
        .D(ce_expnd_i_2),
        .Q(\s_axi_rresp_i_reg[1] ),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] 
       (.C(S_AXI_ACLK),
        .CE(start2),
        .D(ce_expnd_i_1),
        .Q(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\s_axi_rresp_i_reg[1]_0 ),
        .I2(\s_axi_rresp_i_reg[1] ),
        .I3(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I4(S_AXI_ARESETN),
        .O(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_2 
       (.I0(\bus2ip_addr_i_reg[3] ),
        .I1(\bus2ip_addr_i_reg[2] ),
        .O(ce_expnd_i_0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] 
       (.C(S_AXI_ACLK),
        .CE(start2),
        .D(ce_expnd_i_0),
        .Q(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .R(cs_ce_clr));
  ublaze_sopc_mdm_0_0__pselect_f \MEM_DECODE_GEN[0].PER_CE_GEN[0].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[2] (\bus2ip_addr_i_reg[2] ),
        .\bus2ip_addr_i_reg[3] (\bus2ip_addr_i_reg[3] ),
        .ce_expnd_i_3(ce_expnd_i_3));
  ublaze_sopc_mdm_0_0__pselect_f__parameterized1 \MEM_DECODE_GEN[0].PER_CE_GEN[2].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[2] (\bus2ip_addr_i_reg[2] ),
        .\bus2ip_addr_i_reg[3] (\bus2ip_addr_i_reg[3] ),
        .ce_expnd_i_1(ce_expnd_i_1));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    S_AXI_ARREADY_INST_0
       (.I0(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(\Use_Uart.enable_interrupts_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(S_AXI_ARREADY));
  LUT5 #(
    .INIT(32'h00FF00FE)) 
    S_AXI_WREADY_INST_0
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\s_axi_rresp_i_reg[1]_0 ),
        .I2(\s_axi_rresp_i_reg[1] ),
        .I3(\Use_Uart.enable_interrupts_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(S_AXI_WREADY));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \Use_Uart.enable_interrupts_i_1 
       (.I0(S_AXI_WDATA[3]),
        .I1(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I2(\Use_Uart.enable_interrupts_reg ),
        .I3(enable_interrupts),
        .O(\Use_Uart.enable_interrupts_reg_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \Use_Uart.reset_RX_FIFO_i_2 
       (.I0(\Use_Uart.enable_interrupts_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I2(S_AXI_WDATA[1]),
        .O(reset_RX_FIFO));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \Use_Uart.reset_TX_FIFO_i_1 
       (.I0(\Use_Uart.enable_interrupts_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I2(S_AXI_WDATA[0]),
        .O(reset_TX_FIFO));
  LUT3 #(
    .INIT(8'h40)) 
    \Using_FPGA.Native_I1_i_3 
       (.I0(\Use_Uart.enable_interrupts_reg ),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(\Use_UART.tx_buffered_2_reg ),
        .O(FIFO_Write));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_I1_i_3__0 
       (.I0(\s_axi_rresp_i_reg[1]_0 ),
        .I1(\Use_Uart.enable_interrupts_reg ),
        .O(bus2ip_rdce));
  LUT4 #(
    .INIT(16'h8F88)) 
    s_axi_bvalid_i_i_1
       (.I0(S_AXI_WREADY),
        .I1(out[2]),
        .I2(S_AXI_BREADY),
        .I3(S_AXI_BVALID),
        .O(s_axi_bvalid_i_reg));
  LUT5 #(
    .INIT(32'hAA00C000)) 
    \s_axi_rdata_i[0]_i_1 
       (.I0(rx_Data_Present),
        .I1(RX_Data[7]),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(\Use_Uart.enable_interrupts_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\s_axi_rdata_i_reg[7] [0]));
  LUT5 #(
    .INIT(32'hAA00C000)) 
    \s_axi_rdata_i[1]_i_1 
       (.I0(RX_Buffer_Full),
        .I1(RX_Data[6]),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(\Use_Uart.enable_interrupts_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\s_axi_rdata_i_reg[7] [1]));
  LUT5 #(
    .INIT(32'h5500C000)) 
    \s_axi_rdata_i[2]_i_1 
       (.I0(fifo_Data_Present),
        .I1(RX_Data[5]),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(\Use_Uart.enable_interrupts_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\s_axi_rdata_i_reg[7] [2]));
  LUT5 #(
    .INIT(32'hAA00C000)) 
    \s_axi_rdata_i[3]_i_1 
       (.I0(tx_Buffer_Full),
        .I1(RX_Data[4]),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(\Use_Uart.enable_interrupts_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\s_axi_rdata_i_reg[7] [3]));
  LUT5 #(
    .INIT(32'hAA00C000)) 
    \s_axi_rdata_i[4]_i_1 
       (.I0(enable_interrupts),
        .I1(RX_Data[3]),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(\Use_Uart.enable_interrupts_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\s_axi_rdata_i_reg[7] [4]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \s_axi_rdata_i[5]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\Use_Uart.enable_interrupts_reg ),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(RX_Data[2]),
        .O(\s_axi_rdata_i_reg[7] [5]));
  LUT4 #(
    .INIT(16'h4000)) 
    \s_axi_rdata_i[6]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\Use_Uart.enable_interrupts_reg ),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(RX_Data[1]),
        .O(\s_axi_rdata_i_reg[7] [6]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \s_axi_rdata_i[7]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\Use_Uart.enable_interrupts_reg ),
        .I2(\s_axi_rresp_i_reg[1]_0 ),
        .I3(RX_Data[0]),
        .O(\s_axi_rdata_i_reg[7] [7]));
  LUT4 #(
    .INIT(16'h8F88)) 
    s_axi_rvalid_i_i_1
       (.I0(S_AXI_ARREADY),
        .I1(out[3]),
        .I2(S_AXI_RREADY),
        .I3(S_AXI_RVALID),
        .O(s_axi_rvalid_i_reg));
endmodule

(* ORIG_REF_NAME = "axi_lite_ipif" *) 
module ublaze_sopc_mdm_0_0__axi_lite_ipif
   (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    S_AXI_RRESP,
    Bus_RNW_reg,
    S_AXI_RVALID,
    S_AXI_BVALID,
    S_AXI_BRESP,
    S_AXI_ARREADY,
    S_AXI_WREADY,
    FIFO_Write,
    bus2ip_wrce,
    clear_Ext_BRK,
    reset_RX_FIFO,
    reset_TX_FIFO,
    bus2ip_rdce,
    \Use_Uart.enable_interrupts_reg ,
    S_AXI_RDATA,
    S_AXI_ARESETN_0,
    S_AXI_ACLK,
    S_AXI_AWVALID,
    S_AXI_WVALID,
    S_AXI_ARVALID,
    out,
    tx_Buffer_Full,
    rx_Data_Present,
    S_AXI_WDATA,
    RX_Data,
    RX_Buffer_Full,
    fifo_Data_Present,
    enable_interrupts,
    S_AXI_RREADY,
    S_AXI_BREADY,
    S_AXI_ARESETN,
    S_AXI_ARADDR,
    S_AXI_AWADDR);
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output [0:0]S_AXI_RRESP;
  output Bus_RNW_reg;
  output S_AXI_RVALID;
  output S_AXI_BVALID;
  output [0:0]S_AXI_BRESP;
  output S_AXI_ARREADY;
  output S_AXI_WREADY;
  output FIFO_Write;
  output [0:0]bus2ip_wrce;
  output clear_Ext_BRK;
  output reset_RX_FIFO;
  output reset_TX_FIFO;
  output [0:0]bus2ip_rdce;
  output \Use_Uart.enable_interrupts_reg ;
  output [7:0]S_AXI_RDATA;
  input S_AXI_ARESETN_0;
  input S_AXI_ACLK;
  input S_AXI_AWVALID;
  input S_AXI_WVALID;
  input S_AXI_ARVALID;
  input out;
  input tx_Buffer_Full;
  input rx_Data_Present;
  input [3:0]S_AXI_WDATA;
  input [0:7]RX_Data;
  input RX_Buffer_Full;
  input fifo_Data_Present;
  input enable_interrupts;
  input S_AXI_RREADY;
  input S_AXI_BREADY;
  input S_AXI_ARESETN;
  input [1:0]S_AXI_ARADDR;
  input [1:0]S_AXI_AWADDR;

  wire Bus_RNW_reg;
  wire FIFO_Write;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire RX_Buffer_Full;
  wire [0:7]RX_Data;
  wire S_AXI_ACLK;
  wire [1:0]S_AXI_ARADDR;
  wire S_AXI_ARESETN;
  wire S_AXI_ARESETN_0;
  wire S_AXI_ARREADY;
  wire S_AXI_ARVALID;
  wire S_AXI_AWVALID;
  wire S_AXI_BREADY;
  wire S_AXI_BVALID;
  wire [7:0]S_AXI_RDATA;
  wire S_AXI_RREADY;
  wire S_AXI_RVALID;
  wire [3:0]S_AXI_WDATA;
  wire S_AXI_WREADY;
  wire S_AXI_WVALID;
  wire \Use_Uart.enable_interrupts_reg ;
  wire [0:0]bus2ip_rdce;
  wire enable_interrupts;
  wire fifo_Data_Present;
  wire out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx_Data_Present;
  wire tx_Buffer_Full;
  wire NLW_I_SLAVE_ATTACHMENT_clear_Ext_BRK_UNCONNECTED;
  wire [1:0]NLW_I_SLAVE_ATTACHMENT_S_AXI_AWADDR_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_S_AXI_BRESP_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_S_AXI_RRESP_UNCONNECTED;
  wire [2:2]NLW_I_SLAVE_ATTACHMENT_S_AXI_WDATA_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_bus2ip_wrce_UNCONNECTED;

  ublaze_sopc_mdm_0_0__slave_attachment I_SLAVE_ATTACHMENT
       (.FIFO_Write(FIFO_Write),
        .RX_Buffer_Full(RX_Buffer_Full),
        .RX_Data(RX_Data),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_ARADDR(S_AXI_ARADDR),
        .S_AXI_ARESETN(S_AXI_ARESETN),
        .S_AXI_ARESETN_0(S_AXI_ARESETN_0),
        .S_AXI_ARREADY(S_AXI_ARREADY),
        .S_AXI_ARVALID(S_AXI_ARVALID),
        .S_AXI_AWADDR(NLW_I_SLAVE_ATTACHMENT_S_AXI_AWADDR_UNCONNECTED[1:0]),
        .S_AXI_AWVALID(S_AXI_AWVALID),
        .S_AXI_BREADY(S_AXI_BREADY),
        .S_AXI_BRESP(NLW_I_SLAVE_ATTACHMENT_S_AXI_BRESP_UNCONNECTED[0]),
        .S_AXI_BVALID(S_AXI_BVALID),
        .S_AXI_RDATA(S_AXI_RDATA),
        .S_AXI_RREADY(S_AXI_RREADY),
        .S_AXI_RRESP(NLW_I_SLAVE_ATTACHMENT_S_AXI_RRESP_UNCONNECTED[0]),
        .S_AXI_RVALID(S_AXI_RVALID),
        .S_AXI_WDATA({S_AXI_WDATA[3],NLW_I_SLAVE_ATTACHMENT_S_AXI_WDATA_UNCONNECTED[2],S_AXI_WDATA[1:0]}),
        .S_AXI_WREADY(S_AXI_WREADY),
        .S_AXI_WVALID(S_AXI_WVALID),
        .\Use_Uart.enable_interrupts_reg (Bus_RNW_reg),
        .\Use_Uart.enable_interrupts_reg_0 (\Use_Uart.enable_interrupts_reg ),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_wrce(NLW_I_SLAVE_ATTACHMENT_bus2ip_wrce_UNCONNECTED[0]),
        .clear_Ext_BRK(NLW_I_SLAVE_ATTACHMENT_clear_Ext_BRK_UNCONNECTED),
        .enable_interrupts(enable_interrupts),
        .fifo_Data_Present(fifo_Data_Present),
        .out(out),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Data_Present(rx_Data_Present),
        .\s_axi_rresp_i_reg[1]_0 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\s_axi_rresp_i_reg[1]_1 (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .tx_Buffer_Full(tx_Buffer_Full));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_mdm_0_0__pselect_f
   (ce_expnd_i_3,
    \bus2ip_addr_i_reg[2] ,
    \bus2ip_addr_i_reg[3] );
  output ce_expnd_i_3;
  input \bus2ip_addr_i_reg[2] ;
  input \bus2ip_addr_i_reg[3] ;

  wire \bus2ip_addr_i_reg[2] ;
  wire \bus2ip_addr_i_reg[3] ;
  wire ce_expnd_i_3;

  LUT2 #(
    .INIT(4'h1)) 
    CS
       (.I0(\bus2ip_addr_i_reg[2] ),
        .I1(\bus2ip_addr_i_reg[3] ),
        .O(ce_expnd_i_3));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module ublaze_sopc_mdm_0_0__pselect_f__parameterized1
   (ce_expnd_i_1,
    \bus2ip_addr_i_reg[3] ,
    \bus2ip_addr_i_reg[2] );
  output ce_expnd_i_1;
  input \bus2ip_addr_i_reg[3] ;
  input \bus2ip_addr_i_reg[2] ;

  wire \bus2ip_addr_i_reg[2] ;
  wire \bus2ip_addr_i_reg[3] ;
  wire ce_expnd_i_1;

  LUT2 #(
    .INIT(4'h2)) 
    CS
       (.I0(\bus2ip_addr_i_reg[3] ),
        .I1(\bus2ip_addr_i_reg[2] ),
        .O(ce_expnd_i_1));
endmodule

(* ORIG_REF_NAME = "slave_attachment" *) 
module ublaze_sopc_mdm_0_0__slave_attachment
   (\s_axi_rresp_i_reg[1]_0 ,
    \s_axi_rresp_i_reg[1]_1 ,
    S_AXI_RRESP,
    \Use_Uart.enable_interrupts_reg ,
    S_AXI_RVALID,
    S_AXI_BVALID,
    S_AXI_BRESP,
    S_AXI_ARREADY,
    S_AXI_WREADY,
    FIFO_Write,
    bus2ip_wrce,
    clear_Ext_BRK,
    reset_RX_FIFO,
    reset_TX_FIFO,
    bus2ip_rdce,
    \Use_Uart.enable_interrupts_reg_0 ,
    S_AXI_RDATA,
    S_AXI_ARESETN_0,
    S_AXI_ACLK,
    S_AXI_AWVALID,
    S_AXI_WVALID,
    S_AXI_ARVALID,
    out,
    tx_Buffer_Full,
    rx_Data_Present,
    S_AXI_WDATA,
    RX_Data,
    RX_Buffer_Full,
    fifo_Data_Present,
    enable_interrupts,
    S_AXI_RREADY,
    S_AXI_BREADY,
    S_AXI_ARESETN,
    S_AXI_ARADDR,
    S_AXI_AWADDR);
  output \s_axi_rresp_i_reg[1]_0 ;
  output \s_axi_rresp_i_reg[1]_1 ;
  output [0:0]S_AXI_RRESP;
  output \Use_Uart.enable_interrupts_reg ;
  output S_AXI_RVALID;
  output S_AXI_BVALID;
  output [0:0]S_AXI_BRESP;
  output S_AXI_ARREADY;
  output S_AXI_WREADY;
  output FIFO_Write;
  output [0:0]bus2ip_wrce;
  output clear_Ext_BRK;
  output reset_RX_FIFO;
  output reset_TX_FIFO;
  output [0:0]bus2ip_rdce;
  output \Use_Uart.enable_interrupts_reg_0 ;
  output [7:0]S_AXI_RDATA;
  input S_AXI_ARESETN_0;
  input S_AXI_ACLK;
  input S_AXI_AWVALID;
  input S_AXI_WVALID;
  input S_AXI_ARVALID;
  input out;
  input tx_Buffer_Full;
  input rx_Data_Present;
  input [3:0]S_AXI_WDATA;
  input [0:7]RX_Data;
  input RX_Buffer_Full;
  input fifo_Data_Present;
  input enable_interrupts;
  input S_AXI_RREADY;
  input S_AXI_BREADY;
  input S_AXI_ARESETN;
  input [1:0]S_AXI_ARADDR;
  input [1:0]S_AXI_AWADDR;

  wire FIFO_Write;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[1] ;
  wire I_DECODER_n_24;
  wire I_DECODER_n_25;
  wire I_DECODER_n_3;
  wire I_DECODER_n_4;
  wire I_DECODER_n_5;
  wire RX_Buffer_Full;
  wire [0:7]RX_Data;
  wire S_AXI_ACLK;
  wire [1:0]S_AXI_ARADDR;
  wire S_AXI_ARESETN;
  wire S_AXI_ARESETN_0;
  wire S_AXI_ARREADY;
  wire S_AXI_ARVALID;
  wire S_AXI_AWVALID;
  wire S_AXI_BREADY;
  wire S_AXI_BVALID;
  wire [7:0]S_AXI_RDATA;
  wire S_AXI_RREADY;
  wire S_AXI_RVALID;
  wire [3:0]S_AXI_WDATA;
  wire S_AXI_WREADY;
  wire S_AXI_WVALID;
  wire \Use_Uart.enable_interrupts_reg ;
  wire \Use_Uart.enable_interrupts_reg_0 ;
  wire \bus2ip_addr_i[2]_i_1_n_0 ;
  wire \bus2ip_addr_i[3]_i_1_n_0 ;
  wire \bus2ip_addr_i_reg_n_0_[2] ;
  wire \bus2ip_addr_i_reg_n_0_[3] ;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_rnw_i;
  wire bus2ip_rnw_i_i_1_n_0;
  wire enable_interrupts;
  wire fifo_Data_Present;
  wire out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rst;
  wire rx_Data_Present;
  (* RTL_KEEP = "yes" *) wire s_axi_bresp_i;
  (* RTL_KEEP = "yes" *) wire s_axi_rresp_i;
  wire \s_axi_rresp_i_reg[1]_0 ;
  wire \s_axi_rresp_i_reg[1]_1 ;
  wire start2;
  wire start2_i_1_n_0;
  wire state1__2;
  wire tx_Buffer_Full;
  wire [7:0]uart_ip2bus_data;
  wire NLW_I_DECODER_clear_Ext_BRK_UNCONNECTED;
  wire NLW_I_DECODER_ip2bus_error_UNCONNECTED;
  wire NLW_I_DECODER_rst_UNCONNECTED;
  wire \NLW_I_DECODER_s_axi_bresp_i_reg[1]_UNCONNECTED ;
  wire [0:0]NLW_I_DECODER_S_AXI_BRESP_UNCONNECTED;
  wire [2:2]NLW_I_DECODER_S_AXI_WDATA_UNCONNECTED;
  wire [0:0]NLW_I_DECODER_bus2ip_wrce_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFFF007000700070)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(S_AXI_AWVALID),
        .I1(S_AXI_WVALID),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(S_AXI_ARVALID),
        .I4(state1__2),
        .I5(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[1]_i_2 
       (.I0(S_AXI_RREADY),
        .I1(S_AXI_RVALID),
        .I2(S_AXI_BREADY),
        .I3(S_AXI_BVALID),
        .O(state1__2));
  (* FSM_ENCODED_STATES = "sm_read:1000,sm_write:0100,sm_resp:0001,sm_idle:0010" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(I_DECODER_n_5),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .R(rst));
  (* FSM_ENCODED_STATES = "sm_read:1000,sm_write:0100,sm_resp:0001,sm_idle:0010" *) 
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[1] 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .S(rst));
  (* FSM_ENCODED_STATES = "sm_read:1000,sm_write:0100,sm_resp:0001,sm_idle:0010" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(I_DECODER_n_4),
        .Q(s_axi_bresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "sm_read:1000,sm_write:0100,sm_resp:0001,sm_idle:0010" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(I_DECODER_n_3),
        .Q(s_axi_rresp_i),
        .R(rst));
  ublaze_sopc_mdm_0_0__address_decoder I_DECODER
       (.D({I_DECODER_n_3,I_DECODER_n_4,I_DECODER_n_5}),
        .FIFO_Write(FIFO_Write),
        .RX_Buffer_Full(RX_Buffer_Full),
        .RX_Data(RX_Data),
        .S_AXI_ACLK(S_AXI_ACLK),
        .S_AXI_ARESETN(S_AXI_ARESETN),
        .S_AXI_ARREADY(S_AXI_ARREADY),
        .S_AXI_ARVALID(S_AXI_ARVALID),
        .S_AXI_AWVALID(S_AXI_AWVALID),
        .S_AXI_BREADY(S_AXI_BREADY),
        .S_AXI_BRESP(NLW_I_DECODER_S_AXI_BRESP_UNCONNECTED[0]),
        .S_AXI_BVALID(S_AXI_BVALID),
        .S_AXI_RREADY(S_AXI_RREADY),
        .S_AXI_RVALID(S_AXI_RVALID),
        .S_AXI_WDATA({S_AXI_WDATA[3],NLW_I_DECODER_S_AXI_WDATA_UNCONNECTED[2],S_AXI_WDATA[1:0]}),
        .S_AXI_WREADY(S_AXI_WREADY),
        .S_AXI_WVALID(S_AXI_WVALID),
        .\Use_UART.tx_buffered_2_reg (out),
        .\Use_Uart.enable_interrupts_reg (\Use_Uart.enable_interrupts_reg ),
        .\Use_Uart.enable_interrupts_reg_0 (\Use_Uart.enable_interrupts_reg_0 ),
        .\bus2ip_addr_i_reg[2] (\bus2ip_addr_i_reg_n_0_[2] ),
        .\bus2ip_addr_i_reg[3] (\bus2ip_addr_i_reg_n_0_[3] ),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_rnw_i(bus2ip_rnw_i),
        .bus2ip_wrce(NLW_I_DECODER_bus2ip_wrce_UNCONNECTED[0]),
        .clear_Ext_BRK(NLW_I_DECODER_clear_Ext_BRK_UNCONNECTED),
        .enable_interrupts(enable_interrupts),
        .fifo_Data_Present(fifo_Data_Present),
        .ip2bus_error(NLW_I_DECODER_ip2bus_error_UNCONNECTED),
        .out({s_axi_rresp_i,s_axi_bresp_i,\FSM_onehot_state_reg_n_0_[1] ,\FSM_onehot_state_reg_n_0_[0] }),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rst(NLW_I_DECODER_rst_UNCONNECTED),
        .rx_Data_Present(rx_Data_Present),
        .\s_axi_bresp_i_reg[1] (\NLW_I_DECODER_s_axi_bresp_i_reg[1]_UNCONNECTED ),
        .s_axi_bvalid_i_reg(I_DECODER_n_25),
        .\s_axi_rdata_i_reg[7] (uart_ip2bus_data),
        .\s_axi_rresp_i_reg[1] (\s_axi_rresp_i_reg[1]_0 ),
        .\s_axi_rresp_i_reg[1]_0 (\s_axi_rresp_i_reg[1]_1 ),
        .s_axi_rvalid_i_reg(I_DECODER_n_24),
        .start2(start2),
        .state1__2(state1__2),
        .tx_Buffer_Full(tx_Buffer_Full));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bus2ip_addr_i[2]_i_1 
       (.I0(S_AXI_ARADDR[0]),
        .I1(start2_i_1_n_0),
        .I2(\bus2ip_addr_i_reg_n_0_[2] ),
        .O(\bus2ip_addr_i[2]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bus2ip_addr_i[3]_i_1 
       (.I0(S_AXI_ARADDR[1]),
        .I1(start2_i_1_n_0),
        .I2(\bus2ip_addr_i_reg_n_0_[3] ),
        .O(\bus2ip_addr_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(\bus2ip_addr_i[2]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg_n_0_[2] ),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(\bus2ip_addr_i[3]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg_n_0_[3] ),
        .R(rst));
  LUT5 #(
    .INIT(32'hF7FFF000)) 
    bus2ip_rnw_i_i_1
       (.I0(S_AXI_AWVALID),
        .I1(S_AXI_WVALID),
        .I2(S_AXI_ARVALID),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .I4(bus2ip_rnw_i),
        .O(bus2ip_rnw_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(bus2ip_rnw_i_i_1_n_0),
        .Q(bus2ip_rnw_i),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(S_AXI_ARESETN_0),
        .Q(rst),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(I_DECODER_n_25),
        .Q(S_AXI_BVALID),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(S_AXI_ACLK),
        .CE(s_axi_rresp_i),
        .D(uart_ip2bus_data[0]),
        .Q(S_AXI_RDATA[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(S_AXI_ACLK),
        .CE(s_axi_rresp_i),
        .D(uart_ip2bus_data[1]),
        .Q(S_AXI_RDATA[1]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[2] 
       (.C(S_AXI_ACLK),
        .CE(s_axi_rresp_i),
        .D(uart_ip2bus_data[2]),
        .Q(S_AXI_RDATA[2]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[3] 
       (.C(S_AXI_ACLK),
        .CE(s_axi_rresp_i),
        .D(uart_ip2bus_data[3]),
        .Q(S_AXI_RDATA[3]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[4] 
       (.C(S_AXI_ACLK),
        .CE(s_axi_rresp_i),
        .D(uart_ip2bus_data[4]),
        .Q(S_AXI_RDATA[4]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[5] 
       (.C(S_AXI_ACLK),
        .CE(s_axi_rresp_i),
        .D(uart_ip2bus_data[5]),
        .Q(S_AXI_RDATA[5]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[6] 
       (.C(S_AXI_ACLK),
        .CE(s_axi_rresp_i),
        .D(uart_ip2bus_data[6]),
        .Q(S_AXI_RDATA[6]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[7] 
       (.C(S_AXI_ACLK),
        .CE(s_axi_rresp_i),
        .D(uart_ip2bus_data[7]),
        .Q(S_AXI_RDATA[7]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(I_DECODER_n_24),
        .Q(S_AXI_RVALID),
        .R(rst));
  LUT4 #(
    .INIT(16'hF800)) 
    start2_i_1
       (.I0(S_AXI_AWVALID),
        .I1(S_AXI_WVALID),
        .I2(S_AXI_ARVALID),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(S_AXI_ACLK),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(rst));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_microblaze_0_0,MicroBlaze,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "MicroBlaze,Vivado 2018.2.2" *) 
module ublaze_sopc_microblaze_0_0
   (Clk,
    Reset,
    Interrupt,
    Interrupt_Address,
    Interrupt_Ack,
    Instr_Addr,
    Instr,
    IFetch,
    I_AS,
    IReady,
    IWAIT,
    ICE,
    IUE,
    Data_Addr,
    Data_Read,
    Data_Write,
    D_AS,
    Read_Strobe,
    Write_Strobe,
    DReady,
    DWait,
    DCE,
    DUE,
    Byte_Enable,
    M_AXI_DP_AWADDR,
    M_AXI_DP_AWPROT,
    M_AXI_DP_AWVALID,
    M_AXI_DP_AWREADY,
    M_AXI_DP_WDATA,
    M_AXI_DP_WSTRB,
    M_AXI_DP_WVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_BRESP,
    M_AXI_DP_BVALID,
    M_AXI_DP_BREADY,
    M_AXI_DP_ARADDR,
    M_AXI_DP_ARPROT,
    M_AXI_DP_ARVALID,
    M_AXI_DP_ARREADY,
    M_AXI_DP_RDATA,
    M_AXI_DP_RRESP,
    M_AXI_DP_RVALID,
    M_AXI_DP_RREADY,
    Dbg_Clk,
    Dbg_TDI,
    Dbg_TDO,
    Dbg_Reg_En,
    Dbg_Shift,
    Dbg_Capture,
    Dbg_Update,
    Debug_Rst,
    Dbg_Disable);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLK.CLK CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLK.CLK, ASSOCIATED_BUSIF M0_AXIS:S0_AXIS:M1_AXIS:S1_AXIS:M2_AXIS:S2_AXIS:M3_AXIS:S3_AXIS:M4_AXIS:S4_AXIS:M5_AXIS:S5_AXIS:M6_AXIS:S6_AXIS:M7_AXIS:S7_AXIS:M8_AXIS:S8_AXIS:M9_AXIS:S9_AXIS:M10_AXIS:S10_AXIS:M11_AXIS:S11_AXIS:M12_AXIS:S12_AXIS:M13_AXIS:S13_AXIS:M14_AXIS:S14_AXIS:M15_AXIS:S15_AXIS:DLMB:ILMB:M_AXI_DP:M_AXI_IP:M_AXI_DC:M_AXI_IC:M_ACE_DC:M_ACE_IC:MON_DLMB:MON_ILMB:MON_AXI_DP:MON_AXI_IP:MON_AXI_DC:MON_AXI_IC:MON_ACE_DC:MON_ACE_IC, ASSOCIATED_RESET Reset, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input Clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RST.RESET RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RST.RESET, POLARITY ACTIVE_HIGH, TYPE PROCESSOR" *) input Reset;
  (* x_interface_info = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT INTERRUPT" *) (* x_interface_parameter = "XIL_INTERFACENAME INTERRUPT, SENSITIVITY LEVEL_HIGH, LOW_LATENCY 0" *) input Interrupt;
  (* x_interface_info = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ADDRESS" *) input [0:31]Interrupt_Address;
  (* x_interface_info = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ACK" *) output [0:1]Interrupt_Ack;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 ILMB ABUS" *) (* x_interface_parameter = "XIL_INTERFACENAME ILMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_ONLY" *) output [0:31]Instr_Addr;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 ILMB READDBUS" *) input [0:31]Instr;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 ILMB READSTROBE" *) output IFetch;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 ILMB ADDRSTROBE" *) output I_AS;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 ILMB READY" *) input IReady;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 ILMB WAIT" *) input IWAIT;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 ILMB CE" *) input ICE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 ILMB UE" *) input IUE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB ABUS" *) (* x_interface_parameter = "XIL_INTERFACENAME DLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE" *) output [0:31]Data_Addr;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB READDBUS" *) input [0:31]Data_Read;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB WRITEDBUS" *) output [0:31]Data_Write;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB ADDRSTROBE" *) output D_AS;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB READSTROBE" *) output Read_Strobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB WRITESTROBE" *) output Write_Strobe;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB READY" *) input DReady;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB WAIT" *) input DWait;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB CE" *) input DCE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB UE" *) input DUE;
  (* x_interface_info = "xilinx.com:interface:lmb:1.0 DLMB BE" *) output [0:3]Byte_Enable;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWADDR" *) (* x_interface_parameter = "XIL_INTERFACENAME M_AXI_DP, ID_WIDTH 0, READ_WRITE_MODE READ_WRITE, SUPPORTS_NARROW_BURST 0, HAS_BURST 0, DATA_WIDTH 32, ADDR_WIDTH 32, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, MAX_BURST_LENGTH 1, PROTOCOL AXI4LITE, FREQ_HZ 50000000, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) output [31:0]M_AXI_DP_AWADDR;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWPROT" *) output [2:0]M_AXI_DP_AWPROT;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWVALID" *) output M_AXI_DP_AWVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWREADY" *) input M_AXI_DP_AWREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP WDATA" *) output [31:0]M_AXI_DP_WDATA;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP WSTRB" *) output [3:0]M_AXI_DP_WSTRB;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP WVALID" *) output M_AXI_DP_WVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP WREADY" *) input M_AXI_DP_WREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP BRESP" *) input [1:0]M_AXI_DP_BRESP;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP BVALID" *) input M_AXI_DP_BVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP BREADY" *) output M_AXI_DP_BREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARADDR" *) output [31:0]M_AXI_DP_ARADDR;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARPROT" *) output [2:0]M_AXI_DP_ARPROT;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARVALID" *) output M_AXI_DP_ARVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARREADY" *) input M_AXI_DP_ARREADY;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP RDATA" *) input [31:0]M_AXI_DP_RDATA;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP RRESP" *) input [1:0]M_AXI_DP_RRESP;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP RVALID" *) input M_AXI_DP_RVALID;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M_AXI_DP RREADY" *) output M_AXI_DP_RREADY;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG CLK" *) input Dbg_Clk;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG TDI" *) input Dbg_TDI;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG TDO" *) output Dbg_TDO;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG REG_EN" *) input [0:7]Dbg_Reg_En;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG SHIFT" *) input Dbg_Shift;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG CAPTURE" *) input Dbg_Capture;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG UPDATE" *) input Dbg_Update;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG RST" *) input Debug_Rst;
  (* x_interface_info = "xilinx.com:interface:mbdebug:3.0 DEBUG DISABLE" *) input Dbg_Disable;

  wire [0:3]Byte_Enable;
  wire Clk;
  wire DReady;
  wire D_AS;
  wire [0:31]Data_Addr;
  wire [0:31]Data_Read;
  wire [0:31]Data_Write;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire I_AS;
  wire [0:31]Instr;
  wire [0:31]Instr_Addr;
  wire Interrupt;
  wire [31:0]M_AXI_DP_ARADDR;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_ARVALID;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_AWVALID;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire [31:0]M_AXI_DP_WDATA;
  wire M_AXI_DP_WREADY;
  wire M_AXI_DP_WVALID;
  wire Reset;
  wire Write_Strobe;
  wire NLW_U0_Config_Reset_UNCONNECTED;
  wire NLW_U0_DCE_UNCONNECTED;
  wire NLW_U0_DEBUG_ACLK_UNCONNECTED;
  wire NLW_U0_DEBUG_ARESETN_UNCONNECTED;
  wire NLW_U0_DUE_UNCONNECTED;
  wire NLW_U0_DWait_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Continue_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_UNCONNECTED;
  wire NLW_U0_Dbg_Intr_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Stop_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Clk_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Ready_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Valid_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Wakeup_UNCONNECTED;
  wire NLW_U0_Ext_BRK_UNCONNECTED;
  wire NLW_U0_Ext_NM_BRK_UNCONNECTED;
  wire NLW_U0_Hibernate_UNCONNECTED;
  wire NLW_U0_ICE_UNCONNECTED;
  wire NLW_U0_IFetch_UNCONNECTED;
  wire NLW_U0_IUE_UNCONNECTED;
  wire NLW_U0_IWAIT_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_MB_Error_UNCONNECTED;
  wire NLW_U0_MB_Halted_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ACVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CRREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RACK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WACK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ACVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CRREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RACK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WACK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WVALID_UNCONNECTED;
  wire NLW_U0_Mb_Reset_UNCONNECTED;
  wire NLW_U0_Pause_UNCONNECTED;
  wire NLW_U0_Pause_Ack_UNCONNECTED;
  wire NLW_U0_Read_Strobe_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_Scan_En_UNCONNECTED;
  wire NLW_U0_Scan_Reset_UNCONNECTED;
  wire NLW_U0_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_U0_Sleep_UNCONNECTED;
  wire NLW_U0_Suspend_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Hit_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Rdy_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Read_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Req_UNCONNECTED;
  wire NLW_U0_Trace_Data_Access_UNCONNECTED;
  wire NLW_U0_Trace_Data_Read_UNCONNECTED;
  wire NLW_U0_Trace_Data_Write_UNCONNECTED;
  wire NLW_U0_Trace_Delay_Slot_UNCONNECTED;
  wire NLW_U0_Trace_EX_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_Exception_Taken_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Hit_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Rdy_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Req_UNCONNECTED;
  wire NLW_U0_Trace_Jump_Hit_UNCONNECTED;
  wire NLW_U0_Trace_Jump_Taken_UNCONNECTED;
  wire NLW_U0_Trace_MB_Halted_UNCONNECTED;
  wire NLW_U0_Trace_MEM_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_OF_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_Reg_Write_UNCONNECTED;
  wire NLW_U0_Trace_Valid_Instr_UNCONNECTED;
  wire [0:31]NLW_U0_Data_Addr_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_Trace_Data_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_UNCONNECTED;
  wire [0:31]NLW_U0_Instr_Addr_UNCONNECTED;
  wire [0:1]NLW_U0_Interrupt_Ack_UNCONNECTED;
  wire [0:31]NLW_U0_Interrupt_Address_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Out_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Slave_In_UNCONNECTED;
  wire [31:0]NLW_U0_M0_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M10_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M11_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M12_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M13_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M14_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M15_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M1_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M2_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M3_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M4_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M5_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M6_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M7_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M8_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M9_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_ACADDR_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ACPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ACSNOOP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_BUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_RRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_RUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_WUSER_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DP_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_RRESP_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_WSTRB_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_ACADDR_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ACPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ACSNOOP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_BUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_RRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_RUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_WUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED;
  wire [0:3]NLW_U0_Non_Secure_UNCONNECTED;
  wire [255:0]NLW_U0_RAM_From_UNCONNECTED;
  wire [255:0]NLW_U0_RAM_To_UNCONNECTED;
  wire [0:1]NLW_U0_Reset_Mode_UNCONNECTED;
  wire [31:0]NLW_U0_S0_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S10_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S11_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S12_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S13_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S14_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S15_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S1_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S2_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S3_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S4_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S5_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S6_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S7_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S8_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S9_AXIS_TDATA_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Data_Address_UNCONNECTED;
  wire [0:3]NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Data_Write_Value_UNCONNECTED;
  wire [0:4]NLW_U0_Trace_Exception_Kind_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Instruction_UNCONNECTED;
  wire [0:14]NLW_U0_Trace_MSR_Reg_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_New_Reg_Value_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_PC_UNCONNECTED;
  wire [0:7]NLW_U0_Trace_PID_Reg_UNCONNECTED;
  wire [0:4]NLW_U0_Trace_Reg_Addr_UNCONNECTED;

  (* C_ADDR_TAG_BITS = "17" *) 
  (* C_ALLOW_DCACHE_WR = "1" *) 
  (* C_ALLOW_ICACHE_WR = "1" *) 
  (* C_AREA_OPTIMIZED = "0" *) 
  (* C_ASYNC_INTERRUPT = "1" *) 
  (* C_ASYNC_WAKEUP = "3" *) 
  (* C_AVOID_PRIMITIVES = "0" *) 
  (* C_BASE_VECTORS = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_BRANCH_TARGET_CACHE_SIZE = "0" *) 
  (* C_CACHE_BYTE_SIZE = "8192" *) 
  (* C_DADDR_SIZE = "32" *) 
  (* C_DATA_SIZE = "32" *) 
  (* C_DCACHE_ADDR_TAG = "17" *) 
  (* C_DCACHE_ALWAYS_USED = "0" *) 
  (* C_DCACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_DCACHE_BYTE_SIZE = "8192" *) 
  (* C_DCACHE_DATA_WIDTH = "0" *) 
  (* C_DCACHE_FORCE_TAG_LUTRAM = "0" *) 
  (* C_DCACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) 
  (* C_DCACHE_LINE_LEN = "4" *) 
  (* C_DCACHE_USE_WRITEBACK = "0" *) 
  (* C_DCACHE_VICTIMS = "0" *) 
  (* C_DEBUG_COUNTER_WIDTH = "32" *) 
  (* C_DEBUG_ENABLED = "1" *) 
  (* C_DEBUG_EVENT_COUNTERS = "5" *) 
  (* C_DEBUG_EXTERNAL_TRACE = "0" *) 
  (* C_DEBUG_INTERFACE = "0" *) 
  (* C_DEBUG_LATENCY_COUNTERS = "1" *) 
  (* C_DEBUG_PROFILE_SIZE = "0" *) 
  (* C_DEBUG_TRACE_ASYNC_RESET = "0" *) 
  (* C_DEBUG_TRACE_SIZE = "8192" *) 
  (* C_DIV_ZERO_EXCEPTION = "0" *) 
  (* C_DYNAMIC_BUS_SIZING = "0" *) 
  (* C_D_AXI = "1" *) 
  (* C_D_LMB = "1" *) 
  (* C_ECC_USE_CE_EXCEPTION = "0" *) 
  (* C_EDGE_IS_POSITIVE = "1" *) 
  (* C_ENDIANNESS = "1" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_FAULT_TOLERANT = "0" *) 
  (* C_FPU_EXCEPTION = "0" *) 
  (* C_FREQ = "50000000" *) 
  (* C_FSL_EXCEPTION = "0" *) 
  (* C_FSL_LINKS = "0" *) 
  (* C_IADDR_SIZE = "32" *) 
  (* C_ICACHE_ALWAYS_USED = "0" *) 
  (* C_ICACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_ICACHE_DATA_WIDTH = "0" *) 
  (* C_ICACHE_FORCE_TAG_LUTRAM = "0" *) 
  (* C_ICACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) 
  (* C_ICACHE_LINE_LEN = "4" *) 
  (* C_ICACHE_STREAMS = "0" *) 
  (* C_ICACHE_VICTIMS = "0" *) 
  (* C_ILL_OPCODE_EXCEPTION = "0" *) 
  (* C_IMPRECISE_EXCEPTIONS = "0" *) 
  (* C_INSTANCE = "ublaze_sopc_microblaze_0_0" *) 
  (* C_INSTR_SIZE = "32" *) 
  (* C_INTERCONNECT = "2" *) 
  (* C_INTERRUPT_IS_EDGE = "0" *) 
  (* C_I_AXI = "0" *) 
  (* C_I_LMB = "1" *) 
  (* C_LOCKSTEP_MASTER = "0" *) 
  (* C_LOCKSTEP_SLAVE = "0" *) 
  (* C_M0_AXIS_DATA_WIDTH = "32" *) 
  (* C_M10_AXIS_DATA_WIDTH = "32" *) 
  (* C_M11_AXIS_DATA_WIDTH = "32" *) 
  (* C_M12_AXIS_DATA_WIDTH = "32" *) 
  (* C_M13_AXIS_DATA_WIDTH = "32" *) 
  (* C_M14_AXIS_DATA_WIDTH = "32" *) 
  (* C_M15_AXIS_DATA_WIDTH = "32" *) 
  (* C_M1_AXIS_DATA_WIDTH = "32" *) 
  (* C_M2_AXIS_DATA_WIDTH = "32" *) 
  (* C_M3_AXIS_DATA_WIDTH = "32" *) 
  (* C_M4_AXIS_DATA_WIDTH = "32" *) 
  (* C_M5_AXIS_DATA_WIDTH = "32" *) 
  (* C_M6_AXIS_DATA_WIDTH = "32" *) 
  (* C_M7_AXIS_DATA_WIDTH = "32" *) 
  (* C_M8_AXIS_DATA_WIDTH = "32" *) 
  (* C_M9_AXIS_DATA_WIDTH = "32" *) 
  (* C_MMU_DTLB_SIZE = "4" *) 
  (* C_MMU_ITLB_SIZE = "2" *) 
  (* C_MMU_PRIVILEGED_INSTR = "0" *) 
  (* C_MMU_TLB_ACCESS = "3" *) 
  (* C_MMU_ZONES = "16" *) 
  (* C_M_AXI_DC_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DC_ARUSER_WIDTH = "5" *) 
  (* C_M_AXI_DC_AWUSER_WIDTH = "5" *) 
  (* C_M_AXI_DC_BUSER_WIDTH = "1" *) 
  (* C_M_AXI_DC_DATA_WIDTH = "32" *) 
  (* C_M_AXI_DC_EXCLUSIVE_ACCESS = "0" *) 
  (* C_M_AXI_DC_RUSER_WIDTH = "1" *) 
  (* C_M_AXI_DC_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_DC_USER_VALUE = "31" *) 
  (* C_M_AXI_DC_WUSER_WIDTH = "1" *) 
  (* C_M_AXI_DP_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DP_DATA_WIDTH = "32" *) 
  (* C_M_AXI_DP_EXCLUSIVE_ACCESS = "0" *) 
  (* C_M_AXI_DP_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_D_BUS_EXCEPTION = "0" *) 
  (* C_M_AXI_IC_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_IC_ARUSER_WIDTH = "5" *) 
  (* C_M_AXI_IC_AWUSER_WIDTH = "5" *) 
  (* C_M_AXI_IC_BUSER_WIDTH = "1" *) 
  (* C_M_AXI_IC_DATA_WIDTH = "32" *) 
  (* C_M_AXI_IC_RUSER_WIDTH = "1" *) 
  (* C_M_AXI_IC_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_IC_USER_VALUE = "31" *) 
  (* C_M_AXI_IC_WUSER_WIDTH = "1" *) 
  (* C_M_AXI_IP_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_IP_DATA_WIDTH = "32" *) 
  (* C_M_AXI_IP_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_I_BUS_EXCEPTION = "0" *) 
  (* C_NUMBER_OF_PC_BRK = "1" *) 
  (* C_NUMBER_OF_RD_ADDR_BRK = "0" *) 
  (* C_NUMBER_OF_WR_ADDR_BRK = "0" *) 
  (* C_NUM_SYNC_FF_CLK = "2" *) 
  (* C_NUM_SYNC_FF_CLK_DEBUG = "2" *) 
  (* C_NUM_SYNC_FF_CLK_IRQ = "1" *) 
  (* C_NUM_SYNC_FF_DBG_CLK = "1" *) 
  (* C_NUM_SYNC_FF_DBG_TRACE_CLK = "2" *) 
  (* C_OPCODE_0x0_ILLEGAL = "0" *) 
  (* C_OPTIMIZATION = "0" *) 
  (* C_PC_WIDTH = "32" *) 
  (* C_PIADDR_SIZE = "32" *) 
  (* C_PVR = "0" *) 
  (* C_PVR_USER1 = "8'b00000000" *) 
  (* C_PVR_USER2 = "0" *) 
  (* C_RESET_MSR = "0" *) 
  (* C_S0_AXIS_DATA_WIDTH = "32" *) 
  (* C_S10_AXIS_DATA_WIDTH = "32" *) 
  (* C_S11_AXIS_DATA_WIDTH = "32" *) 
  (* C_S12_AXIS_DATA_WIDTH = "32" *) 
  (* C_S13_AXIS_DATA_WIDTH = "32" *) 
  (* C_S14_AXIS_DATA_WIDTH = "32" *) 
  (* C_S15_AXIS_DATA_WIDTH = "32" *) 
  (* C_S1_AXIS_DATA_WIDTH = "32" *) 
  (* C_S2_AXIS_DATA_WIDTH = "32" *) 
  (* C_S3_AXIS_DATA_WIDTH = "32" *) 
  (* C_S4_AXIS_DATA_WIDTH = "32" *) 
  (* C_S5_AXIS_DATA_WIDTH = "32" *) 
  (* C_S6_AXIS_DATA_WIDTH = "32" *) 
  (* C_S7_AXIS_DATA_WIDTH = "32" *) 
  (* C_S8_AXIS_DATA_WIDTH = "32" *) 
  (* C_S9_AXIS_DATA_WIDTH = "32" *) 
  (* C_SCO = "0" *) 
  (* C_UNALIGNED_EXCEPTIONS = "0" *) 
  (* C_USE_BARREL = "0" *) 
  (* C_USE_BRANCH_TARGET_CACHE = "0" *) 
  (* C_USE_CONFIG_RESET = "0" *) 
  (* C_USE_DCACHE = "0" *) 
  (* C_USE_DIV = "0" *) 
  (* C_USE_EXTENDED_FSL_INSTR = "0" *) 
  (* C_USE_EXT_BRK = "0" *) 
  (* C_USE_EXT_NM_BRK = "0" *) 
  (* C_USE_FPU = "0" *) 
  (* C_USE_HW_MUL = "0" *) 
  (* C_USE_ICACHE = "0" *) 
  (* C_USE_INTERRUPT = "1" *) 
  (* C_USE_MMU = "0" *) 
  (* C_USE_MSR_INSTR = "0" *) 
  (* C_USE_NON_SECURE = "0" *) 
  (* C_USE_PCMP_INSTR = "0" *) 
  (* C_USE_REORDER_INSTR = "1" *) 
  (* C_USE_STACK_PROTECTION = "0" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  ublaze_sopc_microblaze_0_0__MicroBlaze U0
       (.Byte_Enable(Byte_Enable),
        .Clk(Clk),
        .Config_Reset(NLW_U0_Config_Reset_UNCONNECTED),
        .DCE(NLW_U0_DCE_UNCONNECTED),
        .DEBUG_ACLK(NLW_U0_DEBUG_ACLK_UNCONNECTED),
        .DEBUG_ARESETN(NLW_U0_DEBUG_ARESETN_UNCONNECTED),
        .DReady(DReady),
        .DUE(NLW_U0_DUE_UNCONNECTED),
        .DWait(NLW_U0_DWait_UNCONNECTED),
        .D_AS(D_AS),
        .Data_Addr({NLW_U0_Data_Addr_UNCONNECTED[0],Data_Addr[1],NLW_U0_Data_Addr_UNCONNECTED[2:16],Data_Addr[17:29],NLW_U0_Data_Addr_UNCONNECTED[30:31]}),
        .Data_Read(Data_Read),
        .Data_Write(Data_Write),
        .Dbg_ARADDR(NLW_U0_Dbg_ARADDR_UNCONNECTED[14:2]),
        .Dbg_ARREADY(NLW_U0_Dbg_ARREADY_UNCONNECTED),
        .Dbg_ARVALID(NLW_U0_Dbg_ARVALID_UNCONNECTED),
        .Dbg_AWADDR(NLW_U0_Dbg_AWADDR_UNCONNECTED[14:2]),
        .Dbg_AWREADY(NLW_U0_Dbg_AWREADY_UNCONNECTED),
        .Dbg_AWVALID(NLW_U0_Dbg_AWVALID_UNCONNECTED),
        .Dbg_BREADY(NLW_U0_Dbg_BREADY_UNCONNECTED),
        .Dbg_BRESP(NLW_U0_Dbg_BRESP_UNCONNECTED[1:0]),
        .Dbg_BVALID(NLW_U0_Dbg_BVALID_UNCONNECTED),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Continue(NLW_U0_Dbg_Continue_UNCONNECTED),
        .Dbg_Disable(NLW_U0_Dbg_Disable_UNCONNECTED),
        .Dbg_Intr(NLW_U0_Dbg_Intr_UNCONNECTED),
        .Dbg_RDATA(NLW_U0_Dbg_RDATA_UNCONNECTED[31:0]),
        .Dbg_RREADY(NLW_U0_Dbg_RREADY_UNCONNECTED),
        .Dbg_RRESP(NLW_U0_Dbg_RRESP_UNCONNECTED[1:0]),
        .Dbg_RVALID(NLW_U0_Dbg_RVALID_UNCONNECTED),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(NLW_U0_Dbg_Stop_UNCONNECTED),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trace_Clk(NLW_U0_Dbg_Trace_Clk_UNCONNECTED),
        .Dbg_Trace_Data(NLW_U0_Dbg_Trace_Data_UNCONNECTED[0:35]),
        .Dbg_Trace_Ready(NLW_U0_Dbg_Trace_Ready_UNCONNECTED),
        .Dbg_Trace_Valid(NLW_U0_Dbg_Trace_Valid_UNCONNECTED),
        .Dbg_Trig_Ack_In(NLW_U0_Dbg_Trig_Ack_In_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out(NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED[0:7]),
        .Dbg_Trig_In(NLW_U0_Dbg_Trig_In_UNCONNECTED[0:7]),
        .Dbg_Trig_Out({NLW_U0_Dbg_Trig_Out_UNCONNECTED[0],1'b0,NLW_U0_Dbg_Trig_Out_UNCONNECTED[2:7]}),
        .Dbg_Update(Dbg_Update),
        .Dbg_WDATA(NLW_U0_Dbg_WDATA_UNCONNECTED[31:0]),
        .Dbg_WREADY(NLW_U0_Dbg_WREADY_UNCONNECTED),
        .Dbg_WVALID(NLW_U0_Dbg_WVALID_UNCONNECTED),
        .Dbg_Wakeup(NLW_U0_Dbg_Wakeup_UNCONNECTED),
        .Debug_Rst(Debug_Rst),
        .Ext_BRK(NLW_U0_Ext_BRK_UNCONNECTED),
        .Ext_NM_BRK(NLW_U0_Ext_NM_BRK_UNCONNECTED),
        .Hibernate(NLW_U0_Hibernate_UNCONNECTED),
        .ICE(NLW_U0_ICE_UNCONNECTED),
        .IFetch(NLW_U0_IFetch_UNCONNECTED),
        .IReady(IReady),
        .IUE(NLW_U0_IUE_UNCONNECTED),
        .IWAIT(NLW_U0_IWAIT_UNCONNECTED),
        .I_AS(I_AS),
        .Instr(Instr),
        .Instr_Addr({NLW_U0_Instr_Addr_UNCONNECTED[0:16],Instr_Addr[17:29],NLW_U0_Instr_Addr_UNCONNECTED[30:31]}),
        .Interrupt(Interrupt),
        .Interrupt_Ack(NLW_U0_Interrupt_Ack_UNCONNECTED[0:1]),
        .Interrupt_Address(NLW_U0_Interrupt_Address_UNCONNECTED[0:31]),
        .LOCKSTEP_Master_Out(NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED[0:4095]),
        .LOCKSTEP_Out(NLW_U0_LOCKSTEP_Out_UNCONNECTED[0:4095]),
        .LOCKSTEP_Slave_In(NLW_U0_LOCKSTEP_Slave_In_UNCONNECTED[0:4095]),
        .M0_AXIS_TDATA(NLW_U0_M0_AXIS_TDATA_UNCONNECTED[31:0]),
        .M0_AXIS_TLAST(NLW_U0_M0_AXIS_TLAST_UNCONNECTED),
        .M0_AXIS_TREADY(NLW_U0_M0_AXIS_TREADY_UNCONNECTED),
        .M0_AXIS_TVALID(NLW_U0_M0_AXIS_TVALID_UNCONNECTED),
        .M10_AXIS_TDATA(NLW_U0_M10_AXIS_TDATA_UNCONNECTED[31:0]),
        .M10_AXIS_TLAST(NLW_U0_M10_AXIS_TLAST_UNCONNECTED),
        .M10_AXIS_TREADY(NLW_U0_M10_AXIS_TREADY_UNCONNECTED),
        .M10_AXIS_TVALID(NLW_U0_M10_AXIS_TVALID_UNCONNECTED),
        .M11_AXIS_TDATA(NLW_U0_M11_AXIS_TDATA_UNCONNECTED[31:0]),
        .M11_AXIS_TLAST(NLW_U0_M11_AXIS_TLAST_UNCONNECTED),
        .M11_AXIS_TREADY(NLW_U0_M11_AXIS_TREADY_UNCONNECTED),
        .M11_AXIS_TVALID(NLW_U0_M11_AXIS_TVALID_UNCONNECTED),
        .M12_AXIS_TDATA(NLW_U0_M12_AXIS_TDATA_UNCONNECTED[31:0]),
        .M12_AXIS_TLAST(NLW_U0_M12_AXIS_TLAST_UNCONNECTED),
        .M12_AXIS_TREADY(NLW_U0_M12_AXIS_TREADY_UNCONNECTED),
        .M12_AXIS_TVALID(NLW_U0_M12_AXIS_TVALID_UNCONNECTED),
        .M13_AXIS_TDATA(NLW_U0_M13_AXIS_TDATA_UNCONNECTED[31:0]),
        .M13_AXIS_TLAST(NLW_U0_M13_AXIS_TLAST_UNCONNECTED),
        .M13_AXIS_TREADY(NLW_U0_M13_AXIS_TREADY_UNCONNECTED),
        .M13_AXIS_TVALID(NLW_U0_M13_AXIS_TVALID_UNCONNECTED),
        .M14_AXIS_TDATA(NLW_U0_M14_AXIS_TDATA_UNCONNECTED[31:0]),
        .M14_AXIS_TLAST(NLW_U0_M14_AXIS_TLAST_UNCONNECTED),
        .M14_AXIS_TREADY(NLW_U0_M14_AXIS_TREADY_UNCONNECTED),
        .M14_AXIS_TVALID(NLW_U0_M14_AXIS_TVALID_UNCONNECTED),
        .M15_AXIS_TDATA(NLW_U0_M15_AXIS_TDATA_UNCONNECTED[31:0]),
        .M15_AXIS_TLAST(NLW_U0_M15_AXIS_TLAST_UNCONNECTED),
        .M15_AXIS_TREADY(NLW_U0_M15_AXIS_TREADY_UNCONNECTED),
        .M15_AXIS_TVALID(NLW_U0_M15_AXIS_TVALID_UNCONNECTED),
        .M1_AXIS_TDATA(NLW_U0_M1_AXIS_TDATA_UNCONNECTED[31:0]),
        .M1_AXIS_TLAST(NLW_U0_M1_AXIS_TLAST_UNCONNECTED),
        .M1_AXIS_TREADY(NLW_U0_M1_AXIS_TREADY_UNCONNECTED),
        .M1_AXIS_TVALID(NLW_U0_M1_AXIS_TVALID_UNCONNECTED),
        .M2_AXIS_TDATA(NLW_U0_M2_AXIS_TDATA_UNCONNECTED[31:0]),
        .M2_AXIS_TLAST(NLW_U0_M2_AXIS_TLAST_UNCONNECTED),
        .M2_AXIS_TREADY(NLW_U0_M2_AXIS_TREADY_UNCONNECTED),
        .M2_AXIS_TVALID(NLW_U0_M2_AXIS_TVALID_UNCONNECTED),
        .M3_AXIS_TDATA(NLW_U0_M3_AXIS_TDATA_UNCONNECTED[31:0]),
        .M3_AXIS_TLAST(NLW_U0_M3_AXIS_TLAST_UNCONNECTED),
        .M3_AXIS_TREADY(NLW_U0_M3_AXIS_TREADY_UNCONNECTED),
        .M3_AXIS_TVALID(NLW_U0_M3_AXIS_TVALID_UNCONNECTED),
        .M4_AXIS_TDATA(NLW_U0_M4_AXIS_TDATA_UNCONNECTED[31:0]),
        .M4_AXIS_TLAST(NLW_U0_M4_AXIS_TLAST_UNCONNECTED),
        .M4_AXIS_TREADY(NLW_U0_M4_AXIS_TREADY_UNCONNECTED),
        .M4_AXIS_TVALID(NLW_U0_M4_AXIS_TVALID_UNCONNECTED),
        .M5_AXIS_TDATA(NLW_U0_M5_AXIS_TDATA_UNCONNECTED[31:0]),
        .M5_AXIS_TLAST(NLW_U0_M5_AXIS_TLAST_UNCONNECTED),
        .M5_AXIS_TREADY(NLW_U0_M5_AXIS_TREADY_UNCONNECTED),
        .M5_AXIS_TVALID(NLW_U0_M5_AXIS_TVALID_UNCONNECTED),
        .M6_AXIS_TDATA(NLW_U0_M6_AXIS_TDATA_UNCONNECTED[31:0]),
        .M6_AXIS_TLAST(NLW_U0_M6_AXIS_TLAST_UNCONNECTED),
        .M6_AXIS_TREADY(NLW_U0_M6_AXIS_TREADY_UNCONNECTED),
        .M6_AXIS_TVALID(NLW_U0_M6_AXIS_TVALID_UNCONNECTED),
        .M7_AXIS_TDATA(NLW_U0_M7_AXIS_TDATA_UNCONNECTED[31:0]),
        .M7_AXIS_TLAST(NLW_U0_M7_AXIS_TLAST_UNCONNECTED),
        .M7_AXIS_TREADY(NLW_U0_M7_AXIS_TREADY_UNCONNECTED),
        .M7_AXIS_TVALID(NLW_U0_M7_AXIS_TVALID_UNCONNECTED),
        .M8_AXIS_TDATA(NLW_U0_M8_AXIS_TDATA_UNCONNECTED[31:0]),
        .M8_AXIS_TLAST(NLW_U0_M8_AXIS_TLAST_UNCONNECTED),
        .M8_AXIS_TREADY(NLW_U0_M8_AXIS_TREADY_UNCONNECTED),
        .M8_AXIS_TVALID(NLW_U0_M8_AXIS_TVALID_UNCONNECTED),
        .M9_AXIS_TDATA(NLW_U0_M9_AXIS_TDATA_UNCONNECTED[31:0]),
        .M9_AXIS_TLAST(NLW_U0_M9_AXIS_TLAST_UNCONNECTED),
        .M9_AXIS_TREADY(NLW_U0_M9_AXIS_TREADY_UNCONNECTED),
        .M9_AXIS_TVALID(NLW_U0_M9_AXIS_TVALID_UNCONNECTED),
        .MB_Error(NLW_U0_MB_Error_UNCONNECTED),
        .MB_Halted(NLW_U0_MB_Halted_UNCONNECTED),
        .M_AXI_DC_ACADDR(NLW_U0_M_AXI_DC_ACADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_ACPROT(NLW_U0_M_AXI_DC_ACPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_ACREADY(NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED),
        .M_AXI_DC_ACSNOOP(NLW_U0_M_AXI_DC_ACSNOOP_UNCONNECTED[3:0]),
        .M_AXI_DC_ACVALID(NLW_U0_M_AXI_DC_ACVALID_UNCONNECTED),
        .M_AXI_DC_ARADDR(NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_ARBAR(NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED[1:0]),
        .M_AXI_DC_ARBURST(NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_DC_ARCACHE(NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_DC_ARDOMAIN(NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_DC_ARID(NLW_U0_M_AXI_DC_ARID_UNCONNECTED[0]),
        .M_AXI_DC_ARLEN(NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_DC_ARLOCK(NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED),
        .M_AXI_DC_ARPROT(NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_ARQOS(NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_DC_ARREADY(NLW_U0_M_AXI_DC_ARREADY_UNCONNECTED),
        .M_AXI_DC_ARSIZE(NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_DC_ARSNOOP(NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED[3:0]),
        .M_AXI_DC_ARUSER(NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED[4:0]),
        .M_AXI_DC_ARVALID(NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED),
        .M_AXI_DC_AWADDR(NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_AWBAR(NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED[1:0]),
        .M_AXI_DC_AWBURST(NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_DC_AWCACHE(NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_DC_AWDOMAIN(NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_DC_AWID(NLW_U0_M_AXI_DC_AWID_UNCONNECTED[0]),
        .M_AXI_DC_AWLEN(NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_DC_AWLOCK(NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED),
        .M_AXI_DC_AWPROT(NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_AWQOS(NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_DC_AWREADY(NLW_U0_M_AXI_DC_AWREADY_UNCONNECTED),
        .M_AXI_DC_AWSIZE(NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_DC_AWSNOOP(NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED[2:0]),
        .M_AXI_DC_AWUSER(NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED[4:0]),
        .M_AXI_DC_AWVALID(NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED),
        .M_AXI_DC_BID(NLW_U0_M_AXI_DC_BID_UNCONNECTED[0]),
        .M_AXI_DC_BREADY(NLW_U0_M_AXI_DC_BREADY_UNCONNECTED),
        .M_AXI_DC_BRESP(NLW_U0_M_AXI_DC_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DC_BUSER(NLW_U0_M_AXI_DC_BUSER_UNCONNECTED[0]),
        .M_AXI_DC_BVALID(NLW_U0_M_AXI_DC_BVALID_UNCONNECTED),
        .M_AXI_DC_CDDATA(NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_CDLAST(NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED),
        .M_AXI_DC_CDREADY(NLW_U0_M_AXI_DC_CDREADY_UNCONNECTED),
        .M_AXI_DC_CDVALID(NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED),
        .M_AXI_DC_CRREADY(NLW_U0_M_AXI_DC_CRREADY_UNCONNECTED),
        .M_AXI_DC_CRRESP(NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED[4:0]),
        .M_AXI_DC_CRVALID(NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED),
        .M_AXI_DC_RACK(NLW_U0_M_AXI_DC_RACK_UNCONNECTED),
        .M_AXI_DC_RDATA(NLW_U0_M_AXI_DC_RDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_RID(NLW_U0_M_AXI_DC_RID_UNCONNECTED[0]),
        .M_AXI_DC_RLAST(NLW_U0_M_AXI_DC_RLAST_UNCONNECTED),
        .M_AXI_DC_RREADY(NLW_U0_M_AXI_DC_RREADY_UNCONNECTED),
        .M_AXI_DC_RRESP(NLW_U0_M_AXI_DC_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DC_RUSER(NLW_U0_M_AXI_DC_RUSER_UNCONNECTED[0]),
        .M_AXI_DC_RVALID(NLW_U0_M_AXI_DC_RVALID_UNCONNECTED),
        .M_AXI_DC_WACK(NLW_U0_M_AXI_DC_WACK_UNCONNECTED),
        .M_AXI_DC_WDATA(NLW_U0_M_AXI_DC_WDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_WLAST(NLW_U0_M_AXI_DC_WLAST_UNCONNECTED),
        .M_AXI_DC_WREADY(NLW_U0_M_AXI_DC_WREADY_UNCONNECTED),
        .M_AXI_DC_WSTRB(NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DC_WUSER(NLW_U0_M_AXI_DC_WUSER_UNCONNECTED[0]),
        .M_AXI_DC_WVALID(NLW_U0_M_AXI_DC_WVALID_UNCONNECTED),
        .M_AXI_DP_ARADDR(M_AXI_DP_ARADDR),
        .M_AXI_DP_ARBURST(NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_DP_ARCACHE(NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_DP_ARID(NLW_U0_M_AXI_DP_ARID_UNCONNECTED[0]),
        .M_AXI_DP_ARLEN(NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_DP_ARLOCK(NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED),
        .M_AXI_DP_ARPROT(NLW_U0_M_AXI_DP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_ARQOS(NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_ARSIZE(NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_DP_ARVALID(M_AXI_DP_ARVALID),
        .M_AXI_DP_AWADDR(NLW_U0_M_AXI_DP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DP_AWBURST(NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_DP_AWCACHE(NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_DP_AWID(NLW_U0_M_AXI_DP_AWID_UNCONNECTED[0]),
        .M_AXI_DP_AWLEN(NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_DP_AWLOCK(NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED),
        .M_AXI_DP_AWPROT(NLW_U0_M_AXI_DP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_AWQOS(NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_AWSIZE(NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_DP_AWVALID(M_AXI_DP_AWVALID),
        .M_AXI_DP_BID(NLW_U0_M_AXI_DP_BID_UNCONNECTED[0]),
        .M_AXI_DP_BREADY(NLW_U0_M_AXI_DP_BREADY_UNCONNECTED),
        .M_AXI_DP_BRESP(NLW_U0_M_AXI_DP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RID(NLW_U0_M_AXI_DP_RID_UNCONNECTED[0]),
        .M_AXI_DP_RLAST(NLW_U0_M_AXI_DP_RLAST_UNCONNECTED),
        .M_AXI_DP_RREADY(NLW_U0_M_AXI_DP_RREADY_UNCONNECTED),
        .M_AXI_DP_RRESP(NLW_U0_M_AXI_DP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WDATA(M_AXI_DP_WDATA),
        .M_AXI_DP_WLAST(NLW_U0_M_AXI_DP_WLAST_UNCONNECTED),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .M_AXI_DP_WSTRB(NLW_U0_M_AXI_DP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DP_WVALID(M_AXI_DP_WVALID),
        .M_AXI_IC_ACADDR(NLW_U0_M_AXI_IC_ACADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_ACPROT(NLW_U0_M_AXI_IC_ACPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_ACREADY(NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED),
        .M_AXI_IC_ACSNOOP(NLW_U0_M_AXI_IC_ACSNOOP_UNCONNECTED[3:0]),
        .M_AXI_IC_ACVALID(NLW_U0_M_AXI_IC_ACVALID_UNCONNECTED),
        .M_AXI_IC_ARADDR(NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_ARBAR(NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED[1:0]),
        .M_AXI_IC_ARBURST(NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_IC_ARCACHE(NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_IC_ARDOMAIN(NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_IC_ARID(NLW_U0_M_AXI_IC_ARID_UNCONNECTED[0]),
        .M_AXI_IC_ARLEN(NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_IC_ARLOCK(NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED),
        .M_AXI_IC_ARPROT(NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_ARQOS(NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_IC_ARREADY(NLW_U0_M_AXI_IC_ARREADY_UNCONNECTED),
        .M_AXI_IC_ARSIZE(NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_IC_ARSNOOP(NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED[3:0]),
        .M_AXI_IC_ARUSER(NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED[4:0]),
        .M_AXI_IC_ARVALID(NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED),
        .M_AXI_IC_AWADDR(NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_AWBAR(NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED[1:0]),
        .M_AXI_IC_AWBURST(NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_IC_AWCACHE(NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_IC_AWDOMAIN(NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_IC_AWID(NLW_U0_M_AXI_IC_AWID_UNCONNECTED[0]),
        .M_AXI_IC_AWLEN(NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_IC_AWLOCK(NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED),
        .M_AXI_IC_AWPROT(NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_AWQOS(NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_IC_AWREADY(NLW_U0_M_AXI_IC_AWREADY_UNCONNECTED),
        .M_AXI_IC_AWSIZE(NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_IC_AWSNOOP(NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED[2:0]),
        .M_AXI_IC_AWUSER(NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED[4:0]),
        .M_AXI_IC_AWVALID(NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED),
        .M_AXI_IC_BID(NLW_U0_M_AXI_IC_BID_UNCONNECTED[0]),
        .M_AXI_IC_BREADY(NLW_U0_M_AXI_IC_BREADY_UNCONNECTED),
        .M_AXI_IC_BRESP(NLW_U0_M_AXI_IC_BRESP_UNCONNECTED[1:0]),
        .M_AXI_IC_BUSER(NLW_U0_M_AXI_IC_BUSER_UNCONNECTED[0]),
        .M_AXI_IC_BVALID(NLW_U0_M_AXI_IC_BVALID_UNCONNECTED),
        .M_AXI_IC_CDDATA(NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_CDLAST(NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED),
        .M_AXI_IC_CDREADY(NLW_U0_M_AXI_IC_CDREADY_UNCONNECTED),
        .M_AXI_IC_CDVALID(NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED),
        .M_AXI_IC_CRREADY(NLW_U0_M_AXI_IC_CRREADY_UNCONNECTED),
        .M_AXI_IC_CRRESP(NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED[4:0]),
        .M_AXI_IC_CRVALID(NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED),
        .M_AXI_IC_RACK(NLW_U0_M_AXI_IC_RACK_UNCONNECTED),
        .M_AXI_IC_RDATA(NLW_U0_M_AXI_IC_RDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_RID(NLW_U0_M_AXI_IC_RID_UNCONNECTED[0]),
        .M_AXI_IC_RLAST(NLW_U0_M_AXI_IC_RLAST_UNCONNECTED),
        .M_AXI_IC_RREADY(NLW_U0_M_AXI_IC_RREADY_UNCONNECTED),
        .M_AXI_IC_RRESP(NLW_U0_M_AXI_IC_RRESP_UNCONNECTED[1:0]),
        .M_AXI_IC_RUSER(NLW_U0_M_AXI_IC_RUSER_UNCONNECTED[0]),
        .M_AXI_IC_RVALID(NLW_U0_M_AXI_IC_RVALID_UNCONNECTED),
        .M_AXI_IC_WACK(NLW_U0_M_AXI_IC_WACK_UNCONNECTED),
        .M_AXI_IC_WDATA(NLW_U0_M_AXI_IC_WDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_WLAST(NLW_U0_M_AXI_IC_WLAST_UNCONNECTED),
        .M_AXI_IC_WREADY(NLW_U0_M_AXI_IC_WREADY_UNCONNECTED),
        .M_AXI_IC_WSTRB(NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_IC_WUSER(NLW_U0_M_AXI_IC_WUSER_UNCONNECTED[0]),
        .M_AXI_IC_WVALID(NLW_U0_M_AXI_IC_WVALID_UNCONNECTED),
        .M_AXI_IP_ARADDR(NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_IP_ARBURST(NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_IP_ARCACHE(NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_IP_ARID(NLW_U0_M_AXI_IP_ARID_UNCONNECTED[0]),
        .M_AXI_IP_ARLEN(NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_IP_ARLOCK(NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED),
        .M_AXI_IP_ARPROT(NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_IP_ARQOS(NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_IP_ARREADY(NLW_U0_M_AXI_IP_ARREADY_UNCONNECTED),
        .M_AXI_IP_ARSIZE(NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_IP_ARVALID(NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED),
        .M_AXI_IP_AWADDR(NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_IP_AWBURST(NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_IP_AWCACHE(NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_IP_AWID(NLW_U0_M_AXI_IP_AWID_UNCONNECTED[0]),
        .M_AXI_IP_AWLEN(NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_IP_AWLOCK(NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED),
        .M_AXI_IP_AWPROT(NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_IP_AWQOS(NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_IP_AWREADY(NLW_U0_M_AXI_IP_AWREADY_UNCONNECTED),
        .M_AXI_IP_AWSIZE(NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_IP_AWVALID(NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED),
        .M_AXI_IP_BID(NLW_U0_M_AXI_IP_BID_UNCONNECTED[0]),
        .M_AXI_IP_BREADY(NLW_U0_M_AXI_IP_BREADY_UNCONNECTED),
        .M_AXI_IP_BRESP(NLW_U0_M_AXI_IP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_IP_BVALID(NLW_U0_M_AXI_IP_BVALID_UNCONNECTED),
        .M_AXI_IP_RDATA(NLW_U0_M_AXI_IP_RDATA_UNCONNECTED[31:0]),
        .M_AXI_IP_RID(NLW_U0_M_AXI_IP_RID_UNCONNECTED[0]),
        .M_AXI_IP_RLAST(NLW_U0_M_AXI_IP_RLAST_UNCONNECTED),
        .M_AXI_IP_RREADY(NLW_U0_M_AXI_IP_RREADY_UNCONNECTED),
        .M_AXI_IP_RRESP(NLW_U0_M_AXI_IP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_IP_RVALID(NLW_U0_M_AXI_IP_RVALID_UNCONNECTED),
        .M_AXI_IP_WDATA(NLW_U0_M_AXI_IP_WDATA_UNCONNECTED[31:0]),
        .M_AXI_IP_WLAST(NLW_U0_M_AXI_IP_WLAST_UNCONNECTED),
        .M_AXI_IP_WREADY(NLW_U0_M_AXI_IP_WREADY_UNCONNECTED),
        .M_AXI_IP_WSTRB(NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_IP_WVALID(NLW_U0_M_AXI_IP_WVALID_UNCONNECTED),
        .Mb_Reset(NLW_U0_Mb_Reset_UNCONNECTED),
        .Non_Secure(NLW_U0_Non_Secure_UNCONNECTED[0:3]),
        .Pause(NLW_U0_Pause_UNCONNECTED),
        .Pause_Ack(NLW_U0_Pause_Ack_UNCONNECTED),
        .RAM_From(NLW_U0_RAM_From_UNCONNECTED[255:0]),
        .RAM_To(NLW_U0_RAM_To_UNCONNECTED[255:0]),
        .Read_Strobe(NLW_U0_Read_Strobe_UNCONNECTED),
        .Reset(Reset),
        .Reset_Mode(NLW_U0_Reset_Mode_UNCONNECTED[0:1]),
        .S0_AXIS_TDATA(NLW_U0_S0_AXIS_TDATA_UNCONNECTED[31:0]),
        .S0_AXIS_TLAST(NLW_U0_S0_AXIS_TLAST_UNCONNECTED),
        .S0_AXIS_TREADY(NLW_U0_S0_AXIS_TREADY_UNCONNECTED),
        .S0_AXIS_TVALID(NLW_U0_S0_AXIS_TVALID_UNCONNECTED),
        .S10_AXIS_TDATA(NLW_U0_S10_AXIS_TDATA_UNCONNECTED[31:0]),
        .S10_AXIS_TLAST(NLW_U0_S10_AXIS_TLAST_UNCONNECTED),
        .S10_AXIS_TREADY(NLW_U0_S10_AXIS_TREADY_UNCONNECTED),
        .S10_AXIS_TVALID(NLW_U0_S10_AXIS_TVALID_UNCONNECTED),
        .S11_AXIS_TDATA(NLW_U0_S11_AXIS_TDATA_UNCONNECTED[31:0]),
        .S11_AXIS_TLAST(NLW_U0_S11_AXIS_TLAST_UNCONNECTED),
        .S11_AXIS_TREADY(NLW_U0_S11_AXIS_TREADY_UNCONNECTED),
        .S11_AXIS_TVALID(NLW_U0_S11_AXIS_TVALID_UNCONNECTED),
        .S12_AXIS_TDATA(NLW_U0_S12_AXIS_TDATA_UNCONNECTED[31:0]),
        .S12_AXIS_TLAST(NLW_U0_S12_AXIS_TLAST_UNCONNECTED),
        .S12_AXIS_TREADY(NLW_U0_S12_AXIS_TREADY_UNCONNECTED),
        .S12_AXIS_TVALID(NLW_U0_S12_AXIS_TVALID_UNCONNECTED),
        .S13_AXIS_TDATA(NLW_U0_S13_AXIS_TDATA_UNCONNECTED[31:0]),
        .S13_AXIS_TLAST(NLW_U0_S13_AXIS_TLAST_UNCONNECTED),
        .S13_AXIS_TREADY(NLW_U0_S13_AXIS_TREADY_UNCONNECTED),
        .S13_AXIS_TVALID(NLW_U0_S13_AXIS_TVALID_UNCONNECTED),
        .S14_AXIS_TDATA(NLW_U0_S14_AXIS_TDATA_UNCONNECTED[31:0]),
        .S14_AXIS_TLAST(NLW_U0_S14_AXIS_TLAST_UNCONNECTED),
        .S14_AXIS_TREADY(NLW_U0_S14_AXIS_TREADY_UNCONNECTED),
        .S14_AXIS_TVALID(NLW_U0_S14_AXIS_TVALID_UNCONNECTED),
        .S15_AXIS_TDATA(NLW_U0_S15_AXIS_TDATA_UNCONNECTED[31:0]),
        .S15_AXIS_TLAST(NLW_U0_S15_AXIS_TLAST_UNCONNECTED),
        .S15_AXIS_TREADY(NLW_U0_S15_AXIS_TREADY_UNCONNECTED),
        .S15_AXIS_TVALID(NLW_U0_S15_AXIS_TVALID_UNCONNECTED),
        .S1_AXIS_TDATA(NLW_U0_S1_AXIS_TDATA_UNCONNECTED[31:0]),
        .S1_AXIS_TLAST(NLW_U0_S1_AXIS_TLAST_UNCONNECTED),
        .S1_AXIS_TREADY(NLW_U0_S1_AXIS_TREADY_UNCONNECTED),
        .S1_AXIS_TVALID(NLW_U0_S1_AXIS_TVALID_UNCONNECTED),
        .S2_AXIS_TDATA(NLW_U0_S2_AXIS_TDATA_UNCONNECTED[31:0]),
        .S2_AXIS_TLAST(NLW_U0_S2_AXIS_TLAST_UNCONNECTED),
        .S2_AXIS_TREADY(NLW_U0_S2_AXIS_TREADY_UNCONNECTED),
        .S2_AXIS_TVALID(NLW_U0_S2_AXIS_TVALID_UNCONNECTED),
        .S3_AXIS_TDATA(NLW_U0_S3_AXIS_TDATA_UNCONNECTED[31:0]),
        .S3_AXIS_TLAST(NLW_U0_S3_AXIS_TLAST_UNCONNECTED),
        .S3_AXIS_TREADY(NLW_U0_S3_AXIS_TREADY_UNCONNECTED),
        .S3_AXIS_TVALID(NLW_U0_S3_AXIS_TVALID_UNCONNECTED),
        .S4_AXIS_TDATA(NLW_U0_S4_AXIS_TDATA_UNCONNECTED[31:0]),
        .S4_AXIS_TLAST(NLW_U0_S4_AXIS_TLAST_UNCONNECTED),
        .S4_AXIS_TREADY(NLW_U0_S4_AXIS_TREADY_UNCONNECTED),
        .S4_AXIS_TVALID(NLW_U0_S4_AXIS_TVALID_UNCONNECTED),
        .S5_AXIS_TDATA(NLW_U0_S5_AXIS_TDATA_UNCONNECTED[31:0]),
        .S5_AXIS_TLAST(NLW_U0_S5_AXIS_TLAST_UNCONNECTED),
        .S5_AXIS_TREADY(NLW_U0_S5_AXIS_TREADY_UNCONNECTED),
        .S5_AXIS_TVALID(NLW_U0_S5_AXIS_TVALID_UNCONNECTED),
        .S6_AXIS_TDATA(NLW_U0_S6_AXIS_TDATA_UNCONNECTED[31:0]),
        .S6_AXIS_TLAST(NLW_U0_S6_AXIS_TLAST_UNCONNECTED),
        .S6_AXIS_TREADY(NLW_U0_S6_AXIS_TREADY_UNCONNECTED),
        .S6_AXIS_TVALID(NLW_U0_S6_AXIS_TVALID_UNCONNECTED),
        .S7_AXIS_TDATA(NLW_U0_S7_AXIS_TDATA_UNCONNECTED[31:0]),
        .S7_AXIS_TLAST(NLW_U0_S7_AXIS_TLAST_UNCONNECTED),
        .S7_AXIS_TREADY(NLW_U0_S7_AXIS_TREADY_UNCONNECTED),
        .S7_AXIS_TVALID(NLW_U0_S7_AXIS_TVALID_UNCONNECTED),
        .S8_AXIS_TDATA(NLW_U0_S8_AXIS_TDATA_UNCONNECTED[31:0]),
        .S8_AXIS_TLAST(NLW_U0_S8_AXIS_TLAST_UNCONNECTED),
        .S8_AXIS_TREADY(NLW_U0_S8_AXIS_TREADY_UNCONNECTED),
        .S8_AXIS_TVALID(NLW_U0_S8_AXIS_TVALID_UNCONNECTED),
        .S9_AXIS_TDATA(NLW_U0_S9_AXIS_TDATA_UNCONNECTED[31:0]),
        .S9_AXIS_TLAST(NLW_U0_S9_AXIS_TLAST_UNCONNECTED),
        .S9_AXIS_TREADY(NLW_U0_S9_AXIS_TREADY_UNCONNECTED),
        .S9_AXIS_TVALID(NLW_U0_S9_AXIS_TVALID_UNCONNECTED),
        .Scan_En(NLW_U0_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_U0_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_U0_Scan_Reset_Sel_UNCONNECTED),
        .Sleep(NLW_U0_Sleep_UNCONNECTED),
        .Suspend(NLW_U0_Suspend_UNCONNECTED),
        .Trace_DCache_Hit(NLW_U0_Trace_DCache_Hit_UNCONNECTED),
        .Trace_DCache_Rdy(NLW_U0_Trace_DCache_Rdy_UNCONNECTED),
        .Trace_DCache_Read(NLW_U0_Trace_DCache_Read_UNCONNECTED),
        .Trace_DCache_Req(NLW_U0_Trace_DCache_Req_UNCONNECTED),
        .Trace_Data_Access(NLW_U0_Trace_Data_Access_UNCONNECTED),
        .Trace_Data_Address(NLW_U0_Trace_Data_Address_UNCONNECTED[0:31]),
        .Trace_Data_Byte_Enable(NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED[0:3]),
        .Trace_Data_Read(NLW_U0_Trace_Data_Read_UNCONNECTED),
        .Trace_Data_Write(NLW_U0_Trace_Data_Write_UNCONNECTED),
        .Trace_Data_Write_Value(NLW_U0_Trace_Data_Write_Value_UNCONNECTED[0:31]),
        .Trace_Delay_Slot(NLW_U0_Trace_Delay_Slot_UNCONNECTED),
        .Trace_EX_PipeRun(NLW_U0_Trace_EX_PipeRun_UNCONNECTED),
        .Trace_Exception_Kind(NLW_U0_Trace_Exception_Kind_UNCONNECTED[0:4]),
        .Trace_Exception_Taken(NLW_U0_Trace_Exception_Taken_UNCONNECTED),
        .Trace_ICache_Hit(NLW_U0_Trace_ICache_Hit_UNCONNECTED),
        .Trace_ICache_Rdy(NLW_U0_Trace_ICache_Rdy_UNCONNECTED),
        .Trace_ICache_Req(NLW_U0_Trace_ICache_Req_UNCONNECTED),
        .Trace_Instruction(NLW_U0_Trace_Instruction_UNCONNECTED[0:31]),
        .Trace_Jump_Hit(NLW_U0_Trace_Jump_Hit_UNCONNECTED),
        .Trace_Jump_Taken(NLW_U0_Trace_Jump_Taken_UNCONNECTED),
        .Trace_MB_Halted(NLW_U0_Trace_MB_Halted_UNCONNECTED),
        .Trace_MEM_PipeRun(NLW_U0_Trace_MEM_PipeRun_UNCONNECTED),
        .Trace_MSR_Reg(NLW_U0_Trace_MSR_Reg_UNCONNECTED[0:14]),
        .Trace_New_Reg_Value(NLW_U0_Trace_New_Reg_Value_UNCONNECTED[0:31]),
        .Trace_OF_PipeRun(NLW_U0_Trace_OF_PipeRun_UNCONNECTED),
        .Trace_PC(NLW_U0_Trace_PC_UNCONNECTED[0:31]),
        .Trace_PID_Reg(NLW_U0_Trace_PID_Reg_UNCONNECTED[0:7]),
        .Trace_Reg_Addr(NLW_U0_Trace_Reg_Addr_UNCONNECTED[0:4]),
        .Trace_Reg_Write(NLW_U0_Trace_Reg_Write_UNCONNECTED),
        .Trace_Valid_Instr(NLW_U0_Trace_Valid_Instr_UNCONNECTED),
        .Wakeup({1'b0,1'b0}),
        .Write_Strobe(Write_Strobe));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_proc_sys_reset_0_0,proc_sys_reset,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "proc_sys_reset,Vivado 2018.2.2" *) 
module ublaze_sopc_proc_sys_reset_0_0
   (slowest_sync_clk,
    ext_reset_in,
    aux_reset_in,
    mb_debug_sys_rst,
    dcm_locked,
    mb_reset,
    bus_struct_reset,
    peripheral_reset,
    interconnect_aresetn,
    peripheral_aresetn);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 clock CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME clock, ASSOCIATED_RESET mb_reset:bus_struct_reset:interconnect_aresetn:peripheral_aresetn:peripheral_reset, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1" *) input slowest_sync_clk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 ext_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME ext_reset, BOARD.ASSOCIATED_PARAM RESET_BOARD_INTERFACE, POLARITY ACTIVE_LOW" *) input ext_reset_in;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 aux_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME aux_reset, POLARITY ACTIVE_LOW" *) input aux_reset_in;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 dbg_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME dbg_reset, POLARITY ACTIVE_HIGH" *) input mb_debug_sys_rst;
  input dcm_locked;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 mb_rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME mb_rst, POLARITY ACTIVE_HIGH, TYPE PROCESSOR" *) output mb_reset;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 bus_struct_reset RST" *) (* x_interface_parameter = "XIL_INTERFACENAME bus_struct_reset, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT" *) output [0:0]bus_struct_reset;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 peripheral_high_rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME peripheral_high_rst, POLARITY ACTIVE_HIGH, TYPE PERIPHERAL" *) output [0:0]peripheral_reset;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 interconnect_low_rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME interconnect_low_rst, POLARITY ACTIVE_LOW, TYPE INTERCONNECT" *) output [0:0]interconnect_aresetn;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 peripheral_low_rst RST" *) (* x_interface_parameter = "XIL_INTERFACENAME peripheral_low_rst, POLARITY ACTIVE_LOW, TYPE PERIPHERAL" *) output [0:0]peripheral_aresetn;

  wire [0:0]bus_struct_reset;
  wire dcm_locked;
  wire ext_reset_in;
  wire [0:0]interconnect_aresetn;
  wire mb_reset;
  wire [0:0]peripheral_aresetn;
  wire slowest_sync_clk;
  wire NLW_U0_aux_reset_in_UNCONNECTED;
  wire NLW_U0_mb_debug_sys_rst_UNCONNECTED;
  wire [0:0]NLW_U0_peripheral_reset_UNCONNECTED;

  (* C_AUX_RESET_HIGH = "1'b0" *) 
  (* C_AUX_RST_WIDTH = "4" *) 
  (* C_EXT_RESET_HIGH = "1'b0" *) 
  (* C_EXT_RST_WIDTH = "4" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_NUM_BUS_RST = "1" *) 
  (* C_NUM_INTERCONNECT_ARESETN = "1" *) 
  (* C_NUM_PERP_ARESETN = "1" *) 
  (* C_NUM_PERP_RST = "1" *) 
  ublaze_sopc_proc_sys_reset_0_0__proc_sys_reset U0
       (.aux_reset_in(NLW_U0_aux_reset_in_UNCONNECTED),
        .bus_struct_reset(bus_struct_reset),
        .dcm_locked(dcm_locked),
        .ext_reset_in(ext_reset_in),
        .interconnect_aresetn(interconnect_aresetn),
        .mb_debug_sys_rst(NLW_U0_mb_debug_sys_rst_UNCONNECTED),
        .mb_reset(mb_reset),
        .peripheral_aresetn(peripheral_aresetn),
        .peripheral_reset(NLW_U0_peripheral_reset_UNCONNECTED[0]),
        .slowest_sync_clk(slowest_sync_clk));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module ublaze_sopc_proc_sys_reset_0_0__cdc_sync
   (lpf_asr_reg,
    scndry_out,
    lpf_asr,
    p_1_in,
    p_2_in,
    asr_lpf,
    aux_reset_in,
    slowest_sync_clk);
  output lpf_asr_reg;
  output scndry_out;
  input lpf_asr;
  input p_1_in;
  input p_2_in;
  input [0:0]asr_lpf;
  input aux_reset_in;
  input slowest_sync_clk;

  wire [0:0]asr_lpf;
  wire lpf_asr;
  wire lpf_asr_reg;
  wire p_1_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire slowest_sync_clk;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  (* \PinAttr:I2:HOLD_DETOUR  = "142" *) 
  LUT5 #(
    .INIT(32'hEAAAAAA8)) 
    lpf_asr_i_1
       (.I0(lpf_asr),
        .I1(p_1_in),
        .I2(p_2_in),
        .I3(scndry_out),
        .I4(asr_lpf),
        .O(lpf_asr_reg));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module ublaze_sopc_proc_sys_reset_0_0__cdc_sync_0
   (lpf_exr_reg,
    scndry_out,
    lpf_exr,
    p_3_out,
    mb_debug_sys_rst,
    ext_reset_in,
    slowest_sync_clk);
  output lpf_exr_reg;
  output scndry_out;
  input lpf_exr;
  input [2:0]p_3_out;
  input mb_debug_sys_rst;
  input ext_reset_in;
  input slowest_sync_clk;

  wire exr_d1;
  wire ext_reset_in;
  wire lpf_exr;
  wire lpf_exr_reg;
  wire [2:0]p_3_out;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire slowest_sync_clk;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(exr_d1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1 
       (.I0(ext_reset_in),
        .O(exr_d1));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEAAAAAA8)) 
    lpf_exr_i_1
       (.I0(lpf_exr),
        .I1(p_3_out[1]),
        .I2(p_3_out[2]),
        .I3(scndry_out),
        .I4(p_3_out[0]),
        .O(lpf_exr_reg));
endmodule

(* ORIG_REF_NAME = "lpf" *) 
module ublaze_sopc_proc_sys_reset_0_0__lpf
   (lpf_int,
    slowest_sync_clk,
    dcm_locked,
    mb_debug_sys_rst,
    ext_reset_in,
    aux_reset_in);
  output lpf_int;
  input slowest_sync_clk;
  input dcm_locked;
  input mb_debug_sys_rst;
  input ext_reset_in;
  input aux_reset_in;

  wire \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ;
  wire \ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ;
  wire Q;
  wire [0:0]asr_lpf;
  wire dcm_locked;
  wire ext_reset_in;
  wire lpf_asr;
  wire lpf_exr;
  wire lpf_int;
  wire lpf_int0__0;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in1_in;
  wire [3:0]p_3_out;
  wire slowest_sync_clk;
  wire \NLW_ACTIVE_LOW_AUX.ACT_LO_AUX_aux_reset_in_UNCONNECTED ;
  wire \NLW_ACTIVE_LOW_EXT.ACT_LO_EXT_mb_debug_sys_rst_UNCONNECTED ;

  ublaze_sopc_proc_sys_reset_0_0__cdc_sync \ACTIVE_LOW_AUX.ACT_LO_AUX 
       (.asr_lpf(asr_lpf),
        .aux_reset_in(\NLW_ACTIVE_LOW_AUX.ACT_LO_AUX_aux_reset_in_UNCONNECTED ),
        .lpf_asr(lpf_asr),
        .lpf_asr_reg(\ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ),
        .p_1_in(p_1_in),
        .p_2_in(p_2_in),
        .scndry_out(p_3_in1_in),
        .slowest_sync_clk(slowest_sync_clk));
  ublaze_sopc_proc_sys_reset_0_0__cdc_sync_0 \ACTIVE_LOW_EXT.ACT_LO_EXT 
       (.ext_reset_in(ext_reset_in),
        .lpf_exr(lpf_exr),
        .lpf_exr_reg(\ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ),
        .mb_debug_sys_rst(\NLW_ACTIVE_LOW_EXT.ACT_LO_EXT_mb_debug_sys_rst_UNCONNECTED ),
        .p_3_out(p_3_out[2:0]),
        .scndry_out(p_3_out[3]),
        .slowest_sync_clk(slowest_sync_clk));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[1].asr_lpf_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_in1_in),
        .Q(p_2_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[2].asr_lpf_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_2_in),
        .Q(p_1_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[3].asr_lpf_reg[3] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_1_in),
        .Q(asr_lpf),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[1].exr_lpf_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[3]),
        .Q(p_3_out[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[2].exr_lpf_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[2]),
        .Q(p_3_out[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[3].exr_lpf_reg[3] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[1]),
        .Q(p_3_out[0]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRL16" *) 
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\EXT_LPF/POR_SRL_I " *) 
  SRL16E #(
    .INIT(16'hFFFF)) 
    POR_SRL_I
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(slowest_sync_clk),
        .D(1'b0),
        .Q(Q));
  FDRE #(
    .INIT(1'b0)) 
    lpf_asr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ),
        .Q(lpf_asr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    lpf_exr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ),
        .Q(lpf_exr),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    lpf_int0
       (.I0(dcm_locked),
        .I1(lpf_exr),
        .I2(lpf_asr),
        .I3(Q),
        .O(lpf_int0__0));
  FDRE #(
    .INIT(1'b0)) 
    lpf_int_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(lpf_int0__0),
        .Q(lpf_int),
        .R(1'b0));
endmodule

(* C_AUX_RESET_HIGH = "1'b0" *) (* C_AUX_RST_WIDTH = "4" *) (* C_EXT_RESET_HIGH = "1'b0" *) 
(* C_EXT_RST_WIDTH = "4" *) (* C_FAMILY = "artix7" *) (* C_NUM_BUS_RST = "1" *) 
(* C_NUM_INTERCONNECT_ARESETN = "1" *) (* C_NUM_PERP_ARESETN = "1" *) (* C_NUM_PERP_RST = "1" *) 
(* ORIG_REF_NAME = "proc_sys_reset" *) 
module ublaze_sopc_proc_sys_reset_0_0__proc_sys_reset
   (slowest_sync_clk,
    ext_reset_in,
    aux_reset_in,
    mb_debug_sys_rst,
    dcm_locked,
    mb_reset,
    bus_struct_reset,
    peripheral_reset,
    interconnect_aresetn,
    peripheral_aresetn);
  input slowest_sync_clk;
  input ext_reset_in;
  input aux_reset_in;
  input mb_debug_sys_rst;
  input dcm_locked;
  output mb_reset;
  (* equivalent_register_removal = "no" *) output [0:0]bus_struct_reset;
  (* equivalent_register_removal = "no" *) output [0:0]peripheral_reset;
  (* equivalent_register_removal = "no" *) output [0:0]interconnect_aresetn;
  (* equivalent_register_removal = "no" *) output [0:0]peripheral_aresetn;

  wire Bsr_out;
  wire MB_out;
  wire SEQ_n_3;
  wire SEQ_n_4;
  wire [0:0]bus_struct_reset;
  wire dcm_locked;
  wire ext_reset_in;
  wire [0:0]interconnect_aresetn;
  wire lpf_int;
  wire mb_reset;
  wire [0:0]peripheral_aresetn;
  wire slowest_sync_clk;
  wire NLW_EXT_LPF_aux_reset_in_UNCONNECTED;
  wire NLW_EXT_LPF_mb_debug_sys_rst_UNCONNECTED;
  wire NLW_SEQ_Pr_out_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(SEQ_n_3),
        .Q(interconnect_aresetn),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(SEQ_n_4),
        .Q(peripheral_aresetn),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \BSR_OUT_DFF[0].FDRE_BSR 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(Bsr_out),
        .Q(bus_struct_reset),
        .R(1'b0));
  ublaze_sopc_proc_sys_reset_0_0__lpf EXT_LPF
       (.aux_reset_in(NLW_EXT_LPF_aux_reset_in_UNCONNECTED),
        .dcm_locked(dcm_locked),
        .ext_reset_in(ext_reset_in),
        .lpf_int(lpf_int),
        .mb_debug_sys_rst(NLW_EXT_LPF_mb_debug_sys_rst_UNCONNECTED),
        .slowest_sync_clk(slowest_sync_clk));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_inst
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(MB_out),
        .Q(mb_reset),
        .R(1'b0));
  ublaze_sopc_proc_sys_reset_0_0__sequence_psr SEQ
       (.\ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N (SEQ_n_3),
        .\ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N (SEQ_n_4),
        .Bsr_out(Bsr_out),
        .MB_out(MB_out),
        .Pr_out(NLW_SEQ_Pr_out_UNCONNECTED),
        .lpf_int(lpf_int),
        .slowest_sync_clk(slowest_sync_clk));
endmodule

(* ORIG_REF_NAME = "sequence_psr" *) 
module ublaze_sopc_proc_sys_reset_0_0__sequence_psr
   (MB_out,
    Bsr_out,
    Pr_out,
    \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N ,
    \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N ,
    lpf_int,
    slowest_sync_clk);
  output MB_out;
  output Bsr_out;
  output Pr_out;
  output \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N ;
  output \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N ;
  input lpf_int;
  input slowest_sync_clk;

  wire \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N ;
  wire \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N ;
  wire Bsr_out;
  wire Core_i_1_n_0;
  wire MB_out;
  wire \^Pr_out ;
  wire \bsr_dec_reg_n_0_[0] ;
  wire \bsr_dec_reg_n_0_[2] ;
  wire bsr_i_1_n_0;
  wire \core_dec[0]_i_1_n_0 ;
  wire \core_dec[2]_i_1_n_0 ;
  wire \core_dec_reg_n_0_[0] ;
  wire \core_dec_reg_n_0_[1] ;
  wire from_sys_i_1_n_0;
  wire lpf_int;
  wire p_0_in;
  wire [2:0]p_3_out;
  wire [2:0]p_5_out;
  wire pr_dec0__0;
  wire \pr_dec_reg_n_0_[0] ;
  wire \pr_dec_reg_n_0_[2] ;
  wire pr_i_1_n_0;
  wire seq_clr;
  wire [5:0]seq_cnt;
  wire seq_cnt_en;
  wire slowest_sync_clk;

  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1 
       (.I0(Bsr_out),
        .O(\ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_i_1 
       (.I0(\^Pr_out ),
        .O(\ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N ));
  (* \PinAttr:I0:HOLD_DETOUR  = "197" *) 
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h2)) 
    Core_i_1
       (.I0(MB_out),
        .I1(p_0_in),
        .O(Core_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    Core_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(Core_i_1_n_0),
        .Q(MB_out),
        .S(lpf_int));
  ublaze_sopc_proc_sys_reset_0_0__upcnt_n SEQ_COUNTER
       (.Q(seq_cnt),
        .seq_clr(seq_clr),
        .seq_cnt_en(seq_cnt_en),
        .slowest_sync_clk(slowest_sync_clk));
  LUT4 #(
    .INIT(16'h0090)) 
    \bsr_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[4]),
        .I2(seq_cnt[3]),
        .I3(seq_cnt[5]),
        .O(p_5_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \bsr_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\bsr_dec_reg_n_0_[0] ),
        .O(p_5_out[2]));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_5_out[0]),
        .Q(\bsr_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_5_out[2]),
        .Q(\bsr_dec_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bsr_i_1
       (.I0(Bsr_out),
        .I1(\bsr_dec_reg_n_0_[2] ),
        .O(bsr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    bsr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(bsr_i_1_n_0),
        .Q(Bsr_out),
        .S(lpf_int));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h9000)) 
    \core_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[4]),
        .I2(seq_cnt[3]),
        .I3(seq_cnt[5]),
        .O(\core_dec[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \core_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\core_dec_reg_n_0_[0] ),
        .O(\core_dec[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\core_dec[0]_i_1_n_0 ),
        .Q(\core_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(pr_dec0__0),
        .Q(\core_dec_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\core_dec[2]_i_1_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "197" *) 
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h8)) 
    from_sys_i_1
       (.I0(MB_out),
        .I1(seq_cnt_en),
        .O(from_sys_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    from_sys_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(from_sys_i_1_n_0),
        .Q(seq_cnt_en),
        .S(lpf_int));
  LUT4 #(
    .INIT(16'h0018)) 
    pr_dec0
       (.I0(seq_cnt_en),
        .I1(seq_cnt[0]),
        .I2(seq_cnt[2]),
        .I3(seq_cnt[1]),
        .O(pr_dec0__0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h0480)) 
    \pr_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[3]),
        .I2(seq_cnt[5]),
        .I3(seq_cnt[4]),
        .O(p_3_out[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \pr_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\pr_dec_reg_n_0_[0] ),
        .O(p_3_out[2]));
  FDRE #(
    .INIT(1'b0)) 
    \pr_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[0]),
        .Q(\pr_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pr_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[2]),
        .Q(\pr_dec_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h2)) 
    pr_i_1
       (.I0(\^Pr_out ),
        .I1(\pr_dec_reg_n_0_[2] ),
        .O(pr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    pr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(pr_i_1_n_0),
        .Q(\^Pr_out ),
        .S(lpf_int));
  FDRE #(
    .INIT(1'b0)) 
    seq_clr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(seq_clr),
        .R(lpf_int));
endmodule

(* ORIG_REF_NAME = "upcnt_n" *) 
module ublaze_sopc_proc_sys_reset_0_0__upcnt_n
   (Q,
    seq_clr,
    seq_cnt_en,
    slowest_sync_clk);
  output [5:0]Q;
  input seq_clr;
  input seq_cnt_en;
  input slowest_sync_clk;

  wire [5:0]Q;
  wire clear;
  wire [5:0]q_int0;
  wire seq_clr;
  wire seq_cnt_en;
  wire slowest_sync_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \q_int[0]_i_1 
       (.I0(Q[0]),
        .O(q_int0[0]));
  (* \PinAttr:I1:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \q_int[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(q_int0[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \q_int[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(q_int0[2]));
  (* \PinAttr:I0:HOLD_DETOUR  = "199" *) 
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \q_int[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(q_int0[3]));
  (* \PinAttr:I2:HOLD_DETOUR  = "199" *) 
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \q_int[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(q_int0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \q_int[5]_i_1 
       (.I0(seq_clr),
        .O(clear));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \q_int[5]_i_2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(q_int0[5]));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[0] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[0]),
        .Q(Q[0]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[1] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[1]),
        .Q(Q[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[2] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[2]),
        .Q(Q[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[3] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[3]),
        .Q(Q[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[4] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[4]),
        .Q(Q[4]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[5] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[5]),
        .Q(Q[5]),
        .R(clear));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_xbar_0,axi_crossbar_v2_1_18_axi_crossbar,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_crossbar_v2_1_18_axi_crossbar,Vivado 2018.2.2" *) 
module ublaze_sopc_xbar_0
   (aclk,
    aresetn,
    s_axi_awaddr,
    s_axi_awprot,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arprot,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_rready);
  (* x_interface_info = "xilinx.com:signal:clock:1.0 CLKIF CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME CLKIF, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, ASSOCIATED_BUSIF M00_AXI:M01_AXI:M02_AXI:M03_AXI:M04_AXI:M05_AXI:M06_AXI:M07_AXI:M08_AXI:M09_AXI:M10_AXI:M11_AXI:M12_AXI:M13_AXI:M14_AXI:M15_AXI:S00_AXI:S01_AXI:S02_AXI:S03_AXI:S04_AXI:S05_AXI:S06_AXI:S07_AXI:S08_AXI:S09_AXI:S10_AXI:S11_AXI:S12_AXI:S13_AXI:S14_AXI:S15_AXI, ASSOCIATED_RESET ARESETN" *) input aclk;
  (* x_interface_info = "xilinx.com:signal:reset:1.0 RSTIF RST" *) (* x_interface_parameter = "XIL_INTERFACENAME RSTIF, POLARITY ACTIVE_LOW, TYPE INTERCONNECT" *) input aresetn;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) input [31:0]s_axi_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]s_axi_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input [0:0]s_axi_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output [0:0]s_axi_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input [0:0]s_axi_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output [0:0]s_axi_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output [0:0]s_axi_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input [0:0]s_axi_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) input [31:0]s_axi_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]s_axi_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input [0:0]s_axi_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output [0:0]s_axi_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output [0:0]s_axi_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) (* x_interface_parameter = "XIL_INTERFACENAME S00_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) input [0:0]s_axi_rready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI AWADDR [31:0] [63:32], xilinx.com:interface:aximm:1.0 M02_AXI AWADDR [31:0] [95:64], xilinx.com:interface:aximm:1.0 M03_AXI AWADDR [31:0] [127:96], xilinx.com:interface:aximm:1.0 M04_AXI AWADDR [31:0] [159:128]" *) output [159:0]m_axi_awaddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT [2:0] [2:0], xilinx.com:interface:aximm:1.0 M01_AXI AWPROT [2:0] [5:3], xilinx.com:interface:aximm:1.0 M02_AXI AWPROT [2:0] [8:6], xilinx.com:interface:aximm:1.0 M03_AXI AWPROT [2:0] [11:9], xilinx.com:interface:aximm:1.0 M04_AXI AWPROT [2:0] [14:12]" *) output [14:0]m_axi_awprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI AWVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI AWVALID [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI AWVALID [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI AWVALID [0:0] [4:4]" *) output [4:0]m_axi_awvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI AWREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI AWREADY [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI AWREADY [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI AWREADY [0:0] [4:4]" *) input [4:0]m_axi_awready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WDATA [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI WDATA [31:0] [63:32], xilinx.com:interface:aximm:1.0 M02_AXI WDATA [31:0] [95:64], xilinx.com:interface:aximm:1.0 M03_AXI WDATA [31:0] [127:96], xilinx.com:interface:aximm:1.0 M04_AXI WDATA [31:0] [159:128]" *) output [159:0]m_axi_wdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB [3:0] [3:0], xilinx.com:interface:aximm:1.0 M01_AXI WSTRB [3:0] [7:4], xilinx.com:interface:aximm:1.0 M02_AXI WSTRB [3:0] [11:8], xilinx.com:interface:aximm:1.0 M03_AXI WSTRB [3:0] [15:12], xilinx.com:interface:aximm:1.0 M04_AXI WSTRB [3:0] [19:16]" *) output [19:0]m_axi_wstrb;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI WVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI WVALID [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI WVALID [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI WVALID [0:0] [4:4]" *) output [4:0]m_axi_wvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI WREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI WREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI WREADY [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI WREADY [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI WREADY [0:0] [4:4]" *) input [4:0]m_axi_wready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BRESP [1:0] [1:0], xilinx.com:interface:aximm:1.0 M01_AXI BRESP [1:0] [3:2], xilinx.com:interface:aximm:1.0 M02_AXI BRESP [1:0] [5:4], xilinx.com:interface:aximm:1.0 M03_AXI BRESP [1:0] [7:6], xilinx.com:interface:aximm:1.0 M04_AXI BRESP [1:0] [9:8]" *) input [9:0]m_axi_bresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI BVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI BVALID [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI BVALID [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI BVALID [0:0] [4:4]" *) input [4:0]m_axi_bvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI BREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI BREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI BREADY [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI BREADY [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI BREADY [0:0] [4:4]" *) output [4:0]m_axi_bready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI ARADDR [31:0] [63:32], xilinx.com:interface:aximm:1.0 M02_AXI ARADDR [31:0] [95:64], xilinx.com:interface:aximm:1.0 M03_AXI ARADDR [31:0] [127:96], xilinx.com:interface:aximm:1.0 M04_AXI ARADDR [31:0] [159:128]" *) output [159:0]m_axi_araddr;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT [2:0] [2:0], xilinx.com:interface:aximm:1.0 M01_AXI ARPROT [2:0] [5:3], xilinx.com:interface:aximm:1.0 M02_AXI ARPROT [2:0] [8:6], xilinx.com:interface:aximm:1.0 M03_AXI ARPROT [2:0] [11:9], xilinx.com:interface:aximm:1.0 M04_AXI ARPROT [2:0] [14:12]" *) output [14:0]m_axi_arprot;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI ARVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI ARVALID [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI ARVALID [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI ARVALID [0:0] [4:4]" *) output [4:0]m_axi_arvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI ARREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI ARREADY [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI ARREADY [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI ARREADY [0:0] [4:4]" *) input [4:0]m_axi_arready;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RDATA [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI RDATA [31:0] [63:32], xilinx.com:interface:aximm:1.0 M02_AXI RDATA [31:0] [95:64], xilinx.com:interface:aximm:1.0 M03_AXI RDATA [31:0] [127:96], xilinx.com:interface:aximm:1.0 M04_AXI RDATA [31:0] [159:128]" *) input [159:0]m_axi_rdata;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RRESP [1:0] [1:0], xilinx.com:interface:aximm:1.0 M01_AXI RRESP [1:0] [3:2], xilinx.com:interface:aximm:1.0 M02_AXI RRESP [1:0] [5:4], xilinx.com:interface:aximm:1.0 M03_AXI RRESP [1:0] [7:6], xilinx.com:interface:aximm:1.0 M04_AXI RRESP [1:0] [9:8]" *) input [9:0]m_axi_rresp;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI RVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI RVALID [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI RVALID [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI RVALID [0:0] [4:4]" *) input [4:0]m_axi_rvalid;
  (* x_interface_info = "xilinx.com:interface:aximm:1.0 M00_AXI RREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI RREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI RREADY [0:0] [2:2], xilinx.com:interface:aximm:1.0 M03_AXI RREADY [0:0] [3:3], xilinx.com:interface:aximm:1.0 M04_AXI RREADY [0:0] [4:4]" *) (* x_interface_parameter = "XIL_INTERFACENAME M00_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, XIL_INTERFACENAME M01_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, XIL_INTERFACENAME M02_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, XIL_INTERFACENAME M03_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, XIL_INTERFACENAME M04_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /ublaze_pll_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) output [4:0]m_axi_rready;

  wire aclk;
  wire aresetn;
  wire [159:0]m_axi_araddr;
  wire [4:0]m_axi_arready;
  wire [4:0]m_axi_arvalid;
  wire [159:0]m_axi_awaddr;
  wire [4:0]m_axi_awready;
  wire [4:0]m_axi_awvalid;
  wire [4:0]m_axi_bready;
  wire [4:0]m_axi_bvalid;
  wire [159:0]m_axi_rdata;
  wire [4:0]m_axi_rready;
  wire [4:0]m_axi_rvalid;
  wire [159:0]m_axi_wdata;
  wire [4:0]m_axi_wready;
  wire [4:0]m_axi_wvalid;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [0:0]s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire [159:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [9:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [19:0]NLW_inst_m_axi_arcache_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [39:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_arlock_UNCONNECTED;
  wire [14:0]NLW_inst_m_axi_arprot_UNCONNECTED;
  wire [19:0]NLW_inst_m_axi_arqos_UNCONNECTED;
  wire [19:0]NLW_inst_m_axi_arregion_UNCONNECTED;
  wire [14:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_aruser_UNCONNECTED;
  wire [159:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [9:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [19:0]NLW_inst_m_axi_awcache_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [39:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_awlock_UNCONNECTED;
  wire [14:0]NLW_inst_m_axi_awprot_UNCONNECTED;
  wire [19:0]NLW_inst_m_axi_awqos_UNCONNECTED;
  wire [19:0]NLW_inst_m_axi_awregion_UNCONNECTED;
  wire [14:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_awuser_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_bid_UNCONNECTED;
  wire [9:0]NLW_inst_m_axi_bresp_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_buser_UNCONNECTED;
  wire [31:8]NLW_inst_m_axi_rdata_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_rid_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_rlast_UNCONNECTED;
  wire [9:0]NLW_inst_m_axi_rresp_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_ruser_UNCONNECTED;
  wire [127:8]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_wid_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_wlast_UNCONNECTED;
  wire [19:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [4:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arqos_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awqos_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bready_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_buser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rlast_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rready_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_ruser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_wid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_wlast_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_wuser_UNCONNECTED;

  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_PROTOCOL = "2" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_SUPPORTS_USER_SIGNALS = "0" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_CONNECTIVITY_MODE = "0" *) 
  (* C_DEBUG = "1" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_M_AXI_ADDR_WIDTH = "160'b0000000000000000000000000000110000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000001100" *) 
  (* C_M_AXI_BASE_ADDR = "320'b00000000000000000000000000000000010001001010000000000000000000000000000000000000000000000000000001000001001000000000000000000000000000000000000000000000000000000100000111000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000001010000000000000000000000" *) 
  (* C_M_AXI_READ_CONNECTIVITY = "160'b0000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) 
  (* C_M_AXI_READ_ISSUING = "160'b0000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) 
  (* C_M_AXI_SECURE = "160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_M_AXI_WRITE_CONNECTIVITY = "160'b0000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) 
  (* C_M_AXI_WRITE_ISSUING = "160'b0000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) 
  (* C_NUM_ADDR_RANGES = "1" *) 
  (* C_NUM_MASTER_SLOTS = "5" *) 
  (* C_NUM_SLAVE_SLOTS = "1" *) 
  (* C_R_REGISTER = "1" *) 
  (* C_S_AXI_ARB_PRIORITY = "0" *) 
  (* C_S_AXI_BASE_ID = "0" *) 
  (* C_S_AXI_READ_ACCEPTANCE = "1" *) 
  (* C_S_AXI_SINGLE_THREAD = "1" *) 
  (* C_S_AXI_THREAD_ID_WIDTH = "0" *) 
  (* C_S_AXI_WRITE_ACCEPTANCE = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* P_ADDR_DECODE = "1" *) 
  (* P_AXI3 = "1" *) 
  (* P_AXI4 = "0" *) 
  (* P_AXILITE = "2" *) 
  (* P_AXILITE_SIZE = "3'b010" *) 
  (* P_FAMILY = "artix7" *) 
  (* P_INCR = "2'b01" *) 
  (* P_LEN = "8" *) 
  (* P_LOCK = "1" *) 
  (* P_M_AXI_ERR_MODE = "160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* P_M_AXI_SUPPORTS_READ = "5'b11111" *) 
  (* P_M_AXI_SUPPORTS_WRITE = "5'b11111" *) 
  (* P_ONES = "65'b11111111111111111111111111111111111111111111111111111111111111111" *) 
  (* P_RANGE_CHECK = "1" *) 
  (* P_S_AXI_BASE_ID = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* P_S_AXI_HIGH_ID = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* P_S_AXI_SUPPORTS_READ = "1'b1" *) 
  (* P_S_AXI_SUPPORTS_WRITE = "1'b1" *) 
  ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_axi_crossbar inst
       (.aclk(aclk),
        .aresetn(aresetn),
        .m_axi_araddr({NLW_inst_m_axi_araddr_UNCONNECTED[159:140],m_axi_araddr[139:128],NLW_inst_m_axi_araddr_UNCONNECTED[127:105],m_axi_araddr[104:98],NLW_inst_m_axi_araddr_UNCONNECTED[97:69],m_axi_araddr[68:66],NLW_inst_m_axi_araddr_UNCONNECTED[65:41],m_axi_araddr[40],NLW_inst_m_axi_araddr_UNCONNECTED[39:36],m_axi_araddr[35:34],NLW_inst_m_axi_araddr_UNCONNECTED[33:4],m_axi_araddr[3:2],NLW_inst_m_axi_araddr_UNCONNECTED[1:0]}),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[9:0]),
        .m_axi_arcache(NLW_inst_m_axi_arcache_UNCONNECTED[19:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[4:0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[39:0]),
        .m_axi_arlock(NLW_inst_m_axi_arlock_UNCONNECTED[4:0]),
        .m_axi_arprot(NLW_inst_m_axi_arprot_UNCONNECTED[14:0]),
        .m_axi_arqos(NLW_inst_m_axi_arqos_UNCONNECTED[19:0]),
        .m_axi_arready(m_axi_arready),
        .m_axi_arregion(NLW_inst_m_axi_arregion_UNCONNECTED[19:0]),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[14:0]),
        .m_axi_aruser(NLW_inst_m_axi_aruser_UNCONNECTED[4:0]),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr({NLW_inst_m_axi_awaddr_UNCONNECTED[159:140],m_axi_awaddr[139:128],NLW_inst_m_axi_awaddr_UNCONNECTED[127:0]}),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[9:0]),
        .m_axi_awcache(NLW_inst_m_axi_awcache_UNCONNECTED[19:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[4:0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[39:0]),
        .m_axi_awlock(NLW_inst_m_axi_awlock_UNCONNECTED[4:0]),
        .m_axi_awprot(NLW_inst_m_axi_awprot_UNCONNECTED[14:0]),
        .m_axi_awqos(NLW_inst_m_axi_awqos_UNCONNECTED[19:0]),
        .m_axi_awready(m_axi_awready),
        .m_axi_awregion(NLW_inst_m_axi_awregion_UNCONNECTED[19:0]),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[14:0]),
        .m_axi_awuser(NLW_inst_m_axi_awuser_UNCONNECTED[4:0]),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(NLW_inst_m_axi_bid_UNCONNECTED[4:0]),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(NLW_inst_m_axi_bresp_UNCONNECTED[9:0]),
        .m_axi_buser(NLW_inst_m_axi_buser_UNCONNECTED[4:0]),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata({m_axi_rdata[159:32],NLW_inst_m_axi_rdata_UNCONNECTED[31:8],m_axi_rdata[7:0]}),
        .m_axi_rid(NLW_inst_m_axi_rid_UNCONNECTED[4:0]),
        .m_axi_rlast(NLW_inst_m_axi_rlast_UNCONNECTED[4:0]),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(NLW_inst_m_axi_rresp_UNCONNECTED[9:0]),
        .m_axi_ruser(NLW_inst_m_axi_ruser_UNCONNECTED[4:0]),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata({m_axi_wdata[159:128],NLW_inst_m_axi_wdata_UNCONNECTED[127:98],m_axi_wdata[97:56],NLW_inst_m_axi_wdata_UNCONNECTED[55:40],m_axi_wdata[39:32],NLW_inst_m_axi_wdata_UNCONNECTED[31:8],m_axi_wdata[7:0]}),
        .m_axi_wid(NLW_inst_m_axi_wid_UNCONNECTED[4:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED[4:0]),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[19:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[4:0]),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(NLW_inst_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arcache(NLW_inst_s_axi_arcache_UNCONNECTED[3:0]),
        .s_axi_arid(NLW_inst_s_axi_arid_UNCONNECTED[0]),
        .s_axi_arlen(NLW_inst_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arlock(NLW_inst_s_axi_arlock_UNCONNECTED[0]),
        .s_axi_arprot(NLW_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arqos(NLW_inst_s_axi_arqos_UNCONNECTED[3:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize(NLW_inst_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_aruser(NLW_inst_s_axi_aruser_UNCONNECTED[0]),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_inst_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_inst_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awcache(NLW_inst_s_axi_awcache_UNCONNECTED[3:0]),
        .s_axi_awid(NLW_inst_s_axi_awid_UNCONNECTED[0]),
        .s_axi_awlen(NLW_inst_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awlock(NLW_inst_s_axi_awlock_UNCONNECTED[0]),
        .s_axi_awprot(NLW_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awqos(NLW_inst_s_axi_awqos_UNCONNECTED[3:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize(NLW_inst_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awuser(NLW_inst_s_axi_awuser_UNCONNECTED[0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(NLW_inst_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_inst_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED[0]),
        .s_axi_rready(NLW_inst_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_inst_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wid(NLW_inst_s_axi_wid_UNCONNECTED[0]),
        .s_axi_wlast(NLW_inst_s_axi_wlast_UNCONNECTED[0]),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_inst_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wuser(NLW_inst_s_axi_wuser_UNCONNECTED[0]),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_18_addr_arbiter_sasd" *) 
module ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_addr_arbiter_sasd
   (m_valid_i,
    SR,
    aa_grant_rnw,
    D,
    s_axi_bvalid,
    s_axi_wready,
    m_axi_bready,
    m_axi_awvalid,
    \m_ready_d_reg[2] ,
    m_axi_wvalid,
    \m_ready_d_reg[2]_0 ,
    s_ready_i_reg,
    E,
    m_valid_i_reg,
    m_ready_d0,
    m_axi_arvalid,
    mi_arvalid_en,
    s_axi_awready,
    s_axi_arready,
    s_axi_rvalid,
    \m_atarget_hot_reg[5] ,
    \m_axi_arprot[2] ,
    \gen_axilite.s_axi_bvalid_i_reg ,
    \gen_axilite.s_axi_awready_i_reg ,
    aclk,
    aresetn_d,
    \m_ready_d_reg[1] ,
    m_ready_d0_0,
    s_axi_awvalid,
    s_axi_arvalid,
    m_ready_d,
    f_mux_return__3,
    f_mux_return__1,
    Q,
    s_axi_bready,
    \m_atarget_enc_reg[2] ,
    \gen_axilite.s_axi_awready_i_reg_0 ,
    \m_atarget_enc_reg[2]_0 ,
    s_axi_wvalid,
    \aresetn_d_reg[1] ,
    \m_atarget_enc_reg[2]_1 ,
    \gen_axilite.s_axi_rvalid_i_reg ,
    \m_atarget_enc_reg[2]_2 ,
    aa_rready,
    m_ready_d_1,
    s_axi_rready,
    sr_rvalid,
    \m_payload_i_reg[0] ,
    \m_atarget_enc_reg[2]_3 ,
    \gen_axilite.s_axi_arready_i_reg ,
    \m_atarget_enc_reg[2]_4 ,
    s_axi_arprot,
    s_axi_awprot,
    s_axi_araddr,
    s_axi_awaddr,
    mi_wready,
    mi_bvalid);
  output m_valid_i;
  output [0:0]SR;
  output aa_grant_rnw;
  output [2:0]D;
  output [0:0]s_axi_bvalid;
  output [0:0]s_axi_wready;
  output [4:0]m_axi_bready;
  output [4:0]m_axi_awvalid;
  output [0:0]\m_ready_d_reg[2] ;
  output [4:0]m_axi_wvalid;
  output \m_ready_d_reg[2]_0 ;
  output s_ready_i_reg;
  output [0:0]E;
  output m_valid_i_reg;
  output [1:0]m_ready_d0;
  output [4:0]m_axi_arvalid;
  output mi_arvalid_en;
  output [0:0]s_axi_awready;
  output [0:0]s_axi_arready;
  output [0:0]s_axi_rvalid;
  output [5:0]\m_atarget_hot_reg[5] ;
  output [34:0]\m_axi_arprot[2] ;
  output \gen_axilite.s_axi_bvalid_i_reg ;
  output \gen_axilite.s_axi_awready_i_reg ;
  input aclk;
  input aresetn_d;
  input \m_ready_d_reg[1] ;
  input [1:0]m_ready_d0_0;
  input [0:0]s_axi_awvalid;
  input [0:0]s_axi_arvalid;
  input [2:0]m_ready_d;
  input f_mux_return__3;
  input f_mux_return__1;
  input [5:0]Q;
  input [0:0]s_axi_bready;
  input \m_atarget_enc_reg[2] ;
  input \gen_axilite.s_axi_awready_i_reg_0 ;
  input \m_atarget_enc_reg[2]_0 ;
  input [0:0]s_axi_wvalid;
  input [1:0]\aresetn_d_reg[1] ;
  input \m_atarget_enc_reg[2]_1 ;
  input \gen_axilite.s_axi_rvalid_i_reg ;
  input \m_atarget_enc_reg[2]_2 ;
  input aa_rready;
  input [1:0]m_ready_d_1;
  input [0:0]s_axi_rready;
  input sr_rvalid;
  input [0:0]\m_payload_i_reg[0] ;
  input \m_atarget_enc_reg[2]_3 ;
  input \gen_axilite.s_axi_arready_i_reg ;
  input \m_atarget_enc_reg[2]_4 ;
  input [2:0]s_axi_arprot;
  input [2:0]s_axi_awprot;
  input [31:0]s_axi_araddr;
  input [31:0]s_axi_awaddr;
  input [0:0]mi_wready;
  input [0:0]mi_bvalid;

  wire [2:0]D;
  wire [0:0]E;
  wire [5:0]Q;
  wire [0:0]SR;
  wire aa_grant_any;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire aresetn_d;
  wire [1:0]\aresetn_d_reg[1] ;
  wire f_mux_return__1;
  wire f_mux_return__3;
  wire \gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_0 ;
  wire \gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_1 ;
  wire \gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_2 ;
  wire \gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_3 ;
  wire \gen_axilite.s_axi_arready_i_reg ;
  wire \gen_axilite.s_axi_awready_i_reg ;
  wire \gen_axilite.s_axi_awready_i_reg_0 ;
  wire \gen_axilite.s_axi_bvalid_i_reg ;
  wire \gen_axilite.s_axi_rvalid_i_reg ;
  wire \gen_no_arbiter.grant_rnw_i_1_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_1_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_2_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_4_n_0 ;
  wire \gen_no_arbiter.m_valid_i_i_1_n_0 ;
  wire \gen_no_arbiter.s_ready_i[0]_i_1_n_0 ;
  wire \m_atarget_enc[1]_i_2_n_0 ;
  wire \m_atarget_enc[1]_i_3_n_0 ;
  wire \m_atarget_enc[1]_i_4_n_0 ;
  wire \m_atarget_enc[1]_i_5_n_0 ;
  wire \m_atarget_enc[1]_i_6_n_0 ;
  wire \m_atarget_enc_reg[2] ;
  wire \m_atarget_enc_reg[2]_0 ;
  wire \m_atarget_enc_reg[2]_1 ;
  wire \m_atarget_enc_reg[2]_2 ;
  wire \m_atarget_enc_reg[2]_3 ;
  wire \m_atarget_enc_reg[2]_4 ;
  wire \m_atarget_hot[2]_i_3_n_0 ;
  wire \m_atarget_hot[3]_i_3_n_0 ;
  wire \m_atarget_hot[5]_i_2_n_0 ;
  wire \m_atarget_hot[5]_i_5_n_0 ;
  wire \m_atarget_hot[5]_i_6_n_0 ;
  wire \m_atarget_hot[5]_i_7_n_0 ;
  wire \m_atarget_hot[5]_i_8_n_0 ;
  wire \m_atarget_hot[5]_i_9_n_0 ;
  wire [5:0]\m_atarget_hot_reg[5] ;
  wire [34:0]\^m_axi_arprot[2] ;
  wire [4:0]m_axi_arvalid;
  wire [4:0]m_axi_awvalid;
  wire [4:0]m_axi_bready;
  wire [4:0]m_axi_wvalid;
  wire [0:0]\m_payload_i_reg[0] ;
  wire [2:0]m_ready_d;
  wire [1:0]m_ready_d0;
  wire [1:0]m_ready_d0_0;
  wire [1:0]m_ready_d_1;
  wire \m_ready_d_reg[1] ;
  wire [0:0]\m_ready_d_reg[2] ;
  wire \m_ready_d_reg[2]_0 ;
  wire m_valid_i;
  wire m_valid_i_i_2_n_0;
  wire m_valid_i_reg;
  wire mi_arvalid_en;
  wire mi_awvalid_en;
  wire [0:0]mi_bvalid;
  wire [0:0]mi_wready;
  wire p_0_in1_in;
  wire p_3_in;
  wire p_4_in;
  wire r_transfer_en;
  wire \s_arvalid_reg[0]_i_1_n_0 ;
  wire \s_arvalid_reg_reg_n_0_[0] ;
  wire s_awvalid_reg;
  wire \s_awvalid_reg[0]_i_1_n_0 ;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [0:0]s_axi_rvalid;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire s_ready_i;
  wire s_ready_i_reg;
  wire sr_rvalid;
  wire [2:2]target_mi_enc;

  assign \m_axi_arprot[2] [11:0] = \^m_axi_arprot[2] [11:0];
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \gen_axilite.s_axi_awready_i_i_1 
       (.I0(p_4_in),
        .I1(mi_bvalid),
        .I2(Q[5]),
        .I3(mi_awvalid_en),
        .I4(mi_wready),
        .O(\gen_axilite.s_axi_awready_i_reg ));
  LUT6 #(
    .INIT(64'h5F5FC0005F5F0000)) 
    \gen_axilite.s_axi_bvalid_i_i_1 
       (.I0(p_3_in),
        .I1(p_4_in),
        .I2(Q[5]),
        .I3(mi_wready),
        .I4(mi_bvalid),
        .I5(mi_awvalid_en),
        .O(\gen_axilite.s_axi_bvalid_i_reg ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \gen_axilite.s_axi_bvalid_i_i_2 
       (.I0(m_ready_d[0]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .O(p_3_in));
  LUT4 #(
    .INIT(16'h0400)) 
    \gen_axilite.s_axi_bvalid_i_i_3 
       (.I0(m_ready_d[1]),
        .I1(s_axi_wvalid),
        .I2(aa_grant_rnw),
        .I3(m_valid_i),
        .O(p_4_in));
  LUT3 #(
    .INIT(8'h04)) 
    \gen_axilite.s_axi_bvalid_i_i_4 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d[2]),
        .O(mi_awvalid_en));
  LUT3 #(
    .INIT(8'h08)) 
    \gen_axilite.s_axi_rvalid_i_i_2 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d_1[1]),
        .O(mi_arvalid_en));
  LUT6 #(
    .INIT(64'hFDFCFDFF01000100)) 
    \gen_no_arbiter.grant_rnw_i_1 
       (.I0(s_awvalid_reg),
        .I1(m_valid_i),
        .I2(aa_grant_any),
        .I3(s_axi_arvalid),
        .I4(s_axi_awvalid),
        .I5(aa_grant_rnw),
        .O(\gen_no_arbiter.grant_rnw_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.grant_rnw_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.grant_rnw_i_1_n_0 ),
        .Q(aa_grant_rnw),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_no_arbiter.m_amesg_i[32]_i_1 
       (.I0(aresetn_d),
        .O(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_no_arbiter.m_amesg_i[32]_i_2 
       (.I0(aa_grant_any),
        .O(p_0_in1_in));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[10] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[9]),
        .Q(\^m_axi_arprot[2] [9]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[11] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[10]),
        .Q(\^m_axi_arprot[2] [10]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[12] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[11]),
        .Q(\^m_axi_arprot[2] [11]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[13] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[12]),
        .Q(\^m_axi_arprot[2] [12]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[14] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[13]),
        .Q(\^m_axi_arprot[2] [13]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[15] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[14]),
        .Q(\^m_axi_arprot[2] [14]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[16] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[15]),
        .Q(\^m_axi_arprot[2] [15]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[17] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[16]),
        .Q(\^m_axi_arprot[2] [16]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[18] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[17]),
        .Q(\^m_axi_arprot[2] [17]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[19] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[18]),
        .Q(\^m_axi_arprot[2] [18]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[1] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[0]),
        .Q(\^m_axi_arprot[2] [0]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[20] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[19]),
        .Q(\^m_axi_arprot[2] [19]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[21] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[20]),
        .Q(\^m_axi_arprot[2] [20]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[22] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[21]),
        .Q(\^m_axi_arprot[2] [21]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[23] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[22]),
        .Q(\^m_axi_arprot[2] [22]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[24] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[23]),
        .Q(\^m_axi_arprot[2] [23]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[25] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[24]),
        .Q(\^m_axi_arprot[2] [24]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[26] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[25]),
        .Q(\^m_axi_arprot[2] [25]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[27] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[26]),
        .Q(\^m_axi_arprot[2] [26]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[28] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[27]),
        .Q(\^m_axi_arprot[2] [27]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[29] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[28]),
        .Q(\^m_axi_arprot[2] [28]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[2] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[1]),
        .Q(\^m_axi_arprot[2] [1]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[30] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[29]),
        .Q(\^m_axi_arprot[2] [29]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[31] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[30]),
        .Q(\^m_axi_arprot[2] [30]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[32] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[31]),
        .Q(\^m_axi_arprot[2] [31]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[3] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[2]),
        .Q(\^m_axi_arprot[2] [2]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[4] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[3]),
        .Q(\^m_axi_arprot[2] [3]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[5] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[4]),
        .Q(\^m_axi_arprot[2] [4]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[6] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[5]),
        .Q(\^m_axi_arprot[2] [5]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[7] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[6]),
        .Q(\^m_axi_arprot[2] [6]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[8] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[7]),
        .Q(\^m_axi_arprot[2] [7]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[9] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[8]),
        .Q(\^m_axi_arprot[2] [8]),
        .R(SR));
  LUT6 #(
    .INIT(64'h222A2A2A2A2A2A2A)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_1 
       (.I0(\gen_no_arbiter.m_grant_hot_i[0]_i_2_n_0 ),
        .I1(m_valid_i),
        .I2(\m_ready_d_reg[1] ),
        .I3(\gen_no_arbiter.m_grant_hot_i[0]_i_4_n_0 ),
        .I4(m_ready_d0_0[0]),
        .I5(m_ready_d0_0[1]),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0FE0000)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_2 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(aa_grant_any),
        .I3(m_valid_i),
        .I4(aresetn_d),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFEAAAA)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_4 
       (.I0(m_ready_d[2]),
        .I1(\m_atarget_enc_reg[2] ),
        .I2(\gen_axilite.s_axi_awready_i_reg_0 ),
        .I3(\m_atarget_enc_reg[2]_0 ),
        .I4(m_valid_i),
        .I5(aa_grant_rnw),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_grant_hot_i_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.m_grant_hot_i[0]_i_1_n_0 ),
        .Q(aa_grant_any),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h222E2E2E2E2E2E2E)) 
    \gen_no_arbiter.m_valid_i_i_1 
       (.I0(aa_grant_any),
        .I1(m_valid_i),
        .I2(\m_ready_d_reg[1] ),
        .I3(\gen_no_arbiter.m_grant_hot_i[0]_i_4_n_0 ),
        .I4(m_ready_d0_0[0]),
        .I5(m_ready_d0_0[1]),
        .O(\gen_no_arbiter.m_valid_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_valid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.m_valid_i_i_1_n_0 ),
        .Q(m_valid_i),
        .R(SR));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_no_arbiter.s_ready_i[0]_i_1 
       (.I0(m_valid_i),
        .I1(aa_grant_any),
        .I2(aresetn_d),
        .O(\gen_no_arbiter.s_ready_i[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.s_ready_i_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.s_ready_i[0]_i_1_n_0 ),
        .Q(s_ready_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA00AA02)) 
    \m_atarget_enc[0]_i_1 
       (.I0(aresetn_d),
        .I1(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_0 ),
        .I2(target_mi_enc),
        .I3(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_1 ),
        .I4(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_2 ),
        .I5(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_3 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hC080000000000000)) 
    \m_atarget_enc[1]_i_1 
       (.I0(\m_atarget_enc[1]_i_2_n_0 ),
        .I1(\m_atarget_enc[1]_i_3_n_0 ),
        .I2(\m_atarget_enc[1]_i_4_n_0 ),
        .I3(\m_atarget_enc[1]_i_5_n_0 ),
        .I4(\m_atarget_enc[1]_i_6_n_0 ),
        .I5(aresetn_d),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h0400)) 
    \m_atarget_enc[1]_i_2 
       (.I0(\^m_axi_arprot[2] [22]),
        .I1(\^m_axi_arprot[2] [21]),
        .I2(\^m_axi_arprot[2] [23]),
        .I3(\^m_axi_arprot[2] [24]),
        .O(\m_atarget_enc[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \m_atarget_enc[1]_i_3 
       (.I0(\^m_axi_arprot[2] [31]),
        .I1(\^m_axi_arprot[2] [30]),
        .I2(\^m_axi_arprot[2] [29]),
        .I3(\^m_axi_arprot[2] [28]),
        .O(\m_atarget_enc[1]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \m_atarget_enc[1]_i_4 
       (.I0(\^m_axi_arprot[2] [25]),
        .I1(\^m_axi_arprot[2] [20]),
        .I2(\^m_axi_arprot[2] [27]),
        .I3(\^m_axi_arprot[2] [26]),
        .O(\m_atarget_enc[1]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h4000)) 
    \m_atarget_enc[1]_i_5 
       (.I0(\^m_axi_arprot[2] [21]),
        .I1(\^m_axi_arprot[2] [22]),
        .I2(\^m_axi_arprot[2] [24]),
        .I3(\^m_axi_arprot[2] [23]),
        .O(\m_atarget_enc[1]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \m_atarget_enc[1]_i_6 
       (.I0(\^m_axi_arprot[2] [17]),
        .I1(\^m_axi_arprot[2] [16]),
        .I2(\^m_axi_arprot[2] [19]),
        .I3(\^m_axi_arprot[2] [18]),
        .O(\m_atarget_enc[1]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'hCD00)) 
    \m_atarget_enc[2]_i_1 
       (.I0(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_0 ),
        .I1(target_mi_enc),
        .I2(\m_atarget_hot[5]_i_2_n_0 ),
        .I3(aresetn_d),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_atarget_hot[0]_i_1 
       (.I0(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_0 ),
        .I1(aa_grant_any),
        .O(\m_atarget_hot_reg[5] [0]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_atarget_hot[1]_i_1 
       (.I0(aa_grant_any),
        .I1(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_1 ),
        .O(\m_atarget_hot_reg[5] [1]));
  LUT4 #(
    .INIT(16'h8000)) 
    \m_atarget_hot[1]_i_2 
       (.I0(\m_atarget_enc[1]_i_6_n_0 ),
        .I1(\m_atarget_hot[5]_i_5_n_0 ),
        .I2(\m_atarget_enc[1]_i_4_n_0 ),
        .I3(\m_atarget_enc[1]_i_3_n_0 ),
        .O(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_1 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_atarget_hot[2]_i_1 
       (.I0(aa_grant_any),
        .I1(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_2 ),
        .O(\m_atarget_hot_reg[5] [2]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \m_atarget_hot[2]_i_2 
       (.I0(\m_atarget_enc[1]_i_6_n_0 ),
        .I1(\m_atarget_hot[2]_i_3_n_0 ),
        .I2(\^m_axi_arprot[2] [24]),
        .I3(\^m_axi_arprot[2] [23]),
        .I4(\m_atarget_enc[1]_i_4_n_0 ),
        .I5(\m_atarget_enc[1]_i_3_n_0 ),
        .O(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_2 ));
  LUT2 #(
    .INIT(4'h2)) 
    \m_atarget_hot[2]_i_3 
       (.I0(\^m_axi_arprot[2] [22]),
        .I1(\^m_axi_arprot[2] [21]),
        .O(\m_atarget_hot[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFE000000)) 
    \m_atarget_hot[3]_i_1 
       (.I0(\m_atarget_hot[5]_i_2_n_0 ),
        .I1(target_mi_enc),
        .I2(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_0 ),
        .I3(aa_grant_any),
        .I4(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_3 ),
        .O(\m_atarget_hot_reg[5] [3]));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \m_atarget_hot[3]_i_2 
       (.I0(\m_atarget_enc[1]_i_6_n_0 ),
        .I1(\^m_axi_arprot[2] [22]),
        .I2(\^m_axi_arprot[2] [21]),
        .I3(\m_atarget_hot[3]_i_3_n_0 ),
        .I4(\m_atarget_enc[1]_i_4_n_0 ),
        .I5(\m_atarget_enc[1]_i_3_n_0 ),
        .O(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_3 ));
  LUT2 #(
    .INIT(4'h2)) 
    \m_atarget_hot[3]_i_3 
       (.I0(\^m_axi_arprot[2] [24]),
        .I1(\^m_axi_arprot[2] [23]),
        .O(\m_atarget_hot[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \m_atarget_hot[4]_i_1 
       (.I0(aa_grant_any),
        .I1(target_mi_enc),
        .O(\m_atarget_hot_reg[5] [4]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \m_atarget_hot[5]_i_1 
       (.I0(aa_grant_any),
        .I1(\m_atarget_hot[5]_i_2_n_0 ),
        .I2(target_mi_enc),
        .I3(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_0 ),
        .O(\m_atarget_hot_reg[5] [5]));
  LUT6 #(
    .INIT(64'hCC000000C8000000)) 
    \m_atarget_hot[5]_i_2 
       (.I0(\m_atarget_hot[5]_i_5_n_0 ),
        .I1(\m_atarget_enc[1]_i_6_n_0 ),
        .I2(\m_atarget_enc[1]_i_5_n_0 ),
        .I3(\m_atarget_enc[1]_i_4_n_0 ),
        .I4(\m_atarget_enc[1]_i_3_n_0 ),
        .I5(\m_atarget_enc[1]_i_2_n_0 ),
        .O(\m_atarget_hot[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \m_atarget_hot[5]_i_3 
       (.I0(\m_atarget_hot[5]_i_6_n_0 ),
        .I1(\m_atarget_enc[1]_i_3_n_0 ),
        .I2(\m_atarget_hot[5]_i_7_n_0 ),
        .I3(\m_atarget_enc[1]_i_6_n_0 ),
        .I4(\m_atarget_hot[5]_i_8_n_0 ),
        .O(target_mi_enc));
  LUT5 #(
    .INIT(32'h80000000)) 
    \m_atarget_hot[5]_i_4 
       (.I0(\m_atarget_enc[1]_i_3_n_0 ),
        .I1(\m_atarget_enc[1]_i_4_n_0 ),
        .I2(\m_atarget_hot[5]_i_9_n_0 ),
        .I3(\m_atarget_enc[1]_i_6_n_0 ),
        .I4(\m_atarget_hot[5]_i_8_n_0 ),
        .O(\gen_addr_decoder.addr_decoder_inst/ADDRESS_HIT_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \m_atarget_hot[5]_i_5 
       (.I0(\^m_axi_arprot[2] [22]),
        .I1(\^m_axi_arprot[2] [21]),
        .I2(\^m_axi_arprot[2] [24]),
        .I3(\^m_axi_arprot[2] [23]),
        .O(\m_atarget_hot[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \m_atarget_hot[5]_i_6 
       (.I0(\^m_axi_arprot[2] [20]),
        .I1(\^m_axi_arprot[2] [21]),
        .I2(\^m_axi_arprot[2] [22]),
        .I3(\^m_axi_arprot[2] [23]),
        .O(\m_atarget_hot[5]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \m_atarget_hot[5]_i_7 
       (.I0(\^m_axi_arprot[2] [27]),
        .I1(\^m_axi_arprot[2] [26]),
        .I2(\^m_axi_arprot[2] [25]),
        .I3(\^m_axi_arprot[2] [24]),
        .O(\m_atarget_hot[5]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \m_atarget_hot[5]_i_8 
       (.I0(\^m_axi_arprot[2] [13]),
        .I1(\^m_axi_arprot[2] [12]),
        .I2(\^m_axi_arprot[2] [15]),
        .I3(\^m_axi_arprot[2] [14]),
        .O(\m_atarget_hot[5]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \m_atarget_hot[5]_i_9 
       (.I0(\^m_axi_arprot[2] [21]),
        .I1(\^m_axi_arprot[2] [22]),
        .I2(\^m_axi_arprot[2] [23]),
        .I3(\^m_axi_arprot[2] [24]),
        .O(\m_atarget_hot[5]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \m_axi_arvalid[0]_INST_0 
       (.I0(Q[0]),
        .I1(m_ready_d_1[1]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_arvalid[0]));
  LUT4 #(
    .INIT(16'h2000)) 
    \m_axi_arvalid[1]_INST_0 
       (.I0(Q[1]),
        .I1(m_ready_d_1[1]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_arvalid[1]));
  LUT4 #(
    .INIT(16'h2000)) 
    \m_axi_arvalid[2]_INST_0 
       (.I0(Q[2]),
        .I1(m_ready_d_1[1]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_arvalid[2]));
  LUT4 #(
    .INIT(16'h2000)) 
    \m_axi_arvalid[3]_INST_0 
       (.I0(Q[3]),
        .I1(m_ready_d_1[1]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_arvalid[3]));
  LUT4 #(
    .INIT(16'h2000)) 
    \m_axi_arvalid[4]_INST_0 
       (.I0(Q[4]),
        .I1(m_ready_d_1[1]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_arvalid[4]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[0]_INST_0 
       (.I0(Q[0]),
        .I1(m_ready_d[2]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_awvalid[0]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[1]_INST_0 
       (.I0(Q[1]),
        .I1(m_ready_d[2]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_awvalid[1]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[2]_INST_0 
       (.I0(Q[2]),
        .I1(m_ready_d[2]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_awvalid[2]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[3]_INST_0 
       (.I0(Q[3]),
        .I1(m_ready_d[2]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_awvalid[3]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[4]_INST_0 
       (.I0(Q[4]),
        .I1(m_ready_d[2]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_awvalid[4]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \m_axi_bready[0]_INST_0 
       (.I0(Q[0]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(m_ready_d[0]),
        .O(m_axi_bready[0]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \m_axi_bready[1]_INST_0 
       (.I0(Q[1]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(m_ready_d[0]),
        .O(m_axi_bready[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \m_axi_bready[2]_INST_0 
       (.I0(Q[2]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(m_ready_d[0]),
        .O(m_axi_bready[2]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \m_axi_bready[3]_INST_0 
       (.I0(Q[3]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(m_ready_d[0]),
        .O(m_axi_bready[3]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \m_axi_bready[4]_INST_0 
       (.I0(Q[4]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(m_ready_d[0]),
        .O(m_axi_bready[4]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \m_axi_wvalid[0]_INST_0 
       (.I0(Q[0]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(s_axi_wvalid),
        .I4(m_ready_d[1]),
        .O(m_axi_wvalid[0]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \m_axi_wvalid[1]_INST_0 
       (.I0(Q[1]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(s_axi_wvalid),
        .I4(m_ready_d[1]),
        .O(m_axi_wvalid[1]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \m_axi_wvalid[2]_INST_0 
       (.I0(Q[2]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(s_axi_wvalid),
        .I4(m_ready_d[1]),
        .O(m_axi_wvalid[2]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \m_axi_wvalid[3]_INST_0 
       (.I0(Q[3]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(s_axi_wvalid),
        .I4(m_ready_d[1]),
        .O(m_axi_wvalid[3]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \m_axi_wvalid[4]_INST_0 
       (.I0(Q[4]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(s_axi_wvalid),
        .I4(m_ready_d[1]),
        .O(m_axi_wvalid[4]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h08FF)) 
    \m_payload_i[34]_i_1 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d_1[0]),
        .I3(sr_rvalid),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFF88888880)) 
    \m_ready_d[1]_i_2 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(\m_atarget_enc_reg[2]_3 ),
        .I3(\gen_axilite.s_axi_arready_i_reg ),
        .I4(\m_atarget_enc_reg[2]_4 ),
        .I5(m_ready_d_1[1]),
        .O(m_ready_d0[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFFFF8000)) 
    \m_ready_d[1]_i_3 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(sr_rvalid),
        .I3(\m_payload_i_reg[0] ),
        .I4(m_ready_d_1[0]),
        .O(m_ready_d0[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF44444440)) 
    \m_ready_d[2]_i_2 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(\m_atarget_enc_reg[2]_0 ),
        .I3(\gen_axilite.s_axi_awready_i_reg_0 ),
        .I4(\m_atarget_enc_reg[2] ),
        .I5(m_ready_d[2]),
        .O(\m_ready_d_reg[2] ));
  LUT2 #(
    .INIT(4'h2)) 
    \m_ready_d[2]_i_9 
       (.I0(m_valid_i),
        .I1(aa_grant_rnw),
        .O(\m_ready_d_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hC4)) 
    m_valid_i_i_1
       (.I0(E),
        .I1(\aresetn_d_reg[1] [1]),
        .I2(m_valid_i_i_2_n_0),
        .O(m_valid_i_reg));
  LUT5 #(
    .INIT(32'hAAA8FFFF)) 
    m_valid_i_i_2
       (.I0(r_transfer_en),
        .I1(\m_atarget_enc_reg[2]_1 ),
        .I2(\gen_axilite.s_axi_rvalid_i_reg ),
        .I3(\m_atarget_enc_reg[2]_2 ),
        .I4(aa_rready),
        .O(m_valid_i_i_2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    m_valid_i_i_3
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d_1[0]),
        .O(r_transfer_en));
  LUT4 #(
    .INIT(16'h0040)) 
    \s_arvalid_reg[0]_i_1 
       (.I0(s_awvalid_reg),
        .I1(s_axi_arvalid),
        .I2(aresetn_d),
        .I3(s_ready_i),
        .O(\s_arvalid_reg[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_arvalid_reg_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_arvalid_reg[0]_i_1_n_0 ),
        .Q(\s_arvalid_reg_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000D00000)) 
    \s_awvalid_reg[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_awvalid_reg),
        .I2(s_axi_awvalid),
        .I3(\s_arvalid_reg_reg_n_0_[0] ),
        .I4(aresetn_d),
        .I5(s_ready_i),
        .O(\s_awvalid_reg[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_awvalid_reg_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_awvalid_reg[0]_i_1_n_0 ),
        .Q(s_awvalid_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_arready[0]_INST_0 
       (.I0(s_ready_i),
        .I1(aa_grant_rnw),
        .O(s_axi_arready));
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_awready[0]_INST_0 
       (.I0(s_ready_i),
        .I1(aa_grant_rnw),
        .O(s_axi_awready));
  LUT5 #(
    .INIT(32'h00200000)) 
    \s_axi_bvalid[0]_INST_0 
       (.I0(m_valid_i),
        .I1(aa_grant_rnw),
        .I2(aa_grant_any),
        .I3(m_ready_d[0]),
        .I4(f_mux_return__3),
        .O(s_axi_bvalid));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rvalid[0]_INST_0 
       (.I0(aa_grant_any),
        .I1(sr_rvalid),
        .O(s_axi_rvalid));
  LUT5 #(
    .INIT(32'h00200000)) 
    \s_axi_wready[0]_INST_0 
       (.I0(m_valid_i),
        .I1(aa_grant_rnw),
        .I2(aa_grant_any),
        .I3(m_ready_d[1]),
        .I4(f_mux_return__1),
        .O(s_axi_wready));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB0)) 
    s_ready_i_i_1
       (.I0(E),
        .I1(m_valid_i_i_2_n_0),
        .I2(\aresetn_d_reg[1] [0]),
        .O(s_ready_i_reg));
endmodule

(* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) 
(* C_AXI_BUSER_WIDTH = "1" *) (* C_AXI_DATA_WIDTH = "32" *) (* C_AXI_ID_WIDTH = "1" *) 
(* C_AXI_PROTOCOL = "2" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_SUPPORTS_USER_SIGNALS = "0" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_CONNECTIVITY_MODE = "0" *) (* C_DEBUG = "1" *) 
(* C_FAMILY = "artix7" *) (* C_M_AXI_ADDR_WIDTH = "160'b0000000000000000000000000000110000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000001100" *) (* C_M_AXI_BASE_ADDR = "320'b00000000000000000000000000000000010001001010000000000000000000000000000000000000000000000000000001000001001000000000000000000000000000000000000000000000000000000100000111000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000001010000000000000000000000" *) 
(* C_M_AXI_READ_CONNECTIVITY = "160'b0000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) (* C_M_AXI_READ_ISSUING = "160'b0000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) (* C_M_AXI_SECURE = "160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_M_AXI_WRITE_CONNECTIVITY = "160'b0000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) (* C_M_AXI_WRITE_ISSUING = "160'b0000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) (* C_NUM_ADDR_RANGES = "1" *) 
(* C_NUM_MASTER_SLOTS = "5" *) (* C_NUM_SLAVE_SLOTS = "1" *) (* C_R_REGISTER = "1" *) 
(* C_S_AXI_ARB_PRIORITY = "0" *) (* C_S_AXI_BASE_ID = "0" *) (* C_S_AXI_READ_ACCEPTANCE = "1" *) 
(* C_S_AXI_SINGLE_THREAD = "1" *) (* C_S_AXI_THREAD_ID_WIDTH = "0" *) (* C_S_AXI_WRITE_ACCEPTANCE = "1" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "axi_crossbar_v2_1_18_axi_crossbar" *) (* P_ADDR_DECODE = "1" *) 
(* P_AXI3 = "1" *) (* P_AXI4 = "0" *) (* P_AXILITE = "2" *) 
(* P_AXILITE_SIZE = "3'b010" *) (* P_FAMILY = "artix7" *) (* P_INCR = "2'b01" *) 
(* P_LEN = "8" *) (* P_LOCK = "1" *) (* P_M_AXI_ERR_MODE = "160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* P_M_AXI_SUPPORTS_READ = "5'b11111" *) (* P_M_AXI_SUPPORTS_WRITE = "5'b11111" *) (* P_ONES = "65'b11111111111111111111111111111111111111111111111111111111111111111" *) 
(* P_RANGE_CHECK = "1" *) (* P_S_AXI_BASE_ID = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* P_S_AXI_HIGH_ID = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
(* P_S_AXI_SUPPORTS_READ = "1'b1" *) (* P_S_AXI_SUPPORTS_WRITE = "1'b1" *) 
module ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_axi_crossbar
   (aclk,
    aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awregion,
    m_axi_awqos,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arregion,
    m_axi_arqos,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready);
  input aclk;
  input aresetn;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [0:0]s_axi_awuser;
  input [0:0]s_axi_awvalid;
  output [0:0]s_axi_awready;
  input [0:0]s_axi_wid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input [0:0]s_axi_wlast;
  input [0:0]s_axi_wuser;
  input [0:0]s_axi_wvalid;
  output [0:0]s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output [0:0]s_axi_bvalid;
  input [0:0]s_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [0:0]s_axi_aruser;
  input [0:0]s_axi_arvalid;
  output [0:0]s_axi_arready;
  output [0:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output [0:0]s_axi_rlast;
  output [0:0]s_axi_ruser;
  output [0:0]s_axi_rvalid;
  input [0:0]s_axi_rready;
  output [4:0]m_axi_awid;
  output [159:0]m_axi_awaddr;
  output [39:0]m_axi_awlen;
  output [14:0]m_axi_awsize;
  output [9:0]m_axi_awburst;
  output [4:0]m_axi_awlock;
  output [19:0]m_axi_awcache;
  output [14:0]m_axi_awprot;
  output [19:0]m_axi_awregion;
  output [19:0]m_axi_awqos;
  output [4:0]m_axi_awuser;
  output [4:0]m_axi_awvalid;
  input [4:0]m_axi_awready;
  output [4:0]m_axi_wid;
  output [159:0]m_axi_wdata;
  output [19:0]m_axi_wstrb;
  output [4:0]m_axi_wlast;
  output [4:0]m_axi_wuser;
  output [4:0]m_axi_wvalid;
  input [4:0]m_axi_wready;
  input [4:0]m_axi_bid;
  input [9:0]m_axi_bresp;
  input [4:0]m_axi_buser;
  input [4:0]m_axi_bvalid;
  output [4:0]m_axi_bready;
  output [4:0]m_axi_arid;
  output [159:0]m_axi_araddr;
  output [39:0]m_axi_arlen;
  output [14:0]m_axi_arsize;
  output [9:0]m_axi_arburst;
  output [4:0]m_axi_arlock;
  output [19:0]m_axi_arcache;
  output [14:0]m_axi_arprot;
  output [19:0]m_axi_arregion;
  output [19:0]m_axi_arqos;
  output [4:0]m_axi_aruser;
  output [4:0]m_axi_arvalid;
  input [4:0]m_axi_arready;
  input [4:0]m_axi_rid;
  input [159:0]m_axi_rdata;
  input [9:0]m_axi_rresp;
  input [4:0]m_axi_rlast;
  input [4:0]m_axi_ruser;
  input [4:0]m_axi_rvalid;
  output [4:0]m_axi_rready;

  wire aclk;
  wire aresetn;
  wire [11:0]\^m_axi_araddr ;
  wire [4:0]m_axi_arready;
  wire [4:0]m_axi_arvalid;
  wire [4:0]m_axi_awready;
  wire [4:0]m_axi_awvalid;
  wire [4:0]m_axi_bready;
  wire [4:0]m_axi_bvalid;
  wire [159:0]m_axi_rdata;
  wire [4:0]m_axi_rready;
  wire [4:0]m_axi_rvalid;
  wire [4:0]m_axi_wready;
  wire [4:0]m_axi_wvalid;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [0:0]s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire [34:12]\NLW_gen_sasd.crossbar_sasd_0_Q_UNCONNECTED ;
  wire [9:0]\NLW_gen_sasd.crossbar_sasd_0_m_axi_bresp_UNCONNECTED ;
  wire [31:8]\NLW_gen_sasd.crossbar_sasd_0_m_axi_rdata_UNCONNECTED ;
  wire [9:0]\NLW_gen_sasd.crossbar_sasd_0_m_axi_rresp_UNCONNECTED ;
  wire [2:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_arprot_UNCONNECTED ;
  wire [31:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_awaddr_UNCONNECTED ;
  wire [2:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_awprot_UNCONNECTED ;
  wire [0:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_bready_UNCONNECTED ;
  wire [1:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_bresp_UNCONNECTED ;
  wire [1:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_rdata[31]_UNCONNECTED ;
  wire [0:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_rready_UNCONNECTED ;

  assign m_axi_araddr[139:128] = \^m_axi_araddr [11:0];
  assign m_axi_araddr[104:98] = \^m_axi_araddr [8:2];
  assign m_axi_araddr[68:66] = \^m_axi_araddr [4:2];
  assign m_axi_araddr[40] = \^m_axi_araddr [8];
  assign m_axi_araddr[35:34] = \^m_axi_araddr [3:2];
  assign m_axi_araddr[3:2] = \^m_axi_araddr [3:2];
  assign m_axi_awaddr[139:128] = \^m_axi_araddr [11:0];
  assign m_axi_wdata[159:128] = s_axi_wdata;
  assign m_axi_wdata[97:96] = s_axi_wdata[1:0];
  assign m_axi_wdata[95:64] = s_axi_wdata;
  assign m_axi_wdata[63:56] = s_axi_wdata[31:24];
  assign m_axi_wdata[39:32] = s_axi_wdata[7:0];
  assign m_axi_wdata[7:0] = s_axi_wdata[7:0];
  ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_crossbar_sasd \gen_sasd.crossbar_sasd_0 
       (.Q({\NLW_gen_sasd.crossbar_sasd_0_Q_UNCONNECTED [34:12],\^m_axi_araddr }),
        .aclk(aclk),
        .aresetn(aresetn),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(\NLW_gen_sasd.crossbar_sasd_0_m_axi_bresp_UNCONNECTED [9:0]),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata({m_axi_rdata[159:32],\NLW_gen_sasd.crossbar_sasd_0_m_axi_rdata_UNCONNECTED [31:8],m_axi_rdata[7:0]}),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(\NLW_gen_sasd.crossbar_sasd_0_m_axi_rresp_UNCONNECTED [9:0]),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arprot(\NLW_gen_sasd.crossbar_sasd_0_s_axi_arprot_UNCONNECTED [2:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(\NLW_gen_sasd.crossbar_sasd_0_s_axi_awaddr_UNCONNECTED [31:0]),
        .s_axi_awprot(\NLW_gen_sasd.crossbar_sasd_0_s_axi_awprot_UNCONNECTED [2:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(\NLW_gen_sasd.crossbar_sasd_0_s_axi_bready_UNCONNECTED [0]),
        .s_axi_bresp(\NLW_gen_sasd.crossbar_sasd_0_s_axi_bresp_UNCONNECTED [1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .\s_axi_rdata[31] ({s_axi_rdata,\NLW_gen_sasd.crossbar_sasd_0_s_axi_rdata[31]_UNCONNECTED [1:0]}),
        .s_axi_rready(\NLW_gen_sasd.crossbar_sasd_0_s_axi_rready_UNCONNECTED [0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_18_crossbar_sasd" *) 
module ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_crossbar_sasd
   (Q,
    \s_axi_rdata[31] ,
    s_axi_bvalid,
    s_axi_wready,
    m_axi_bready,
    m_axi_awvalid,
    m_axi_wvalid,
    m_axi_arvalid,
    s_axi_bresp,
    s_axi_awready,
    s_axi_arready,
    s_axi_rvalid,
    m_axi_rready,
    aresetn,
    aclk,
    s_axi_awvalid,
    s_axi_arvalid,
    s_axi_bready,
    s_axi_wvalid,
    s_axi_rready,
    m_axi_bresp,
    m_axi_rresp,
    m_axi_rdata,
    m_axi_rvalid,
    m_axi_arready,
    m_axi_bvalid,
    m_axi_wready,
    m_axi_awready,
    s_axi_arprot,
    s_axi_awprot,
    s_axi_araddr,
    s_axi_awaddr);
  output [34:0]Q;
  output [33:0]\s_axi_rdata[31] ;
  output [0:0]s_axi_bvalid;
  output [0:0]s_axi_wready;
  output [4:0]m_axi_bready;
  output [4:0]m_axi_awvalid;
  output [4:0]m_axi_wvalid;
  output [4:0]m_axi_arvalid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_awready;
  output [0:0]s_axi_arready;
  output [0:0]s_axi_rvalid;
  output [4:0]m_axi_rready;
  input aresetn;
  input aclk;
  input [0:0]s_axi_awvalid;
  input [0:0]s_axi_arvalid;
  input [0:0]s_axi_bready;
  input [0:0]s_axi_wvalid;
  input [0:0]s_axi_rready;
  input [9:0]m_axi_bresp;
  input [9:0]m_axi_rresp;
  input [159:0]m_axi_rdata;
  input [4:0]m_axi_rvalid;
  input [4:0]m_axi_arready;
  input [4:0]m_axi_bvalid;
  input [4:0]m_axi_wready;
  input [4:0]m_axi_awready;
  input [2:0]s_axi_arprot;
  input [2:0]s_axi_awprot;
  input [31:0]s_axi_araddr;
  input [31:0]s_axi_awaddr;

  wire [34:0]Q;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire addr_arbiter_inst_n_24;
  wire addr_arbiter_inst_n_25;
  wire addr_arbiter_inst_n_27;
  wire addr_arbiter_inst_n_3;
  wire addr_arbiter_inst_n_4;
  wire addr_arbiter_inst_n_5;
  wire addr_arbiter_inst_n_80;
  wire addr_arbiter_inst_n_81;
  wire aresetn;
  wire aresetn_d;
  wire f_mux_return2;
  wire f_mux_return3;
  wire f_mux_return__1;
  wire f_mux_return__3;
  wire \gen_decerr.decerr_slave_inst_n_4 ;
  wire \gen_decerr.decerr_slave_inst_n_5 ;
  wire \gen_decerr.decerr_slave_inst_n_8 ;
  wire [2:0]m_atarget_enc;
  wire [5:0]m_atarget_hot;
  wire [5:0]m_atarget_hot0;
  wire [4:0]m_axi_arready;
  wire [4:0]m_axi_arvalid;
  wire [4:0]m_axi_awready;
  wire [4:0]m_axi_awvalid;
  wire [4:0]m_axi_bready;
  wire [4:0]m_axi_bvalid;
  wire [159:0]m_axi_rdata;
  wire [4:0]m_axi_rready;
  wire [4:0]m_axi_rvalid;
  wire [4:0]m_axi_wready;
  wire [4:0]m_axi_wvalid;
  wire [1:0]m_ready_d;
  wire [1:0]m_ready_d0;
  wire [2:0]m_ready_d0_0;
  wire [2:0]m_ready_d_1;
  wire m_valid_i;
  wire mi_arvalid_en;
  wire [5:5]mi_bvalid;
  wire [5:5]mi_wready;
  wire p_1_in;
  wire reg_slice_r_n_2;
  wire reg_slice_r_n_37;
  wire reg_slice_r_n_38;
  wire reg_slice_r_n_39;
  wire reg_slice_r_n_45;
  wire reg_slice_r_n_46;
  wire reset;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [33:0]\s_axi_rdata[31] ;
  wire [0:0]s_axi_rvalid;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire splitter_ar_n_0;
  wire splitter_ar_n_1;
  wire splitter_aw_n_0;
  wire splitter_aw_n_1;
  wire splitter_aw_n_2;
  wire splitter_aw_n_3;
  wire splitter_aw_n_4;
  wire splitter_aw_n_5;
  wire sr_rvalid;
  wire [34:12]\NLW_addr_arbiter_inst_m_axi_arprot[2]_UNCONNECTED ;
  wire [2:0]NLW_addr_arbiter_inst_s_axi_arprot_UNCONNECTED;
  wire [31:0]NLW_addr_arbiter_inst_s_axi_awaddr_UNCONNECTED;
  wire [2:0]NLW_addr_arbiter_inst_s_axi_awprot_UNCONNECTED;
  wire [0:0]NLW_addr_arbiter_inst_s_axi_bready_UNCONNECTED;
  wire [0:0]NLW_addr_arbiter_inst_s_axi_rready_UNCONNECTED;
  wire [0:0]\NLW_gen_decerr.decerr_slave_inst_s_axi_bready_UNCONNECTED ;
  wire [2:1]NLW_reg_slice_r_Q_UNCONNECTED;
  wire [31:8]NLW_reg_slice_r_m_axi_rdata_UNCONNECTED;
  wire [9:0]NLW_reg_slice_r_m_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_reg_slice_r_s_axi_rready_UNCONNECTED;

  ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_addr_arbiter_sasd addr_arbiter_inst
       (.D({addr_arbiter_inst_n_3,addr_arbiter_inst_n_4,addr_arbiter_inst_n_5}),
        .E(p_1_in),
        .Q(m_atarget_hot),
        .SR(reset),
        .aa_grant_rnw(aa_grant_rnw),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\aresetn_d_reg[1] ({reg_slice_r_n_45,reg_slice_r_n_46}),
        .f_mux_return__1(f_mux_return__1),
        .f_mux_return__3(f_mux_return__3),
        .\gen_axilite.s_axi_arready_i_reg (\gen_decerr.decerr_slave_inst_n_5 ),
        .\gen_axilite.s_axi_awready_i_reg (addr_arbiter_inst_n_81),
        .\gen_axilite.s_axi_awready_i_reg_0 (\gen_decerr.decerr_slave_inst_n_8 ),
        .\gen_axilite.s_axi_bvalid_i_reg (addr_arbiter_inst_n_80),
        .\gen_axilite.s_axi_rvalid_i_reg (\gen_decerr.decerr_slave_inst_n_4 ),
        .\m_atarget_enc_reg[2] (splitter_aw_n_2),
        .\m_atarget_enc_reg[2]_0 (splitter_aw_n_5),
        .\m_atarget_enc_reg[2]_1 (reg_slice_r_n_39),
        .\m_atarget_enc_reg[2]_2 (reg_slice_r_n_38),
        .\m_atarget_enc_reg[2]_3 (splitter_ar_n_1),
        .\m_atarget_enc_reg[2]_4 (splitter_ar_n_0),
        .\m_atarget_hot_reg[5] (m_atarget_hot0),
        .\m_axi_arprot[2] ({\NLW_addr_arbiter_inst_m_axi_arprot[2]_UNCONNECTED [34:12],Q[11:0]}),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_wvalid(m_axi_wvalid),
        .\m_payload_i_reg[0] (reg_slice_r_n_37),
        .m_ready_d(m_ready_d_1),
        .m_ready_d0(m_ready_d0),
        .m_ready_d0_0(m_ready_d0_0[1:0]),
        .m_ready_d_1(m_ready_d),
        .\m_ready_d_reg[1] (reg_slice_r_n_2),
        .\m_ready_d_reg[2] (m_ready_d0_0[2]),
        .\m_ready_d_reg[2]_0 (addr_arbiter_inst_n_24),
        .m_valid_i(m_valid_i),
        .m_valid_i_reg(addr_arbiter_inst_n_27),
        .mi_arvalid_en(mi_arvalid_en),
        .mi_bvalid(mi_bvalid),
        .mi_wready(mi_wready),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arprot(NLW_addr_arbiter_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_addr_arbiter_inst_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awprot(NLW_addr_arbiter_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(NLW_addr_arbiter_inst_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rready(NLW_addr_arbiter_inst_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .s_ready_i_reg(addr_arbiter_inst_n_25),
        .sr_rvalid(sr_rvalid));
  FDRE #(
    .INIT(1'b0)) 
    aresetn_d_reg
       (.C(aclk),
        .CE(1'b1),
        .D(aresetn),
        .Q(aresetn_d),
        .R(1'b0));
  ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_decerr_slave \gen_decerr.decerr_slave_inst 
       (.Q(m_atarget_hot[5]),
        .SR(reset),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .f_mux_return2(f_mux_return2),
        .f_mux_return3(f_mux_return3),
        .f_mux_return__1(f_mux_return__1),
        .f_mux_return__3(f_mux_return__3),
        .\gen_axilite.s_axi_bvalid_i_reg_0 (addr_arbiter_inst_n_81),
        .\gen_no_arbiter.m_grant_hot_i_reg[0] (\gen_decerr.decerr_slave_inst_n_5 ),
        .\gen_no_arbiter.m_valid_i_reg (\gen_decerr.decerr_slave_inst_n_8 ),
        .\gen_no_arbiter.m_valid_i_reg_0 (addr_arbiter_inst_n_24),
        .\m_atarget_enc_reg[2] (splitter_aw_n_3),
        .\m_atarget_enc_reg[2]_0 (splitter_aw_n_0),
        .\m_atarget_enc_reg[2]_1 (splitter_aw_n_4),
        .\m_atarget_enc_reg[2]_2 (splitter_aw_n_1),
        .\m_atarget_enc_reg[2]_3 (m_atarget_enc),
        .\m_atarget_hot_reg[5] (addr_arbiter_inst_n_80),
        .m_axi_arready(m_axi_arready[0]),
        .m_axi_awready(m_axi_awready[0]),
        .m_axi_bvalid({m_axi_bvalid[4:3],m_axi_bvalid[0]}),
        .m_axi_rvalid(m_axi_rvalid[0]),
        .m_axi_wready({m_axi_wready[4:3],m_axi_wready[0]}),
        .m_ready_d(m_ready_d_1[1:0]),
        .m_ready_d0(m_ready_d0_0[1:0]),
        .m_valid_i_reg(\gen_decerr.decerr_slave_inst_n_4 ),
        .mi_arvalid_en(mi_arvalid_en),
        .mi_bvalid(mi_bvalid),
        .mi_wready(mi_wready),
        .s_axi_bready(\NLW_gen_decerr.decerr_slave_inst_s_axi_bready_UNCONNECTED [0]),
        .s_axi_wvalid(s_axi_wvalid));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_enc_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_5),
        .Q(m_atarget_enc[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_enc_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_4),
        .Q(m_atarget_enc[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_enc_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_3),
        .Q(m_atarget_enc[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[0]),
        .Q(m_atarget_hot[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[1]),
        .Q(m_atarget_hot[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[2]),
        .Q(m_atarget_hot[2]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[3] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[3]),
        .Q(m_atarget_hot[3]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[4] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[4]),
        .Q(m_atarget_hot[4]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[5] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[5]),
        .Q(m_atarget_hot[5]),
        .R(reset));
  ublaze_sopc_xbar_0__axi_register_slice_v2_1_17_axic_register_slice reg_slice_r
       (.E(p_1_in),
        .Q({\s_axi_rdata[31] [33:2],NLW_reg_slice_r_Q_UNCONNECTED[2:1],reg_slice_r_n_37}),
        .SR(reset),
        .aa_grant_rnw(aa_grant_rnw),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .\aresetn_d_reg[0]_0 (addr_arbiter_inst_n_25),
        .\aresetn_d_reg[1]_0 (addr_arbiter_inst_n_27),
        .\gen_axilite.s_axi_arready_i_reg (\gen_decerr.decerr_slave_inst_n_5 ),
        .\gen_no_arbiter.m_grant_hot_i_reg[0] (reg_slice_r_n_2),
        .\m_atarget_enc_reg[2] (splitter_ar_n_0),
        .\m_atarget_enc_reg[2]_0 (splitter_ar_n_1),
        .\m_atarget_enc_reg[2]_1 (m_atarget_enc),
        .\m_atarget_hot_reg[4] (m_atarget_hot[4:0]),
        .m_axi_rdata({m_axi_rdata[159:32],NLW_reg_slice_r_m_axi_rdata_UNCONNECTED[31:8],m_axi_rdata[7:0]}),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(NLW_reg_slice_r_m_axi_rresp_UNCONNECTED[9:0]),
        .m_axi_rvalid(m_axi_rvalid[4:1]),
        .m_ready_d(m_ready_d),
        .m_valid_i(m_valid_i),
        .m_valid_i_reg_0(reg_slice_r_n_38),
        .m_valid_i_reg_1(reg_slice_r_n_39),
        .m_valid_i_reg_2({reg_slice_r_n_45,reg_slice_r_n_46}),
        .mi_arvalid_en(mi_arvalid_en),
        .s_axi_rready(NLW_reg_slice_r_s_axi_rready_UNCONNECTED[0]),
        .sr_rvalid(sr_rvalid));
  LUT3 #(
    .INIT(8'h04)) 
    \s_axi_wready[0]_INST_0_i_2 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[2]),
        .I2(m_atarget_enc[0]),
        .O(f_mux_return2));
  LUT3 #(
    .INIT(8'h40)) 
    \s_axi_wready[0]_INST_0_i_3 
       (.I0(m_atarget_enc[2]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .O(f_mux_return3));
  ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_splitter__parameterized0 splitter_ar
       (.Q(m_atarget_enc),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\gen_no_arbiter.m_grant_hot_i_reg[0] (splitter_ar_n_0),
        .\gen_no_arbiter.m_grant_hot_i_reg[0]_0 (splitter_ar_n_1),
        .m_axi_arready(m_axi_arready[4:1]),
        .m_ready_d(m_ready_d),
        .m_ready_d0(m_ready_d0));
  ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_splitter splitter_aw
       (.Q(m_atarget_enc),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\gen_no_arbiter.m_valid_i_reg (splitter_aw_n_2),
        .\gen_no_arbiter.m_valid_i_reg_0 (splitter_aw_n_5),
        .m_axi_awready(m_axi_awready[4:1]),
        .m_axi_bvalid(m_axi_bvalid[4:1]),
        .m_axi_wready(m_axi_wready[4:1]),
        .m_ready_d(m_ready_d_1),
        .m_ready_d0(m_ready_d0_0),
        .\m_ready_d_reg[2]_0 (splitter_aw_n_0),
        .\m_ready_d_reg[2]_1 (splitter_aw_n_1),
        .\m_ready_d_reg[2]_2 (splitter_aw_n_3),
        .\m_ready_d_reg[2]_3 (splitter_aw_n_4));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_18_decerr_slave" *) 
module ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_decerr_slave
   (mi_bvalid,
    mi_wready,
    m_ready_d0,
    m_valid_i_reg,
    \gen_no_arbiter.m_grant_hot_i_reg[0] ,
    f_mux_return__3,
    f_mux_return__1,
    \gen_no_arbiter.m_valid_i_reg ,
    SR,
    \m_atarget_hot_reg[5] ,
    aclk,
    \gen_axilite.s_axi_bvalid_i_reg_0 ,
    \m_atarget_enc_reg[2] ,
    \m_atarget_enc_reg[2]_0 ,
    s_axi_bready,
    \gen_no_arbiter.m_valid_i_reg_0 ,
    m_ready_d,
    \m_atarget_enc_reg[2]_1 ,
    \m_atarget_enc_reg[2]_2 ,
    s_axi_wvalid,
    aresetn_d,
    mi_arvalid_en,
    Q,
    m_axi_rvalid,
    \m_atarget_enc_reg[2]_3 ,
    m_axi_arready,
    m_axi_bvalid,
    f_mux_return2,
    f_mux_return3,
    m_axi_wready,
    m_axi_awready,
    aa_rready);
  output [0:0]mi_bvalid;
  output [0:0]mi_wready;
  output [1:0]m_ready_d0;
  output m_valid_i_reg;
  output \gen_no_arbiter.m_grant_hot_i_reg[0] ;
  output f_mux_return__3;
  output f_mux_return__1;
  output \gen_no_arbiter.m_valid_i_reg ;
  input [0:0]SR;
  input \m_atarget_hot_reg[5] ;
  input aclk;
  input \gen_axilite.s_axi_bvalid_i_reg_0 ;
  input \m_atarget_enc_reg[2] ;
  input \m_atarget_enc_reg[2]_0 ;
  input [0:0]s_axi_bready;
  input \gen_no_arbiter.m_valid_i_reg_0 ;
  input [1:0]m_ready_d;
  input \m_atarget_enc_reg[2]_1 ;
  input \m_atarget_enc_reg[2]_2 ;
  input [0:0]s_axi_wvalid;
  input aresetn_d;
  input mi_arvalid_en;
  input [0:0]Q;
  input [0:0]m_axi_rvalid;
  input [2:0]\m_atarget_enc_reg[2]_3 ;
  input [0:0]m_axi_arready;
  input [2:0]m_axi_bvalid;
  input f_mux_return2;
  input f_mux_return3;
  input [2:0]m_axi_wready;
  input [0:0]m_axi_awready;
  input aa_rready;

  wire [0:0]Q;
  wire [0:0]SR;
  wire aa_rready;
  wire aclk;
  wire aresetn_d;
  wire f_mux_return2;
  wire f_mux_return3;
  wire f_mux_return__1;
  wire f_mux_return__3;
  wire \gen_axilite.s_axi_arready_i_i_1_n_0 ;
  wire \gen_axilite.s_axi_bvalid_i_reg_0 ;
  wire \gen_axilite.s_axi_rvalid_i_i_1_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i_reg[0] ;
  wire \gen_no_arbiter.m_valid_i_reg ;
  wire \gen_no_arbiter.m_valid_i_reg_0 ;
  wire \m_atarget_enc_reg[2] ;
  wire \m_atarget_enc_reg[2]_0 ;
  wire \m_atarget_enc_reg[2]_1 ;
  wire \m_atarget_enc_reg[2]_2 ;
  wire [2:0]\m_atarget_enc_reg[2]_3 ;
  wire \m_atarget_hot_reg[5] ;
  wire [0:0]m_axi_arready;
  wire [0:0]m_axi_awready;
  wire [2:0]m_axi_bvalid;
  wire [0:0]m_axi_rvalid;
  wire [2:0]m_axi_wready;
  wire [1:0]m_ready_d;
  wire [1:0]m_ready_d0;
  wire m_valid_i_reg;
  wire [5:5]mi_arready;
  wire mi_arvalid_en;
  wire [0:0]mi_bvalid;
  wire [5:5]mi_rvalid;
  wire [0:0]mi_wready;
  wire \s_axi_bvalid[0]_INST_0_i_2_n_0 ;
  wire \s_axi_wready[0]_INST_0_i_4_n_0 ;
  wire [0:0]s_axi_wvalid;

  LUT5 #(
    .INIT(32'hA02AA0AA)) 
    \gen_axilite.s_axi_arready_i_i_1 
       (.I0(aresetn_d),
        .I1(mi_arvalid_en),
        .I2(mi_arready),
        .I3(mi_rvalid),
        .I4(Q),
        .O(\gen_axilite.s_axi_arready_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_arready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_arready_i_i_1_n_0 ),
        .Q(mi_arready),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_awready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_bvalid_i_reg_0 ),
        .Q(mi_wready),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_bvalid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_atarget_hot_reg[5] ),
        .Q(mi_bvalid),
        .R(SR));
  LUT5 #(
    .INIT(32'h55C0FF00)) 
    \gen_axilite.s_axi_rvalid_i_i_1 
       (.I0(aa_rready),
        .I1(mi_arvalid_en),
        .I2(mi_arready),
        .I3(mi_rvalid),
        .I4(Q),
        .O(\gen_axilite.s_axi_rvalid_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_rvalid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_rvalid_i_i_1_n_0 ),
        .Q(mi_rvalid),
        .R(SR));
  LUT5 #(
    .INIT(32'h0C00000A)) 
    \m_ready_d[1]_i_5 
       (.I0(m_axi_arready),
        .I1(mi_arready),
        .I2(\m_atarget_enc_reg[2]_3 [1]),
        .I3(\m_atarget_enc_reg[2]_3 [2]),
        .I4(\m_atarget_enc_reg[2]_3 [0]),
        .O(\gen_no_arbiter.m_grant_hot_i_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFE000000)) 
    \m_ready_d[2]_i_3 
       (.I0(\m_atarget_enc_reg[2]_1 ),
        .I1(\s_axi_wready[0]_INST_0_i_4_n_0 ),
        .I2(\m_atarget_enc_reg[2]_2 ),
        .I3(s_axi_wvalid),
        .I4(\gen_no_arbiter.m_valid_i_reg_0 ),
        .I5(m_ready_d[1]),
        .O(m_ready_d0[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFFFFFE00)) 
    \m_ready_d[2]_i_4 
       (.I0(\m_atarget_enc_reg[2] ),
        .I1(\s_axi_bvalid[0]_INST_0_i_2_n_0 ),
        .I2(\m_atarget_enc_reg[2]_0 ),
        .I3(\gen_no_arbiter.m_valid_i_reg_0 ),
        .I4(m_ready_d[0]),
        .O(m_ready_d0[0]));
  LUT5 #(
    .INIT(32'h0C00000A)) 
    \m_ready_d[2]_i_6 
       (.I0(m_axi_awready),
        .I1(mi_wready),
        .I2(\m_atarget_enc_reg[2]_3 [1]),
        .I3(\m_atarget_enc_reg[2]_3 [2]),
        .I4(\m_atarget_enc_reg[2]_3 [0]),
        .O(\gen_no_arbiter.m_valid_i_reg ));
  LUT5 #(
    .INIT(32'h0C00000A)) 
    m_valid_i_i_5
       (.I0(m_axi_rvalid),
        .I1(mi_rvalid),
        .I2(\m_atarget_enc_reg[2]_3 [1]),
        .I3(\m_atarget_enc_reg[2]_3 [2]),
        .I4(\m_atarget_enc_reg[2]_3 [0]),
        .O(m_valid_i_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \s_axi_bvalid[0]_INST_0_i_1 
       (.I0(m_axi_bvalid[2]),
        .I1(f_mux_return2),
        .I2(m_axi_bvalid[1]),
        .I3(f_mux_return3),
        .I4(\s_axi_bvalid[0]_INST_0_i_2_n_0 ),
        .I5(\m_atarget_enc_reg[2]_0 ),
        .O(f_mux_return__3));
  LUT5 #(
    .INIT(32'h0C00000A)) 
    \s_axi_bvalid[0]_INST_0_i_2 
       (.I0(m_axi_bvalid[0]),
        .I1(mi_bvalid),
        .I2(\m_atarget_enc_reg[2]_3 [1]),
        .I3(\m_atarget_enc_reg[2]_3 [2]),
        .I4(\m_atarget_enc_reg[2]_3 [0]),
        .O(\s_axi_bvalid[0]_INST_0_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \s_axi_wready[0]_INST_0_i_1 
       (.I0(m_axi_wready[2]),
        .I1(f_mux_return2),
        .I2(m_axi_wready[1]),
        .I3(f_mux_return3),
        .I4(\s_axi_wready[0]_INST_0_i_4_n_0 ),
        .I5(\m_atarget_enc_reg[2]_2 ),
        .O(f_mux_return__1));
  LUT5 #(
    .INIT(32'h00A0000C)) 
    \s_axi_wready[0]_INST_0_i_4 
       (.I0(mi_wready),
        .I1(m_axi_wready[0]),
        .I2(\m_atarget_enc_reg[2]_3 [2]),
        .I3(\m_atarget_enc_reg[2]_3 [1]),
        .I4(\m_atarget_enc_reg[2]_3 [0]),
        .O(\s_axi_wready[0]_INST_0_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_18_splitter" *) 
module ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_splitter
   (\m_ready_d_reg[2]_0 ,
    \m_ready_d_reg[2]_1 ,
    \gen_no_arbiter.m_valid_i_reg ,
    \m_ready_d_reg[2]_2 ,
    \m_ready_d_reg[2]_3 ,
    \gen_no_arbiter.m_valid_i_reg_0 ,
    m_ready_d,
    m_axi_bvalid,
    Q,
    m_axi_wready,
    m_axi_awready,
    aresetn_d,
    m_ready_d0,
    aclk);
  output \m_ready_d_reg[2]_0 ;
  output \m_ready_d_reg[2]_1 ;
  output \gen_no_arbiter.m_valid_i_reg ;
  output \m_ready_d_reg[2]_2 ;
  output \m_ready_d_reg[2]_3 ;
  output \gen_no_arbiter.m_valid_i_reg_0 ;
  output [2:0]m_ready_d;
  input [3:0]m_axi_bvalid;
  input [2:0]Q;
  input [3:0]m_axi_wready;
  input [3:0]m_axi_awready;
  input aresetn_d;
  input [2:0]m_ready_d0;
  input aclk;

  wire [2:0]Q;
  wire aclk;
  wire aresetn_d;
  wire \gen_no_arbiter.m_valid_i_reg ;
  wire \gen_no_arbiter.m_valid_i_reg_0 ;
  wire [3:0]m_axi_awready;
  wire [3:0]m_axi_bvalid;
  wire [3:0]m_axi_wready;
  wire [2:0]m_ready_d;
  wire [2:0]m_ready_d0;
  wire \m_ready_d[0]_i_1_n_0 ;
  wire \m_ready_d[1]_i_1_n_0 ;
  wire \m_ready_d[2]_i_1_n_0 ;
  wire \m_ready_d_reg[2]_0 ;
  wire \m_ready_d_reg[2]_1 ;
  wire \m_ready_d_reg[2]_2 ;
  wire \m_ready_d_reg[2]_3 ;

  LUT4 #(
    .INIT(16'h2A00)) 
    \m_ready_d[0]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0[2]),
        .I2(m_ready_d0[1]),
        .I3(m_ready_d0[0]),
        .O(\m_ready_d[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h20A0)) 
    \m_ready_d[1]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0[2]),
        .I2(m_ready_d0[1]),
        .I3(m_ready_d0[0]),
        .O(\m_ready_d[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h0888)) 
    \m_ready_d[2]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0[2]),
        .I2(m_ready_d0[1]),
        .I3(m_ready_d0[0]),
        .O(\m_ready_d[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C0000A0)) 
    \m_ready_d[2]_i_10 
       (.I0(m_axi_bvalid[3]),
        .I1(m_axi_bvalid[2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\m_ready_d_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0C0000A0)) 
    \m_ready_d[2]_i_5 
       (.I0(m_axi_awready[3]),
        .I1(m_axi_awready[2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\gen_no_arbiter.m_valid_i_reg_0 ));
  LUT5 #(
    .INIT(32'h000C0A00)) 
    \m_ready_d[2]_i_7 
       (.I0(m_axi_awready[1]),
        .I1(m_axi_awready[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\gen_no_arbiter.m_valid_i_reg ));
  LUT5 #(
    .INIT(32'h0C0000A0)) 
    \m_ready_d[2]_i_8 
       (.I0(m_axi_wready[3]),
        .I1(m_axi_wready[2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\m_ready_d_reg[2]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[0]_i_1_n_0 ),
        .Q(m_ready_d[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[1]_i_1_n_0 ),
        .Q(m_ready_d[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[2]_i_1_n_0 ),
        .Q(m_ready_d[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h000C0A00)) 
    \s_axi_bvalid[0]_INST_0_i_3 
       (.I0(m_axi_bvalid[1]),
        .I1(m_axi_bvalid[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\m_ready_d_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h000C0A00)) 
    \s_axi_wready[0]_INST_0_i_5 
       (.I0(m_axi_wready[1]),
        .I1(m_axi_wready[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\m_ready_d_reg[2]_1 ));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_18_splitter" *) 
module ublaze_sopc_xbar_0__axi_crossbar_v2_1_18_splitter__parameterized0
   (\gen_no_arbiter.m_grant_hot_i_reg[0] ,
    \gen_no_arbiter.m_grant_hot_i_reg[0]_0 ,
    m_ready_d,
    m_axi_arready,
    Q,
    aresetn_d,
    m_ready_d0,
    aclk);
  output \gen_no_arbiter.m_grant_hot_i_reg[0] ;
  output \gen_no_arbiter.m_grant_hot_i_reg[0]_0 ;
  output [1:0]m_ready_d;
  input [3:0]m_axi_arready;
  input [2:0]Q;
  input aresetn_d;
  input [1:0]m_ready_d0;
  input aclk;

  wire [2:0]Q;
  wire aclk;
  wire aresetn_d;
  wire \gen_no_arbiter.m_grant_hot_i_reg[0] ;
  wire \gen_no_arbiter.m_grant_hot_i_reg[0]_0 ;
  wire [3:0]m_axi_arready;
  wire [1:0]m_ready_d;
  wire [1:0]m_ready_d0;
  wire \m_ready_d[0]_i_1_n_0 ;
  wire \m_ready_d[1]_i_1_n_0 ;

  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \m_ready_d[0]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0[1]),
        .I2(m_ready_d0[0]),
        .O(\m_ready_d[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \m_ready_d[1]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0[1]),
        .I2(m_ready_d0[0]),
        .O(\m_ready_d[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0C0000A0)) 
    \m_ready_d[1]_i_4 
       (.I0(m_axi_arready[3]),
        .I1(m_axi_arready[2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\gen_no_arbiter.m_grant_hot_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h000C0A00)) 
    \m_ready_d[1]_i_6 
       (.I0(m_axi_arready[1]),
        .I1(m_axi_arready[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\gen_no_arbiter.m_grant_hot_i_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[0]_i_1_n_0 ),
        .Q(m_ready_d[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[1]_i_1_n_0 ),
        .Q(m_ready_d[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_register_slice_v2_1_17_axic_register_slice" *) 
module ublaze_sopc_xbar_0__axi_register_slice_v2_1_17_axic_register_slice
   (sr_rvalid,
    aa_rready,
    \gen_no_arbiter.m_grant_hot_i_reg[0] ,
    Q,
    m_valid_i_reg_0,
    m_valid_i_reg_1,
    m_axi_rready,
    m_valid_i_reg_2,
    \aresetn_d_reg[1]_0 ,
    aclk,
    \aresetn_d_reg[0]_0 ,
    m_ready_d,
    \m_atarget_enc_reg[2] ,
    \gen_axilite.s_axi_arready_i_reg ,
    \m_atarget_enc_reg[2]_0 ,
    mi_arvalid_en,
    s_axi_rready,
    m_valid_i,
    aa_grant_rnw,
    m_axi_rresp,
    m_axi_rdata,
    \m_atarget_enc_reg[2]_1 ,
    m_axi_rvalid,
    \m_atarget_hot_reg[4] ,
    SR,
    E);
  output sr_rvalid;
  output aa_rready;
  output \gen_no_arbiter.m_grant_hot_i_reg[0] ;
  output [34:0]Q;
  output m_valid_i_reg_0;
  output m_valid_i_reg_1;
  output [4:0]m_axi_rready;
  output [1:0]m_valid_i_reg_2;
  input \aresetn_d_reg[1]_0 ;
  input aclk;
  input \aresetn_d_reg[0]_0 ;
  input [1:0]m_ready_d;
  input \m_atarget_enc_reg[2] ;
  input \gen_axilite.s_axi_arready_i_reg ;
  input \m_atarget_enc_reg[2]_0 ;
  input mi_arvalid_en;
  input [0:0]s_axi_rready;
  input m_valid_i;
  input aa_grant_rnw;
  input [9:0]m_axi_rresp;
  input [159:0]m_axi_rdata;
  input [2:0]\m_atarget_enc_reg[2]_1 ;
  input [3:0]m_axi_rvalid;
  input [4:0]\m_atarget_hot_reg[4] ;
  input [0:0]SR;
  input [0:0]E;

  wire [0:0]E;
  wire [34:0]Q;
  wire [0:0]SR;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire \aresetn_d_reg[0]_0 ;
  wire \aresetn_d_reg[1]_0 ;
  wire \gen_axilite.s_axi_arready_i_reg ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_5_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i_reg[0] ;
  wire \m_atarget_enc_reg[2] ;
  wire \m_atarget_enc_reg[2]_0 ;
  wire [2:0]\m_atarget_enc_reg[2]_1 ;
  wire [4:0]\m_atarget_hot_reg[4] ;
  wire [159:0]m_axi_rdata;
  wire [4:0]m_axi_rready;
  wire [3:0]m_axi_rvalid;
  wire \m_payload_i[10]_i_2_n_0 ;
  wire \m_payload_i[10]_i_3_n_0 ;
  wire \m_payload_i[11]_i_2_n_0 ;
  wire \m_payload_i[11]_i_3_n_0 ;
  wire \m_payload_i[12]_i_2_n_0 ;
  wire \m_payload_i[12]_i_3_n_0 ;
  wire \m_payload_i[13]_i_2_n_0 ;
  wire \m_payload_i[13]_i_3_n_0 ;
  wire \m_payload_i[14]_i_2_n_0 ;
  wire \m_payload_i[14]_i_3_n_0 ;
  wire \m_payload_i[15]_i_2_n_0 ;
  wire \m_payload_i[15]_i_3_n_0 ;
  wire \m_payload_i[16]_i_2_n_0 ;
  wire \m_payload_i[16]_i_3_n_0 ;
  wire \m_payload_i[17]_i_2_n_0 ;
  wire \m_payload_i[17]_i_3_n_0 ;
  wire \m_payload_i[18]_i_2_n_0 ;
  wire \m_payload_i[18]_i_3_n_0 ;
  wire \m_payload_i[19]_i_2_n_0 ;
  wire \m_payload_i[19]_i_3_n_0 ;
  wire \m_payload_i[20]_i_2_n_0 ;
  wire \m_payload_i[20]_i_3_n_0 ;
  wire \m_payload_i[21]_i_2_n_0 ;
  wire \m_payload_i[21]_i_3_n_0 ;
  wire \m_payload_i[22]_i_2_n_0 ;
  wire \m_payload_i[22]_i_3_n_0 ;
  wire \m_payload_i[23]_i_2_n_0 ;
  wire \m_payload_i[23]_i_3_n_0 ;
  wire \m_payload_i[24]_i_2_n_0 ;
  wire \m_payload_i[24]_i_3_n_0 ;
  wire \m_payload_i[25]_i_2_n_0 ;
  wire \m_payload_i[25]_i_3_n_0 ;
  wire \m_payload_i[26]_i_2_n_0 ;
  wire \m_payload_i[26]_i_3_n_0 ;
  wire \m_payload_i[27]_i_2_n_0 ;
  wire \m_payload_i[27]_i_3_n_0 ;
  wire \m_payload_i[28]_i_2_n_0 ;
  wire \m_payload_i[28]_i_3_n_0 ;
  wire \m_payload_i[29]_i_2_n_0 ;
  wire \m_payload_i[29]_i_3_n_0 ;
  wire \m_payload_i[30]_i_2_n_0 ;
  wire \m_payload_i[30]_i_3_n_0 ;
  wire \m_payload_i[31]_i_2_n_0 ;
  wire \m_payload_i[31]_i_3_n_0 ;
  wire \m_payload_i[32]_i_2_n_0 ;
  wire \m_payload_i[32]_i_3_n_0 ;
  wire \m_payload_i[33]_i_2_n_0 ;
  wire \m_payload_i[33]_i_3_n_0 ;
  wire \m_payload_i[34]_i_3_n_0 ;
  wire \m_payload_i[34]_i_4_n_0 ;
  wire \m_payload_i[34]_i_5_n_0 ;
  wire \m_payload_i[34]_i_6_n_0 ;
  wire \m_payload_i[3]_i_2_n_0 ;
  wire \m_payload_i[3]_i_3_n_0 ;
  wire \m_payload_i[4]_i_2_n_0 ;
  wire \m_payload_i[4]_i_3_n_0 ;
  wire \m_payload_i[5]_i_2_n_0 ;
  wire \m_payload_i[5]_i_3_n_0 ;
  wire \m_payload_i[6]_i_2_n_0 ;
  wire \m_payload_i[6]_i_3_n_0 ;
  wire \m_payload_i[7]_i_2_n_0 ;
  wire \m_payload_i[7]_i_3_n_0 ;
  wire \m_payload_i[8]_i_2_n_0 ;
  wire \m_payload_i[8]_i_3_n_0 ;
  wire \m_payload_i[9]_i_2_n_0 ;
  wire \m_payload_i[9]_i_3_n_0 ;
  wire [1:0]m_ready_d;
  wire m_valid_i;
  wire m_valid_i_reg_0;
  wire m_valid_i_reg_1;
  wire [1:0]m_valid_i_reg_2;
  wire mi_arvalid_en;
  wire [34:0]skid_buffer;
  wire \skid_buffer_reg_n_0_[0] ;
  wire \skid_buffer_reg_n_0_[10] ;
  wire \skid_buffer_reg_n_0_[11] ;
  wire \skid_buffer_reg_n_0_[12] ;
  wire \skid_buffer_reg_n_0_[13] ;
  wire \skid_buffer_reg_n_0_[14] ;
  wire \skid_buffer_reg_n_0_[15] ;
  wire \skid_buffer_reg_n_0_[16] ;
  wire \skid_buffer_reg_n_0_[17] ;
  wire \skid_buffer_reg_n_0_[18] ;
  wire \skid_buffer_reg_n_0_[19] ;
  wire \skid_buffer_reg_n_0_[20] ;
  wire \skid_buffer_reg_n_0_[21] ;
  wire \skid_buffer_reg_n_0_[22] ;
  wire \skid_buffer_reg_n_0_[23] ;
  wire \skid_buffer_reg_n_0_[24] ;
  wire \skid_buffer_reg_n_0_[25] ;
  wire \skid_buffer_reg_n_0_[26] ;
  wire \skid_buffer_reg_n_0_[27] ;
  wire \skid_buffer_reg_n_0_[28] ;
  wire \skid_buffer_reg_n_0_[29] ;
  wire \skid_buffer_reg_n_0_[30] ;
  wire \skid_buffer_reg_n_0_[31] ;
  wire \skid_buffer_reg_n_0_[32] ;
  wire \skid_buffer_reg_n_0_[33] ;
  wire \skid_buffer_reg_n_0_[34] ;
  wire \skid_buffer_reg_n_0_[3] ;
  wire \skid_buffer_reg_n_0_[4] ;
  wire \skid_buffer_reg_n_0_[5] ;
  wire \skid_buffer_reg_n_0_[6] ;
  wire \skid_buffer_reg_n_0_[7] ;
  wire \skid_buffer_reg_n_0_[8] ;
  wire \skid_buffer_reg_n_0_[9] ;
  wire sr_rvalid;

  FDRE #(
    .INIT(1'b0)) 
    \aresetn_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(m_valid_i_reg_2[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \aresetn_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_valid_i_reg_2[0]),
        .Q(m_valid_i_reg_2[1]),
        .R(SR));
  LUT6 #(
    .INIT(64'hAAAAAAA888888888)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_3 
       (.I0(\gen_no_arbiter.m_grant_hot_i[0]_i_5_n_0 ),
        .I1(m_ready_d[1]),
        .I2(\m_atarget_enc_reg[2] ),
        .I3(\gen_axilite.s_axi_arready_i_reg ),
        .I4(\m_atarget_enc_reg[2]_0 ),
        .I5(mi_arvalid_en),
        .O(\gen_no_arbiter.m_grant_hot_i_reg[0] ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hEAAA0000)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_5 
       (.I0(m_ready_d[0]),
        .I1(Q[0]),
        .I2(sr_rvalid),
        .I3(m_valid_i),
        .I4(aa_grant_rnw),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[0]_INST_0 
       (.I0(\m_atarget_hot_reg[4] [0]),
        .I1(aa_rready),
        .O(m_axi_rready[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[1]_INST_0 
       (.I0(\m_atarget_hot_reg[4] [1]),
        .I1(aa_rready),
        .O(m_axi_rready[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[2]_INST_0 
       (.I0(\m_atarget_hot_reg[4] [2]),
        .I1(aa_rready),
        .O(m_axi_rready[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[3]_INST_0 
       (.I0(\m_atarget_hot_reg[4] [3]),
        .I1(aa_rready),
        .O(m_axi_rready[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[4]_INST_0 
       (.I0(\m_atarget_hot_reg[4] [4]),
        .I1(aa_rready),
        .O(m_axi_rready[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBABABA)) 
    \m_payload_i[10]_i_1 
       (.I0(\m_payload_i[10]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[10] ),
        .I3(m_axi_rdata[7]),
        .I4(\m_payload_i[34]_i_4_n_0 ),
        .I5(\m_payload_i[10]_i_3_n_0 ),
        .O(skid_buffer[10]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[10]_i_2 
       (.I0(m_axi_rdata[135]),
        .I1(m_axi_rdata[103]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[10]_i_3 
       (.I0(m_axi_rdata[71]),
        .I1(m_axi_rdata[39]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[10]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[11]_i_1 
       (.I0(\m_payload_i[11]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[11] ),
        .I3(\m_payload_i[11]_i_3_n_0 ),
        .O(skid_buffer[11]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[11]_i_2 
       (.I0(m_axi_rdata[136]),
        .I1(m_axi_rdata[104]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[11]_i_3 
       (.I0(m_axi_rdata[72]),
        .I1(m_axi_rdata[40]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[11]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[12]_i_1 
       (.I0(\m_payload_i[12]_i_2_n_0 ),
        .I1(m_axi_rdata[137]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[12]_i_3_n_0 ),
        .O(skid_buffer[12]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[12]_i_2 
       (.I0(m_axi_rdata[105]),
        .I1(m_axi_rdata[73]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[12]_i_3 
       (.I0(\skid_buffer_reg_n_0_[12] ),
        .I1(m_axi_rdata[41]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[12]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[13]_i_1 
       (.I0(\m_payload_i[13]_i_2_n_0 ),
        .I1(m_axi_rdata[138]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[13]_i_3_n_0 ),
        .O(skid_buffer[13]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[13]_i_2 
       (.I0(m_axi_rdata[106]),
        .I1(m_axi_rdata[74]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[13]_i_3 
       (.I0(\skid_buffer_reg_n_0_[13] ),
        .I1(m_axi_rdata[42]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[13]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[14]_i_1 
       (.I0(\m_payload_i[14]_i_2_n_0 ),
        .I1(m_axi_rdata[139]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[14]_i_3_n_0 ),
        .O(skid_buffer[14]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[14]_i_2 
       (.I0(m_axi_rdata[107]),
        .I1(m_axi_rdata[75]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[14]_i_3 
       (.I0(\skid_buffer_reg_n_0_[14] ),
        .I1(m_axi_rdata[43]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[14]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[15]_i_1 
       (.I0(\m_payload_i[15]_i_2_n_0 ),
        .I1(m_axi_rdata[140]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[15]_i_3_n_0 ),
        .O(skid_buffer[15]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[15]_i_2 
       (.I0(m_axi_rdata[108]),
        .I1(m_axi_rdata[76]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[15]_i_3 
       (.I0(\skid_buffer_reg_n_0_[15] ),
        .I1(m_axi_rdata[44]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[15]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[16]_i_1 
       (.I0(\m_payload_i[16]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[16] ),
        .I3(\m_payload_i[16]_i_3_n_0 ),
        .O(skid_buffer[16]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[16]_i_2 
       (.I0(m_axi_rdata[141]),
        .I1(m_axi_rdata[109]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[16]_i_3 
       (.I0(m_axi_rdata[77]),
        .I1(m_axi_rdata[45]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[16]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[17]_i_1 
       (.I0(\m_payload_i[17]_i_2_n_0 ),
        .I1(m_axi_rdata[142]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[17]_i_3_n_0 ),
        .O(skid_buffer[17]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[17]_i_2 
       (.I0(m_axi_rdata[110]),
        .I1(m_axi_rdata[78]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[17]_i_3 
       (.I0(\skid_buffer_reg_n_0_[17] ),
        .I1(m_axi_rdata[46]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[17]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[18]_i_1 
       (.I0(\m_payload_i[18]_i_2_n_0 ),
        .I1(m_axi_rdata[143]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[18]_i_3_n_0 ),
        .O(skid_buffer[18]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[18]_i_2 
       (.I0(m_axi_rdata[111]),
        .I1(m_axi_rdata[79]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[18]_i_3 
       (.I0(\skid_buffer_reg_n_0_[18] ),
        .I1(m_axi_rdata[47]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[18]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[19]_i_1 
       (.I0(\m_payload_i[19]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[19] ),
        .I3(\m_payload_i[19]_i_3_n_0 ),
        .O(skid_buffer[19]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[19]_i_2 
       (.I0(m_axi_rdata[144]),
        .I1(m_axi_rdata[112]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[19]_i_3 
       (.I0(m_axi_rdata[80]),
        .I1(m_axi_rdata[48]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[19]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[20]_i_1 
       (.I0(\m_payload_i[20]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[20] ),
        .I3(\m_payload_i[20]_i_3_n_0 ),
        .O(skid_buffer[20]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[20]_i_2 
       (.I0(m_axi_rdata[145]),
        .I1(m_axi_rdata[113]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[20]_i_3 
       (.I0(m_axi_rdata[81]),
        .I1(m_axi_rdata[49]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[20]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[21]_i_1 
       (.I0(\m_payload_i[21]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[21] ),
        .I3(\m_payload_i[21]_i_3_n_0 ),
        .O(skid_buffer[21]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[21]_i_2 
       (.I0(m_axi_rdata[146]),
        .I1(m_axi_rdata[114]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[21]_i_3 
       (.I0(m_axi_rdata[82]),
        .I1(m_axi_rdata[50]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[21]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[22]_i_1 
       (.I0(\m_payload_i[22]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[22] ),
        .I3(\m_payload_i[22]_i_3_n_0 ),
        .O(skid_buffer[22]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[22]_i_2 
       (.I0(m_axi_rdata[147]),
        .I1(m_axi_rdata[115]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[22]_i_3 
       (.I0(m_axi_rdata[83]),
        .I1(m_axi_rdata[51]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[22]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[23]_i_1 
       (.I0(\m_payload_i[23]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[23] ),
        .I3(\m_payload_i[23]_i_3_n_0 ),
        .O(skid_buffer[23]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[23]_i_2 
       (.I0(m_axi_rdata[148]),
        .I1(m_axi_rdata[116]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[23]_i_3 
       (.I0(m_axi_rdata[84]),
        .I1(m_axi_rdata[52]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[23]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[24]_i_1 
       (.I0(\m_payload_i[24]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[24] ),
        .I3(\m_payload_i[24]_i_3_n_0 ),
        .O(skid_buffer[24]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[24]_i_2 
       (.I0(m_axi_rdata[149]),
        .I1(m_axi_rdata[117]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[24]_i_3 
       (.I0(m_axi_rdata[85]),
        .I1(m_axi_rdata[53]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[24]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[25]_i_1 
       (.I0(\m_payload_i[25]_i_2_n_0 ),
        .I1(m_axi_rdata[150]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[25]_i_3_n_0 ),
        .O(skid_buffer[25]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[25]_i_2 
       (.I0(m_axi_rdata[118]),
        .I1(m_axi_rdata[86]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[25]_i_3 
       (.I0(\skid_buffer_reg_n_0_[25] ),
        .I1(m_axi_rdata[54]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[25]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[26]_i_1 
       (.I0(\m_payload_i[26]_i_2_n_0 ),
        .I1(m_axi_rdata[151]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[26]_i_3_n_0 ),
        .O(skid_buffer[26]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[26]_i_2 
       (.I0(m_axi_rdata[119]),
        .I1(m_axi_rdata[87]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[26]_i_3 
       (.I0(\skid_buffer_reg_n_0_[26] ),
        .I1(m_axi_rdata[55]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[26]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[27]_i_1 
       (.I0(\m_payload_i[27]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[27] ),
        .I3(\m_payload_i[27]_i_3_n_0 ),
        .O(skid_buffer[27]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[27]_i_2 
       (.I0(m_axi_rdata[152]),
        .I1(m_axi_rdata[120]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[27]_i_3 
       (.I0(m_axi_rdata[88]),
        .I1(m_axi_rdata[56]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[27]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[28]_i_1 
       (.I0(\m_payload_i[28]_i_2_n_0 ),
        .I1(m_axi_rdata[153]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[28]_i_3_n_0 ),
        .O(skid_buffer[28]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[28]_i_2 
       (.I0(m_axi_rdata[121]),
        .I1(m_axi_rdata[89]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[28]_i_3 
       (.I0(\skid_buffer_reg_n_0_[28] ),
        .I1(m_axi_rdata[57]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[28]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[29]_i_1 
       (.I0(\m_payload_i[29]_i_2_n_0 ),
        .I1(m_axi_rdata[154]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[29]_i_3_n_0 ),
        .O(skid_buffer[29]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[29]_i_2 
       (.I0(m_axi_rdata[122]),
        .I1(m_axi_rdata[90]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[29]_i_3 
       (.I0(\skid_buffer_reg_n_0_[29] ),
        .I1(m_axi_rdata[58]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[29]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[30]_i_1 
       (.I0(\m_payload_i[30]_i_2_n_0 ),
        .I1(m_axi_rdata[155]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[30]_i_3_n_0 ),
        .O(skid_buffer[30]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[30]_i_2 
       (.I0(m_axi_rdata[123]),
        .I1(m_axi_rdata[91]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[30]_i_3 
       (.I0(\skid_buffer_reg_n_0_[30] ),
        .I1(m_axi_rdata[59]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[30]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[31]_i_1 
       (.I0(\m_payload_i[31]_i_2_n_0 ),
        .I1(m_axi_rdata[156]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[31]_i_3_n_0 ),
        .O(skid_buffer[31]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[31]_i_2 
       (.I0(m_axi_rdata[124]),
        .I1(m_axi_rdata[92]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[31]_i_3 
       (.I0(\skid_buffer_reg_n_0_[31] ),
        .I1(m_axi_rdata[60]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[31]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFBA)) 
    \m_payload_i[32]_i_1 
       (.I0(\m_payload_i[32]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[32] ),
        .I3(\m_payload_i[32]_i_3_n_0 ),
        .O(skid_buffer[32]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[32]_i_2 
       (.I0(m_axi_rdata[157]),
        .I1(m_axi_rdata[125]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[32]_i_3 
       (.I0(m_axi_rdata[93]),
        .I1(m_axi_rdata[61]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[32]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[33]_i_1 
       (.I0(\m_payload_i[33]_i_2_n_0 ),
        .I1(m_axi_rdata[158]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[33]_i_3_n_0 ),
        .O(skid_buffer[33]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[33]_i_2 
       (.I0(m_axi_rdata[126]),
        .I1(m_axi_rdata[94]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[33]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[33]_i_3 
       (.I0(\skid_buffer_reg_n_0_[33] ),
        .I1(m_axi_rdata[62]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[33]_i_3_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    \m_payload_i[34]_i_2 
       (.I0(\m_payload_i[34]_i_3_n_0 ),
        .I1(m_axi_rdata[159]),
        .I2(\m_payload_i[34]_i_5_n_0 ),
        .I3(\m_payload_i[34]_i_6_n_0 ),
        .O(skid_buffer[34]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[34]_i_3 
       (.I0(m_axi_rdata[127]),
        .I1(m_axi_rdata[95]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[34]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0100)) 
    \m_payload_i[34]_i_4 
       (.I0(\m_atarget_enc_reg[2]_1 [0]),
        .I1(\m_atarget_enc_reg[2]_1 [1]),
        .I2(\m_atarget_enc_reg[2]_1 [2]),
        .I3(aa_rready),
        .O(\m_payload_i[34]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \m_payload_i[34]_i_5 
       (.I0(\m_atarget_enc_reg[2]_1 [0]),
        .I1(\m_atarget_enc_reg[2]_1 [2]),
        .I2(\m_atarget_enc_reg[2]_1 [1]),
        .I3(aa_rready),
        .O(\m_payload_i[34]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[34]_i_6 
       (.I0(\skid_buffer_reg_n_0_[34] ),
        .I1(m_axi_rdata[63]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[34]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBABABA)) 
    \m_payload_i[3]_i_1 
       (.I0(\m_payload_i[3]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[3] ),
        .I3(m_axi_rdata[0]),
        .I4(\m_payload_i[34]_i_4_n_0 ),
        .I5(\m_payload_i[3]_i_3_n_0 ),
        .O(skid_buffer[3]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[3]_i_2 
       (.I0(m_axi_rdata[128]),
        .I1(m_axi_rdata[96]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[3]_i_3 
       (.I0(m_axi_rdata[64]),
        .I1(m_axi_rdata[32]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBABABA)) 
    \m_payload_i[4]_i_1 
       (.I0(\m_payload_i[4]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[4] ),
        .I3(m_axi_rdata[1]),
        .I4(\m_payload_i[34]_i_4_n_0 ),
        .I5(\m_payload_i[4]_i_3_n_0 ),
        .O(skid_buffer[4]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[4]_i_2 
       (.I0(m_axi_rdata[129]),
        .I1(m_axi_rdata[97]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[4]_i_3 
       (.I0(m_axi_rdata[65]),
        .I1(m_axi_rdata[33]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \m_payload_i[5]_i_1 
       (.I0(\m_payload_i[5]_i_2_n_0 ),
        .I1(m_axi_rdata[2]),
        .I2(\m_payload_i[34]_i_4_n_0 ),
        .I3(m_axi_rdata[130]),
        .I4(\m_payload_i[34]_i_5_n_0 ),
        .I5(\m_payload_i[5]_i_3_n_0 ),
        .O(skid_buffer[5]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[5]_i_2 
       (.I0(m_axi_rdata[98]),
        .I1(m_axi_rdata[66]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[5]_i_3 
       (.I0(\skid_buffer_reg_n_0_[5] ),
        .I1(m_axi_rdata[34]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \m_payload_i[6]_i_1 
       (.I0(\m_payload_i[6]_i_2_n_0 ),
        .I1(m_axi_rdata[3]),
        .I2(\m_payload_i[34]_i_4_n_0 ),
        .I3(m_axi_rdata[131]),
        .I4(\m_payload_i[34]_i_5_n_0 ),
        .I5(\m_payload_i[6]_i_3_n_0 ),
        .O(skid_buffer[6]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[6]_i_2 
       (.I0(m_axi_rdata[99]),
        .I1(m_axi_rdata[67]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[6]_i_3 
       (.I0(\skid_buffer_reg_n_0_[6] ),
        .I1(m_axi_rdata[35]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \m_payload_i[7]_i_1 
       (.I0(\m_payload_i[7]_i_2_n_0 ),
        .I1(m_axi_rdata[4]),
        .I2(\m_payload_i[34]_i_4_n_0 ),
        .I3(m_axi_rdata[132]),
        .I4(\m_payload_i[34]_i_5_n_0 ),
        .I5(\m_payload_i[7]_i_3_n_0 ),
        .O(skid_buffer[7]));
  LUT6 #(
    .INIT(64'h0000AC0000000000)) 
    \m_payload_i[7]_i_2 
       (.I0(m_axi_rdata[100]),
        .I1(m_axi_rdata[68]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F000C0AAAAAAAA)) 
    \m_payload_i[7]_i_3 
       (.I0(\skid_buffer_reg_n_0_[7] ),
        .I1(m_axi_rdata[36]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBABABA)) 
    \m_payload_i[8]_i_1 
       (.I0(\m_payload_i[8]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[8] ),
        .I3(m_axi_rdata[5]),
        .I4(\m_payload_i[34]_i_4_n_0 ),
        .I5(\m_payload_i[8]_i_3_n_0 ),
        .O(skid_buffer[8]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[8]_i_2 
       (.I0(m_axi_rdata[133]),
        .I1(m_axi_rdata[101]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[8]_i_3 
       (.I0(m_axi_rdata[69]),
        .I1(m_axi_rdata[37]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBABABA)) 
    \m_payload_i[9]_i_1 
       (.I0(\m_payload_i[9]_i_2_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[9] ),
        .I3(m_axi_rdata[6]),
        .I4(\m_payload_i[34]_i_4_n_0 ),
        .I5(\m_payload_i[9]_i_3_n_0 ),
        .O(skid_buffer[9]));
  LUT6 #(
    .INIT(64'h000AC00000000000)) 
    \m_payload_i[9]_i_2 
       (.I0(m_axi_rdata[134]),
        .I1(m_axi_rdata[102]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000AC000000000)) 
    \m_payload_i[9]_i_3 
       (.I0(m_axi_rdata[70]),
        .I1(m_axi_rdata[38]),
        .I2(\m_atarget_enc_reg[2]_1 [0]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [2]),
        .I5(aa_rready),
        .O(\m_payload_i[9]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[0] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[10] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[11] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[12] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[13] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[14] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[15] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[16] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[17] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[18] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[19] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[20] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[21] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[22] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[23] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[24] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[25] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[26] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[27] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[28] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[29] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[30] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[31] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[32] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[33] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[34] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[3] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[4] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[5] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[6] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[7] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[8] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[9] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[9]),
        .Q(Q[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0C0000A0)) 
    m_valid_i_i_4
       (.I0(m_axi_rvalid[3]),
        .I1(m_axi_rvalid[2]),
        .I2(\m_atarget_enc_reg[2]_1 [2]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [0]),
        .O(m_valid_i_reg_1));
  LUT5 #(
    .INIT(32'h000C0A00)) 
    m_valid_i_i_6
       (.I0(m_axi_rvalid[1]),
        .I1(m_axi_rvalid[0]),
        .I2(\m_atarget_enc_reg[2]_1 [2]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .I4(\m_atarget_enc_reg[2]_1 [0]),
        .O(m_valid_i_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    m_valid_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(\aresetn_d_reg[1]_0 ),
        .Q(sr_rvalid),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    s_ready_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(\aresetn_d_reg[0]_0 ),
        .Q(aa_rready),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "189" *) 
  LUT4 #(
    .INIT(16'h2EEE)) 
    \skid_buffer[0]_i_1 
       (.I0(\skid_buffer_reg_n_0_[0] ),
        .I1(aa_rready),
        .I2(\m_atarget_enc_reg[2]_1 [2]),
        .I3(\m_atarget_enc_reg[2]_1 [1]),
        .O(skid_buffer[0]));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[0]),
        .Q(\skid_buffer_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[10] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[10]),
        .Q(\skid_buffer_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[11] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[11]),
        .Q(\skid_buffer_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[12] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[12]),
        .Q(\skid_buffer_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[13] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[13]),
        .Q(\skid_buffer_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[14] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[14]),
        .Q(\skid_buffer_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[15] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[15]),
        .Q(\skid_buffer_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[16] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[16]),
        .Q(\skid_buffer_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[17] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[17]),
        .Q(\skid_buffer_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[18] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[18]),
        .Q(\skid_buffer_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[19] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[19]),
        .Q(\skid_buffer_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[20] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[20]),
        .Q(\skid_buffer_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[21] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[21]),
        .Q(\skid_buffer_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[22] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[22]),
        .Q(\skid_buffer_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[23] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[23]),
        .Q(\skid_buffer_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[24] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[24]),
        .Q(\skid_buffer_reg_n_0_[24] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[25] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[25]),
        .Q(\skid_buffer_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[26] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[26]),
        .Q(\skid_buffer_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[27] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[27]),
        .Q(\skid_buffer_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[28] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[28]),
        .Q(\skid_buffer_reg_n_0_[28] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[29] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[29]),
        .Q(\skid_buffer_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[30] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[30]),
        .Q(\skid_buffer_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[31] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[31]),
        .Q(\skid_buffer_reg_n_0_[31] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[32] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[32]),
        .Q(\skid_buffer_reg_n_0_[32] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[33] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[33]),
        .Q(\skid_buffer_reg_n_0_[33] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[34] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[34]),
        .Q(\skid_buffer_reg_n_0_[34] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[3] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[3]),
        .Q(\skid_buffer_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[4] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[4]),
        .Q(\skid_buffer_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[5] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[5]),
        .Q(\skid_buffer_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[6] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[6]),
        .Q(\skid_buffer_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[7] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[7]),
        .Q(\skid_buffer_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[8] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[8]),
        .Q(\skid_buffer_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[9] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[9]),
        .Q(\skid_buffer_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "ublaze_sopc_xlconcat_0_0,xlconcat_v2_1_1_xlconcat,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "xlconcat_v2_1_1_xlconcat,Vivado 2018.2.2" *) 
module ublaze_sopc_xlconcat_0_0
   (In0,
    In1,
    dout);
  input [0:0]In0;
  input [0:0]In1;
  output [1:0]dout;

  wire [0:0]In0;

  assign dout[0] = In0;
endmodule

module vga
   (VidOnxS_reg,
    RstxRI,
    \VgaSyncxS_reg[HSyncxS] ,
    \VgaSyncxS_reg[VSyncxS] ,
    VidOnxS_reg_rep,
    VidOnxS_reg_rep__0,
    Q,
    VidOnxS_reg_rep_0,
    VidOnxS_reg_rep__0_0,
    VidOnxS_reg_rep__0_1,
    S,
    DI,
    \VCountxD_reg[7] ,
    \VCountxD_reg[7]_0 ,
    \VCountxD_reg[7]_1 ,
    \VCountxD_reg[6] ,
    \VCountxD_reg[6]_0 ,
    \VCountxD_reg[5] ,
    \HCountxD_reg[7] ,
    VidOnxS_reg_rep_1,
    \HCountxD_reg[6] ,
    VidOnxS_reg_rep_2,
    \HCountxD_reg[15] ,
    VidOnxS_reg_rep__0_2,
    \VCountxD_reg[14] ,
    \VCountxD_reg[15] ,
    VidOnxS_reg_rep__0_3,
    VidOnxS_reg_rep__0_4,
    VidOnxS_reg_rep__0_5,
    \VCountxD_reg[15]_0 ,
    \VCountxD_reg[15]_1 ,
    \VCountxD_reg[14]_0 ,
    \VCountxD_reg[15]_2 ,
    \HCountxD_reg[6]_0 ,
    \HCountxD_reg[15]_0 ,
    ClkVgaxCO,
    \TmdsEncodedDataxDO_reg[8] ,
    \TmdsEncodedDataxDO_reg[0] ,
    \TmdsEncodedDataxDO_reg[4] ,
    \DataxD_reg[0] ,
    \DataxD_reg[23] ,
    \DataxD[21]_i_2 ,
    \DataxD[21]_i_2_0 ,
    \DataxD[21]_i_2_1 ,
    \DataxD[21]_i_2_2 ,
    CO,
    PllLockedxSO);
  output VidOnxS_reg;
  output RstxRI;
  output \VgaSyncxS_reg[HSyncxS] ;
  output \VgaSyncxS_reg[VSyncxS] ;
  output VidOnxS_reg_rep;
  output VidOnxS_reg_rep__0;
  output [2:0]Q;
  output VidOnxS_reg_rep_0;
  output [1:0]VidOnxS_reg_rep__0_0;
  output VidOnxS_reg_rep__0_1;
  output [3:0]S;
  output [2:0]DI;
  output [3:0]\VCountxD_reg[7] ;
  output [3:0]\VCountxD_reg[7]_0 ;
  output [3:0]\VCountxD_reg[7]_1 ;
  output [0:0]\VCountxD_reg[6] ;
  output [3:0]\VCountxD_reg[6]_0 ;
  output [2:0]\VCountxD_reg[5] ;
  output [3:0]\HCountxD_reg[7] ;
  output [3:0]VidOnxS_reg_rep_1;
  output [3:0]\HCountxD_reg[6] ;
  output [3:0]VidOnxS_reg_rep_2;
  output [3:0]\HCountxD_reg[15] ;
  output [0:0]VidOnxS_reg_rep__0_2;
  output [3:0]\VCountxD_reg[14] ;
  output [3:0]\VCountxD_reg[15] ;
  output VidOnxS_reg_rep__0_3;
  output VidOnxS_reg_rep__0_4;
  output [23:0]VidOnxS_reg_rep__0_5;
  output [3:0]\VCountxD_reg[15]_0 ;
  output [3:0]\VCountxD_reg[15]_1 ;
  output [3:0]\VCountxD_reg[14]_0 ;
  output [3:0]\VCountxD_reg[15]_2 ;
  output [3:0]\HCountxD_reg[6]_0 ;
  output [3:0]\HCountxD_reg[15]_0 ;
  input ClkVgaxCO;
  input [3:0]\TmdsEncodedDataxDO_reg[8] ;
  input \TmdsEncodedDataxDO_reg[0] ;
  input \TmdsEncodedDataxDO_reg[4] ;
  input [0:0]\DataxD_reg[0] ;
  input [23:0]\DataxD_reg[23] ;
  input [0:0]\DataxD[21]_i_2 ;
  input [0:0]\DataxD[21]_i_2_0 ;
  input [0:0]\DataxD[21]_i_2_1 ;
  input [0:0]\DataxD[21]_i_2_2 ;
  input [0:0]CO;
  input PllLockedxSO;

  wire [0:0]CO;
  wire ClkVgaxCO;
  wire [2:0]DI;
  wire [0:0]\DataxD[21]_i_2 ;
  wire [0:0]\DataxD[21]_i_2_0 ;
  wire [0:0]\DataxD[21]_i_2_1 ;
  wire [0:0]\DataxD[21]_i_2_2 ;
  wire [0:0]\DataxD_reg[0] ;
  wire [23:0]\DataxD_reg[23] ;
  wire [3:0]\HCountxD_reg[15] ;
  wire [3:0]\HCountxD_reg[15]_0 ;
  wire [3:0]\HCountxD_reg[6] ;
  wire [3:0]\HCountxD_reg[6]_0 ;
  wire [3:0]\HCountxD_reg[7] ;
  wire PllLockedxSO;
  wire [2:0]Q;
  wire RstxRI;
  wire [3:0]S;
  wire \TmdsEncodedDataxDO_reg[0] ;
  wire \TmdsEncodedDataxDO_reg[4] ;
  wire [3:0]\TmdsEncodedDataxDO_reg[8] ;
  wire [3:0]\VCountxD_reg[14] ;
  wire [3:0]\VCountxD_reg[14]_0 ;
  wire [3:0]\VCountxD_reg[15] ;
  wire [3:0]\VCountxD_reg[15]_0 ;
  wire [3:0]\VCountxD_reg[15]_1 ;
  wire [3:0]\VCountxD_reg[15]_2 ;
  wire [2:0]\VCountxD_reg[5] ;
  wire [0:0]\VCountxD_reg[6] ;
  wire [3:0]\VCountxD_reg[6]_0 ;
  wire [3:0]\VCountxD_reg[7] ;
  wire [3:0]\VCountxD_reg[7]_0 ;
  wire [3:0]\VCountxD_reg[7]_1 ;
  wire \VgaSyncxS_reg[HSyncxS] ;
  wire \VgaSyncxS_reg[VSyncxS] ;
  wire VidOnxS_reg;
  wire VidOnxS_reg_rep;
  wire VidOnxS_reg_rep_0;
  wire [3:0]VidOnxS_reg_rep_1;
  wire [3:0]VidOnxS_reg_rep_2;
  wire VidOnxS_reg_rep__0;
  wire [1:0]VidOnxS_reg_rep__0_0;
  wire VidOnxS_reg_rep__0_1;
  wire [0:0]VidOnxS_reg_rep__0_2;
  wire VidOnxS_reg_rep__0_3;
  wire VidOnxS_reg_rep__0_4;
  wire [23:0]VidOnxS_reg_rep__0_5;

  vga_controler VgaControlerxI
       (.AR(RstxRI),
        .CO(CO),
        .ClkVgaxCO(ClkVgaxCO),
        .DI(DI),
        .\DataxD[21]_i_2_0 (\DataxD[21]_i_2 ),
        .\DataxD[21]_i_2_1 (\DataxD[21]_i_2_0 ),
        .\DataxD[21]_i_2_2 (\DataxD[21]_i_2_1 ),
        .\DataxD[21]_i_2_3 (\DataxD[21]_i_2_2 ),
        .\DataxD_reg[0] (\DataxD_reg[0] ),
        .\DataxD_reg[23] (\DataxD_reg[23] ),
        .\HCountxD_reg[15]_0 (\HCountxD_reg[15] ),
        .\HCountxD_reg[15]_1 (\HCountxD_reg[15]_0 ),
        .\HCountxD_reg[6]_0 (\HCountxD_reg[6] ),
        .\HCountxD_reg[6]_1 (\HCountxD_reg[6]_0 ),
        .\HCountxD_reg[7]_0 (\HCountxD_reg[7] ),
        .PllLockedxSO(PllLockedxSO),
        .Q(Q),
        .S(S),
        .\TmdsEncodedDataxDO_reg[0] (\TmdsEncodedDataxDO_reg[0] ),
        .\TmdsEncodedDataxDO_reg[4] (\TmdsEncodedDataxDO_reg[4] ),
        .\TmdsEncodedDataxDO_reg[8] (\TmdsEncodedDataxDO_reg[8] ),
        .\VCountxD_reg[14]_0 (\VCountxD_reg[14] ),
        .\VCountxD_reg[14]_1 (\VCountxD_reg[14]_0 ),
        .\VCountxD_reg[15]_0 (\VCountxD_reg[15] ),
        .\VCountxD_reg[15]_1 (\VCountxD_reg[15]_0 ),
        .\VCountxD_reg[15]_2 (\VCountxD_reg[15]_1 ),
        .\VCountxD_reg[15]_3 (\VCountxD_reg[15]_2 ),
        .\VCountxD_reg[5]_0 (\VCountxD_reg[5] ),
        .\VCountxD_reg[6]_0 (\VCountxD_reg[6] ),
        .\VCountxD_reg[6]_1 (\VCountxD_reg[6]_0 ),
        .\VCountxD_reg[7]_0 (\VCountxD_reg[7] ),
        .\VCountxD_reg[7]_1 (\VCountxD_reg[7]_0 ),
        .\VCountxD_reg[7]_2 (\VCountxD_reg[7]_1 ),
        .\VgaSyncxS_reg[HSyncxS] (\VgaSyncxS_reg[HSyncxS] ),
        .\VgaSyncxS_reg[VSyncxS] (\VgaSyncxS_reg[VSyncxS] ),
        .VidOnxS_reg_0(VidOnxS_reg),
        .VidOnxS_reg_rep_0(VidOnxS_reg_rep),
        .VidOnxS_reg_rep_1(VidOnxS_reg_rep_0),
        .VidOnxS_reg_rep_2(VidOnxS_reg_rep_1),
        .VidOnxS_reg_rep_3(VidOnxS_reg_rep_2),
        .VidOnxS_reg_rep__0_0(VidOnxS_reg_rep__0),
        .VidOnxS_reg_rep__0_1(VidOnxS_reg_rep__0_0),
        .VidOnxS_reg_rep__0_2(VidOnxS_reg_rep__0_1),
        .VidOnxS_reg_rep__0_3(VidOnxS_reg_rep__0_2),
        .VidOnxS_reg_rep__0_4(VidOnxS_reg_rep__0_3),
        .VidOnxS_reg_rep__0_5(VidOnxS_reg_rep__0_4),
        .VidOnxS_reg_rep__0_6(VidOnxS_reg_rep__0_5));
endmodule

module vga_controler
   (VidOnxS_reg_0,
    AR,
    \VgaSyncxS_reg[HSyncxS] ,
    \VgaSyncxS_reg[VSyncxS] ,
    VidOnxS_reg_rep_0,
    VidOnxS_reg_rep__0_0,
    Q,
    VidOnxS_reg_rep_1,
    VidOnxS_reg_rep__0_1,
    VidOnxS_reg_rep__0_2,
    S,
    DI,
    \VCountxD_reg[7]_0 ,
    \VCountxD_reg[7]_1 ,
    \VCountxD_reg[7]_2 ,
    \VCountxD_reg[6]_0 ,
    \VCountxD_reg[6]_1 ,
    \VCountxD_reg[5]_0 ,
    \HCountxD_reg[7]_0 ,
    VidOnxS_reg_rep_2,
    \HCountxD_reg[6]_0 ,
    VidOnxS_reg_rep_3,
    \HCountxD_reg[15]_0 ,
    VidOnxS_reg_rep__0_3,
    \VCountxD_reg[14]_0 ,
    \VCountxD_reg[15]_0 ,
    VidOnxS_reg_rep__0_4,
    VidOnxS_reg_rep__0_5,
    VidOnxS_reg_rep__0_6,
    \VCountxD_reg[15]_1 ,
    \VCountxD_reg[15]_2 ,
    \VCountxD_reg[14]_1 ,
    \VCountxD_reg[15]_3 ,
    \HCountxD_reg[6]_1 ,
    \HCountxD_reg[15]_1 ,
    ClkVgaxCO,
    \TmdsEncodedDataxDO_reg[8] ,
    \TmdsEncodedDataxDO_reg[0] ,
    \TmdsEncodedDataxDO_reg[4] ,
    \DataxD_reg[0] ,
    \DataxD_reg[23] ,
    \DataxD[21]_i_2_0 ,
    \DataxD[21]_i_2_1 ,
    \DataxD[21]_i_2_2 ,
    \DataxD[21]_i_2_3 ,
    CO,
    PllLockedxSO);
  output VidOnxS_reg_0;
  output [0:0]AR;
  output \VgaSyncxS_reg[HSyncxS] ;
  output \VgaSyncxS_reg[VSyncxS] ;
  output VidOnxS_reg_rep_0;
  output VidOnxS_reg_rep__0_0;
  output [2:0]Q;
  output VidOnxS_reg_rep_1;
  output [1:0]VidOnxS_reg_rep__0_1;
  output VidOnxS_reg_rep__0_2;
  output [3:0]S;
  output [2:0]DI;
  output [3:0]\VCountxD_reg[7]_0 ;
  output [3:0]\VCountxD_reg[7]_1 ;
  output [3:0]\VCountxD_reg[7]_2 ;
  output [0:0]\VCountxD_reg[6]_0 ;
  output [3:0]\VCountxD_reg[6]_1 ;
  output [2:0]\VCountxD_reg[5]_0 ;
  output [3:0]\HCountxD_reg[7]_0 ;
  output [3:0]VidOnxS_reg_rep_2;
  output [3:0]\HCountxD_reg[6]_0 ;
  output [3:0]VidOnxS_reg_rep_3;
  output [3:0]\HCountxD_reg[15]_0 ;
  output [0:0]VidOnxS_reg_rep__0_3;
  output [3:0]\VCountxD_reg[14]_0 ;
  output [3:0]\VCountxD_reg[15]_0 ;
  output VidOnxS_reg_rep__0_4;
  output VidOnxS_reg_rep__0_5;
  output [23:0]VidOnxS_reg_rep__0_6;
  output [3:0]\VCountxD_reg[15]_1 ;
  output [3:0]\VCountxD_reg[15]_2 ;
  output [3:0]\VCountxD_reg[14]_1 ;
  output [3:0]\VCountxD_reg[15]_3 ;
  output [3:0]\HCountxD_reg[6]_1 ;
  output [3:0]\HCountxD_reg[15]_1 ;
  input ClkVgaxCO;
  input [3:0]\TmdsEncodedDataxDO_reg[8] ;
  input \TmdsEncodedDataxDO_reg[0] ;
  input \TmdsEncodedDataxDO_reg[4] ;
  input [0:0]\DataxD_reg[0] ;
  input [23:0]\DataxD_reg[23] ;
  input [0:0]\DataxD[21]_i_2_0 ;
  input [0:0]\DataxD[21]_i_2_1 ;
  input [0:0]\DataxD[21]_i_2_2 ;
  input [0:0]\DataxD[21]_i_2_3 ;
  input [0:0]CO;
  input PllLockedxSO;

  wire [0:0]AR;
  wire [0:0]CO;
  wire ClkVgaxCO;
  wire [2:0]DI;
  wire \DataxD[21]_i_100_n_0 ;
  wire \DataxD[21]_i_101_n_0 ;
  wire \DataxD[21]_i_102_n_0 ;
  wire \DataxD[21]_i_107_n_0 ;
  wire \DataxD[21]_i_108_n_0 ;
  wire \DataxD[21]_i_109_n_0 ;
  wire \DataxD[21]_i_110_n_0 ;
  wire \DataxD[21]_i_14_n_0 ;
  wire \DataxD[21]_i_15_n_0 ;
  wire \DataxD[21]_i_16_n_0 ;
  wire \DataxD[21]_i_17_n_0 ;
  wire \DataxD[21]_i_18_n_0 ;
  wire \DataxD[21]_i_20_n_0 ;
  wire \DataxD[21]_i_21_n_0 ;
  wire \DataxD[21]_i_22_n_0 ;
  wire \DataxD[21]_i_23_n_0 ;
  wire \DataxD[21]_i_24_n_0 ;
  wire \DataxD[21]_i_25_n_0 ;
  wire \DataxD[21]_i_27_n_0 ;
  wire \DataxD[21]_i_28_n_0 ;
  wire \DataxD[21]_i_29_n_0 ;
  wire [0:0]\DataxD[21]_i_2_0 ;
  wire [0:0]\DataxD[21]_i_2_1 ;
  wire [0:0]\DataxD[21]_i_2_2 ;
  wire [0:0]\DataxD[21]_i_2_3 ;
  wire \DataxD[21]_i_2_n_0 ;
  wire \DataxD[21]_i_30_n_0 ;
  wire \DataxD[21]_i_32_n_0 ;
  wire \DataxD[21]_i_33_n_0 ;
  wire \DataxD[21]_i_34_n_0 ;
  wire \DataxD[21]_i_35_n_0 ;
  wire \DataxD[21]_i_36_n_0 ;
  wire \DataxD[21]_i_38_n_0 ;
  wire \DataxD[21]_i_39_n_0 ;
  wire \DataxD[21]_i_3_n_0 ;
  wire \DataxD[21]_i_40_n_0 ;
  wire \DataxD[21]_i_41_n_0 ;
  wire \DataxD[21]_i_42_n_0 ;
  wire \DataxD[21]_i_43_n_0 ;
  wire \DataxD[21]_i_44_n_0 ;
  wire \DataxD[21]_i_45_n_0 ;
  wire \DataxD[21]_i_47_n_0 ;
  wire \DataxD[21]_i_48_n_0 ;
  wire \DataxD[21]_i_49_n_0 ;
  wire \DataxD[21]_i_4_n_0 ;
  wire \DataxD[21]_i_50_n_0 ;
  wire \DataxD[21]_i_51_n_0 ;
  wire \DataxD[21]_i_53_n_0 ;
  wire \DataxD[21]_i_54_n_0 ;
  wire \DataxD[21]_i_55_n_0 ;
  wire \DataxD[21]_i_57_n_0 ;
  wire \DataxD[21]_i_58_n_0 ;
  wire \DataxD[21]_i_59_n_0 ;
  wire \DataxD[21]_i_5_n_0 ;
  wire \DataxD[21]_i_60_n_0 ;
  wire \DataxD[21]_i_61_n_0 ;
  wire \DataxD[21]_i_62_n_0 ;
  wire \DataxD[21]_i_63_n_0 ;
  wire \DataxD[21]_i_64_n_0 ;
  wire \DataxD[21]_i_65_n_0 ;
  wire \DataxD[21]_i_66_n_0 ;
  wire \DataxD[21]_i_67_n_0 ;
  wire \DataxD[21]_i_68_n_0 ;
  wire \DataxD[21]_i_69_n_0 ;
  wire \DataxD[21]_i_70_n_0 ;
  wire \DataxD[21]_i_71_n_0 ;
  wire \DataxD[21]_i_72_n_0 ;
  wire \DataxD[21]_i_73_n_0 ;
  wire \DataxD[21]_i_74_n_0 ;
  wire \DataxD[21]_i_75_n_0 ;
  wire \DataxD[21]_i_76_n_0 ;
  wire \DataxD[21]_i_77_n_0 ;
  wire \DataxD[21]_i_78_n_0 ;
  wire \DataxD[21]_i_79_n_0 ;
  wire \DataxD[21]_i_80_n_0 ;
  wire \DataxD[21]_i_81_n_0 ;
  wire \DataxD[21]_i_82_n_0 ;
  wire \DataxD[21]_i_83_n_0 ;
  wire \DataxD[21]_i_84_n_0 ;
  wire \DataxD[21]_i_85_n_0 ;
  wire \DataxD[21]_i_86_n_0 ;
  wire \DataxD[21]_i_87_n_0 ;
  wire \DataxD[21]_i_88_n_0 ;
  wire \DataxD[21]_i_89_n_0 ;
  wire \DataxD[21]_i_90_n_0 ;
  wire \DataxD[21]_i_91_n_0 ;
  wire \DataxD[21]_i_92_n_0 ;
  wire \DataxD[21]_i_93_n_0 ;
  wire \DataxD[21]_i_94_n_0 ;
  wire \DataxD[21]_i_95_n_0 ;
  wire \DataxD[21]_i_96_n_0 ;
  wire \DataxD[21]_i_97_n_0 ;
  wire \DataxD[21]_i_98_n_0 ;
  wire \DataxD[21]_i_99_n_0 ;
  wire \DataxD[23]_i_10_n_0 ;
  wire \DataxD[23]_i_11_n_0 ;
  wire \DataxD[23]_i_12_n_0 ;
  wire \DataxD[23]_i_13_n_0 ;
  wire \DataxD[23]_i_14_n_0 ;
  wire \DataxD[23]_i_15_n_0 ;
  wire \DataxD[23]_i_16_n_0 ;
  wire \DataxD[23]_i_4_n_0 ;
  wire \DataxD[23]_i_5_n_0 ;
  wire \DataxD[23]_i_6_n_0 ;
  wire \DataxD[23]_i_7_n_0 ;
  wire \DataxD[23]_i_8_n_0 ;
  wire \DataxD[23]_i_9_n_0 ;
  wire [0:0]\DataxD_reg[0] ;
  wire \DataxD_reg[21]_i_13_n_0 ;
  wire \DataxD_reg[21]_i_19_n_0 ;
  wire \DataxD_reg[21]_i_26_n_0 ;
  wire \DataxD_reg[21]_i_31_n_0 ;
  wire \DataxD_reg[21]_i_37_n_0 ;
  wire \DataxD_reg[21]_i_46_n_0 ;
  wire \DataxD_reg[21]_i_52_n_0 ;
  wire [23:0]\DataxD_reg[23] ;
  wire \DataxD_reg[23]_i_3_n_0 ;
  wire \FpgaUserCDxB.ImageGeneratorxI/DataxD210_in ;
  wire \FpgaUserCDxB.ImageGeneratorxI/DataxD211_in ;
  wire \FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ;
  wire \FpgaUserCDxB.ImageGeneratorxI/DataxD28_in ;
  wire \FpgaUserCDxB.ImageGeneratorxI/DataxD30_in ;
  wire \FpgaUserCDxB.ImageGeneratorxI/DataxD32_in ;
  wire \FpgaUserCDxB.ImageGeneratorxI/DataxD34_in ;
  wire \FpgaUserCDxB.ImageGeneratorxI/DataxD36_in ;
  wire [15:0]HCountCtrl2StripxD;
  wire [9:1]HCountxD;
  wire [15:0]HCountxD_0;
  wire \HCountxD_reg[12]_i_2_n_0 ;
  wire [3:0]\HCountxD_reg[15]_0 ;
  wire [3:0]\HCountxD_reg[15]_1 ;
  wire \HCountxD_reg[4]_i_2_n_0 ;
  wire [3:0]\HCountxD_reg[6]_0 ;
  wire [3:0]\HCountxD_reg[6]_1 ;
  wire [3:0]\HCountxD_reg[7]_0 ;
  wire \HCountxD_reg[8]_i_2_n_0 ;
  wire PllLockedxSO;
  wire [2:0]Q;
  wire [3:0]S;
  wire \TmdsEncodedDataxDO_reg[0] ;
  wire \TmdsEncodedDataxDO_reg[4] ;
  wire [3:0]\TmdsEncodedDataxDO_reg[8] ;
  wire [15:0]VCountxD;
  wire \VCountxD[0]_i_1_n_0 ;
  wire \VCountxD[10]_i_1_n_0 ;
  wire \VCountxD[11]_i_1_n_0 ;
  wire \VCountxD[12]_i_1_n_0 ;
  wire \VCountxD[13]_i_1_n_0 ;
  wire \VCountxD[14]_i_1_n_0 ;
  wire \VCountxD[15]_i_10_n_0 ;
  wire \VCountxD[15]_i_11_n_0 ;
  wire \VCountxD[15]_i_12_n_0 ;
  wire \VCountxD[15]_i_2_n_0 ;
  wire \VCountxD[15]_i_3_n_0 ;
  wire \VCountxD[15]_i_4_n_0 ;
  wire \VCountxD[15]_i_5_n_0 ;
  wire \VCountxD[15]_i_6_n_0 ;
  wire \VCountxD[15]_i_8_n_0 ;
  wire \VCountxD[15]_i_9_n_0 ;
  wire \VCountxD[1]_i_1_n_0 ;
  wire \VCountxD[2]_i_1_n_0 ;
  wire \VCountxD[3]_i_1_n_0 ;
  wire \VCountxD[4]_i_1_n_0 ;
  wire \VCountxD[5]_i_1_n_0 ;
  wire \VCountxD[6]_i_1_n_0 ;
  wire \VCountxD[7]_i_1_n_0 ;
  wire \VCountxD[8]_i_1_n_0 ;
  wire \VCountxD[9]_i_1_n_0 ;
  wire VCountxD_1;
  wire \VCountxD_reg[12]_i_2_n_0 ;
  wire \VCountxD_reg[12]_i_2_n_4 ;
  wire \VCountxD_reg[12]_i_2_n_5 ;
  wire \VCountxD_reg[12]_i_2_n_6 ;
  wire \VCountxD_reg[12]_i_2_n_7 ;
  wire [3:0]\VCountxD_reg[14]_0 ;
  wire [3:0]\VCountxD_reg[14]_1 ;
  wire [3:0]\VCountxD_reg[15]_0 ;
  wire [3:0]\VCountxD_reg[15]_1 ;
  wire [3:0]\VCountxD_reg[15]_2 ;
  wire [3:0]\VCountxD_reg[15]_3 ;
  wire \VCountxD_reg[15]_i_7_n_5 ;
  wire \VCountxD_reg[15]_i_7_n_6 ;
  wire \VCountxD_reg[15]_i_7_n_7 ;
  wire \VCountxD_reg[4]_i_2_n_0 ;
  wire \VCountxD_reg[4]_i_2_n_4 ;
  wire \VCountxD_reg[4]_i_2_n_5 ;
  wire \VCountxD_reg[4]_i_2_n_6 ;
  wire \VCountxD_reg[4]_i_2_n_7 ;
  wire [2:0]\VCountxD_reg[5]_0 ;
  wire [0:0]\VCountxD_reg[6]_0 ;
  wire [3:0]\VCountxD_reg[6]_1 ;
  wire [3:0]\VCountxD_reg[7]_0 ;
  wire [3:0]\VCountxD_reg[7]_1 ;
  wire [3:0]\VCountxD_reg[7]_2 ;
  wire \VCountxD_reg[8]_i_2_n_0 ;
  wire \VCountxD_reg[8]_i_2_n_4 ;
  wire \VCountxD_reg[8]_i_2_n_5 ;
  wire \VCountxD_reg[8]_i_2_n_6 ;
  wire \VCountxD_reg[8]_i_2_n_7 ;
  wire \VgaSyncxS[HSyncxS]_i_1_n_0 ;
  wire \VgaSyncxS[HSyncxS]_i_2_n_0 ;
  wire \VgaSyncxS[HSyncxS]_i_3_n_0 ;
  wire \VgaSyncxS[HSyncxS]_i_4_n_0 ;
  wire \VgaSyncxS[HSyncxS]_i_5_n_0 ;
  wire \VgaSyncxS[HSyncxS]_i_6_n_0 ;
  wire \VgaSyncxS[VSyncxS]_i_1_n_0 ;
  wire \VgaSyncxS[VSyncxS]_i_2_n_0 ;
  wire \VgaSyncxS[VSyncxS]_i_3_n_0 ;
  wire \VgaSyncxS[VSyncxS]_i_4_n_0 ;
  wire \VgaSyncxS[VSyncxS]_i_5_n_0 ;
  wire \VgaSyncxS[VSyncxS]_i_6_n_0 ;
  wire \VgaSyncxS[VSyncxS]_i_7_n_0 ;
  wire \VgaSyncxS[VSyncxS]_i_8_n_0 ;
  wire \VgaSyncxS_reg[HSyncxS] ;
  wire \VgaSyncxS_reg[VSyncxS] ;
  wire VidOnxS_i_1_n_0;
  wire VidOnxS_i_2_n_0;
  wire VidOnxS_i_3_n_0;
  wire VidOnxS_i_4_n_0;
  wire VidOnxS_i_5_n_0;
  wire VidOnxS_i_6_n_0;
  wire VidOnxS_i_7_n_0;
  wire VidOnxS_i_8_n_0;
  wire VidOnxS_reg_0;
  wire VidOnxS_reg_rep_0;
  wire VidOnxS_reg_rep_1;
  wire [3:0]VidOnxS_reg_rep_2;
  wire [3:0]VidOnxS_reg_rep_3;
  wire VidOnxS_reg_rep__0_0;
  wire [1:0]VidOnxS_reg_rep__0_1;
  wire VidOnxS_reg_rep__0_2;
  wire [0:0]VidOnxS_reg_rep__0_3;
  wire VidOnxS_reg_rep__0_4;
  wire VidOnxS_reg_rep__0_5;
  wire [23:0]VidOnxS_reg_rep__0_6;
  wire VidOnxS_rep_i_1__0_n_0;
  wire VidOnxS_rep_i_1_n_0;
  wire [15:1]data0;
  wire [2:0]\NLW_DataxD_reg[21]_i_10_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_10_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_11_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_11_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_12_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_12_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_13_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_13_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_19_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_19_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_26_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_26_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_31_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_31_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_37_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_37_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_46_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_46_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_52_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_52_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_6_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_6_O_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_7_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_7_O_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_8_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_8_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[21]_i_9_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[21]_i_9_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[23]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[23]_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_DataxD_reg[23]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_DataxD_reg[23]_i_3_O_UNCONNECTED ;
  wire [2:0]\NLW_HCountxD_reg[12]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_HCountxD_reg[15]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_HCountxD_reg[15]_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_HCountxD_reg[4]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_HCountxD_reg[8]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_VCountxD_reg[12]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_VCountxD_reg[15]_i_7_CO_UNCONNECTED ;
  wire [3:3]\NLW_VCountxD_reg[15]_i_7_O_UNCONNECTED ;
  wire [2:0]\NLW_VCountxD_reg[4]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_VCountxD_reg[8]_i_2_CO_UNCONNECTED ;

  LUT3 #(
    .INIT(8'h7F)) 
    DataxD2_carry__0_i_1
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[9]),
        .I2(HCountCtrl2StripxD[8]),
        .O(VidOnxS_reg_rep__0_3));
  LUT3 #(
    .INIT(8'h1F)) 
    DataxD2_carry__0_i_2
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\HCountxD_reg[15]_1 [3]));
  LUT3 #(
    .INIT(8'h1F)) 
    DataxD2_carry__0_i_3
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\HCountxD_reg[15]_1 [2]));
  LUT3 #(
    .INIT(8'h1F)) 
    DataxD2_carry__0_i_4
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\HCountxD_reg[15]_1 [1]));
  LUT3 #(
    .INIT(8'h80)) 
    DataxD2_carry__0_i_5
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\HCountxD_reg[15]_1 [0]));
  LUT3 #(
    .INIT(8'h7F)) 
    DataxD2_carry_i_1
       (.I0(HCountCtrl2StripxD[7]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[6]),
        .O(\HCountxD_reg[7]_0 [3]));
  LUT3 #(
    .INIT(8'h7F)) 
    DataxD2_carry_i_2
       (.I0(HCountCtrl2StripxD[4]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[5]),
        .O(\HCountxD_reg[7]_0 [2]));
  LUT3 #(
    .INIT(8'h7F)) 
    DataxD2_carry_i_3
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[3]),
        .I2(HCountCtrl2StripxD[2]),
        .O(\HCountxD_reg[7]_0 [1]));
  LUT3 #(
    .INIT(8'h7F)) 
    DataxD2_carry_i_4
       (.I0(HCountCtrl2StripxD[0]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[1]),
        .O(\HCountxD_reg[7]_0 [0]));
  LUT3 #(
    .INIT(8'h80)) 
    DataxD2_carry_i_5
       (.I0(HCountCtrl2StripxD[6]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[7]),
        .O(\HCountxD_reg[6]_1 [3]));
  LUT3 #(
    .INIT(8'h80)) 
    DataxD2_carry_i_6
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\HCountxD_reg[6]_1 [2]));
  LUT3 #(
    .INIT(8'h80)) 
    DataxD2_carry_i_7
       (.I0(HCountCtrl2StripxD[2]),
        .I1(HCountCtrl2StripxD[3]),
        .I2(VidOnxS_reg_rep_0),
        .O(\HCountxD_reg[6]_1 [1]));
  LUT3 #(
    .INIT(8'h80)) 
    DataxD2_carry_i_8
       (.I0(HCountCtrl2StripxD[1]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[0]),
        .O(\HCountxD_reg[6]_1 [0]));
  LUT2 #(
    .INIT(4'h1)) 
    DataxD3_carry__0_i_1
       (.I0(VCountxD[15]),
        .I1(VCountxD[14]),
        .O(\VCountxD_reg[15]_1 [3]));
  LUT2 #(
    .INIT(4'h1)) 
    DataxD3_carry__0_i_2
       (.I0(VCountxD[13]),
        .I1(VCountxD[12]),
        .O(\VCountxD_reg[15]_1 [2]));
  LUT2 #(
    .INIT(4'h1)) 
    DataxD3_carry__0_i_3
       (.I0(VCountxD[11]),
        .I1(VCountxD[10]),
        .O(\VCountxD_reg[15]_1 [1]));
  LUT2 #(
    .INIT(4'h1)) 
    DataxD3_carry__0_i_4
       (.I0(VCountxD[9]),
        .I1(VCountxD[8]),
        .O(\VCountxD_reg[15]_1 [0]));
  LUT2 #(
    .INIT(4'h7)) 
    DataxD3_carry_i_1
       (.I0(VCountxD[6]),
        .I1(Q[2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h1)) 
    DataxD3_carry_i_2
       (.I0(VCountxD[5]),
        .I1(VCountxD[4]),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h1)) 
    DataxD3_carry_i_3
       (.I0(Q[1]),
        .I1(VCountxD[2]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h8)) 
    DataxD3_carry_i_4
       (.I0(Q[2]),
        .I1(VCountxD[6]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h2)) 
    DataxD3_carry_i_5
       (.I0(VCountxD[4]),
        .I1(VCountxD[5]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h2)) 
    DataxD3_carry_i_6
       (.I0(VCountxD[2]),
        .I1(Q[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h1)) 
    DataxD3_carry_i_7
       (.I0(VCountxD[0]),
        .I1(Q[0]),
        .O(S[0]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[0]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [0]),
        .O(VidOnxS_reg_rep__0_6[0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[10]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [10]),
        .O(VidOnxS_reg_rep__0_6[10]));
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[11]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [11]),
        .O(VidOnxS_reg_rep__0_6[11]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[12]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [12]),
        .O(VidOnxS_reg_rep__0_6[12]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[13]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [13]),
        .O(VidOnxS_reg_rep__0_6[13]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[14]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [14]),
        .O(VidOnxS_reg_rep__0_6[14]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[15]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [15]),
        .O(VidOnxS_reg_rep__0_6[15]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[16]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [16]),
        .O(VidOnxS_reg_rep__0_6[16]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[17]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [17]),
        .O(VidOnxS_reg_rep__0_6[17]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[18]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [18]),
        .O(VidOnxS_reg_rep__0_6[18]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[19]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [19]),
        .O(VidOnxS_reg_rep__0_6[19]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[1]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [1]),
        .O(VidOnxS_reg_rep__0_6[1]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[20]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [20]),
        .O(VidOnxS_reg_rep__0_6[20]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[21]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [21]),
        .O(VidOnxS_reg_rep__0_6[21]));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_100 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\DataxD[21]_i_100_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_101 
       (.I0(HCountCtrl2StripxD[3]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[2]),
        .O(\DataxD[21]_i_101_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_102 
       (.I0(HCountCtrl2StripxD[1]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[0]),
        .O(\DataxD[21]_i_102_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DataxD[21]_i_103 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[7]),
        .O(HCountxD[7]));
  LUT2 #(
    .INIT(4'h8)) 
    \DataxD[21]_i_104 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[5]),
        .O(HCountxD[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \DataxD[21]_i_105 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[3]),
        .O(HCountxD[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \DataxD[21]_i_106 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[1]),
        .O(HCountxD[1]));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_107 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[7]),
        .O(\DataxD[21]_i_107_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[21]_i_108 
       (.I0(HCountCtrl2StripxD[4]),
        .I1(HCountCtrl2StripxD[5]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_108_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_109 
       (.I0(HCountCtrl2StripxD[2]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[3]),
        .O(\DataxD[21]_i_109_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[21]_i_110 
       (.I0(HCountCtrl2StripxD[0]),
        .I1(HCountCtrl2StripxD[1]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_110_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \DataxD[21]_i_14 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[9]),
        .I2(HCountCtrl2StripxD[8]),
        .O(\DataxD[21]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_15 
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_16 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_17 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_18 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'hA8AA)) 
    \DataxD[21]_i_2 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\DataxD[21]_i_3_n_0 ),
        .I2(\DataxD[21]_i_4_n_0 ),
        .I3(\DataxD[21]_i_5_n_0 ),
        .O(\DataxD[21]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_20 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[14]),
        .I2(HCountCtrl2StripxD[15]),
        .O(\DataxD[21]_i_20_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_21 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[12]),
        .I2(HCountCtrl2StripxD[13]),
        .O(\DataxD[21]_i_21_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_22 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[10]),
        .I2(HCountCtrl2StripxD[11]),
        .O(\DataxD[21]_i_22_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_23 
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_23_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_24 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_24_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_25 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_27 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[14]),
        .I2(HCountCtrl2StripxD[15]),
        .O(\DataxD[21]_i_27_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_28 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[12]),
        .I2(HCountCtrl2StripxD[13]),
        .O(\DataxD[21]_i_28_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_29 
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \DataxD[21]_i_3 
       (.I0(\DataxD[21]_i_2_3 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD30_in ),
        .I2(\FpgaUserCDxB.ImageGeneratorxI/DataxD32_in ),
        .I3(CO),
        .O(\DataxD[21]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_30 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_30_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \DataxD[21]_i_32 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[9]),
        .I2(HCountCtrl2StripxD[8]),
        .O(\DataxD[21]_i_32_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_33 
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_33_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_34 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_34_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_35 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_35_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_36 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_36_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_38 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[14]),
        .I2(HCountCtrl2StripxD[15]),
        .O(\DataxD[21]_i_38_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_39 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[12]),
        .I2(HCountCtrl2StripxD[13]),
        .O(\DataxD[21]_i_39_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \DataxD[21]_i_4 
       (.I0(\FpgaUserCDxB.ImageGeneratorxI/DataxD36_in ),
        .I1(\DataxD[21]_i_2_1 ),
        .I2(\DataxD[21]_i_2_2 ),
        .I3(\FpgaUserCDxB.ImageGeneratorxI/DataxD34_in ),
        .O(\DataxD[21]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_40 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[10]),
        .I2(HCountCtrl2StripxD[11]),
        .O(\DataxD[21]_i_40_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_41 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_41_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_42 
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_42_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_43 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_43_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_44 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_44_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_45 
       (.I0(HCountCtrl2StripxD[9]),
        .I1(VidOnxS_reg_rep__0_0),
        .I2(HCountCtrl2StripxD[8]),
        .O(\DataxD[21]_i_45_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \DataxD[21]_i_47 
       (.I0(HCountCtrl2StripxD[9]),
        .I1(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_47_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_48 
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_48_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_49 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'h0000700070007000)) 
    \DataxD[21]_i_5 
       (.I0(\DataxD_reg[0] ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD[21]_i_2_0 ),
        .I3(\FpgaUserCDxB.ImageGeneratorxI/DataxD28_in ),
        .I4(\FpgaUserCDxB.ImageGeneratorxI/DataxD210_in ),
        .I5(\FpgaUserCDxB.ImageGeneratorxI/DataxD211_in ),
        .O(\DataxD[21]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_50 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_50_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_51 
       (.I0(HCountCtrl2StripxD[9]),
        .I1(VidOnxS_reg_rep__0_0),
        .I2(HCountCtrl2StripxD[8]),
        .O(\DataxD[21]_i_51_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_53 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[14]),
        .I2(HCountCtrl2StripxD[15]),
        .O(\DataxD[21]_i_53_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_54 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[12]),
        .I2(HCountCtrl2StripxD[13]),
        .O(\DataxD[21]_i_54_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_55 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[10]),
        .I2(HCountCtrl2StripxD[11]),
        .O(\DataxD[21]_i_55_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DataxD[21]_i_56 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[9]),
        .O(HCountxD[9]));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_57 
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_57_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_58 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_58_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_59 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_59_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[21]_i_60 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\DataxD[21]_i_60_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_61 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(HCountCtrl2StripxD[7]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_61_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \DataxD[21]_i_62 
       (.I0(HCountCtrl2StripxD[4]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[5]),
        .O(\DataxD[21]_i_62_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \DataxD[21]_i_63 
       (.I0(HCountCtrl2StripxD[3]),
        .I1(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_63_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_64 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[7]),
        .O(\DataxD[21]_i_64_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_65 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\DataxD[21]_i_65_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_66 
       (.I0(HCountCtrl2StripxD[3]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[2]),
        .O(\DataxD[21]_i_66_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_67 
       (.I0(HCountCtrl2StripxD[1]),
        .I1(HCountCtrl2StripxD[0]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_67_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_68 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[7]),
        .I2(HCountCtrl2StripxD[6]),
        .O(\DataxD[21]_i_68_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_69 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[2]),
        .I2(HCountCtrl2StripxD[3]),
        .O(\DataxD[21]_i_69_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_70 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_70_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_71 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(HCountCtrl2StripxD[7]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_71_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_72 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\DataxD[21]_i_72_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_73 
       (.I0(HCountCtrl2StripxD[3]),
        .I1(HCountCtrl2StripxD[2]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_73_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \DataxD[21]_i_74 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[10]),
        .I2(HCountCtrl2StripxD[11]),
        .O(\DataxD[21]_i_74_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_75 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_75_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_76 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\DataxD[21]_i_76_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_77 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_77_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_78 
       (.I0(HCountCtrl2StripxD[9]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[8]),
        .O(\DataxD[21]_i_78_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_79 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[7]),
        .O(\DataxD[21]_i_79_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_80 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\DataxD[21]_i_80_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \DataxD[21]_i_81 
       (.I0(HCountCtrl2StripxD[7]),
        .I1(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_81_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \DataxD[21]_i_82 
       (.I0(HCountCtrl2StripxD[4]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[5]),
        .O(\DataxD[21]_i_82_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \DataxD[21]_i_83 
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[3]),
        .I2(HCountCtrl2StripxD[2]),
        .O(\DataxD[21]_i_83_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[21]_i_84 
       (.I0(HCountCtrl2StripxD[7]),
        .I1(HCountCtrl2StripxD[6]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_84_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_85 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\DataxD[21]_i_85_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_86 
       (.I0(HCountCtrl2StripxD[2]),
        .I1(HCountCtrl2StripxD[3]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_86_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[21]_i_87 
       (.I0(HCountCtrl2StripxD[1]),
        .I1(HCountCtrl2StripxD[0]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_87_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_88 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[7]),
        .O(\DataxD[21]_i_88_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_89 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\DataxD[21]_i_89_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_90 
       (.I0(HCountCtrl2StripxD[2]),
        .I1(HCountCtrl2StripxD[3]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_90_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[21]_i_91 
       (.I0(HCountCtrl2StripxD[7]),
        .I1(HCountCtrl2StripxD[6]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_91_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_92 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[4]),
        .O(\DataxD[21]_i_92_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[21]_i_93 
       (.I0(HCountCtrl2StripxD[3]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[2]),
        .O(\DataxD[21]_i_93_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \DataxD[21]_i_94 
       (.I0(HCountCtrl2StripxD[1]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[0]),
        .O(\DataxD[21]_i_94_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \DataxD[21]_i_95 
       (.I0(HCountCtrl2StripxD[7]),
        .I1(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_95_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \DataxD[21]_i_96 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_96_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \DataxD[21]_i_97 
       (.I0(HCountCtrl2StripxD[3]),
        .I1(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_97_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \DataxD[21]_i_98 
       (.I0(HCountCtrl2StripxD[0]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[1]),
        .O(\DataxD[21]_i_98_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[21]_i_99 
       (.I0(HCountCtrl2StripxD[7]),
        .I1(HCountCtrl2StripxD[6]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[21]_i_99_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[22]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [22]),
        .O(VidOnxS_reg_rep__0_6[22]));
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[23]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [23]),
        .O(VidOnxS_reg_rep__0_6[23]));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[23]_i_10 
       (.I0(HCountCtrl2StripxD[5]),
        .I1(HCountCtrl2StripxD[4]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[23]_i_11 
       (.I0(HCountCtrl2StripxD[3]),
        .I1(HCountCtrl2StripxD[2]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[23]_i_12 
       (.I0(HCountCtrl2StripxD[1]),
        .I1(HCountCtrl2StripxD[0]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[23]_i_13 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[7]),
        .O(\DataxD[23]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[23]_i_14 
       (.I0(HCountCtrl2StripxD[4]),
        .I1(HCountCtrl2StripxD[5]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \DataxD[23]_i_15 
       (.I0(HCountCtrl2StripxD[2]),
        .I1(VidOnxS_reg_rep_0),
        .I2(HCountCtrl2StripxD[3]),
        .O(\DataxD[23]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[23]_i_16 
       (.I0(HCountCtrl2StripxD[0]),
        .I1(HCountCtrl2StripxD[1]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[23]_i_4 
       (.I0(HCountCtrl2StripxD[9]),
        .I1(HCountCtrl2StripxD[8]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[23]_i_5 
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[23]_i_6 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[23]_i_7 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \DataxD[23]_i_8 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    \DataxD[23]_i_9 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(HCountCtrl2StripxD[7]),
        .I2(VidOnxS_reg_rep_0),
        .O(\DataxD[23]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[2]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [2]),
        .O(VidOnxS_reg_rep__0_6[2]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[3]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [3]),
        .O(VidOnxS_reg_rep__0_6[3]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[4]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [4]),
        .O(VidOnxS_reg_rep__0_6[4]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[5]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [5]),
        .O(VidOnxS_reg_rep__0_6[5]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[6]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [6]),
        .O(VidOnxS_reg_rep__0_6[6]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[7]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [7]),
        .O(VidOnxS_reg_rep__0_6[7]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[8]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [8]),
        .O(VidOnxS_reg_rep__0_6[8]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'hAA2A)) 
    \DataxD[9]_i_1 
       (.I0(\DataxD[21]_i_2_n_0 ),
        .I1(\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ),
        .I2(\DataxD_reg[0] ),
        .I3(\DataxD_reg[23] [9]),
        .O(VidOnxS_reg_rep__0_6[9]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_10 
       (.CI(\DataxD_reg[21]_i_37_n_0 ),
        .CO({\FpgaUserCDxB.ImageGeneratorxI/DataxD28_in ,\NLW_DataxD_reg[21]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\DataxD[21]_i_38_n_0 ,\DataxD[21]_i_39_n_0 ,\DataxD[21]_i_40_n_0 ,\DataxD[21]_i_41_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_10_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_42_n_0 ,\DataxD[21]_i_43_n_0 ,\DataxD[21]_i_44_n_0 ,\DataxD[21]_i_45_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_11 
       (.CI(\DataxD_reg[21]_i_46_n_0 ),
        .CO({\FpgaUserCDxB.ImageGeneratorxI/DataxD210_in ,\NLW_DataxD_reg[21]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\DataxD[21]_i_47_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_11_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_48_n_0 ,\DataxD[21]_i_49_n_0 ,\DataxD[21]_i_50_n_0 ,\DataxD[21]_i_51_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_12 
       (.CI(\DataxD_reg[21]_i_52_n_0 ),
        .CO({\FpgaUserCDxB.ImageGeneratorxI/DataxD211_in ,\NLW_DataxD_reg[21]_i_12_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\DataxD[21]_i_53_n_0 ,\DataxD[21]_i_54_n_0 ,\DataxD[21]_i_55_n_0 ,HCountxD[9]}),
        .O(\NLW_DataxD_reg[21]_i_12_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_57_n_0 ,\DataxD[21]_i_58_n_0 ,\DataxD[21]_i_59_n_0 ,\DataxD[21]_i_60_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_13 
       (.CI(1'b0),
        .CO({\DataxD_reg[21]_i_13_n_0 ,\NLW_DataxD_reg[21]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\DataxD[21]_i_61_n_0 ,\DataxD[21]_i_62_n_0 ,\DataxD[21]_i_63_n_0 ,1'b0}),
        .O(\NLW_DataxD_reg[21]_i_13_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_64_n_0 ,\DataxD[21]_i_65_n_0 ,\DataxD[21]_i_66_n_0 ,\DataxD[21]_i_67_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_19 
       (.CI(1'b0),
        .CO({\DataxD_reg[21]_i_19_n_0 ,\NLW_DataxD_reg[21]_i_19_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,\DataxD[21]_i_68_n_0 ,1'b0,\DataxD[21]_i_69_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_19_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_70_n_0 ,\DataxD[21]_i_71_n_0 ,\DataxD[21]_i_72_n_0 ,\DataxD[21]_i_73_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_26 
       (.CI(1'b0),
        .CO({\DataxD_reg[21]_i_26_n_0 ,\NLW_DataxD_reg[21]_i_26_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\DataxD[21]_i_74_n_0 ,\DataxD[21]_i_75_n_0 ,1'b0,\DataxD[21]_i_76_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_26_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_77_n_0 ,\DataxD[21]_i_78_n_0 ,\DataxD[21]_i_79_n_0 ,\DataxD[21]_i_80_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_31 
       (.CI(1'b0),
        .CO({\DataxD_reg[21]_i_31_n_0 ,\NLW_DataxD_reg[21]_i_31_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\DataxD[21]_i_81_n_0 ,\DataxD[21]_i_82_n_0 ,\DataxD[21]_i_83_n_0 ,1'b0}),
        .O(\NLW_DataxD_reg[21]_i_31_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_84_n_0 ,\DataxD[21]_i_85_n_0 ,\DataxD[21]_i_86_n_0 ,\DataxD[21]_i_87_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_37 
       (.CI(1'b0),
        .CO({\DataxD_reg[21]_i_37_n_0 ,\NLW_DataxD_reg[21]_i_37_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\DataxD[21]_i_88_n_0 ,\DataxD[21]_i_89_n_0 ,\DataxD[21]_i_90_n_0 ,1'b0}),
        .O(\NLW_DataxD_reg[21]_i_37_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_91_n_0 ,\DataxD[21]_i_92_n_0 ,\DataxD[21]_i_93_n_0 ,\DataxD[21]_i_94_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_46 
       (.CI(1'b0),
        .CO({\DataxD_reg[21]_i_46_n_0 ,\NLW_DataxD_reg[21]_i_46_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\DataxD[21]_i_95_n_0 ,\DataxD[21]_i_96_n_0 ,\DataxD[21]_i_97_n_0 ,\DataxD[21]_i_98_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_46_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_99_n_0 ,\DataxD[21]_i_100_n_0 ,\DataxD[21]_i_101_n_0 ,\DataxD[21]_i_102_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_52 
       (.CI(1'b0),
        .CO({\DataxD_reg[21]_i_52_n_0 ,\NLW_DataxD_reg[21]_i_52_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({HCountxD[7],HCountxD[5],HCountxD[3],HCountxD[1]}),
        .O(\NLW_DataxD_reg[21]_i_52_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_107_n_0 ,\DataxD[21]_i_108_n_0 ,\DataxD[21]_i_109_n_0 ,\DataxD[21]_i_110_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_6 
       (.CI(\DataxD_reg[21]_i_13_n_0 ),
        .CO({\FpgaUserCDxB.ImageGeneratorxI/DataxD30_in ,\NLW_DataxD_reg[21]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\DataxD[21]_i_14_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_6_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_15_n_0 ,\DataxD[21]_i_16_n_0 ,\DataxD[21]_i_17_n_0 ,\DataxD[21]_i_18_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_7 
       (.CI(\DataxD_reg[21]_i_19_n_0 ),
        .CO({\NLW_DataxD_reg[21]_i_7_CO_UNCONNECTED [3],\FpgaUserCDxB.ImageGeneratorxI/DataxD32_in ,\NLW_DataxD_reg[21]_i_7_CO_UNCONNECTED [1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,\DataxD[21]_i_20_n_0 ,\DataxD[21]_i_21_n_0 ,\DataxD[21]_i_22_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_7_O_UNCONNECTED [3:0]),
        .S({1'b0,\DataxD[21]_i_23_n_0 ,\DataxD[21]_i_24_n_0 ,\DataxD[21]_i_25_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_8 
       (.CI(\DataxD_reg[21]_i_26_n_0 ),
        .CO({\NLW_DataxD_reg[21]_i_8_CO_UNCONNECTED [3:2],\FpgaUserCDxB.ImageGeneratorxI/DataxD36_in ,\NLW_DataxD_reg[21]_i_8_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\DataxD[21]_i_27_n_0 ,\DataxD[21]_i_28_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_8_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\DataxD[21]_i_29_n_0 ,\DataxD[21]_i_30_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[21]_i_9 
       (.CI(\DataxD_reg[21]_i_31_n_0 ),
        .CO({\FpgaUserCDxB.ImageGeneratorxI/DataxD34_in ,\NLW_DataxD_reg[21]_i_9_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\DataxD[21]_i_32_n_0 }),
        .O(\NLW_DataxD_reg[21]_i_9_O_UNCONNECTED [3:0]),
        .S({\DataxD[21]_i_33_n_0 ,\DataxD[21]_i_34_n_0 ,\DataxD[21]_i_35_n_0 ,\DataxD[21]_i_36_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[23]_i_2 
       (.CI(\DataxD_reg[23]_i_3_n_0 ),
        .CO({\FpgaUserCDxB.ImageGeneratorxI/DataxD213_in ,\NLW_DataxD_reg[23]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\DataxD[23]_i_4_n_0 }),
        .O(\NLW_DataxD_reg[23]_i_2_O_UNCONNECTED [3:0]),
        .S({\DataxD[23]_i_5_n_0 ,\DataxD[23]_i_6_n_0 ,\DataxD[23]_i_7_n_0 ,\DataxD[23]_i_8_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \DataxD_reg[23]_i_3 
       (.CI(1'b0),
        .CO({\DataxD_reg[23]_i_3_n_0 ,\NLW_DataxD_reg[23]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\DataxD[23]_i_9_n_0 ,\DataxD[23]_i_10_n_0 ,\DataxD[23]_i_11_n_0 ,\DataxD[23]_i_12_n_0 }),
        .O(\NLW_DataxD_reg[23]_i_3_O_UNCONNECTED [3:0]),
        .S({\DataxD[23]_i_13_n_0 ,\DataxD[23]_i_14_n_0 ,\DataxD[23]_i_15_n_0 ,\DataxD[23]_i_16_n_0 }));
  LUT2 #(
    .INIT(4'h7)) 
    \DcBiasxD[1]_i_10__0 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\TmdsEncodedDataxDO_reg[8] [0]),
        .O(VidOnxS_reg_rep__0_4));
  LUT2 #(
    .INIT(4'h8)) 
    \DcBiasxD[1]_i_11 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\TmdsEncodedDataxDO_reg[8] [1]),
        .O(VidOnxS_reg_rep__0_2));
  LUT1 #(
    .INIT(2'h1)) 
    \DcBiasxD[3]_i_1 
       (.I0(VidOnxS_reg_rep_0),
        .O(VidOnxS_reg_rep_1));
  LUT1 #(
    .INIT(2'h1)) 
    \HCountxD[0]_i_1 
       (.I0(HCountCtrl2StripxD[0]),
        .O(HCountxD_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[10]_i_1 
       (.I0(data0[10]),
        .I1(VCountxD_1),
        .O(HCountxD_0[10]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[11]_i_1 
       (.I0(data0[11]),
        .I1(VCountxD_1),
        .O(HCountxD_0[11]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[12]_i_1 
       (.I0(data0[12]),
        .I1(VCountxD_1),
        .O(HCountxD_0[12]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[13]_i_1 
       (.I0(data0[13]),
        .I1(VCountxD_1),
        .O(HCountxD_0[13]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[14]_i_1 
       (.I0(data0[14]),
        .I1(VCountxD_1),
        .O(HCountxD_0[14]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[15]_i_1 
       (.I0(data0[15]),
        .I1(VCountxD_1),
        .O(HCountxD_0[15]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[1]_i_1 
       (.I0(data0[1]),
        .I1(VCountxD_1),
        .O(HCountxD_0[1]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[2]_i_1 
       (.I0(data0[2]),
        .I1(VCountxD_1),
        .O(HCountxD_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[3]_i_1 
       (.I0(data0[3]),
        .I1(VCountxD_1),
        .O(HCountxD_0[3]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[4]_i_1 
       (.I0(data0[4]),
        .I1(VCountxD_1),
        .O(HCountxD_0[4]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[5]_i_1 
       (.I0(data0[5]),
        .I1(VCountxD_1),
        .O(HCountxD_0[5]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[6]_i_1 
       (.I0(data0[6]),
        .I1(VCountxD_1),
        .O(HCountxD_0[6]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[7]_i_1 
       (.I0(data0[7]),
        .I1(VCountxD_1),
        .O(HCountxD_0[7]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[8]_i_1 
       (.I0(data0[8]),
        .I1(VCountxD_1),
        .O(HCountxD_0[8]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HCountxD[9]_i_1 
       (.I0(data0[9]),
        .I1(VCountxD_1),
        .O(HCountxD_0[9]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[0] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[0]),
        .Q(HCountCtrl2StripxD[0]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[10] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[10]),
        .Q(HCountCtrl2StripxD[10]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[11] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[11]),
        .Q(HCountCtrl2StripxD[11]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[12] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[12]),
        .Q(HCountCtrl2StripxD[12]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \HCountxD_reg[12]_i_2 
       (.CI(\HCountxD_reg[8]_i_2_n_0 ),
        .CO({\HCountxD_reg[12]_i_2_n_0 ,\NLW_HCountxD_reg[12]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[12:9]),
        .S(HCountCtrl2StripxD[12:9]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[13] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[13]),
        .Q(HCountCtrl2StripxD[13]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[14] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[14]),
        .Q(HCountCtrl2StripxD[14]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[15] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[15]),
        .Q(HCountCtrl2StripxD[15]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \HCountxD_reg[15]_i_2 
       (.CI(\HCountxD_reg[12]_i_2_n_0 ),
        .CO(\NLW_HCountxD_reg[15]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_HCountxD_reg[15]_i_2_O_UNCONNECTED [3],data0[15:13]}),
        .S({1'b0,HCountCtrl2StripxD[15:13]}));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[1] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[1]),
        .Q(HCountCtrl2StripxD[1]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[2] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[2]),
        .Q(HCountCtrl2StripxD[2]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[3] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[3]),
        .Q(HCountCtrl2StripxD[3]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[4] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[4]),
        .Q(HCountCtrl2StripxD[4]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \HCountxD_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\HCountxD_reg[4]_i_2_n_0 ,\NLW_HCountxD_reg[4]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(HCountCtrl2StripxD[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S(HCountCtrl2StripxD[4:1]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[5] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[5]),
        .Q(HCountCtrl2StripxD[5]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[6] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[6]),
        .Q(HCountCtrl2StripxD[6]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[7] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[7]),
        .Q(HCountCtrl2StripxD[7]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[8] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[8]),
        .Q(HCountCtrl2StripxD[8]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \HCountxD_reg[8]_i_2 
       (.CI(\HCountxD_reg[4]_i_2_n_0 ),
        .CO({\HCountxD_reg[8]_i_2_n_0 ,\NLW_HCountxD_reg[8]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S(HCountCtrl2StripxD[8:5]));
  FDCE #(
    .INIT(1'b0)) 
    \HCountxD_reg[9] 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(HCountxD_0[9]),
        .Q(HCountCtrl2StripxD[9]));
  LUT1 #(
    .INIT(2'h1)) 
    MasterOSERDESE2xI_i_1
       (.I0(PllLockedxSO),
        .O(AR));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h82)) 
    \TmdsEncodedDataxDO[0]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\TmdsEncodedDataxDO_reg[8] [1]),
        .I2(\TmdsEncodedDataxDO_reg[0] ),
        .O(VidOnxS_reg_rep__0_1[0]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hD77D)) 
    \TmdsEncodedDataxDO[4]_i_1 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\TmdsEncodedDataxDO_reg[4] ),
        .I2(\TmdsEncodedDataxDO_reg[8] [2]),
        .I3(\TmdsEncodedDataxDO_reg[0] ),
        .O(VidOnxS_reg_rep__0_1[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \TmdsEncodedDataxDO[8]_i_2 
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(\TmdsEncodedDataxDO_reg[8] [3]),
        .O(VidOnxS_reg_rep__0_5));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \VCountxD[0]_i_1 
       (.I0(VCountxD[0]),
        .I1(\VCountxD[15]_i_6_n_0 ),
        .O(\VCountxD[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[10]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[12]_i_2_n_6 ),
        .O(\VCountxD[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[11]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[12]_i_2_n_5 ),
        .O(\VCountxD[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[12]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[12]_i_2_n_4 ),
        .O(\VCountxD[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[13]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[15]_i_7_n_7 ),
        .O(\VCountxD[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[14]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[15]_i_7_n_6 ),
        .O(\VCountxD[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000080AA)) 
    \VCountxD[15]_i_1 
       (.I0(\VCountxD[15]_i_3_n_0 ),
        .I1(HCountCtrl2StripxD[4]),
        .I2(HCountCtrl2StripxD[3]),
        .I3(HCountCtrl2StripxD[5]),
        .I4(\VCountxD[15]_i_4_n_0 ),
        .I5(\VCountxD[15]_i_5_n_0 ),
        .O(VCountxD_1));
  LUT4 #(
    .INIT(16'hFF4F)) 
    \VCountxD[15]_i_10 
       (.I0(VCountxD[13]),
        .I1(VCountxD[12]),
        .I2(Q[0]),
        .I3(VCountxD[2]),
        .O(\VCountxD[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0DFFFFFFFFFFFFFF)) 
    \VCountxD[15]_i_11 
       (.I0(VCountxD[6]),
        .I1(Q[2]),
        .I2(VCountxD[8]),
        .I3(VCountxD[5]),
        .I4(VCountxD[4]),
        .I5(\VCountxD[15]_i_12_n_0 ),
        .O(\VCountxD[15]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \VCountxD[15]_i_12 
       (.I0(VCountxD[15]),
        .I1(VCountxD[14]),
        .O(\VCountxD[15]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[15]_i_2 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[15]_i_7_n_5 ),
        .O(\VCountxD[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0070)) 
    \VCountxD[15]_i_3 
       (.I0(HCountCtrl2StripxD[10]),
        .I1(HCountCtrl2StripxD[9]),
        .I2(HCountCtrl2StripxD[2]),
        .I3(\VCountxD[15]_i_8_n_0 ),
        .O(\VCountxD[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \VCountxD[15]_i_4 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[7]),
        .I2(HCountCtrl2StripxD[5]),
        .I3(HCountCtrl2StripxD[4]),
        .O(\VCountxD[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \VCountxD[15]_i_5 
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(HCountCtrl2StripxD[13]),
        .I3(HCountCtrl2StripxD[10]),
        .I4(HCountCtrl2StripxD[15]),
        .I5(HCountCtrl2StripxD[6]),
        .O(\VCountxD[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000080AA)) 
    \VCountxD[15]_i_6 
       (.I0(\VCountxD[15]_i_9_n_0 ),
        .I1(VCountxD[4]),
        .I2(Q[1]),
        .I3(VCountxD[5]),
        .I4(\VCountxD[15]_i_10_n_0 ),
        .I5(\VCountxD[15]_i_11_n_0 ),
        .O(\VCountxD[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFF7FFF7FFFFFFF7)) 
    \VCountxD[15]_i_8 
       (.I0(HCountCtrl2StripxD[1]),
        .I1(HCountCtrl2StripxD[0]),
        .I2(HCountCtrl2StripxD[14]),
        .I3(HCountCtrl2StripxD[11]),
        .I4(HCountCtrl2StripxD[12]),
        .I5(HCountCtrl2StripxD[13]),
        .O(\VCountxD[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \VCountxD[15]_i_9 
       (.I0(VCountxD[11]),
        .I1(\VgaSyncxS[VSyncxS]_i_7_n_0 ),
        .I2(VCountxD[10]),
        .I3(VCountxD[9]),
        .I4(VCountxD[14]),
        .I5(VCountxD[13]),
        .O(\VCountxD[15]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[1]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[4]_i_2_n_7 ),
        .O(\VCountxD[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[2]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[4]_i_2_n_6 ),
        .O(\VCountxD[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[3]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[4]_i_2_n_5 ),
        .O(\VCountxD[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[4]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[4]_i_2_n_4 ),
        .O(\VCountxD[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[5]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[8]_i_2_n_7 ),
        .O(\VCountxD[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[6]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[8]_i_2_n_6 ),
        .O(\VCountxD[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[7]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[8]_i_2_n_5 ),
        .O(\VCountxD[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[8]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[8]_i_2_n_4 ),
        .O(\VCountxD[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \VCountxD[9]_i_1 
       (.I0(\VCountxD[15]_i_6_n_0 ),
        .I1(VCountxD[0]),
        .I2(\VCountxD_reg[12]_i_2_n_7 ),
        .O(\VCountxD[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[0] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[0]_i_1_n_0 ),
        .Q(VCountxD[0]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[10] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[10]_i_1_n_0 ),
        .Q(VCountxD[10]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[11] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[11]_i_1_n_0 ),
        .Q(VCountxD[11]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[12] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[12]_i_1_n_0 ),
        .Q(VCountxD[12]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \VCountxD_reg[12]_i_2 
       (.CI(\VCountxD_reg[8]_i_2_n_0 ),
        .CO({\VCountxD_reg[12]_i_2_n_0 ,\NLW_VCountxD_reg[12]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\VCountxD_reg[12]_i_2_n_4 ,\VCountxD_reg[12]_i_2_n_5 ,\VCountxD_reg[12]_i_2_n_6 ,\VCountxD_reg[12]_i_2_n_7 }),
        .S(VCountxD[12:9]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[13] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[13]_i_1_n_0 ),
        .Q(VCountxD[13]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[14] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[14]_i_1_n_0 ),
        .Q(VCountxD[14]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[15] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[15]_i_2_n_0 ),
        .Q(VCountxD[15]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \VCountxD_reg[15]_i_7 
       (.CI(\VCountxD_reg[12]_i_2_n_0 ),
        .CO(\NLW_VCountxD_reg[15]_i_7_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_VCountxD_reg[15]_i_7_O_UNCONNECTED [3],\VCountxD_reg[15]_i_7_n_5 ,\VCountxD_reg[15]_i_7_n_6 ,\VCountxD_reg[15]_i_7_n_7 }),
        .S({1'b0,VCountxD[15:13]}));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[1] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[1]_i_1_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[2] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[2]_i_1_n_0 ),
        .Q(VCountxD[2]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[3] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[3]_i_1_n_0 ),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[4] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[4]_i_1_n_0 ),
        .Q(VCountxD[4]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \VCountxD_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\VCountxD_reg[4]_i_2_n_0 ,\NLW_VCountxD_reg[4]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(VCountxD[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\VCountxD_reg[4]_i_2_n_4 ,\VCountxD_reg[4]_i_2_n_5 ,\VCountxD_reg[4]_i_2_n_6 ,\VCountxD_reg[4]_i_2_n_7 }),
        .S({VCountxD[4],Q[1],VCountxD[2],Q[0]}));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[5] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[5]_i_1_n_0 ),
        .Q(VCountxD[5]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[6] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[6]_i_1_n_0 ),
        .Q(VCountxD[6]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[7] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[7]_i_1_n_0 ),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[8] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[8]_i_1_n_0 ),
        .Q(VCountxD[8]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \VCountxD_reg[8]_i_2 
       (.CI(\VCountxD_reg[4]_i_2_n_0 ),
        .CO({\VCountxD_reg[8]_i_2_n_0 ,\NLW_VCountxD_reg[8]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\VCountxD_reg[8]_i_2_n_4 ,\VCountxD_reg[8]_i_2_n_5 ,\VCountxD_reg[8]_i_2_n_6 ,\VCountxD_reg[8]_i_2_n_7 }),
        .S({VCountxD[8],Q[2],VCountxD[6:5]}));
  FDCE #(
    .INIT(1'b0)) 
    \VCountxD_reg[9] 
       (.C(ClkVgaxCO),
        .CE(VCountxD_1),
        .CLR(AR),
        .D(\VCountxD[9]_i_1_n_0 ),
        .Q(VCountxD[9]));
  LUT6 #(
    .INIT(64'h0002FFFF00020000)) 
    \VgaSyncxS[HSyncxS]_i_1 
       (.I0(\VCountxD[15]_i_3_n_0 ),
        .I1(\VgaSyncxS[HSyncxS]_i_2_n_0 ),
        .I2(HCountCtrl2StripxD[5]),
        .I3(\VgaSyncxS[HSyncxS]_i_3_n_0 ),
        .I4(\VgaSyncxS[HSyncxS]_i_4_n_0 ),
        .I5(\VgaSyncxS_reg[HSyncxS] ),
        .O(\VgaSyncxS[HSyncxS]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFFFFF)) 
    \VgaSyncxS[HSyncxS]_i_2 
       (.I0(HCountCtrl2StripxD[6]),
        .I1(HCountCtrl2StripxD[15]),
        .I2(HCountCtrl2StripxD[4]),
        .I3(HCountCtrl2StripxD[3]),
        .I4(HCountCtrl2StripxD[8]),
        .I5(HCountCtrl2StripxD[7]),
        .O(\VgaSyncxS[HSyncxS]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \VgaSyncxS[HSyncxS]_i_3 
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[10]),
        .O(\VgaSyncxS[HSyncxS]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00002008)) 
    \VgaSyncxS[HSyncxS]_i_4 
       (.I0(VidOnxS_i_7_n_0),
        .I1(HCountCtrl2StripxD[5]),
        .I2(HCountCtrl2StripxD[2]),
        .I3(HCountCtrl2StripxD[3]),
        .I4(\VgaSyncxS[HSyncxS]_i_5_n_0 ),
        .O(\VgaSyncxS[HSyncxS]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
    \VgaSyncxS[HSyncxS]_i_5 
       (.I0(HCountCtrl2StripxD[4]),
        .I1(HCountCtrl2StripxD[6]),
        .I2(HCountCtrl2StripxD[9]),
        .I3(\VgaSyncxS[HSyncxS]_i_6_n_0 ),
        .I4(HCountCtrl2StripxD[11]),
        .I5(HCountCtrl2StripxD[10]),
        .O(\VgaSyncxS[HSyncxS]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \VgaSyncxS[HSyncxS]_i_6 
       (.I0(HCountCtrl2StripxD[8]),
        .I1(HCountCtrl2StripxD[7]),
        .O(\VgaSyncxS[HSyncxS]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \VgaSyncxS[VSyncxS]_i_1 
       (.I0(\VgaSyncxS[VSyncxS]_i_2_n_0 ),
        .I1(VCountxD_1),
        .I2(\VgaSyncxS[VSyncxS]_i_3_n_0 ),
        .I3(\VgaSyncxS_reg[VSyncxS] ),
        .O(\VgaSyncxS[VSyncxS]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000AA08)) 
    \VgaSyncxS[VSyncxS]_i_2 
       (.I0(\VCountxD[15]_i_9_n_0 ),
        .I1(VCountxD[6]),
        .I2(Q[2]),
        .I3(VCountxD[8]),
        .I4(\VCountxD[15]_i_10_n_0 ),
        .I5(\VgaSyncxS[VSyncxS]_i_4_n_0 ),
        .O(\VgaSyncxS[VSyncxS]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEFEFFF)) 
    \VgaSyncxS[VSyncxS]_i_3 
       (.I0(\VgaSyncxS[VSyncxS]_i_5_n_0 ),
        .I1(\VgaSyncxS[VSyncxS]_i_6_n_0 ),
        .I2(\VgaSyncxS[VSyncxS]_i_7_n_0 ),
        .I3(VCountxD[0]),
        .I4(VCountxD[2]),
        .I5(\VgaSyncxS[VSyncxS]_i_8_n_0 ),
        .O(\VgaSyncxS[VSyncxS]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFFFFFFFFFF)) 
    \VgaSyncxS[VSyncxS]_i_4 
       (.I0(\VCountxD[15]_i_12_n_0 ),
        .I1(VCountxD[5]),
        .I2(VCountxD[0]),
        .I3(Q[0]),
        .I4(VCountxD[4]),
        .I5(Q[1]),
        .O(\VgaSyncxS[VSyncxS]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \VgaSyncxS[VSyncxS]_i_5 
       (.I0(VCountxD[13]),
        .I1(VCountxD[14]),
        .I2(VCountxD[9]),
        .I3(VCountxD[10]),
        .O(\VgaSyncxS[VSyncxS]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \VgaSyncxS[VSyncxS]_i_6 
       (.I0(Q[1]),
        .I1(VCountxD[4]),
        .I2(VCountxD[6]),
        .I3(VCountxD[11]),
        .O(\VgaSyncxS[VSyncxS]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \VgaSyncxS[VSyncxS]_i_7 
       (.I0(Q[2]),
        .I1(VCountxD[8]),
        .O(\VgaSyncxS[VSyncxS]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \VgaSyncxS[VSyncxS]_i_8 
       (.I0(Q[0]),
        .I1(VCountxD[15]),
        .I2(VCountxD[5]),
        .I3(VCountxD[12]),
        .O(\VgaSyncxS[VSyncxS]_i_8_n_0 ));
  FDCE #(
    .INIT(1'b1)) 
    \VgaSyncxS_reg[HSyncxS]__0 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\VgaSyncxS[HSyncxS]_i_1_n_0 ),
        .Q(\VgaSyncxS_reg[HSyncxS] ));
  FDCE #(
    .INIT(1'b1)) 
    \VgaSyncxS_reg[VSyncxS]__0 
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(\VgaSyncxS[VSyncxS]_i_1_n_0 ),
        .Q(\VgaSyncxS_reg[VSyncxS] ));
  LUT6 #(
    .INIT(64'hEFFFFFFFAAAAAAAA)) 
    VidOnxS_i_1
       (.I0(VidOnxS_i_2_n_0),
        .I1(VidOnxS_i_3_n_0),
        .I2(HCountCtrl2StripxD[6]),
        .I3(HCountCtrl2StripxD[7]),
        .I4(VidOnxS_i_4_n_0),
        .I5(VidOnxS_reg_0),
        .O(VidOnxS_i_1_n_0));
  LUT6 #(
    .INIT(64'h000000001101FFFF)) 
    VidOnxS_i_2
       (.I0(VCountxD[8]),
        .I1(Q[2]),
        .I2(VCountxD[6]),
        .I3(VidOnxS_i_5_n_0),
        .I4(VCountxD[9]),
        .I5(VidOnxS_i_6_n_0),
        .O(VidOnxS_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
    VidOnxS_i_3
       (.I0(HCountCtrl2StripxD[5]),
        .I1(HCountCtrl2StripxD[4]),
        .I2(HCountCtrl2StripxD[8]),
        .I3(HCountCtrl2StripxD[9]),
        .I4(HCountCtrl2StripxD[11]),
        .I5(HCountCtrl2StripxD[10]),
        .O(VidOnxS_i_3_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    VidOnxS_i_4
       (.I0(VidOnxS_i_7_n_0),
        .I1(HCountCtrl2StripxD[3]),
        .I2(HCountCtrl2StripxD[2]),
        .O(VidOnxS_i_4_n_0));
  LUT6 #(
    .INIT(64'h020000FF00007FFF)) 
    VidOnxS_i_5
       (.I0(Q[0]),
        .I1(VCountxD[0]),
        .I2(VCountxD[2]),
        .I3(VCountxD[4]),
        .I4(VCountxD[5]),
        .I5(Q[1]),
        .O(VidOnxS_i_5_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFDFFFF)) 
    VidOnxS_i_6
       (.I0(VidOnxS_i_4_n_0),
        .I1(\VCountxD[15]_i_4_n_0 ),
        .I2(VCountxD[13]),
        .I3(VCountxD[12]),
        .I4(\VCountxD[15]_i_12_n_0 ),
        .I5(VidOnxS_i_8_n_0),
        .O(VidOnxS_i_6_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    VidOnxS_i_7
       (.I0(HCountCtrl2StripxD[12]),
        .I1(HCountCtrl2StripxD[13]),
        .I2(HCountCtrl2StripxD[15]),
        .I3(HCountCtrl2StripxD[14]),
        .I4(HCountCtrl2StripxD[0]),
        .I5(HCountCtrl2StripxD[1]),
        .O(VidOnxS_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    VidOnxS_i_8
       (.I0(HCountCtrl2StripxD[10]),
        .I1(HCountCtrl2StripxD[11]),
        .I2(VCountxD[11]),
        .I3(VCountxD[10]),
        .I4(HCountCtrl2StripxD[6]),
        .I5(HCountCtrl2StripxD[9]),
        .O(VidOnxS_i_8_n_0));
  (* ORIG_CELL_NAME = "VidOnxS_reg" *) 
  FDCE #(
    .INIT(1'b0)) 
    VidOnxS_reg
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(VidOnxS_i_1_n_0),
        .Q(VidOnxS_reg_0));
  (* ORIG_CELL_NAME = "VidOnxS_reg" *) 
  FDCE #(
    .INIT(1'b0)) 
    VidOnxS_reg_rep
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(VidOnxS_rep_i_1_n_0),
        .Q(VidOnxS_reg_rep_0));
  (* ORIG_CELL_NAME = "VidOnxS_reg" *) 
  FDCE #(
    .INIT(1'b0)) 
    VidOnxS_reg_rep__0
       (.C(ClkVgaxCO),
        .CE(1'b1),
        .CLR(AR),
        .D(VidOnxS_rep_i_1__0_n_0),
        .Q(VidOnxS_reg_rep__0_0));
  LUT6 #(
    .INIT(64'hEFFFFFFFAAAAAAAA)) 
    VidOnxS_rep_i_1
       (.I0(VidOnxS_i_2_n_0),
        .I1(VidOnxS_i_3_n_0),
        .I2(HCountCtrl2StripxD[6]),
        .I3(HCountCtrl2StripxD[7]),
        .I4(VidOnxS_i_4_n_0),
        .I5(VidOnxS_reg_0),
        .O(VidOnxS_rep_i_1_n_0));
  LUT6 #(
    .INIT(64'hEFFFFFFFAAAAAAAA)) 
    VidOnxS_rep_i_1__0
       (.I0(VidOnxS_i_2_n_0),
        .I1(VidOnxS_i_3_n_0),
        .I2(HCountCtrl2StripxD[6]),
        .I3(HCountCtrl2StripxD[7]),
        .I4(VidOnxS_i_4_n_0),
        .I5(VidOnxS_reg_0),
        .O(VidOnxS_rep_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_1
       (.I0(VCountxD[14]),
        .I1(VCountxD[15]),
        .O(\VCountxD_reg[14]_0 [3]));
  LUT3 #(
    .INIT(8'hA8)) 
    i__carry__0_i_1__0
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[14]),
        .I2(HCountCtrl2StripxD[15]),
        .O(VidOnxS_reg_rep_3[3]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_1__1
       (.I0(VCountxD[14]),
        .I1(VCountxD[15]),
        .O(\VCountxD_reg[14]_1 [3]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_1__2
       (.I0(VCountxD[15]),
        .I1(VCountxD[14]),
        .O(\VCountxD_reg[15]_3 [3]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_2
       (.I0(VCountxD[12]),
        .I1(VCountxD[13]),
        .O(\VCountxD_reg[14]_0 [2]));
  LUT3 #(
    .INIT(8'hA8)) 
    i__carry__0_i_2__0
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[12]),
        .I2(HCountCtrl2StripxD[13]),
        .O(VidOnxS_reg_rep_3[2]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_2__1
       (.I0(VCountxD[12]),
        .I1(VCountxD[13]),
        .O(\VCountxD_reg[14]_1 [2]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_2__2
       (.I0(VCountxD[13]),
        .I1(VCountxD[12]),
        .O(\VCountxD_reg[15]_3 [2]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_3
       (.I0(VCountxD[10]),
        .I1(VCountxD[11]),
        .O(\VCountxD_reg[14]_0 [1]));
  LUT3 #(
    .INIT(8'hA8)) 
    i__carry__0_i_3__0
       (.I0(VidOnxS_reg_rep__0_0),
        .I1(HCountCtrl2StripxD[10]),
        .I2(HCountCtrl2StripxD[11]),
        .O(VidOnxS_reg_rep_3[1]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_3__1
       (.I0(VCountxD[10]),
        .I1(VCountxD[11]),
        .O(\VCountxD_reg[14]_1 [1]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_3__2
       (.I0(VCountxD[11]),
        .I1(VCountxD[10]),
        .O(\VCountxD_reg[15]_3 [1]));
  LUT3 #(
    .INIT(8'hA8)) 
    i__carry__0_i_4
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[8]),
        .I2(HCountCtrl2StripxD[9]),
        .O(VidOnxS_reg_rep_3[0]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_4__0
       (.I0(VCountxD[8]),
        .I1(VCountxD[9]),
        .O(\VCountxD_reg[14]_0 [0]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_4__1
       (.I0(VCountxD[8]),
        .I1(VCountxD[9]),
        .O(\VCountxD_reg[14]_1 [0]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_4__2
       (.I0(VCountxD[9]),
        .I1(VCountxD[8]),
        .O(\VCountxD_reg[15]_3 [0]));
  LUT3 #(
    .INIT(8'h1F)) 
    i__carry__0_i_5
       (.I0(HCountCtrl2StripxD[15]),
        .I1(HCountCtrl2StripxD[14]),
        .I2(VidOnxS_reg_rep_0),
        .O(\HCountxD_reg[15]_0 [3]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_5__0
       (.I0(VCountxD[15]),
        .I1(VCountxD[14]),
        .O(\VCountxD_reg[15]_2 [3]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_5__1
       (.I0(VCountxD[15]),
        .I1(VCountxD[14]),
        .O(\VCountxD_reg[15]_0 [3]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_6
       (.I0(VCountxD[13]),
        .I1(VCountxD[12]),
        .O(\VCountxD_reg[15]_0 [2]));
  LUT3 #(
    .INIT(8'h1F)) 
    i__carry__0_i_6__0
       (.I0(HCountCtrl2StripxD[13]),
        .I1(HCountCtrl2StripxD[12]),
        .I2(VidOnxS_reg_rep_0),
        .O(\HCountxD_reg[15]_0 [2]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_6__1
       (.I0(VCountxD[13]),
        .I1(VCountxD[12]),
        .O(\VCountxD_reg[15]_2 [2]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_7
       (.I0(VCountxD[11]),
        .I1(VCountxD[10]),
        .O(\VCountxD_reg[15]_0 [1]));
  LUT3 #(
    .INIT(8'h1F)) 
    i__carry__0_i_7__0
       (.I0(HCountCtrl2StripxD[11]),
        .I1(HCountCtrl2StripxD[10]),
        .I2(VidOnxS_reg_rep__0_0),
        .O(\HCountxD_reg[15]_0 [1]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_7__1
       (.I0(VCountxD[11]),
        .I1(VCountxD[10]),
        .O(\VCountxD_reg[15]_2 [1]));
  LUT3 #(
    .INIT(8'h1F)) 
    i__carry__0_i_8
       (.I0(HCountCtrl2StripxD[9]),
        .I1(HCountCtrl2StripxD[8]),
        .I2(VidOnxS_reg_rep_0),
        .O(\HCountxD_reg[15]_0 [0]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_8__0
       (.I0(VCountxD[9]),
        .I1(VCountxD[8]),
        .O(\VCountxD_reg[15]_0 [0]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_8__1
       (.I0(VCountxD[9]),
        .I1(VCountxD[8]),
        .O(\VCountxD_reg[15]_2 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1
       (.I0(Q[2]),
        .O(\VCountxD_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_1__0
       (.I0(VCountxD[6]),
        .I1(Q[2]),
        .O(\VCountxD_reg[6]_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    i__carry_i_1__1
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[7]),
        .I2(HCountCtrl2StripxD[6]),
        .O(VidOnxS_reg_rep_2[3]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_1__2
       (.I0(VCountxD[5]),
        .I1(VCountxD[4]),
        .O(\VCountxD_reg[5]_0 [2]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_2
       (.I0(Q[2]),
        .I1(VCountxD[6]),
        .O(\VCountxD_reg[7]_2 [3]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_2__0
       (.I0(Q[1]),
        .I1(VCountxD[2]),
        .O(\VCountxD_reg[5]_0 [1]));
  LUT3 #(
    .INIT(8'hA8)) 
    i__carry_i_2__1
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[4]),
        .I2(HCountCtrl2StripxD[5]),
        .O(VidOnxS_reg_rep_2[2]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_2__2
       (.I0(VCountxD[5]),
        .I1(VCountxD[4]),
        .O(\VCountxD_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_3
       (.I0(VCountxD[0]),
        .I1(Q[0]),
        .O(\VCountxD_reg[5]_0 [0]));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_3__0
       (.I0(VCountxD[2]),
        .I1(Q[1]),
        .O(\VCountxD_reg[7]_0 [1]));
  LUT3 #(
    .INIT(8'hA8)) 
    i__carry_i_3__1
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[2]),
        .I2(HCountCtrl2StripxD[3]),
        .O(VidOnxS_reg_rep_2[1]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_3__2
       (.I0(VCountxD[5]),
        .I1(VCountxD[4]),
        .O(\VCountxD_reg[7]_2 [2]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_4
       (.I0(VCountxD[6]),
        .I1(Q[2]),
        .O(\VCountxD_reg[6]_1 [3]));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_4__0
       (.I0(Q[0]),
        .I1(VCountxD[0]),
        .O(\VCountxD_reg[7]_0 [0]));
  LUT3 #(
    .INIT(8'hA8)) 
    i__carry_i_4__1
       (.I0(VidOnxS_reg_rep_0),
        .I1(HCountCtrl2StripxD[0]),
        .I2(HCountCtrl2StripxD[1]),
        .O(VidOnxS_reg_rep_2[0]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_4__2
       (.I0(VCountxD[2]),
        .I1(Q[1]),
        .O(\VCountxD_reg[7]_2 [1]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_5
       (.I0(Q[2]),
        .I1(VCountxD[6]),
        .O(\VCountxD_reg[7]_1 [3]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_5__0
       (.I0(VCountxD[0]),
        .I1(Q[0]),
        .O(\VCountxD_reg[7]_2 [0]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_5__1
       (.I0(VCountxD[5]),
        .I1(VCountxD[4]),
        .O(\VCountxD_reg[6]_1 [2]));
  LUT3 #(
    .INIT(8'h1F)) 
    i__carry_i_5__2
       (.I0(HCountCtrl2StripxD[6]),
        .I1(HCountCtrl2StripxD[7]),
        .I2(VidOnxS_reg_rep_0),
        .O(\HCountxD_reg[6]_0 [3]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_6
       (.I0(Q[1]),
        .I1(VCountxD[2]),
        .O(\VCountxD_reg[6]_1 [1]));
  LUT3 #(
    .INIT(8'h1F)) 
    i__carry_i_6__0
       (.I0(HCountCtrl2StripxD[5]),
        .I1(HCountCtrl2StripxD[4]),
        .I2(VidOnxS_reg_rep_0),
        .O(\HCountxD_reg[6]_0 [2]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_6__1
       (.I0(VCountxD[4]),
        .I1(VCountxD[5]),
        .O(\VCountxD_reg[7]_1 [2]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_7
       (.I0(Q[0]),
        .I1(VCountxD[0]),
        .O(\VCountxD_reg[6]_1 [0]));
  LUT3 #(
    .INIT(8'h1F)) 
    i__carry_i_7__0
       (.I0(HCountCtrl2StripxD[3]),
        .I1(HCountCtrl2StripxD[2]),
        .I2(VidOnxS_reg_rep_0),
        .O(\HCountxD_reg[6]_0 [1]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_7__1
       (.I0(Q[1]),
        .I1(VCountxD[2]),
        .O(\VCountxD_reg[7]_1 [1]));
  LUT3 #(
    .INIT(8'h1F)) 
    i__carry_i_8
       (.I0(HCountCtrl2StripxD[1]),
        .I1(HCountCtrl2StripxD[0]),
        .I2(VidOnxS_reg_rep_0),
        .O(\HCountxD_reg[6]_0 [0]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_8__0
       (.I0(VCountxD[0]),
        .I1(Q[0]),
        .O(\VCountxD_reg[7]_1 [0]));
endmodule

module vga_to_hdmi
   (HdmiTxPxDO,
    HdmiTxNxDO,
    HdmiTxClkPxSO,
    HdmiTxClkNxSO,
    \DcBiasxD_reg[3] ,
    \DcBiasxD_reg[1] ,
    Q,
    \DcBiasxD_reg[3]_0 ,
    \DcBiasxD_reg[1]_0 ,
    \DcBiasxD_reg[0] ,
    \DcBiasxD_reg[3]_1 ,
    \DcBiasxD_reg[0]_0 ,
    \DcBiasxD_reg[3]_2 ,
    \DcBiasxD_reg[1]_1 ,
    \DcBiasxD_reg[2] ,
    TmdsEncodedDataxDO1_in,
    ClkVgaxCI,
    \TmdsEncodedDataxDO_reg[9] ,
    \TmdsEncodedDataxDO_reg[4] ,
    \TmdsEncodedDataxDO_reg[3] ,
    \TmdsEncodedDataxDO_reg[2] ,
    \TmdsEncodedDataxDO_reg[0] ,
    \TmdsEncodedDataxDO_reg[7] ,
    \TmdsEncodedDataxDO_reg[7]_0 ,
    \TmdsEncodedDataxDO_reg[5] ,
    \TmdsEncodedDataxDO_reg[1] ,
    \TmdsEncodedDataxDO_reg[6] ,
    \TmdsEncodedDataxDO_reg[9]_0 ,
    \TmdsEncodedDataxDO_reg[8] ,
    \VgaSyncxS_reg[HSyncxS] ,
    \TmdsEncodedDataxDO_reg[8]_0 ,
    \TmdsEncodedDataxDO_reg[8]_1 ,
    \TmdsEncodedDataxDO_reg[8]_2 ,
    \TmdsEncodedDataxDO_reg[9]_1 ,
    \TmdsEncodedDataxDO_reg[6]_0 ,
    \DcBiasxD_reg[3]_3 ,
    \DcBiasxD_reg[2]_0 ,
    \DcBiasxD_reg[2]_1 ,
    \DcBiasxD_reg[0]_1 ,
    \DcBiasxD_reg[3]_4 ,
    \TmdsEncodedDataxDO_reg[6]_1 ,
    \TmdsEncodedDataxDO_reg[9]_2 ,
    \DcBiasxD_reg[2]_2 ,
    \DcBiasxD_reg[2]_3 ,
    \DcBiasxD_reg[2]_4 ,
    ClkHdmixCI,
    RstxRI,
    D,
    \DcBiasxD_reg[1]_2 ,
    \TmdsEncodedDataxDO_reg[5]_0 ,
    \TmdsEncodedDataxDO_reg[7]_1 ,
    \TmdsEncodedDataxDO_reg[1]_0 ,
    \TmdsEncodedDataxDO_reg[9]_3 ,
    \DcBiasxD_reg[3]_5 );
  output [2:0]HdmiTxPxDO;
  output [2:0]HdmiTxNxDO;
  output HdmiTxClkPxSO;
  output HdmiTxClkNxSO;
  output \DcBiasxD_reg[3] ;
  output \DcBiasxD_reg[1] ;
  output [3:0]Q;
  output \DcBiasxD_reg[3]_0 ;
  output \DcBiasxD_reg[1]_0 ;
  output \DcBiasxD_reg[0] ;
  output [3:0]\DcBiasxD_reg[3]_1 ;
  output \DcBiasxD_reg[0]_0 ;
  output [3:0]\DcBiasxD_reg[3]_2 ;
  output \DcBiasxD_reg[1]_1 ;
  output \DcBiasxD_reg[2] ;
  input [7:0]TmdsEncodedDataxDO1_in;
  input ClkVgaxCI;
  input \TmdsEncodedDataxDO_reg[9] ;
  input \TmdsEncodedDataxDO_reg[4] ;
  input \TmdsEncodedDataxDO_reg[3] ;
  input \TmdsEncodedDataxDO_reg[2] ;
  input \TmdsEncodedDataxDO_reg[0] ;
  input \TmdsEncodedDataxDO_reg[7] ;
  input \TmdsEncodedDataxDO_reg[7]_0 ;
  input \TmdsEncodedDataxDO_reg[5] ;
  input \TmdsEncodedDataxDO_reg[1] ;
  input \TmdsEncodedDataxDO_reg[6] ;
  input \TmdsEncodedDataxDO_reg[9]_0 ;
  input \TmdsEncodedDataxDO_reg[8] ;
  input \VgaSyncxS_reg[HSyncxS] ;
  input \TmdsEncodedDataxDO_reg[8]_0 ;
  input \TmdsEncodedDataxDO_reg[8]_1 ;
  input \TmdsEncodedDataxDO_reg[8]_2 ;
  input \TmdsEncodedDataxDO_reg[9]_1 ;
  input \TmdsEncodedDataxDO_reg[6]_0 ;
  input \DcBiasxD_reg[3]_3 ;
  input \DcBiasxD_reg[2]_0 ;
  input \DcBiasxD_reg[2]_1 ;
  input \DcBiasxD_reg[0]_1 ;
  input \DcBiasxD_reg[3]_4 ;
  input \TmdsEncodedDataxDO_reg[6]_1 ;
  input \TmdsEncodedDataxDO_reg[9]_2 ;
  input \DcBiasxD_reg[2]_2 ;
  input \DcBiasxD_reg[2]_3 ;
  input \DcBiasxD_reg[2]_4 ;
  input ClkHdmixCI;
  input RstxRI;
  input [3:0]D;
  input [0:0]\DcBiasxD_reg[1]_2 ;
  input [4:0]\TmdsEncodedDataxDO_reg[5]_0 ;
  input \TmdsEncodedDataxDO_reg[7]_1 ;
  input \TmdsEncodedDataxDO_reg[1]_0 ;
  input \TmdsEncodedDataxDO_reg[9]_3 ;
  input [3:0]\DcBiasxD_reg[3]_5 ;

  wire ClkHdmixCI;
  wire ClkVgaxCI;
  wire [3:0]D;
  wire \DcBiasxD_reg[0] ;
  wire \DcBiasxD_reg[0]_0 ;
  wire \DcBiasxD_reg[0]_1 ;
  wire \DcBiasxD_reg[1] ;
  wire \DcBiasxD_reg[1]_0 ;
  wire \DcBiasxD_reg[1]_1 ;
  wire [0:0]\DcBiasxD_reg[1]_2 ;
  wire \DcBiasxD_reg[2] ;
  wire \DcBiasxD_reg[2]_0 ;
  wire \DcBiasxD_reg[2]_1 ;
  wire \DcBiasxD_reg[2]_2 ;
  wire \DcBiasxD_reg[2]_3 ;
  wire \DcBiasxD_reg[2]_4 ;
  wire \DcBiasxD_reg[3] ;
  wire \DcBiasxD_reg[3]_0 ;
  wire [3:0]\DcBiasxD_reg[3]_1 ;
  wire [3:0]\DcBiasxD_reg[3]_2 ;
  wire \DcBiasxD_reg[3]_3 ;
  wire \DcBiasxD_reg[3]_4 ;
  wire [3:0]\DcBiasxD_reg[3]_5 ;
  wire HdmiTxClkNxSO;
  wire HdmiTxClkPxSO;
  wire [2:0]HdmiTxNxDO;
  wire [2:0]HdmiTxPxDO;
  wire [3:0]Q;
  wire RstxRI;
  wire SerialDataCh0xS;
  wire SerialDataCh1xS;
  wire SerialDataCh2xS;
  wire SerialDataClkxS;
  wire [9:0]TmdsEncodedDataSymbolCh0xD;
  wire [9:0]TmdsEncodedDataSymbolCh1xD;
  wire [9:0]TmdsEncodedDataSymbolCh2xD;
  wire [7:0]TmdsEncodedDataxDO1_in;
  wire \TmdsEncodedDataxDO_reg[0] ;
  wire \TmdsEncodedDataxDO_reg[1] ;
  wire \TmdsEncodedDataxDO_reg[1]_0 ;
  wire \TmdsEncodedDataxDO_reg[2] ;
  wire \TmdsEncodedDataxDO_reg[3] ;
  wire \TmdsEncodedDataxDO_reg[4] ;
  wire \TmdsEncodedDataxDO_reg[5] ;
  wire [4:0]\TmdsEncodedDataxDO_reg[5]_0 ;
  wire \TmdsEncodedDataxDO_reg[6] ;
  wire \TmdsEncodedDataxDO_reg[6]_0 ;
  wire \TmdsEncodedDataxDO_reg[6]_1 ;
  wire \TmdsEncodedDataxDO_reg[7] ;
  wire \TmdsEncodedDataxDO_reg[7]_0 ;
  wire \TmdsEncodedDataxDO_reg[7]_1 ;
  wire \TmdsEncodedDataxDO_reg[8] ;
  wire \TmdsEncodedDataxDO_reg[8]_0 ;
  wire \TmdsEncodedDataxDO_reg[8]_1 ;
  wire \TmdsEncodedDataxDO_reg[8]_2 ;
  wire \TmdsEncodedDataxDO_reg[9] ;
  wire \TmdsEncodedDataxDO_reg[9]_0 ;
  wire \TmdsEncodedDataxDO_reg[9]_1 ;
  wire \TmdsEncodedDataxDO_reg[9]_2 ;
  wire \TmdsEncodedDataxDO_reg[9]_3 ;
  wire \VgaSyncxS_reg[HSyncxS] ;

  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUFDS OBUFDSHdmiTxCh0xI
       (.I(SerialDataCh0xS),
        .O(HdmiTxPxDO[0]),
        .OB(HdmiTxNxDO[0]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUFDS OBUFDSHdmiTxCh1xI
       (.I(SerialDataCh1xS),
        .O(HdmiTxPxDO[1]),
        .OB(HdmiTxNxDO[1]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUFDS OBUFDSHdmiTxCh2xI
       (.I(SerialDataCh2xS),
        .O(HdmiTxPxDO[2]),
        .OB(HdmiTxNxDO[2]));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* box_type = "PRIMITIVE" *) 
  OBUFDS OBUFDSHdmiTxClkxI
       (.I(SerialDataClkxS),
        .O(HdmiTxClkPxSO),
        .OB(HdmiTxClkNxSO));
  serializer_10_to_1 SerializerChannel0xI
       (.ClkHdmixCI(ClkHdmixCI),
        .ClkVgaxCI(ClkVgaxCI),
        .RstxRI(RstxRI),
        .TmdsDataxDI(TmdsEncodedDataSymbolCh0xD),
        .TmdsSerialDataxSO(SerialDataCh0xS));
  serializer_10_to_1_0 SerializerChannel1xI
       (.ClkHdmixCI(ClkHdmixCI),
        .ClkVgaxCI(ClkVgaxCI),
        .RstxRI(RstxRI),
        .TmdsDataxDI(TmdsEncodedDataSymbolCh1xD),
        .TmdsSerialDataxSO(SerialDataCh1xS));
  serializer_10_to_1_1 SerializerChannel2xI
       (.ClkHdmixCI(ClkHdmixCI),
        .ClkVgaxCI(ClkVgaxCI),
        .RstxRI(RstxRI),
        .TmdsDataxDI(TmdsEncodedDataSymbolCh2xD),
        .TmdsSerialDataxSO(SerialDataCh2xS));
  serializer_10_to_1_2 SerializerChannel3xI
       (.ClkHdmixCI(ClkHdmixCI),
        .ClkVgaxCI(ClkVgaxCI),
        .RstxRI(RstxRI),
        .TmdsSerialDataxSO(SerialDataClkxS));
  tmds_encoder TmdsEncoderC0xI
       (.ClkVgaxCI(ClkVgaxCI),
        .D(D),
        .\DcBiasxD_reg[0]_0 (\DcBiasxD_reg[0] ),
        .\DcBiasxD_reg[0]_1 (\TmdsEncodedDataxDO_reg[7] ),
        .\DcBiasxD_reg[2]_0 (\DcBiasxD_reg[2] ),
        .\DcBiasxD_reg[2]_1 (\DcBiasxD_reg[2]_3 ),
        .\DcBiasxD_reg[3]_0 (\DcBiasxD_reg[3]_1 ),
        .TmdsDataxDI(TmdsEncodedDataSymbolCh0xD),
        .TmdsEncodedDataxDO1_in(TmdsEncodedDataxDO1_in),
        .\TmdsEncodedDataxDO_reg[8]_0 (\TmdsEncodedDataxDO_reg[8]_0 ),
        .\TmdsEncodedDataxDO_reg[8]_1 (\TmdsEncodedDataxDO_reg[8]_1 ),
        .\TmdsEncodedDataxDO_reg[8]_2 (\TmdsEncodedDataxDO_reg[8]_2 ),
        .\TmdsEncodedDataxDO_reg[9]_0 (\TmdsEncodedDataxDO_reg[9] ),
        .\VgaSyncxS_reg[HSyncxS] (\VgaSyncxS_reg[HSyncxS] ));
  tmds_encoder_3 TmdsEncoderC1xI
       (.ClkVgaxCI(ClkVgaxCI),
        .\DcBiasxD_reg[0]_0 (\DcBiasxD_reg[0]_1 ),
        .\DcBiasxD_reg[1]_0 (\DcBiasxD_reg[1] ),
        .\DcBiasxD_reg[1]_1 (\DcBiasxD_reg[1]_0 ),
        .\DcBiasxD_reg[1]_2 (\DcBiasxD_reg[1]_1 ),
        .\DcBiasxD_reg[1]_3 (\DcBiasxD_reg[1]_2 ),
        .\DcBiasxD_reg[2]_0 (\DcBiasxD_reg[2]_0 ),
        .\DcBiasxD_reg[2]_1 (\DcBiasxD_reg[2]_1 ),
        .\DcBiasxD_reg[2]_2 (\DcBiasxD_reg[2]_2 ),
        .\DcBiasxD_reg[2]_3 (\DcBiasxD_reg[2]_4 ),
        .\DcBiasxD_reg[3]_0 (\DcBiasxD_reg[3] ),
        .\DcBiasxD_reg[3]_1 (\DcBiasxD_reg[3]_0 ),
        .\DcBiasxD_reg[3]_2 (\DcBiasxD_reg[3]_3 ),
        .\DcBiasxD_reg[3]_3 (\DcBiasxD_reg[3]_4 ),
        .Q(Q),
        .TmdsDataxDI(TmdsEncodedDataSymbolCh1xD),
        .\TmdsEncodedDataxDO_reg[1]_0 (\TmdsEncodedDataxDO_reg[1]_0 ),
        .\TmdsEncodedDataxDO_reg[5]_0 (\TmdsEncodedDataxDO_reg[5]_0 ),
        .\TmdsEncodedDataxDO_reg[6]_0 (\TmdsEncodedDataxDO_reg[6]_0 ),
        .\TmdsEncodedDataxDO_reg[6]_1 (\TmdsEncodedDataxDO_reg[6]_1 ),
        .\TmdsEncodedDataxDO_reg[7]_0 (\TmdsEncodedDataxDO_reg[7] ),
        .\TmdsEncodedDataxDO_reg[7]_1 (\TmdsEncodedDataxDO_reg[7]_1 ),
        .\TmdsEncodedDataxDO_reg[9]_0 (\TmdsEncodedDataxDO_reg[9]_1 ),
        .\TmdsEncodedDataxDO_reg[9]_1 (\TmdsEncodedDataxDO_reg[9]_2 ),
        .\TmdsEncodedDataxDO_reg[9]_2 (\TmdsEncodedDataxDO_reg[9]_3 ));
  tmds_encoder_4 TmdsEncoderC2xI
       (.ClkVgaxCI(ClkVgaxCI),
        .\DcBiasxD_reg[0]_0 (\DcBiasxD_reg[0]_0 ),
        .\DcBiasxD_reg[3]_0 (\DcBiasxD_reg[3]_2 ),
        .\DcBiasxD_reg[3]_1 (\DcBiasxD_reg[3]_5 ),
        .TmdsDataxDI(TmdsEncodedDataSymbolCh2xD),
        .\TmdsEncodedDataxDO_reg[0]_0 (\TmdsEncodedDataxDO_reg[0] ),
        .\TmdsEncodedDataxDO_reg[1]_0 (\TmdsEncodedDataxDO_reg[1] ),
        .\TmdsEncodedDataxDO_reg[2]_0 (\TmdsEncodedDataxDO_reg[2] ),
        .\TmdsEncodedDataxDO_reg[3]_0 (\TmdsEncodedDataxDO_reg[3] ),
        .\TmdsEncodedDataxDO_reg[4]_0 (\TmdsEncodedDataxDO_reg[4] ),
        .\TmdsEncodedDataxDO_reg[5]_0 (\TmdsEncodedDataxDO_reg[5] ),
        .\TmdsEncodedDataxDO_reg[6]_0 (\TmdsEncodedDataxDO_reg[6] ),
        .\TmdsEncodedDataxDO_reg[7]_0 (\TmdsEncodedDataxDO_reg[7] ),
        .\TmdsEncodedDataxDO_reg[7]_1 (\TmdsEncodedDataxDO_reg[7]_0 ),
        .\TmdsEncodedDataxDO_reg[8]_0 (\TmdsEncodedDataxDO_reg[8] ),
        .\TmdsEncodedDataxDO_reg[9]_0 (\TmdsEncodedDataxDO_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module fifo_regport__blk_mem_gen_generic_cstr
   (dout,
    rd_clk,
    wr_clk,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din);
  output [31:0]dout;
  input rd_clk;
  input wr_clk;
  input [0:0]E;
  input [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [31:0]din;

  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [31:0]din;
  wire [31:0]dout;
  wire rd_clk;
  wire wr_clk;
  wire [31:24]\NLW_ramloop[0].ram.r_dout_UNCONNECTED ;

  fifo_regport__blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ),
        .E(E),
        .Q(Q),
        .din(din),
        .dout({\NLW_ramloop[0].ram.r_dout_UNCONNECTED [31:24],dout[23:0]}),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module fifo_regport__blk_mem_gen_prim_width
   (dout,
    rd_clk,
    wr_clk,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din);
  output [31:0]dout;
  input rd_clk;
  input wr_clk;
  input [0:0]E;
  input [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [31:0]din;

  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [31:0]din;
  wire [31:0]dout;
  wire rd_clk;
  wire wr_clk;
  wire [31:24]\NLW_prim_noinit.ram_dout_UNCONNECTED ;

  fifo_regport__blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ),
        .E(E),
        .Q(Q),
        .din(din),
        .dout({\NLW_prim_noinit.ram_dout_UNCONNECTED [31:24],dout[23:0]}),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module fifo_regport__blk_mem_gen_prim_wrapper
   (dout,
    rd_clk,
    wr_clk,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1 ,
    din);
  output [31:0]dout;
  input rd_clk;
  input wr_clk;
  input [0:0]E;
  input [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1 ;
  input [31:0]din;

  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1 ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [31:0]din;
  wire [31:0]dout;
  wire rd_clk;
  wire wr_clk;
  wire [15:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,1'b0,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(rd_clk),
        .CLKBWRCLK(wr_clk),
        .DIADI(din[15:0]),
        .DIBDI(din[31:16]),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(dout[15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_DOBDO_UNCONNECTED [15:8],dout[23:16]}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(E),
        .ENBWREN(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 }));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module fifo_regport__blk_mem_gen_top
   (dout,
    rd_clk,
    wr_clk,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din);
  output [31:0]dout;
  input rd_clk;
  input wr_clk;
  input [0:0]E;
  input [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [31:0]din;

  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [31:0]din;
  wire [31:0]dout;
  wire rd_clk;
  wire wr_clk;
  wire [31:24]\NLW_valid.cstr_dout_UNCONNECTED ;

  fifo_regport__blk_mem_gen_generic_cstr \valid.cstr 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ),
        .E(E),
        .Q(Q),
        .din(din),
        .dout({\NLW_valid.cstr_dout_UNCONNECTED [31:24],dout[23:0]}),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_1" *) 
module fifo_regport__blk_mem_gen_v8_4_1
   (dout,
    rd_clk,
    wr_clk,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din);
  output [31:0]dout;
  input rd_clk;
  input wr_clk;
  input [0:0]E;
  input [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [31:0]din;

  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [31:0]din;
  wire [31:0]dout;
  wire rd_clk;
  wire wr_clk;
  wire [31:24]NLW_inst_blk_mem_gen_dout_UNCONNECTED;

  fifo_regport__blk_mem_gen_v8_4_1_synth inst_blk_mem_gen
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ),
        .E(E),
        .Q(Q),
        .din(din),
        .dout({NLW_inst_blk_mem_gen_dout_UNCONNECTED[31:24],dout[23:0]}),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_1_synth" *) 
module fifo_regport__blk_mem_gen_v8_4_1_synth
   (dout,
    rd_clk,
    wr_clk,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din);
  output [31:0]dout;
  input rd_clk;
  input wr_clk;
  input [0:0]E;
  input [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [31:0]din;

  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [31:0]din;
  wire [31:0]dout;
  wire rd_clk;
  wire wr_clk;
  wire [31:24]\NLW_gnbram.gnativebmg.native_blk_mem_gen_dout_UNCONNECTED ;

  fifo_regport__blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ),
        .E(E),
        .Q(Q),
        .din(din),
        .dout({\NLW_gnbram.gnativebmg.native_blk_mem_gen_dout_UNCONNECTED [31:24],dout[23:0]}),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module fifo_regport__clk_x_pntrs
   (ram_full_fb_i_reg,
    WR_PNTR_RD,
    FULL_FB,
    wr_en,
    out,
    Q,
    ram_full_i_i_2_0,
    wr_clk,
    \src_gray_ff_reg[6] ,
    rd_clk,
    \src_gray_ff_reg[6]_0 );
  output ram_full_fb_i_reg;
  output [6:0]WR_PNTR_RD;
  input FULL_FB;
  input wr_en;
  input out;
  input [6:0]Q;
  input [6:0]ram_full_i_i_2_0;
  input wr_clk;
  input [6:0]\src_gray_ff_reg[6] ;
  input rd_clk;
  input [6:0]\src_gray_ff_reg[6]_0 ;

  wire FULL_FB;
  wire [6:0]Q;
  wire [6:0]WR_PNTR_RD;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire [6:0]ram_full_i_i_2_0;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_i_5_n_0;
  wire ram_full_i_i_6_n_0;
  wire ram_full_i_i_7_n_0;
  wire rd_clk;
  wire [6:0]rd_pntr_wr;
  wire [6:0]\src_gray_ff_reg[6] ;
  wire [6:0]\src_gray_ff_reg[6]_0 ;
  wire wr_clk;
  wire wr_en;

  (* \PinAttr:I1:HOLD_DETOUR  = "187" *) 
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ),
        .I1(FULL_FB),
        .I2(wr_en),
        .I3(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ),
        .I4(out),
        .O(ram_full_fb_i_reg));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_full_i_i_2
       (.I0(ram_full_i_i_4_n_0),
        .I1(rd_pntr_wr[0]),
        .I2(ram_full_i_i_2_0[0]),
        .I3(rd_pntr_wr[1]),
        .I4(ram_full_i_i_2_0[1]),
        .I5(ram_full_i_i_5_n_0),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_full_i_i_3
       (.I0(ram_full_i_i_6_n_0),
        .I1(rd_pntr_wr[0]),
        .I2(Q[0]),
        .I3(rd_pntr_wr[1]),
        .I4(Q[1]),
        .I5(ram_full_i_i_7_n_0),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_4
       (.I0(rd_pntr_wr[2]),
        .I1(ram_full_i_i_2_0[2]),
        .I2(rd_pntr_wr[3]),
        .I3(ram_full_i_i_2_0[3]),
        .O(ram_full_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_full_i_i_5
       (.I0(rd_pntr_wr[6]),
        .I1(ram_full_i_i_2_0[6]),
        .I2(ram_full_i_i_2_0[5]),
        .I3(rd_pntr_wr[5]),
        .I4(ram_full_i_i_2_0[4]),
        .I5(rd_pntr_wr[4]),
        .O(ram_full_i_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_6
       (.I0(rd_pntr_wr[2]),
        .I1(Q[2]),
        .I2(rd_pntr_wr[3]),
        .I3(Q[3]),
        .O(ram_full_i_i_6_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_full_i_i_7
       (.I0(rd_pntr_wr[6]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(rd_pntr_wr[5]),
        .I4(Q[4]),
        .I5(rd_pntr_wr[4]),
        .O(ram_full_i_i_7_n_0));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "7" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  fifo_regport__xpm_cdc_gray rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr),
        .src_clk(rd_clk),
        .src_in_bin(\src_gray_ff_reg[6]_0 ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "7" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  fifo_regport__xpm_cdc_gray__2 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[6] ));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module fifo_regport__fifo_generator_ramfifo
   (dout,
    empty,
    full,
    rd_clk,
    wr_clk,
    din,
    wr_rst,
    rd_rst,
    rd_en,
    wr_en,
    lopt);
  output [31:0]dout;
  output empty;
  output full;
  input rd_clk;
  input wr_clk;
  input [31:0]din;
  input wr_rst;
  input rd_rst;
  input rd_en;
  input wr_en;
  input lopt;

  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire lopt;
  wire ram_rd_en_i;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_en;
  wire [6:0]rd_pntr;
  wire rd_rst;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire wr_clk;
  wire wr_en;
  wire [6:0]wr_pntr;
  wire [6:0]wr_pntr_plus1;
  wire [6:0]wr_pntr_plus2;
  wire [6:0]wr_pntr_rd;
  wire wr_rst;
  wire \NLW_gntv_or_sync_fifo.gl0.wr_full_UNCONNECTED ;
  wire [31:24]\NLW_gntv_or_sync_fifo.mem_dout_UNCONNECTED ;

  fifo_regport__clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.FULL_FB(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .Q(wr_pntr_plus1),
        .WR_PNTR_RD(wr_pntr_rd),
        .out(rst_full_gen_i),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_i_i_2_0(wr_pntr_plus2),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[6] (wr_pntr),
        .\src_gray_ff_reg[6]_0 (rd_pntr),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  fifo_regport__rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.E(ram_rd_en_i),
        .Q(rd_pntr),
        .WR_PNTR_RD(wr_pntr_rd),
        .empty(empty),
        .lopt(lopt),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst(rd_rst));
  fifo_regport__wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.E(ram_wr_en),
        .FULL_FB(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .Q(wr_pntr_plus2),
        .full(\NLW_gntv_or_sync_fifo.gl0.wr_full_UNCONNECTED ),
        .\gic0.gc0.count_d1_reg[6] (wr_pntr_plus1),
        .\gic0.gc0.count_d2_reg[6] (wr_pntr),
        .out(rst_full_ff_i),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst(wr_rst));
  fifo_regport__memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (ram_wr_en),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (wr_pntr),
        .E(ram_rd_en_i),
        .Q(rd_pntr),
        .din(din),
        .dout({\NLW_gntv_or_sync_fifo.mem_dout_UNCONNECTED [31:24],dout[23:0]}),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  fifo_regport__reset_blk_ramfifo rstblk
       (.\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_gen_i),
        .out(rst_full_ff_i),
        .wr_clk(wr_clk),
        .wr_rst(wr_rst));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module fifo_regport__fifo_generator_top
   (dout,
    empty,
    full,
    rd_clk,
    wr_clk,
    din,
    wr_rst,
    rd_rst,
    rd_en,
    wr_en,
    lopt);
  output [31:0]dout;
  output empty;
  output full;
  input rd_clk;
  input wr_clk;
  input [31:0]din;
  input wr_rst;
  input rd_rst;
  input rd_en;
  input wr_en;
  input lopt;

  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire lopt;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;
  wire \NLW_grf.rf_full_UNCONNECTED ;
  wire [31:24]\NLW_grf.rf_dout_UNCONNECTED ;

  fifo_regport__fifo_generator_ramfifo \grf.rf 
       (.din(din),
        .dout({\NLW_grf.rf_dout_UNCONNECTED [31:24],dout[23:0]}),
        .empty(empty),
        .full(\NLW_grf.rf_full_UNCONNECTED ),
        .lopt(lopt),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst(rd_rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst(wr_rst));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "7" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "32" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "32" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "0" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "artix7" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "1" *) (* C_PRELOAD_REGS = "0" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "2" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "3" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "125" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "124" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "7" *) 
(* C_RD_DEPTH = "128" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "7" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "0" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "7" *) 
(* C_WR_DEPTH = "128" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "7" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_2" *) 
module fifo_regport__fifo_generator_v13_2_2
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty,
    lopt);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [31:0]din;
  input wr_en;
  input rd_en;
  input [6:0]prog_empty_thresh;
  input [6:0]prog_empty_thresh_assert;
  input [6:0]prog_empty_thresh_negate;
  input [6:0]prog_full_thresh;
  input [6:0]prog_full_thresh_assert;
  input [6:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [31:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [6:0]data_count;
  output [6:0]rd_data_count;
  output [6:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;
  input lopt;

  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire lopt;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;
  wire NLW_inst_fifo_gen_full_UNCONNECTED;
  wire [31:24]NLW_inst_fifo_gen_dout_UNCONNECTED;

  fifo_regport__fifo_generator_v13_2_2_synth inst_fifo_gen
       (.din(din),
        .dout({NLW_inst_fifo_gen_dout_UNCONNECTED[31:24],dout[23:0]}),
        .empty(empty),
        .full(NLW_inst_fifo_gen_full_UNCONNECTED),
        .lopt(lopt),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst(rd_rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst(wr_rst));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_2_synth" *) 
module fifo_regport__fifo_generator_v13_2_2_synth
   (dout,
    empty,
    full,
    rd_clk,
    wr_clk,
    din,
    wr_rst,
    rd_rst,
    rd_en,
    wr_en,
    lopt);
  output [31:0]dout;
  output empty;
  output full;
  input rd_clk;
  input wr_clk;
  input [31:0]din;
  input wr_rst;
  input rd_rst;
  input rd_en;
  input wr_en;
  input lopt;

  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire lopt;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;
  wire \NLW_gconvfifo.rf_full_UNCONNECTED ;
  wire [31:24]\NLW_gconvfifo.rf_dout_UNCONNECTED ;

  fifo_regport__fifo_generator_top \gconvfifo.rf 
       (.din(din),
        .dout({\NLW_gconvfifo.rf_dout_UNCONNECTED [31:24],dout[23:0]}),
        .empty(empty),
        .full(\NLW_gconvfifo.rf_full_UNCONNECTED ),
        .lopt(lopt),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst(rd_rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst(wr_rst));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module fifo_regport__memory
   (dout,
    rd_clk,
    wr_clk,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din);
  output [31:0]dout;
  input rd_clk;
  input wr_clk;
  input [0:0]E;
  input [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [31:0]din;

  wire [0:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [31:0]din;
  wire [31:0]dout;
  wire rd_clk;
  wire wr_clk;
  wire [31:24]\NLW_gbm.gbmg.gbmga.ngecc.bmg_dout_UNCONNECTED ;

  fifo_regport__blk_mem_gen_v8_4_1 \gbm.gbmg.gbmga.ngecc.bmg 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ),
        .E(E),
        .Q(Q),
        .din(din),
        .dout({\NLW_gbm.gbmg.gbmga.ngecc.bmg_dout_UNCONNECTED [31:24],dout[23:0]}),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module fifo_regport__rd_bin_cntr
   (rd_en_0,
    Q,
    rd_en,
    out,
    WR_PNTR_RD,
    E,
    rd_clk,
    rd_rst,
    lopt);
  output rd_en_0;
  output [6:0]Q;
  input rd_en;
  input out;
  input [6:0]WR_PNTR_RD;
  input [0:0]E;
  input rd_clk;
  input rd_rst;
  input lopt;

  wire [0:0]E;
  wire [6:0]Q;
  wire [6:0]WR_PNTR_RD;
  wire \gc0.count[6]_i_2_n_0 ;
  wire \gras.rsts/comp0 ;
  wire \gras.rsts/comp1 ;
  wire lopt;
  wire out;
  wire [6:0]plusOp;
  wire ram_empty_i_i_4_n_0;
  wire ram_empty_i_i_5_n_0;
  wire ram_empty_i_i_6_n_0;
  wire ram_empty_i_i_7_n_0;
  wire rd_clk;
  wire rd_en_0;
  wire [6:0]rd_pntr_plus1;
  wire rd_rst;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp[2]));
  (* \PinAttr:I2:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[2]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp[3]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .I5(rd_pntr_plus1[5]),
        .O(plusOp[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[6]_i_1 
       (.I0(\gc0.count[6]_i_2_n_0 ),
        .I1(rd_pntr_plus1[5]),
        .I2(rd_pntr_plus1[6]),
        .O(plusOp[6]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \gc0.count[6]_i_2 
       (.I0(rd_pntr_plus1[4]),
        .I1(rd_pntr_plus1[2]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(rd_pntr_plus1[3]),
        .O(\gc0.count[6]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(rd_pntr_plus1[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(rd_pntr_plus1[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(rd_pntr_plus1[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(rd_pntr_plus1[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(rd_pntr_plus1[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(rd_pntr_plus1[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(rd_pntr_plus1[6]),
        .Q(Q[6]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(rd_rst),
        .Q(rd_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(plusOp[1]),
        .Q(rd_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(plusOp[2]),
        .Q(rd_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(plusOp[3]),
        .Q(rd_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(plusOp[4]),
        .Q(rd_pntr_plus1[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(plusOp[5]),
        .Q(rd_pntr_plus1[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(rd_rst),
        .D(plusOp[6]),
        .Q(rd_pntr_plus1[6]));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* \PinAttr:I2:HOLD_DETOUR  = "180" *) 
  LUT4 #(
    .INIT(16'hABAA)) 
    ram_empty_i_i_1
       (.I0(\gras.rsts/comp0 ),
        .I1(lopt),
        .I2(out),
        .I3(\gras.rsts/comp1 ),
        .O(rd_en_0));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_empty_i_i_2
       (.I0(ram_empty_i_i_4_n_0),
        .I1(Q[0]),
        .I2(WR_PNTR_RD[0]),
        .I3(Q[1]),
        .I4(WR_PNTR_RD[1]),
        .I5(ram_empty_i_i_5_n_0),
        .O(\gras.rsts/comp0 ));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_empty_i_i_3
       (.I0(ram_empty_i_i_6_n_0),
        .I1(rd_pntr_plus1[0]),
        .I2(WR_PNTR_RD[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(WR_PNTR_RD[1]),
        .I5(ram_empty_i_i_7_n_0),
        .O(\gras.rsts/comp1 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_4
       (.I0(Q[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(Q[3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_empty_i_i_5
       (.I0(Q[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(WR_PNTR_RD[5]),
        .I3(Q[5]),
        .I4(WR_PNTR_RD[4]),
        .I5(Q[4]),
        .O(ram_empty_i_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_6
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(rd_pntr_plus1[3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_6_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_empty_i_i_7
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(WR_PNTR_RD[5]),
        .I3(rd_pntr_plus1[5]),
        .I4(WR_PNTR_RD[4]),
        .I5(rd_pntr_plus1[4]),
        .O(ram_empty_i_i_7_n_0));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module fifo_regport__rd_logic
   (empty,
    Q,
    E,
    rd_clk,
    rd_rst,
    rd_en,
    WR_PNTR_RD,
    lopt);
  output empty;
  output [6:0]Q;
  output [0:0]E;
  input rd_clk;
  input rd_rst;
  input rd_en;
  input [6:0]WR_PNTR_RD;
  input lopt;

  wire [0:0]E;
  wire [6:0]Q;
  wire [6:0]WR_PNTR_RD;
  wire empty;
  wire empty_fb_i;
  wire lopt;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;
  wire rpntr_n_0;
  wire NLW_rpntr_rd_en_UNCONNECTED;

  fifo_regport__rd_status_flags_as \gras.rsts 
       (.E(E),
        .empty(empty),
        .out(empty_fb_i),
        .ram_empty_i_reg_0(rpntr_n_0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst(rd_rst));
  fifo_regport__rd_bin_cntr rpntr
       (.E(E),
        .Q(Q),
        .WR_PNTR_RD(WR_PNTR_RD),
        .lopt(lopt),
        .out(empty_fb_i),
        .rd_clk(rd_clk),
        .rd_en(NLW_rpntr_rd_en_UNCONNECTED),
        .rd_en_0(rpntr_n_0),
        .rd_rst(rd_rst));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module fifo_regport__rd_status_flags_as
   (empty,
    out,
    E,
    ram_empty_i_reg_0,
    rd_clk,
    rd_rst,
    rd_en);
  output empty;
  output out;
  output [0:0]E;
  input ram_empty_i_reg_0;
  input rd_clk;
  input rd_rst;
  input rd_en;

  wire [0:0]E;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire rd_clk;
  wire rd_en;
  wire rd_rst;

  assign empty = ram_empty_i;
  assign out = ram_empty_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(rd_en),
        .I1(ram_empty_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(rd_rst),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(rd_rst),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module fifo_regport__reset_blk_ramfifo
   (out,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_clk,
    wr_rst);
  output out;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  input wr_clk;
  input wr_rst;

  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  wire wr_clk;
  wire wr_rst;

  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d3;
  assign out = rst_d2;
  initial assign \grstd1.grst_full.grst_f.rst_d1_reg .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1),
    .XON("FALSE")) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(wr_rst),
        .Q(rst_d1));
  initial assign \grstd1.grst_full.grst_f.rst_d2_reg .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1),
    .XON("FALSE")) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(wr_rst),
        .Q(rst_d2));
  initial assign \grstd1.grst_full.grst_f.rst_d3_reg .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1),
    .XON("FALSE")) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(wr_rst),
        .Q(rst_d3));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module fifo_regport__wr_bin_cntr
   (Q,
    \gic0.gc0.count_d1_reg[6]_0 ,
    \gic0.gc0.count_d2_reg[6]_0 ,
    E,
    wr_clk,
    wr_rst);
  output [6:0]Q;
  output [6:0]\gic0.gc0.count_d1_reg[6]_0 ;
  output [6:0]\gic0.gc0.count_d2_reg[6]_0 ;
  input [0:0]E;
  input wr_clk;
  input wr_rst;

  wire [0:0]E;
  wire [6:0]Q;
  wire \gic0.gc0.count[6]_i_2_n_0 ;
  wire [6:0]\gic0.gc0.count_d1_reg[6]_0 ;
  wire [6:0]\gic0.gc0.count_d2_reg[6]_0 ;
  wire [6:0]plusOp__0;
  wire wr_clk;
  wire wr_rst;

  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
  (* \PinAttr:I2:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__0[2]));
  (* \PinAttr:I2:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__0[3]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc0.count[5]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(plusOp__0[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[6]_i_1 
       (.I0(\gic0.gc0.count[6]_i_2_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .O(plusOp__0[6]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \gic0.gc0.count[6]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .O(\gic0.gc0.count[6]_i_2_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(Q[0]),
        .PRE(wr_rst),
        .Q(\gic0.gc0.count_d1_reg[6]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(Q[1]),
        .Q(\gic0.gc0.count_d1_reg[6]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(Q[2]),
        .Q(\gic0.gc0.count_d1_reg[6]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(Q[3]),
        .Q(\gic0.gc0.count_d1_reg[6]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(Q[4]),
        .Q(\gic0.gc0.count_d1_reg[6]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(Q[5]),
        .Q(\gic0.gc0.count_d1_reg[6]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(Q[6]),
        .Q(\gic0.gc0.count_d1_reg[6]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(\gic0.gc0.count_d1_reg[6]_0 [0]),
        .Q(\gic0.gc0.count_d2_reg[6]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(\gic0.gc0.count_d1_reg[6]_0 [1]),
        .Q(\gic0.gc0.count_d2_reg[6]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(\gic0.gc0.count_d1_reg[6]_0 [2]),
        .Q(\gic0.gc0.count_d2_reg[6]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(\gic0.gc0.count_d1_reg[6]_0 [3]),
        .Q(\gic0.gc0.count_d2_reg[6]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(\gic0.gc0.count_d1_reg[6]_0 [4]),
        .Q(\gic0.gc0.count_d2_reg[6]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(\gic0.gc0.count_d1_reg[6]_0 [5]),
        .Q(\gic0.gc0.count_d2_reg[6]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(\gic0.gc0.count_d1_reg[6]_0 [6]),
        .Q(\gic0.gc0.count_d2_reg[6]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(plusOp__0[0]),
        .Q(Q[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(wr_rst),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(plusOp__0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(plusOp__0[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(plusOp__0[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(plusOp__0[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(wr_rst),
        .D(plusOp__0[6]),
        .Q(Q[6]));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module fifo_regport__wr_logic
   (full,
    FULL_FB,
    E,
    Q,
    \gic0.gc0.count_d1_reg[6] ,
    \gic0.gc0.count_d2_reg[6] ,
    ram_full_fb_i_reg,
    wr_clk,
    out,
    wr_en,
    wr_rst);
  output full;
  output FULL_FB;
  output [0:0]E;
  output [6:0]Q;
  output [6:0]\gic0.gc0.count_d1_reg[6] ;
  output [6:0]\gic0.gc0.count_d2_reg[6] ;
  input ram_full_fb_i_reg;
  input wr_clk;
  input out;
  input wr_en;
  input wr_rst;

  wire [0:0]E;
  wire FULL_FB;
  wire [6:0]Q;
  wire [6:0]\gic0.gc0.count_d1_reg[6] ;
  wire [6:0]\gic0.gc0.count_d2_reg[6] ;
  wire out;
  wire ram_full_fb_i_reg;
  wire wr_clk;
  wire wr_en;
  wire wr_rst;
  wire \NLW_gwas.wsts_full_UNCONNECTED ;

  fifo_regport__wr_status_flags_as \gwas.wsts 
       (.E(E),
        .FULL_FB(FULL_FB),
        .full(\NLW_gwas.wsts_full_UNCONNECTED ),
        .out(out),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  fifo_regport__wr_bin_cntr wpntr
       (.E(E),
        .Q(Q),
        .\gic0.gc0.count_d1_reg[6]_0 (\gic0.gc0.count_d1_reg[6] ),
        .\gic0.gc0.count_d2_reg[6]_0 (\gic0.gc0.count_d2_reg[6] ),
        .wr_clk(wr_clk),
        .wr_rst(wr_rst));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module fifo_regport__wr_status_flags_as
   (full,
    FULL_FB,
    E,
    ram_full_fb_i_reg_0,
    wr_clk,
    out,
    wr_en);
  output full;
  output FULL_FB;
  output [0:0]E;
  input ram_full_fb_i_reg_0;
  input wr_clk;
  input out;
  input wr_en;

  wire [0:0]E;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_full_i;
  wire wr_clk;
  wire wr_en;

  assign FULL_FB = ram_full_fb_i;
  assign full = ram_full_i;
  (* \PinAttr:I1:HOLD_DETOUR  = "187" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg_0),
        .PRE(out),
        .Q(ram_full_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg_0),
        .PRE(out),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_generic_cstr
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [31:0]douta;
  output [31:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[3:0]),
        .dinb(dinb[3:0]),
        .douta(douta[3:0]),
        .doutb(doutb[3:0]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[0]),
        .web(web[0]));
  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized0 \ramloop[1].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[7:4]),
        .dinb(dinb[7:4]),
        .douta(douta[7:4]),
        .doutb(doutb[7:4]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[0]),
        .web(web[0]));
  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized1 \ramloop[2].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[11:8]),
        .dinb(dinb[11:8]),
        .douta(douta[11:8]),
        .doutb(doutb[11:8]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[1]),
        .web(web[1]));
  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized2 \ramloop[3].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[15:12]),
        .dinb(dinb[15:12]),
        .douta(douta[15:12]),
        .doutb(doutb[15:12]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[1]),
        .web(web[1]));
  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized3 \ramloop[4].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[19:16]),
        .dinb(dinb[19:16]),
        .douta(douta[19:16]),
        .doutb(doutb[19:16]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[2]),
        .web(web[2]));
  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized4 \ramloop[5].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[23:20]),
        .dinb(dinb[23:20]),
        .douta(douta[23:20]),
        .doutb(doutb[23:20]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[2]),
        .web(web[2]));
  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized5 \ramloop[6].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[27:24]),
        .dinb(dinb[27:24]),
        .douta(douta[27:24]),
        .doutb(doutb[27:24]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[3]),
        .web(web[3]));
  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized6 \ramloop[7].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[31:28]),
        .dinb(dinb[31:28]),
        .douta(douta[31:28]),
        .doutb(doutb[31:28]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[3]),
        .web(web[3]));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized0
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized0 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized1
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized1 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized2
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized2 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized3
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized3 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized4
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized4 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized5
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized5 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_width__parameterized6
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized6 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* bmm_info_memory_device = "[3:0][0:8191]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:4],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:4],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized0
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* bmm_info_memory_device = "[7:4][0:8191]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:4],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:4],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized1
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* bmm_info_memory_device = "[11:8][0:8191]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:4],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:4],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized2
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* bmm_info_memory_device = "[15:12][0:8191]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:4],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:4],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized3
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* bmm_info_memory_device = "[19:16][0:8191]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:4],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:4],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized4
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* bmm_info_memory_device = "[23:20][0:8191]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:4],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:4],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized5
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* bmm_info_memory_device = "[27:24][0:8191]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000008),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:4],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:4],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_prim_wrapper__parameterized6
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [3:0]douta;
  output [3:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [3:0]dina;
  input [3:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [3:0]dina;
  wire [3:0]dinb;
  wire [3:0]douta;
  wire [3:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* bmm_info_memory_device = "[31:28][0:8191]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h000000000000000000000000000000000000000000000000000000000000000B),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:4],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:4],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_top
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [31:0]douta;
  output [31:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_generic_cstr \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* C_ADDRA_WIDTH = "32" *) (* C_ADDRB_WIDTH = "32" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "8" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "0" *) 
(* C_COUNT_36K_BRAM = "8" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "0" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "1" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     20.388 mW" *) 
(* C_FAMILY = "artix7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "1" *) 
(* C_HAS_RSTB = "1" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "ublaze_sopc_blk_mem_gen_0_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "2" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "8192" *) (* C_READ_DEPTH_B = "8192" *) (* C_READ_WIDTH_A = "32" *) 
(* C_READ_WIDTH_B = "32" *) (* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) 
(* C_RST_PRIORITY_A = "CE" *) (* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "ALL" *) 
(* C_USE_BRAM_BLOCK = "1" *) (* C_USE_BYTE_WEA = "1" *) (* C_USE_BYTE_WEB = "1" *) 
(* C_USE_DEFAULT_DATA = "0" *) (* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) 
(* C_USE_URAM = "0" *) (* C_WEA_WIDTH = "4" *) (* C_WEB_WIDTH = "4" *) 
(* C_WRITE_DEPTH_A = "8192" *) (* C_WRITE_DEPTH_B = "8192" *) (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
(* C_WRITE_MODE_B = "WRITE_FIRST" *) (* C_WRITE_WIDTH_A = "32" *) (* C_WRITE_WIDTH_B = "32" *) 
(* C_XDEVICEFAMILY = "artix7" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_v8_4_1" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_v8_4_1
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [3:0]wea;
  input [31:0]addra;
  input [31:0]dina;
  output [31:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [3:0]web;
  input [31:0]addrb;
  input [31:0]dinb;
  output [31:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [31:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [31:0]s_axi_rdaddrecc;

  wire [31:0]addra;
  wire [31:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_v8_4_1_synth inst_blk_mem_gen
       (.addra(addra[14:2]),
        .addrb(addrb[14:2]),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_1_synth" *) 
module ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_v8_4_1_synth
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [31:0]douta;
  output [31:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [12:0]addra;
  input [12:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;

  wire [12:0]addra;
  wire [12:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;

  ublaze_sopc_blk_mem_gen_0_0__blk_mem_gen_top \gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "ALU" *) 
module ublaze_sopc_microblaze_0_0__ALU
   (LO,
    \Data_Addr[0] ,
    ex_databus_addr,
    ex_use_carry,
    ex_alu_carryin,
    EX_CMP_Op_reg,
    ex_unsigned_op,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[0] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    S,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output LO;
  output [29:0]\Data_Addr[0] ;
  output [1:0]ex_databus_addr;
  input ex_use_carry;
  input ex_alu_carryin;
  input EX_CMP_Op_reg;
  input ex_unsigned_op;
  input [31:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [31:0]\EX_Op1_reg[0] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input S;
  input lopt;
  output lopt_1;
  input lopt_2;
  output lopt_3;
  output lopt_4;
  input lopt_5;

  wire DI;
  wire [29:0]\Data_Addr[0] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CMP_Op_reg;
  wire EX_Enable_ALU;
  wire [31:0]\EX_Op1_reg[0] ;
  wire LO;
  wire [31:0]Q;
  wire S;
  wire alu_carry_1;
  wire alu_carry_13;
  wire alu_carry_17;
  wire alu_carry_21;
  wire alu_carry_25;
  wire alu_carry_29;
  wire alu_carry_5;
  wire alu_carry_9;
  wire [1:0]ex_databus_addr;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire \^lopt_1 ;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_18;
  wire lopt_19;
  wire \^lopt_2 ;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire \^lopt_3 ;
  wire lopt_30;
  wire lopt_31;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_36;
  wire lopt_37;
  wire lopt_38;
  wire lopt_39;
  wire \^lopt_4 ;
  wire lopt_40;
  wire lopt_42;
  wire lopt_43;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_48;
  wire lopt_49;
  wire lopt_50;
  wire lopt_51;
  wire lopt_52;
  wire lopt_54;
  wire lopt_55;
  wire lopt_57;
  wire lopt_58;
  wire lopt_59;
  wire lopt_6;
  wire lopt_60;
  wire lopt_61;
  wire lopt_62;
  wire lopt_63;
  wire lopt_64;
  wire lopt_66;
  wire lopt_67;
  wire lopt_69;
  wire lopt_7;
  wire lopt_70;
  wire lopt_71;
  wire lopt_72;
  wire lopt_73;
  wire lopt_74;
  wire lopt_75;
  wire lopt_76;
  wire lopt_78;
  wire lopt_79;
  wire lopt_81;
  wire lopt_82;
  wire lopt_83;
  wire lopt_84;
  wire lopt_85;
  wire lopt_86;
  wire lopt_87;
  wire lopt_88;
  wire lopt_9;
  wire lopt_90;
  wire lopt_91;
  wire lopt_93;
  wire lopt_94;
  wire lopt_95;
  wire lopt_96;
  wire lopt_97;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_EX_CMP_Op_reg_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_ex_unsigned_op_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[11].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[15].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[19].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[23].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[27].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[31].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[3].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[7].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_2;
  assign \^lopt_4  = lopt_5;
  assign lopt_1 = DI;
  assign lopt_3 = \^lopt_2 ;
  assign lopt_4 = \^lopt_3 ;
  ublaze_sopc_microblaze_0_0__ALU_Bit__parameterized2 \Using_FPGA.ALL_Bits[0].ALU_Bit_I1 
       (.\Data_Addr[0] (\Data_Addr[0] [29]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CMP_Op_reg(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_EX_CMP_Op_reg_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[0] (\EX_Op1_reg[0] [31]),
        .LO(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[31]),
        .S(S),
        .\Using_FPGA.Native (LO),
        .ex_unsigned_op(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_ex_unsigned_op_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_93),
        .lopt_2(lopt_94),
        .lopt_3(lopt_95),
        .lopt_4(lopt_97));
  ublaze_sopc_microblaze_0_0__ALU_Bit \Using_FPGA.ALL_Bits[10].ALU_Bit_I1 
       (.\Data_Addr[10] (\Data_Addr[0] [19]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[10] (\EX_Op1_reg[0] [21]),
        .LO(alu_carry_21),
        .Q(Q[21]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_66),
        .lopt_10(lopt_75),
        .lopt_11(lopt_76),
        .lopt_2(lopt_67),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_69),
        .lopt_5(lopt_70),
        .lopt_6(lopt_71),
        .lopt_7(lopt_72),
        .lopt_8(lopt_73),
        .lopt_9(lopt_74));
  ublaze_sopc_microblaze_0_0__ALU_Bit_495 \Using_FPGA.ALL_Bits[11].ALU_Bit_I1 
       (.\Data_Addr[11] (\Data_Addr[0] [18]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_21),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[11] (\EX_Op1_reg[0] [20]),
        .LO(\NLW_Using_FPGA.ALL_Bits[11].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[20]),
        .lopt(lopt_59),
        .lopt_1(lopt_60),
        .lopt_2(lopt_61),
        .lopt_3(lopt_64));
  ublaze_sopc_microblaze_0_0__ALU_Bit_496 \Using_FPGA.ALL_Bits[12].ALU_Bit_I1 
       (.\Data_Addr[12] (\Data_Addr[0] [17]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[12] (\EX_Op1_reg[0] [19]),
        .LO(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[19]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_57),
        .lopt_2(lopt_58),
        .lopt_3(lopt_63));
  ublaze_sopc_microblaze_0_0__ALU_Bit_497 \Using_FPGA.ALL_Bits[13].ALU_Bit_I1 
       (.\Data_Addr[13] (\Data_Addr[0] [16]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[13] (\EX_Op1_reg[0] [18]),
        .LO(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[18]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_54),
        .lopt_2(lopt_55),
        .lopt_3(lopt_62));
  ublaze_sopc_microblaze_0_0__ALU_Bit_498 \Using_FPGA.ALL_Bits[14].ALU_Bit_I1 
       (.\Data_Addr[14] (\Data_Addr[0] [15]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[14] (\EX_Op1_reg[0] [17]),
        .LO(alu_carry_17),
        .Q(Q[17]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_54),
        .lopt_10(lopt_63),
        .lopt_11(lopt_64),
        .lopt_2(lopt_55),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_57),
        .lopt_5(lopt_58),
        .lopt_6(lopt_59),
        .lopt_7(lopt_60),
        .lopt_8(lopt_61),
        .lopt_9(lopt_62));
  ublaze_sopc_microblaze_0_0__ALU_Bit_499 \Using_FPGA.ALL_Bits[15].ALU_Bit_I1 
       (.\Data_Addr[15] (\Data_Addr[0] [14]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_17),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[15] (\EX_Op1_reg[0] [16]),
        .LO(\NLW_Using_FPGA.ALL_Bits[15].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[16]),
        .lopt(lopt_47),
        .lopt_1(lopt_48),
        .lopt_2(lopt_49),
        .lopt_3(lopt_52));
  ublaze_sopc_microblaze_0_0__ALU_Bit_500 \Using_FPGA.ALL_Bits[16].ALU_Bit_I1 
       (.\Data_Addr[16] (\Data_Addr[0] [13]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[16] (\EX_Op1_reg[0] [15]),
        .LO(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[15]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_45),
        .lopt_2(lopt_46),
        .lopt_3(lopt_51));
  ublaze_sopc_microblaze_0_0__ALU_Bit_501 \Using_FPGA.ALL_Bits[17].ALU_Bit_I1 
       (.\Data_Addr[17] (\Data_Addr[0] [12]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[17] (\EX_Op1_reg[0] [14]),
        .LO(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[14]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_2(lopt_43),
        .lopt_3(lopt_50));
  ublaze_sopc_microblaze_0_0__ALU_Bit_502 \Using_FPGA.ALL_Bits[18].ALU_Bit_I1 
       (.\Data_Addr[18] (\Data_Addr[0] [11]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[18] (\EX_Op1_reg[0] [13]),
        .LO(alu_carry_13),
        .Q(Q[13]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_10(lopt_51),
        .lopt_11(lopt_52),
        .lopt_2(lopt_43),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_45),
        .lopt_5(lopt_46),
        .lopt_6(lopt_47),
        .lopt_7(lopt_48),
        .lopt_8(lopt_49),
        .lopt_9(lopt_50));
  ublaze_sopc_microblaze_0_0__ALU_Bit_503 \Using_FPGA.ALL_Bits[19].ALU_Bit_I1 
       (.\Data_Addr[19] (\Data_Addr[0] [10]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_13),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[19] (\EX_Op1_reg[0] [12]),
        .LO(\NLW_Using_FPGA.ALL_Bits[19].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[12]),
        .lopt(lopt_35),
        .lopt_1(lopt_36),
        .lopt_2(lopt_37),
        .lopt_3(lopt_40));
  ublaze_sopc_microblaze_0_0__ALU_Bit_504 \Using_FPGA.ALL_Bits[1].ALU_Bit_I1 
       (.\Data_Addr[1] (\Data_Addr[0] [28]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[1] (\EX_Op1_reg[0] [30]),
        .LO(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[30]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_90),
        .lopt_2(lopt_91),
        .lopt_3(lopt_96));
  ublaze_sopc_microblaze_0_0__ALU_Bit_505 \Using_FPGA.ALL_Bits[20].ALU_Bit_I1 
       (.\Data_Addr[20] (\Data_Addr[0] [9]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[20] (\EX_Op1_reg[0] [11]),
        .LO(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[11]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_33),
        .lopt_2(lopt_34),
        .lopt_3(lopt_39));
  ublaze_sopc_microblaze_0_0__ALU_Bit_506 \Using_FPGA.ALL_Bits[21].ALU_Bit_I1 
       (.\Data_Addr[21] (\Data_Addr[0] [8]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[21] (\EX_Op1_reg[0] [10]),
        .LO(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[10]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_30),
        .lopt_2(lopt_31),
        .lopt_3(lopt_38));
  ublaze_sopc_microblaze_0_0__ALU_Bit_507 \Using_FPGA.ALL_Bits[22].ALU_Bit_I1 
       (.\Data_Addr[22] (\Data_Addr[0] [7]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[22] (\EX_Op1_reg[0] [9]),
        .LO(alu_carry_9),
        .Q(Q[9]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_30),
        .lopt_10(lopt_39),
        .lopt_11(lopt_40),
        .lopt_2(lopt_31),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_33),
        .lopt_5(lopt_34),
        .lopt_6(lopt_35),
        .lopt_7(lopt_36),
        .lopt_8(lopt_37),
        .lopt_9(lopt_38));
  ublaze_sopc_microblaze_0_0__ALU_Bit_508 \Using_FPGA.ALL_Bits[23].ALU_Bit_I1 
       (.\Data_Addr[23] (\Data_Addr[0] [6]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_9),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[23] (\EX_Op1_reg[0] [8]),
        .LO(\NLW_Using_FPGA.ALL_Bits[23].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[8]),
        .lopt(lopt_23),
        .lopt_1(lopt_24),
        .lopt_2(lopt_25),
        .lopt_3(lopt_28));
  ublaze_sopc_microblaze_0_0__ALU_Bit_509 \Using_FPGA.ALL_Bits[24].ALU_Bit_I1 
       (.\Data_Addr[24] (\Data_Addr[0] [5]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[24] (\EX_Op1_reg[0] [7]),
        .LO(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[7]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_21),
        .lopt_2(lopt_22),
        .lopt_3(lopt_27));
  ublaze_sopc_microblaze_0_0__ALU_Bit_510 \Using_FPGA.ALL_Bits[25].ALU_Bit_I1 
       (.\Data_Addr[25] (\Data_Addr[0] [4]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[25] (\EX_Op1_reg[0] [6]),
        .LO(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[6]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_18),
        .lopt_2(lopt_19),
        .lopt_3(lopt_26));
  ublaze_sopc_microblaze_0_0__ALU_Bit_511 \Using_FPGA.ALL_Bits[26].ALU_Bit_I1 
       (.\Data_Addr[26] (\Data_Addr[0] [3]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[26] (\EX_Op1_reg[0] [5]),
        .LO(alu_carry_5),
        .Q(Q[5]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_18),
        .lopt_10(lopt_27),
        .lopt_11(lopt_28),
        .lopt_2(lopt_19),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_21),
        .lopt_5(lopt_22),
        .lopt_6(lopt_23),
        .lopt_7(lopt_24),
        .lopt_8(lopt_25),
        .lopt_9(lopt_26));
  ublaze_sopc_microblaze_0_0__ALU_Bit_512 \Using_FPGA.ALL_Bits[27].ALU_Bit_I1 
       (.\Data_Addr[27] (\Data_Addr[0] [2]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_5),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[27] (\EX_Op1_reg[0] [4]),
        .LO(\NLW_Using_FPGA.ALL_Bits[27].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[4]),
        .lopt(lopt_11),
        .lopt_1(lopt_12),
        .lopt_2(lopt_13),
        .lopt_3(lopt_16));
  ublaze_sopc_microblaze_0_0__ALU_Bit_513 \Using_FPGA.ALL_Bits[28].ALU_Bit_I1 
       (.\Data_Addr[28] (\Data_Addr[0] [1]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[28] (\EX_Op1_reg[0] [3]),
        .LO(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[3]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_9),
        .lopt_2(lopt_10),
        .lopt_3(lopt_15));
  ublaze_sopc_microblaze_0_0__ALU_Bit_514 \Using_FPGA.ALL_Bits[29].ALU_Bit_I1 
       (.\Data_Addr[29] (\Data_Addr[0] [0]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[29] (\EX_Op1_reg[0] [2]),
        .LO(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[2]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_2(lopt_7),
        .lopt_3(lopt_14));
  ublaze_sopc_microblaze_0_0__ALU_Bit_515 \Using_FPGA.ALL_Bits[2].ALU_Bit_I1 
       (.\Data_Addr[2] (\Data_Addr[0] [27]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[2] (\EX_Op1_reg[0] [29]),
        .LO(alu_carry_29),
        .Q(Q[29]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_90),
        .lopt_10(lopt_97),
        .lopt_2(lopt_91),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(ex_unsigned_op),
        .lopt_5(EX_CMP_Op_reg),
        .lopt_6(lopt_93),
        .lopt_7(lopt_94),
        .lopt_8(lopt_95),
        .lopt_9(lopt_96));
  ublaze_sopc_microblaze_0_0__ALU_Bit_516 \Using_FPGA.ALL_Bits[30].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[30] (\EX_Op1_reg[0] [1]),
        .LO(alu_carry_1),
        .Q(Q[1]),
        .ex_databus_addr(ex_databus_addr[1]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_10(lopt_15),
        .lopt_11(lopt_16),
        .lopt_2(lopt_7),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_9),
        .lopt_5(lopt_10),
        .lopt_6(lopt_11),
        .lopt_7(lopt_12),
        .lopt_8(lopt_13),
        .lopt_9(lopt_14));
  ublaze_sopc_microblaze_0_0__ALU_Bit_517 \Using_FPGA.ALL_Bits[31].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryIn(\NLW_Using_FPGA.ALL_Bits[31].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(alu_carry_1),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[31] (\EX_Op1_reg[0] [0]),
        .Q(Q[0]),
        .ex_databus_addr(ex_databus_addr[0]),
        .lopt(\^lopt_1 ),
        .lopt_1(\^lopt_2 ),
        .lopt_2(\^lopt_3 ),
        .lopt_3(\^lopt_4 ));
  ublaze_sopc_microblaze_0_0__ALU_Bit_518 \Using_FPGA.ALL_Bits[3].ALU_Bit_I1 
       (.\Data_Addr[3] (\Data_Addr[0] [26]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_29),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[3] (\EX_Op1_reg[0] [28]),
        .LO(\NLW_Using_FPGA.ALL_Bits[3].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[28]),
        .lopt(lopt_83),
        .lopt_1(lopt_84),
        .lopt_2(lopt_85),
        .lopt_3(lopt_88));
  ublaze_sopc_microblaze_0_0__ALU_Bit_519 \Using_FPGA.ALL_Bits[4].ALU_Bit_I1 
       (.\Data_Addr[4] (\Data_Addr[0] [25]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[4] (\EX_Op1_reg[0] [27]),
        .LO(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[27]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_81),
        .lopt_2(lopt_82),
        .lopt_3(lopt_87));
  ublaze_sopc_microblaze_0_0__ALU_Bit_520 \Using_FPGA.ALL_Bits[5].ALU_Bit_I1 
       (.\Data_Addr[5] (\Data_Addr[0] [24]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[5] (\EX_Op1_reg[0] [26]),
        .LO(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[26]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_78),
        .lopt_2(lopt_79),
        .lopt_3(lopt_86));
  ublaze_sopc_microblaze_0_0__ALU_Bit_521 \Using_FPGA.ALL_Bits[6].ALU_Bit_I1 
       (.\Data_Addr[6] (\Data_Addr[0] [23]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[6] (\EX_Op1_reg[0] [25]),
        .LO(alu_carry_25),
        .Q(Q[25]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_78),
        .lopt_10(lopt_87),
        .lopt_11(lopt_88),
        .lopt_2(lopt_79),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_81),
        .lopt_5(lopt_82),
        .lopt_6(lopt_83),
        .lopt_7(lopt_84),
        .lopt_8(lopt_85),
        .lopt_9(lopt_86));
  ublaze_sopc_microblaze_0_0__ALU_Bit_522 \Using_FPGA.ALL_Bits[7].ALU_Bit_I1 
       (.\Data_Addr[7] (\Data_Addr[0] [22]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_25),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[7] (\EX_Op1_reg[0] [24]),
        .LO(\NLW_Using_FPGA.ALL_Bits[7].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[24]),
        .lopt(lopt_71),
        .lopt_1(lopt_72),
        .lopt_2(lopt_73),
        .lopt_3(lopt_76));
  ublaze_sopc_microblaze_0_0__ALU_Bit_523 \Using_FPGA.ALL_Bits[8].ALU_Bit_I1 
       (.\Data_Addr[8] (\Data_Addr[0] [21]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[8] (\EX_Op1_reg[0] [23]),
        .LO(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_LO_UNCONNECTED ),
        .Q(Q[23]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_69),
        .lopt_2(lopt_70),
        .lopt_3(lopt_75));
  ublaze_sopc_microblaze_0_0__ALU_Bit_524 \Using_FPGA.ALL_Bits[9].ALU_Bit_I1 
       (.\Data_Addr[9] (\Data_Addr[0] [20]),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryIn(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[9] (\EX_Op1_reg[0] [22]),
        .Q(Q[22]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_66),
        .lopt_2(lopt_67),
        .lopt_3(lopt_74));
  LUT4 #(
    .INIT(16'h0020)) 
    ex_subtract_op
       (.I0(\EX_ALU_Op_reg[0] [0]),
        .I1(EX_ALU_Sel_Logic),
        .I2(\EX_ALU_Op_reg[0] [1]),
        .I3(ex_use_carry),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit
   (EX_CarryOut,
    \Data_Addr[10] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[10] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[10] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[10] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\Data_Addr[10] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[10] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2_584 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[10] (\EX_Op1_reg[10] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_585 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .\Data_Addr[10] (\Data_Addr[10] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_495
   (EX_CarryOut,
    \Data_Addr[11] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[11] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[11] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[11] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[11] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[11] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_582 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[11] (\EX_Op1_reg[11] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_583 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[11] (\Data_Addr[11] ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_496
   (EX_CarryOut,
    \Data_Addr[12] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[12] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[12] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[12] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[12] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[12] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_580 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[12] (\EX_Op1_reg[12] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_581 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[12] (\Data_Addr[12] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_497
   (EX_CarryOut,
    \Data_Addr[13] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[13] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[13] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[13] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[13] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[13] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_578 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[13] (\EX_Op1_reg[13] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_579 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[13] (\Data_Addr[13] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_498
   (EX_CarryOut,
    \Data_Addr[14] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[14] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[14] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[14] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\Data_Addr[14] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[14] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2_576 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[14] (\EX_Op1_reg[14] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_577 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .\Data_Addr[14] (\Data_Addr[14] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_499
   (EX_CarryOut,
    \Data_Addr[15] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[15] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[15] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[15] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[15] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[15] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_574 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[15] (\EX_Op1_reg[15] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_575 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[15] (\Data_Addr[15] ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_500
   (EX_CarryOut,
    \Data_Addr[16] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[16] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[16] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[16] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[16] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[16] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_572 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[16] (\EX_Op1_reg[16] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_573 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[16] (\Data_Addr[16] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_501
   (EX_CarryOut,
    \Data_Addr[17] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[17] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[17] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[17] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[17] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[17] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_570 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[17] (\EX_Op1_reg[17] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_571 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[17] (\Data_Addr[17] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_502
   (EX_CarryOut,
    \Data_Addr[18] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[18] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[18] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[18] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\Data_Addr[18] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[18] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2_568 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[18] (\EX_Op1_reg[18] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_569 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .\Data_Addr[18] (\Data_Addr[18] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_503
   (EX_CarryOut,
    \Data_Addr[19] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[19] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[19] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[19] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[19] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[19] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_566 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[19] (\EX_Op1_reg[19] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_567 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[19] (\Data_Addr[19] ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_504
   (EX_CarryOut,
    \Data_Addr[1] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[1] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[1] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[1] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[1] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[1] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_564 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[1] (\EX_Op1_reg[1] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_565 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[1] (\Data_Addr[1] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_505
   (EX_CarryOut,
    \Data_Addr[20] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[20] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[20] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[20] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[20] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[20] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_562 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[20] (\EX_Op1_reg[20] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_563 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[20] (\Data_Addr[20] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_506
   (EX_CarryOut,
    \Data_Addr[21] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[21] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[21] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[21] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[21] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[21] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_560 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[21] (\EX_Op1_reg[21] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_561 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[21] (\Data_Addr[21] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_507
   (EX_CarryOut,
    \Data_Addr[22] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[22] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[22] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[22] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\Data_Addr[22] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[22] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2_558 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[22] (\EX_Op1_reg[22] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_559 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .\Data_Addr[22] (\Data_Addr[22] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_508
   (EX_CarryOut,
    \Data_Addr[23] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[23] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[23] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[23] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[23] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[23] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_556 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[23] (\EX_Op1_reg[23] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_557 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[23] (\Data_Addr[23] ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_509
   (EX_CarryOut,
    \Data_Addr[24] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[24] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[24] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[24] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[24] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[24] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_554 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[24] (\EX_Op1_reg[24] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_555 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[24] (\Data_Addr[24] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_510
   (EX_CarryOut,
    \Data_Addr[25] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[25] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[25] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[25] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[25] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[25] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_552 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[25] (\EX_Op1_reg[25] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_553 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[25] (\Data_Addr[25] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_511
   (EX_CarryOut,
    \Data_Addr[26] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[26] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[26] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[26] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\Data_Addr[26] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[26] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2_550 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[26] (\EX_Op1_reg[26] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_551 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .\Data_Addr[26] (\Data_Addr[26] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_512
   (EX_CarryOut,
    \Data_Addr[27] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[27] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[27] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[27] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[27] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[27] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_548 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[27] (\EX_Op1_reg[27] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_549 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[27] (\Data_Addr[27] ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_513
   (EX_CarryOut,
    \Data_Addr[28] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[28] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[28] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[28] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[28] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[28] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_546 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[28] (\EX_Op1_reg[28] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_547 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[28] (\Data_Addr[28] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_514
   (EX_CarryOut,
    \Data_Addr[29] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[29] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[29] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[29] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[29] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[29] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_544 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[29] (\EX_Op1_reg[29] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_545 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[29] (\Data_Addr[29] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_515
   (EX_CarryOut,
    \Data_Addr[2] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[2] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10);
  output EX_CarryOut;
  output [0:0]\Data_Addr[2] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[2] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;

  wire [0:0]\Data_Addr[2] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[2] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2_542 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[2] (\EX_Op1_reg[2] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_543 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .\Data_Addr[2] (\Data_Addr[2] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_516
   (EX_CarryOut,
    ex_databus_addr,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[30] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[30] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[30] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire [0:0]ex_databus_addr;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2_540 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[30] (\EX_Op1_reg[30] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_541 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .ex_databus_addr(ex_databus_addr),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_517
   (EX_CarryOut,
    ex_databus_addr,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[31] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    EX_CarryIn,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[31] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input EX_CarryIn;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[31] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire [0:0]ex_databus_addr;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_538 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[31] (\EX_Op1_reg[31] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_539 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryIn(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .ex_databus_addr(ex_databus_addr),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_518
   (EX_CarryOut,
    \Data_Addr[3] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[3] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[3] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[3] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[3] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[3] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_536 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[3] (\EX_Op1_reg[3] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_537 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[3] (\Data_Addr[3] ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_519
   (EX_CarryOut,
    \Data_Addr[4] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[4] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[4] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[4] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[4] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[4] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_534 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[4] (\EX_Op1_reg[4] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_535 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[4] (\Data_Addr[4] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_520
   (EX_CarryOut,
    \Data_Addr[5] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[5] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[5] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[5] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[5] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[5] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_532 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[5] (\EX_Op1_reg[5] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_533 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[5] (\Data_Addr[5] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_521
   (EX_CarryOut,
    \Data_Addr[6] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[6] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[6] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[6] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\Data_Addr[6] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[6] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2_530 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[6] (\EX_Op1_reg[6] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_531 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .\Data_Addr[6] (\Data_Addr[6] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_522
   (EX_CarryOut,
    \Data_Addr[7] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[7] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[7] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[7] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[7] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[7] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_528 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[7] (\EX_Op1_reg[7] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_529 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[7] (\Data_Addr[7] ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_523
   (EX_CarryOut,
    \Data_Addr[8] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[8] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[8] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[8] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[8] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[8] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2_526 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[8] (\EX_Op1_reg[8] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_527 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[8] (\Data_Addr[8] ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit_524
   (EX_CarryOut,
    \Data_Addr[9] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[9] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    EX_CarryIn,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\Data_Addr[9] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[9] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input EX_CarryIn;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [0:0]\Data_Addr[9] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[9] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT6_2 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[9] (\EX_Op1_reg[9] ),
        .Q(Q),
        .S(alu_AddSub));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_525 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[9] (\Data_Addr[9] ),
        .EX_CarryIn(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ublaze_sopc_microblaze_0_0__ALU_Bit__parameterized2
   (\Using_FPGA.Native ,
    \Data_Addr[0] ,
    EX_CMP_Op_reg,
    ex_unsigned_op,
    LO,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[0] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    S,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4);
  output \Using_FPGA.Native ;
  output [0:0]\Data_Addr[0] ;
  input EX_CMP_Op_reg;
  input ex_unsigned_op;
  input LO;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[0] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input S;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;

  wire [0:0]\Data_Addr[0] ;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[0] ;
  wire [0:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire alu_AddSub;
  wire alu_AddSub_1;
  wire lopt_1;
  wire \^lopt_2 ;
  wire op2_is_1;
  wire [0:0]\NLW_Last_Bit.I_ALU_LUT_2_EX_ALU_Op_reg[0]_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_2  = lopt_4;
  assign lopt_2 = op2_is_1;
  assign lopt_3 = alu_AddSub;
  ublaze_sopc_microblaze_0_0__MB_LUT4 \Last_Bit.I_ALU_LUT_2 
       (.\EX_ALU_Op_reg[0] (\NLW_Last_Bit.I_ALU_LUT_2_EX_ALU_Op_reg[0]_UNCONNECTED [0]),
        .EX_CMP_Op_reg(S),
        .Q(Q),
        .S(alu_AddSub),
        .alu_AddSub_1(alu_AddSub_1));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized12 \Last_Bit.I_ALU_LUT_V5 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[0] (\EX_Op1_reg[0] ),
        .Q(Q),
        .alu_AddSub_1(alu_AddSub_1));
  ublaze_sopc_microblaze_0_0__MB_MULT_AND \Last_Bit.MULT_AND_I 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] [1]),
        .Q(Q));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_586 \Last_Bit.MUXCY_XOR_I 
       (.CI(\NLW_Last_Bit.MUXCY_XOR_I_CI_UNCONNECTED ),
        .DI(\NLW_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\Data_Addr[0] (\Data_Addr[0] ),
        .S(\NLW_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .lopt(lopt_1),
        .lopt_1(\^lopt_2 ));
endmodule

(* ORIG_REF_NAME = "Byte_Doublet_Handle_gti" *) 
module ublaze_sopc_microblaze_0_0__Byte_Doublet_Handle_gti
   (wb_read_lsb_1_sel,
    wb_read_msb_doublet_sel,
    \M_AXI_DP_WDATA[31] ,
    \LOCKSTEP_Out_reg[3031] ,
    sync_reset,
    \Using_FPGA.Native ,
    ex_reverse_mem_access,
    Clk,
    mem_load_store_access_reg,
    \Using_FPGA.Native_0 ,
    \EX_Op2_reg[31] ,
    \Using_FPGA.Native_1 ,
    D,
    mem_byte_access,
    mem_doublet_access);
  output [0:0]wb_read_lsb_1_sel;
  output wb_read_msb_doublet_sel;
  output [35:0]\M_AXI_DP_WDATA[31] ;
  output [1:0]\LOCKSTEP_Out_reg[3031] ;
  input sync_reset;
  input \Using_FPGA.Native ;
  input ex_reverse_mem_access;
  input Clk;
  input mem_load_store_access_reg;
  input [31:0]\Using_FPGA.Native_0 ;
  input [3:0]\EX_Op2_reg[31] ;
  input \Using_FPGA.Native_1 ;
  input [0:0]D;
  input mem_byte_access;
  input mem_doublet_access;

  wire Clk;
  wire [0:0]D;
  wire [1:0]\LOCKSTEP_Out_reg[3031] ;
  wire [35:0]\M_AXI_DP_WDATA[31] ;
  wire \Using_FPGA.Native ;
  wire [31:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_reverse_mem_access;
  wire mem_byte_access;
  wire \mem_byte_selects_reg_n_0_[1] ;
  wire mem_doublet_access;
  wire mem_load_store_access_reg;
  wire mem_reverse_byteorder;
  wire p_0_in;
  wire sync_reset;
  wire [0:0]wb_read_lsb_1_sel;
  wire \wb_read_lsb_1_sel[0]_i_1_n_0 ;
  wire \wb_read_lsb_sel[0]_i_1_n_0 ;
  wire \wb_read_lsb_sel[1]_i_1_n_0 ;
  wire wb_read_msb_doublet_sel;

  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [31]),
        .Q(\M_AXI_DP_WDATA[31] [35]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[10] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [21]),
        .Q(\M_AXI_DP_WDATA[31] [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[11] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [20]),
        .Q(\M_AXI_DP_WDATA[31] [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[12] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [19]),
        .Q(\M_AXI_DP_WDATA[31] [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[13] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [18]),
        .Q(\M_AXI_DP_WDATA[31] [22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[14] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [17]),
        .Q(\M_AXI_DP_WDATA[31] [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[15] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [16]),
        .Q(\M_AXI_DP_WDATA[31] [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[16] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [15]),
        .Q(\M_AXI_DP_WDATA[31] [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[17] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [14]),
        .Q(\M_AXI_DP_WDATA[31] [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[18] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [13]),
        .Q(\M_AXI_DP_WDATA[31] [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[19] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [12]),
        .Q(\M_AXI_DP_WDATA[31] [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [30]),
        .Q(\M_AXI_DP_WDATA[31] [34]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[20] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [11]),
        .Q(\M_AXI_DP_WDATA[31] [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[21] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [10]),
        .Q(\M_AXI_DP_WDATA[31] [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[22] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [9]),
        .Q(\M_AXI_DP_WDATA[31] [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[23] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [8]),
        .Q(\M_AXI_DP_WDATA[31] [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[24] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [7]),
        .Q(\M_AXI_DP_WDATA[31] [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[25] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [6]),
        .Q(\M_AXI_DP_WDATA[31] [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[26] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [5]),
        .Q(\M_AXI_DP_WDATA[31] [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[27] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [4]),
        .Q(\M_AXI_DP_WDATA[31] [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[28] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [3]),
        .Q(\M_AXI_DP_WDATA[31] [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[29] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [2]),
        .Q(\M_AXI_DP_WDATA[31] [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [29]),
        .Q(\M_AXI_DP_WDATA[31] [33]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[30] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [1]),
        .Q(\M_AXI_DP_WDATA[31] [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[31] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [0]),
        .Q(\M_AXI_DP_WDATA[31] [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [28]),
        .Q(\M_AXI_DP_WDATA[31] [32]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [27]),
        .Q(\M_AXI_DP_WDATA[31] [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[5] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [26]),
        .Q(\M_AXI_DP_WDATA[31] [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[6] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [25]),
        .Q(\M_AXI_DP_WDATA[31] [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[7] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [24]),
        .Q(\M_AXI_DP_WDATA[31] [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[8] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [23]),
        .Q(\M_AXI_DP_WDATA[31] [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[9] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_0 [22]),
        .Q(\M_AXI_DP_WDATA[31] [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_byte_selects_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(\Using_FPGA.Native_1 ),
        .Q(p_0_in),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_byte_selects_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(D),
        .Q(\mem_byte_selects_reg_n_0_[1] ),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    mem_reverse_byteorder_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native ),
        .D(ex_reverse_mem_access),
        .Q(mem_reverse_byteorder),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \wb_read_lsb_1_sel[0]_i_1 
       (.I0(p_0_in),
        .I1(mem_doublet_access),
        .I2(mem_reverse_byteorder),
        .O(\wb_read_lsb_1_sel[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wb_read_lsb_1_sel_reg[0] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\wb_read_lsb_1_sel[0]_i_1_n_0 ),
        .Q(wb_read_lsb_1_sel),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'hC8CD)) 
    \wb_read_lsb_sel[0]_i_1 
       (.I0(mem_byte_access),
        .I1(p_0_in),
        .I2(mem_doublet_access),
        .I3(mem_reverse_byteorder),
        .O(\wb_read_lsb_sel[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h8B)) 
    \wb_read_lsb_sel[1]_i_1 
       (.I0(\mem_byte_selects_reg_n_0_[1] ),
        .I1(mem_byte_access),
        .I2(mem_reverse_byteorder),
        .O(\wb_read_lsb_sel[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wb_read_lsb_sel_reg[0] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\wb_read_lsb_sel[0]_i_1_n_0 ),
        .Q(\LOCKSTEP_Out_reg[3031] [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_read_lsb_sel_reg[1] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\wb_read_lsb_sel[1]_i_1_n_0 ),
        .Q(\LOCKSTEP_Out_reg[3031] [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    wb_read_msb_doublet_sel_reg
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(mem_reverse_byteorder),
        .Q(wb_read_msb_doublet_sel),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "DAXI_interface" *) 
module ublaze_sopc_microblaze_0_0__DAXI_interface
   (active_access_d1,
    active_access,
    D,
    wb_databus_steered_read_data,
    \LOCKSTEP_Out_reg[3023] ,
    \LOCKSTEP_Out_reg[3024] ,
    \LOCKSTEP_Out_reg[3025] ,
    \LOCKSTEP_Out_reg[3026] ,
    \LOCKSTEP_Out_reg[3027] ,
    \LOCKSTEP_Out_reg[3028] ,
    \LOCKSTEP_Out_reg[3029] ,
    \LOCKSTEP_Out_reg[3030] ,
    \LOCKSTEP_Out_reg[3022] ,
    \LOCKSTEP_Out_reg[3021] ,
    \LOCKSTEP_Out_reg[3020] ,
    \LOCKSTEP_Out_reg[3019] ,
    \LOCKSTEP_Out_reg[3018] ,
    \LOCKSTEP_Out_reg[3017] ,
    \LOCKSTEP_Out_reg[3016] ,
    \LOCKSTEP_Out_reg[3015] ,
    \LOCKSTEP_Out_reg[3014] ,
    \LOCKSTEP_Out_reg[3013] ,
    \LOCKSTEP_Out_reg[3012] ,
    \LOCKSTEP_Out_reg[3011] ,
    \LOCKSTEP_Out_reg[3010] ,
    \LOCKSTEP_Out_reg[3009] ,
    \LOCKSTEP_Out_reg[3008] ,
    \LOCKSTEP_Out_reg[3007] ,
    \wb_instr_reg[31] ,
    sync_reset,
    Clk,
    active_access_reg_0,
    MEM_DataBus_Write_reg,
    MEM_DataBus_Write_reg_0,
    MEM_DataBus_Write_reg_1,
    \wb_read_lsb_sel_reg[0] ,
    wb_read_msb_doublet_sel,
    wb_read_lsb_1_sel,
    Q,
    M_AXI_DP_RVALID,
    M_AXI_DP_BVALID,
    DReady,
    M_AXI_DP_RDATA);
  output active_access_d1;
  output active_access;
  output [2:0]D;
  output [7:0]wb_databus_steered_read_data;
  output \LOCKSTEP_Out_reg[3023] ;
  output \LOCKSTEP_Out_reg[3024] ;
  output \LOCKSTEP_Out_reg[3025] ;
  output \LOCKSTEP_Out_reg[3026] ;
  output \LOCKSTEP_Out_reg[3027] ;
  output \LOCKSTEP_Out_reg[3028] ;
  output \LOCKSTEP_Out_reg[3029] ;
  output \LOCKSTEP_Out_reg[3030] ;
  output \LOCKSTEP_Out_reg[3022] ;
  output \LOCKSTEP_Out_reg[3021] ;
  output \LOCKSTEP_Out_reg[3020] ;
  output \LOCKSTEP_Out_reg[3019] ;
  output \LOCKSTEP_Out_reg[3018] ;
  output \LOCKSTEP_Out_reg[3017] ;
  output \LOCKSTEP_Out_reg[3016] ;
  output \LOCKSTEP_Out_reg[3015] ;
  output \LOCKSTEP_Out_reg[3014] ;
  output \LOCKSTEP_Out_reg[3013] ;
  output \LOCKSTEP_Out_reg[3012] ;
  output \LOCKSTEP_Out_reg[3011] ;
  output \LOCKSTEP_Out_reg[3010] ;
  output \LOCKSTEP_Out_reg[3009] ;
  output \LOCKSTEP_Out_reg[3008] ;
  output \LOCKSTEP_Out_reg[3007] ;
  output \wb_instr_reg[31] ;
  input sync_reset;
  input Clk;
  input active_access_reg_0;
  input MEM_DataBus_Write_reg;
  input MEM_DataBus_Write_reg_0;
  input MEM_DataBus_Write_reg_1;
  input [1:0]\wb_read_lsb_sel_reg[0] ;
  input wb_read_msb_doublet_sel;
  input [0:0]wb_read_lsb_1_sel;
  input [31:0]Q;
  input M_AXI_DP_RVALID;
  input M_AXI_DP_BVALID;
  input DReady;
  input [31:0]M_AXI_DP_RDATA;

  wire Clk;
  wire [2:0]D;
  wire DReady;
  wire \LOCKSTEP_Out_reg[3007] ;
  wire \LOCKSTEP_Out_reg[3008] ;
  wire \LOCKSTEP_Out_reg[3009] ;
  wire \LOCKSTEP_Out_reg[3010] ;
  wire \LOCKSTEP_Out_reg[3011] ;
  wire \LOCKSTEP_Out_reg[3012] ;
  wire \LOCKSTEP_Out_reg[3013] ;
  wire \LOCKSTEP_Out_reg[3014] ;
  wire \LOCKSTEP_Out_reg[3015] ;
  wire \LOCKSTEP_Out_reg[3016] ;
  wire \LOCKSTEP_Out_reg[3017] ;
  wire \LOCKSTEP_Out_reg[3018] ;
  wire \LOCKSTEP_Out_reg[3019] ;
  wire \LOCKSTEP_Out_reg[3020] ;
  wire \LOCKSTEP_Out_reg[3021] ;
  wire \LOCKSTEP_Out_reg[3022] ;
  wire \LOCKSTEP_Out_reg[3023] ;
  wire \LOCKSTEP_Out_reg[3024] ;
  wire \LOCKSTEP_Out_reg[3025] ;
  wire \LOCKSTEP_Out_reg[3026] ;
  wire \LOCKSTEP_Out_reg[3027] ;
  wire \LOCKSTEP_Out_reg[3028] ;
  wire \LOCKSTEP_Out_reg[3029] ;
  wire \LOCKSTEP_Out_reg[3030] ;
  wire MEM_DAXI_Data_Strobe;
  wire MEM_DataBus_Write_reg;
  wire MEM_DataBus_Write_reg_0;
  wire MEM_DataBus_Write_reg_1;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire [31:0]Q;
  wire active_access;
  wire active_access_d1;
  wire active_access_reg_0;
  wire mem_access_completed0;
  wire sync_reset;
  wire [0:31]wb_databus_read_data;
  wire [7:0]wb_databus_steered_read_data;
  wire wb_dext_Data_Strobe;
  wire [0:31]wb_dext_read_data;
  wire \wb_instr_reg[31] ;
  wire [0:0]wb_read_lsb_1_sel;
  wire [1:0]\wb_read_lsb_sel_reg[0] ;
  wire wb_read_msb_doublet_sel;

  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_ARVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DataBus_Write_reg_1),
        .Q(D[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_AWVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DataBus_Write_reg),
        .Q(D[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_WVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DataBus_Write_reg_0),
        .Q(D[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[0]_INST_0_i_1 
       (.I0(Q[7]),
        .I1(wb_dext_read_data[24]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[31]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[0]),
        .O(\LOCKSTEP_Out_reg[3007] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[10]_INST_0_i_1 
       (.I0(Q[13]),
        .I1(wb_dext_read_data[18]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[21]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[10]),
        .O(\LOCKSTEP_Out_reg[3017] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[11]_INST_0_i_1 
       (.I0(Q[12]),
        .I1(wb_dext_read_data[19]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[20]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[11]),
        .O(\LOCKSTEP_Out_reg[3018] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[12]_INST_0_i_1 
       (.I0(Q[11]),
        .I1(wb_dext_read_data[20]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[19]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[12]),
        .O(\LOCKSTEP_Out_reg[3019] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[13]_INST_0_i_1 
       (.I0(Q[10]),
        .I1(wb_dext_read_data[21]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[18]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[13]),
        .O(\LOCKSTEP_Out_reg[3020] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[14]_INST_0_i_1 
       (.I0(Q[9]),
        .I1(wb_dext_read_data[22]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[17]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[14]),
        .O(\LOCKSTEP_Out_reg[3021] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[15]_INST_0_i_1 
       (.I0(Q[8]),
        .I1(wb_dext_read_data[23]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[16]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[15]),
        .O(\LOCKSTEP_Out_reg[3022] ));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[16]_INST_0_i_1 
       (.I0(wb_databus_read_data[8]),
        .I1(wb_databus_read_data[0]),
        .I2(wb_databus_read_data[24]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[16]),
        .O(\LOCKSTEP_Out_reg[3023] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_2 
       (.I0(Q[23]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[8]),
        .O(wb_databus_read_data[8]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_3 
       (.I0(Q[31]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[0]),
        .O(wb_databus_read_data[0]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_4 
       (.I0(Q[7]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[24]),
        .O(wb_databus_read_data[24]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_5 
       (.I0(Q[15]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[16]),
        .O(wb_databus_read_data[16]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[17]_INST_0_i_1 
       (.I0(wb_databus_read_data[9]),
        .I1(wb_databus_read_data[1]),
        .I2(wb_databus_read_data[25]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[17]),
        .O(\LOCKSTEP_Out_reg[3024] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_2 
       (.I0(Q[22]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[9]),
        .O(wb_databus_read_data[9]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_3 
       (.I0(Q[30]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[1]),
        .O(wb_databus_read_data[1]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_4 
       (.I0(Q[6]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[25]),
        .O(wb_databus_read_data[25]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_5 
       (.I0(Q[14]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[17]),
        .O(wb_databus_read_data[17]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[18]_INST_0_i_1 
       (.I0(wb_databus_read_data[10]),
        .I1(wb_databus_read_data[2]),
        .I2(wb_databus_read_data[26]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[18]),
        .O(\LOCKSTEP_Out_reg[3025] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_2 
       (.I0(Q[21]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[10]),
        .O(wb_databus_read_data[10]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_3 
       (.I0(Q[29]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[2]),
        .O(wb_databus_read_data[2]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_4 
       (.I0(Q[5]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[26]),
        .O(wb_databus_read_data[26]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_5 
       (.I0(Q[13]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[18]),
        .O(wb_databus_read_data[18]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[19]_INST_0_i_1 
       (.I0(wb_databus_read_data[11]),
        .I1(wb_databus_read_data[3]),
        .I2(wb_databus_read_data[27]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[19]),
        .O(\LOCKSTEP_Out_reg[3026] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_2 
       (.I0(Q[20]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[11]),
        .O(wb_databus_read_data[11]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_3 
       (.I0(Q[28]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[3]),
        .O(wb_databus_read_data[3]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_4 
       (.I0(Q[4]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[27]),
        .O(wb_databus_read_data[27]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_5 
       (.I0(Q[12]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[19]),
        .O(wb_databus_read_data[19]));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[1]_INST_0_i_1 
       (.I0(Q[6]),
        .I1(wb_dext_read_data[25]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[30]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[1]),
        .O(\LOCKSTEP_Out_reg[3008] ));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[20]_INST_0_i_1 
       (.I0(wb_databus_read_data[12]),
        .I1(wb_databus_read_data[4]),
        .I2(wb_databus_read_data[28]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[20]),
        .O(\LOCKSTEP_Out_reg[3027] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_2 
       (.I0(Q[19]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[12]),
        .O(wb_databus_read_data[12]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_3 
       (.I0(Q[27]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[4]),
        .O(wb_databus_read_data[4]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_4 
       (.I0(Q[3]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[28]),
        .O(wb_databus_read_data[28]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_5 
       (.I0(Q[11]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[20]),
        .O(wb_databus_read_data[20]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[21]_INST_0_i_1 
       (.I0(wb_databus_read_data[13]),
        .I1(wb_databus_read_data[5]),
        .I2(wb_databus_read_data[29]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[21]),
        .O(\LOCKSTEP_Out_reg[3028] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_2 
       (.I0(Q[18]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[13]),
        .O(wb_databus_read_data[13]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_3 
       (.I0(Q[26]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[5]),
        .O(wb_databus_read_data[5]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_4 
       (.I0(Q[2]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[29]),
        .O(wb_databus_read_data[29]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_5 
       (.I0(Q[10]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[21]),
        .O(wb_databus_read_data[21]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[22]_INST_0_i_1 
       (.I0(wb_databus_read_data[14]),
        .I1(wb_databus_read_data[6]),
        .I2(wb_databus_read_data[30]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[22]),
        .O(\LOCKSTEP_Out_reg[3029] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_2 
       (.I0(Q[17]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[14]),
        .O(wb_databus_read_data[14]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_3 
       (.I0(Q[25]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[6]),
        .O(wb_databus_read_data[6]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_4 
       (.I0(Q[1]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[30]),
        .O(wb_databus_read_data[30]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_5 
       (.I0(Q[9]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[22]),
        .O(wb_databus_read_data[22]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[23]_INST_0_i_1 
       (.I0(wb_databus_read_data[15]),
        .I1(wb_databus_read_data[7]),
        .I2(wb_databus_read_data[31]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[23]),
        .O(\LOCKSTEP_Out_reg[3030] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_2 
       (.I0(Q[16]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[15]),
        .O(wb_databus_read_data[15]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_3 
       (.I0(Q[24]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[7]),
        .O(wb_databus_read_data[7]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_4 
       (.I0(Q[0]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[31]),
        .O(wb_databus_read_data[31]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_5 
       (.I0(Q[8]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[23]),
        .O(wb_databus_read_data[23]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[24]_INST_0_i_1 
       (.I0(wb_databus_read_data[8]),
        .I1(wb_databus_read_data[0]),
        .I2(wb_databus_read_data[24]),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(wb_databus_read_data[16]),
        .O(wb_databus_steered_read_data[7]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[25]_INST_0_i_1 
       (.I0(wb_databus_read_data[9]),
        .I1(wb_databus_read_data[1]),
        .I2(wb_databus_read_data[25]),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(wb_databus_read_data[17]),
        .O(wb_databus_steered_read_data[6]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[26]_INST_0_i_1 
       (.I0(wb_databus_read_data[10]),
        .I1(wb_databus_read_data[2]),
        .I2(wb_databus_read_data[26]),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(wb_databus_read_data[18]),
        .O(wb_databus_steered_read_data[5]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[27]_INST_0_i_1 
       (.I0(wb_databus_read_data[11]),
        .I1(wb_databus_read_data[3]),
        .I2(wb_databus_read_data[27]),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(wb_databus_read_data[19]),
        .O(wb_databus_steered_read_data[4]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[28]_INST_0_i_1 
       (.I0(wb_databus_read_data[12]),
        .I1(wb_databus_read_data[4]),
        .I2(wb_databus_read_data[28]),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(wb_databus_read_data[20]),
        .O(wb_databus_steered_read_data[3]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[29]_INST_0_i_1 
       (.I0(wb_databus_read_data[13]),
        .I1(wb_databus_read_data[5]),
        .I2(wb_databus_read_data[29]),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(wb_databus_read_data[21]),
        .O(wb_databus_steered_read_data[2]));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[2]_INST_0_i_1 
       (.I0(Q[5]),
        .I1(wb_dext_read_data[26]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[29]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[2]),
        .O(\LOCKSTEP_Out_reg[3009] ));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[30]_INST_0_i_1 
       (.I0(wb_databus_read_data[14]),
        .I1(wb_databus_read_data[6]),
        .I2(wb_databus_read_data[30]),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(wb_databus_read_data[22]),
        .O(wb_databus_steered_read_data[1]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[31]_INST_0_i_1 
       (.I0(wb_databus_read_data[15]),
        .I1(wb_databus_read_data[7]),
        .I2(wb_databus_read_data[31]),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(wb_databus_read_data[23]),
        .O(wb_databus_steered_read_data[0]));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[3]_INST_0_i_1 
       (.I0(Q[4]),
        .I1(wb_dext_read_data[27]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[28]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[3]),
        .O(\LOCKSTEP_Out_reg[3010] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[4]_INST_0_i_1 
       (.I0(Q[3]),
        .I1(wb_dext_read_data[28]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[27]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[4]),
        .O(\LOCKSTEP_Out_reg[3011] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[5]_INST_0_i_1 
       (.I0(Q[2]),
        .I1(wb_dext_read_data[29]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[26]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[5]),
        .O(\LOCKSTEP_Out_reg[3012] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[6]_INST_0_i_1 
       (.I0(Q[1]),
        .I1(wb_dext_read_data[30]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[25]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[6]),
        .O(\LOCKSTEP_Out_reg[3013] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[7]_INST_0_i_1 
       (.I0(Q[0]),
        .I1(wb_dext_read_data[31]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[24]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[7]),
        .O(\LOCKSTEP_Out_reg[3014] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[8]_INST_0_i_1 
       (.I0(Q[15]),
        .I1(wb_dext_read_data[16]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[23]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[8]),
        .O(\LOCKSTEP_Out_reg[3015] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[9]_INST_0_i_1 
       (.I0(Q[14]),
        .I1(wb_dext_read_data[17]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[22]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[9]),
        .O(\LOCKSTEP_Out_reg[3016] ));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__106 
       (.I0(DReady),
        .I1(MEM_DAXI_Data_Strobe),
        .O(\wb_instr_reg[31] ));
  FDRE #(
    .INIT(1'b0)) 
    WB_DAXI_Data_Strobe_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DAXI_Data_Strobe),
        .Q(wb_dext_Data_Strobe),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[0] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[31]),
        .Q(wb_dext_read_data[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[10] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[21]),
        .Q(wb_dext_read_data[10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[11] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[20]),
        .Q(wb_dext_read_data[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[12] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[19]),
        .Q(wb_dext_read_data[12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[13] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[18]),
        .Q(wb_dext_read_data[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[14] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[17]),
        .Q(wb_dext_read_data[14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[15] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[16]),
        .Q(wb_dext_read_data[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[16] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[15]),
        .Q(wb_dext_read_data[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[17] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[14]),
        .Q(wb_dext_read_data[17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[18] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[13]),
        .Q(wb_dext_read_data[18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[19] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[12]),
        .Q(wb_dext_read_data[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[1] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[30]),
        .Q(wb_dext_read_data[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[20] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[11]),
        .Q(wb_dext_read_data[20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[21] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[10]),
        .Q(wb_dext_read_data[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[22] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[9]),
        .Q(wb_dext_read_data[22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[23] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[8]),
        .Q(wb_dext_read_data[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[24] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[7]),
        .Q(wb_dext_read_data[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[25] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[6]),
        .Q(wb_dext_read_data[25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[26] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[5]),
        .Q(wb_dext_read_data[26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[27] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[4]),
        .Q(wb_dext_read_data[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[28] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[3]),
        .Q(wb_dext_read_data[28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[29] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[2]),
        .Q(wb_dext_read_data[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[2] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[29]),
        .Q(wb_dext_read_data[2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[30] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[1]),
        .Q(wb_dext_read_data[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[31] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[0]),
        .Q(wb_dext_read_data[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[3] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[28]),
        .Q(wb_dext_read_data[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[4] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[27]),
        .Q(wb_dext_read_data[4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[5] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[26]),
        .Q(wb_dext_read_data[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[6] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[25]),
        .Q(wb_dext_read_data[6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[7] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[24]),
        .Q(wb_dext_read_data[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[8] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[23]),
        .Q(wb_dext_read_data[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[9] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[22]),
        .Q(wb_dext_read_data[9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    active_access_d1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(active_access),
        .Q(active_access_d1),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    active_access_reg
       (.C(Clk),
        .CE(1'b1),
        .D(active_access_reg_0),
        .Q(active_access),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hE0)) 
    mem_access_completed_i_1
       (.I0(M_AXI_DP_RVALID),
        .I1(M_AXI_DP_BVALID),
        .I2(active_access),
        .O(mem_access_completed0));
  FDRE #(
    .INIT(1'b0)) 
    mem_access_completed_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_access_completed0),
        .Q(MEM_DAXI_Data_Strobe),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "Data_Flow_Logic" *) 
module ublaze_sopc_microblaze_0_0__Data_Flow_Logic
   (mem_ex_result,
    \WB_MEM_Result_reg[1]_0 ,
    Q,
    R,
    \Using_FPGA.Native ,
    EX_Fwd,
    Clk,
    SR,
    mem_load_store_access_reg,
    MEM_Fwd);
  output [3:0]mem_ex_result;
  output [27:0]\WB_MEM_Result_reg[1]_0 ;
  output [31:0]Q;
  input R;
  input \Using_FPGA.Native ;
  input [0:31]EX_Fwd;
  input Clk;
  input [0:0]SR;
  input mem_load_store_access_reg;
  input [3:0]MEM_Fwd;

  wire Clk;
  wire [0:31]EX_Fwd;
  wire [3:0]MEM_Fwd;
  wire [31:0]Q;
  wire R;
  wire [0:0]SR;
  wire \Using_FPGA.Native ;
  wire [27:0]\WB_MEM_Result_reg[1]_0 ;
  wire [3:0]mem_ex_result;
  wire mem_load_store_access_reg;

  ublaze_sopc_microblaze_0_0__MB_FDRE_462 \Gen_Bits[0].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[0]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .mem_ex_result(mem_ex_result[3]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_463 \Gen_Bits[10].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[10]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[10] (\WB_MEM_Result_reg[1]_0 [18]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_464 \Gen_Bits[11].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[11]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[11] (\WB_MEM_Result_reg[1]_0 [17]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_465 \Gen_Bits[12].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[12]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[12] (\WB_MEM_Result_reg[1]_0 [16]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_466 \Gen_Bits[13].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[13]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[13] (\WB_MEM_Result_reg[1]_0 [15]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_467 \Gen_Bits[14].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[14]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[14] (\WB_MEM_Result_reg[1]_0 [14]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_468 \Gen_Bits[15].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[15]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[15] (\WB_MEM_Result_reg[1]_0 [13]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_469 \Gen_Bits[16].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[16]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[16] (\WB_MEM_Result_reg[1]_0 [12]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_470 \Gen_Bits[17].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[17]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[17] (\WB_MEM_Result_reg[1]_0 [11]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_471 \Gen_Bits[18].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[18]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[18] (\WB_MEM_Result_reg[1]_0 [10]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_472 \Gen_Bits[19].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[19]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[19] (\WB_MEM_Result_reg[1]_0 [9]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_473 \Gen_Bits[1].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[1]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[1] (\WB_MEM_Result_reg[1]_0 [27]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_474 \Gen_Bits[20].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[20]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[20] (\WB_MEM_Result_reg[1]_0 [8]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_475 \Gen_Bits[21].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[21]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[21] (\WB_MEM_Result_reg[1]_0 [7]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_476 \Gen_Bits[22].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[22]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[22] (\WB_MEM_Result_reg[1]_0 [6]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_477 \Gen_Bits[23].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[23]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[23] (\WB_MEM_Result_reg[1]_0 [5]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_478 \Gen_Bits[24].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[24]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[24] (\WB_MEM_Result_reg[1]_0 [4]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_479 \Gen_Bits[25].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[25]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[25] (\WB_MEM_Result_reg[1]_0 [3]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_480 \Gen_Bits[26].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[26]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[26] (\WB_MEM_Result_reg[1]_0 [2]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_481 \Gen_Bits[27].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[27]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[27] (\WB_MEM_Result_reg[1]_0 [1]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_482 \Gen_Bits[28].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[28]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .mem_ex_result(mem_ex_result[2]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_483 \Gen_Bits[29].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[29]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .mem_ex_result(mem_ex_result[1]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_484 \Gen_Bits[2].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[2]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[2] (\WB_MEM_Result_reg[1]_0 [26]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_485 \Gen_Bits[30].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[30]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .mem_ex_result(mem_ex_result[0]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_486 \Gen_Bits[31].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[31]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[31] (\WB_MEM_Result_reg[1]_0 [0]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_487 \Gen_Bits[3].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[3]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[3] (\WB_MEM_Result_reg[1]_0 [25]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_488 \Gen_Bits[4].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[4]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[4] (\WB_MEM_Result_reg[1]_0 [24]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_489 \Gen_Bits[5].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[5]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[5] (\WB_MEM_Result_reg[1]_0 [23]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_490 \Gen_Bits[6].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[6]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[6] (\WB_MEM_Result_reg[1]_0 [22]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_491 \Gen_Bits[7].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[7]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[7] (\WB_MEM_Result_reg[1]_0 [21]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_492 \Gen_Bits[8].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[8]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[8] (\WB_MEM_Result_reg[1]_0 [20]));
  ublaze_sopc_microblaze_0_0__MB_FDRE_493 \Gen_Bits[9].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[9]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\WB_MEM_Result_reg[9] (\WB_MEM_Result_reg[1]_0 [19]));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[0] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(MEM_Fwd[3]),
        .Q(Q[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[10] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [18]),
        .Q(Q[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[11] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [17]),
        .Q(Q[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[12] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [16]),
        .Q(Q[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[13] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [15]),
        .Q(Q[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[14] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [14]),
        .Q(Q[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[15] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [13]),
        .Q(Q[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[16] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [12]),
        .Q(Q[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[17] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [11]),
        .Q(Q[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[18] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [10]),
        .Q(Q[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[19] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [9]),
        .Q(Q[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[1] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [27]),
        .Q(Q[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[20] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [8]),
        .Q(Q[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[21] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [7]),
        .Q(Q[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[22] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [6]),
        .Q(Q[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[23] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [5]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[24] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [4]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[25] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [3]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[26] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [2]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[27] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [1]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[28] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(MEM_Fwd[2]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[29] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(MEM_Fwd[1]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[2] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [26]),
        .Q(Q[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[30] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(MEM_Fwd[0]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[31] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[3] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [25]),
        .Q(Q[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[4] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [24]),
        .Q(Q[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[5] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [23]),
        .Q(Q[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[6] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [22]),
        .Q(Q[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[7] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [21]),
        .Q(Q[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[8] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [20]),
        .Q(Q[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[9] 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(\WB_MEM_Result_reg[1]_0 [19]),
        .Q(Q[22]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "Data_Flow_gti" *) 
module ublaze_sopc_microblaze_0_0__Data_Flow_gti
   (\Using_FPGA.Native ,
    out,
    \Using_FPGA.Native_0 ,
    ex_op1_zero,
    wb_read_lsb_1_sel,
    wb_read_msb_doublet_sel,
    \WB_MEM_Result_reg[1] ,
    mem_MSR,
    ex_MSR,
    of_MSR,
    DI,
    \LOCKSTEP_Out_reg[2944] ,
    \LOCKSTEP_Out_reg[2943] ,
    \LOCKSTEP_Out_reg[2942] ,
    \LOCKSTEP_Out_reg[2941] ,
    \LOCKSTEP_Out_reg[2940] ,
    \LOCKSTEP_Out_reg[2939] ,
    \LOCKSTEP_Out_reg[2938] ,
    \LOCKSTEP_Out_reg[2937] ,
    \LOCKSTEP_Out_reg[2936] ,
    \LOCKSTEP_Out_reg[2935] ,
    \LOCKSTEP_Out_reg[2934] ,
    \LOCKSTEP_Out_reg[2933] ,
    \LOCKSTEP_Out_reg[2932] ,
    \LOCKSTEP_Out_reg[2931] ,
    \LOCKSTEP_Out_reg[2930] ,
    \LOCKSTEP_Out_reg[2929] ,
    \LOCKSTEP_Out_reg[2928] ,
    \LOCKSTEP_Out_reg[2927] ,
    \LOCKSTEP_Out_reg[2926] ,
    \LOCKSTEP_Out_reg[2925] ,
    \LOCKSTEP_Out_reg[2924] ,
    \LOCKSTEP_Out_reg[2923] ,
    \LOCKSTEP_Out_reg[2922] ,
    \LOCKSTEP_Out_reg[2921] ,
    \LOCKSTEP_Out_reg[2920] ,
    \LOCKSTEP_Out_reg[2919] ,
    \LOCKSTEP_Out_reg[2918] ,
    \LOCKSTEP_Out_reg[2917] ,
    \LOCKSTEP_Out_reg[2916] ,
    \LOCKSTEP_Out_reg[2915] ,
    \Data_Addr[0] ,
    \LOCKSTEP_Out_reg[3007] ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \data_rd_reg_reg[16] ,
    \LOCKSTEP_Out_reg[3007]_0 ,
    swap_result,
    swap_result_reg,
    MEM_Fwd,
    GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    \EX_Op2_reg[0] ,
    \MEM_DataBus_Write_Data_reg[24] ,
    LO,
    \LOCKSTEP_Out_reg[3031] ,
    ex_databus_addr,
    of_op1_sel_spr,
    D,
    I1,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 ,
    \Using_FPGA.Native_33 ,
    ex_use_carry,
    ex_unsigned_op,
    Q,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    in0,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    sync_reset,
    \Using_FPGA.Native_34 ,
    ex_reverse_mem_access,
    Clk,
    mem_load_store_access_reg,
    R,
    EX_Fwd,
    \Using_FPGA.Native_35 ,
    \Using_FPGA.Native_36 ,
    \Using_FPGA.Native_37 ,
    \Using_FPGA.Native_38 ,
    \Using_FPGA.Native_39 ,
    \Using_FPGA.Native_40 ,
    \Using_FPGA.Native_41 ,
    \Using_FPGA.Native_42 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[0] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    I1_0,
    ex_move_to_MSR_instr,
    ex_Take_Intr_or_Exc_reg,
    ex_doublet_access,
    ex_byte_access,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    wb_read_msb_doublet_sel_reg_0,
    wb_read_msb_doublet_sel_reg_1,
    wb_read_msb_doublet_sel_reg_2,
    wb_databus_steered_read_data,
    wb_read_msb_doublet_sel_reg_3,
    wb_read_msb_doublet_sel_reg_4,
    wb_read_msb_doublet_sel_reg_5,
    wb_read_msb_doublet_sel_reg_6,
    ex_cmp_op,
    \EX_Sext_Op_reg[0] ,
    ex_swap_byte_instr,
    mem_sel_msr,
    WB_GPR_Wr,
    WB_Doublet_Access_reg,
    WB_Doublet_Access_reg_0,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD,
    WB_Doublet_Access_reg_1,
    WB_Doublet_Access_reg_2,
    WB_Doublet_Access_reg_3,
    WB_Doublet_Access_reg_4,
    WB_Doublet_Access_reg_5,
    WB_Doublet_Access_reg_6,
    WB_Doublet_Access_reg_7,
    WB_Doublet_Access_reg_8,
    WB_Doublet_Access_reg_9,
    WB_Doublet_Access_reg_10,
    WB_Doublet_Access_reg_11,
    WB_Doublet_Access_reg_12,
    WB_Doublet_Access_reg_13,
    WB_Doublet_Access_reg_14,
    E,
    of_pause_reg,
    ex_sel_alu_i_reg,
    ex_sel_alu_i_reg_0,
    \Using_FPGA.Native_43 ,
    wb_piperun,
    wb_MSR_Clear_IE,
    SR,
    mem_byte_access,
    mem_doublet_access,
    lopt,
    lopt_1,
    lopt_2);
  output [31:0]\Using_FPGA.Native ;
  output out;
  output \Using_FPGA.Native_0 ;
  output ex_op1_zero;
  output [0:0]wb_read_lsb_1_sel;
  output wb_read_msb_doublet_sel;
  output [27:0]\WB_MEM_Result_reg[1] ;
  output [2:0]mem_MSR;
  output [2:0]ex_MSR;
  output [1:0]of_MSR;
  output DI;
  output \LOCKSTEP_Out_reg[2944] ;
  output \LOCKSTEP_Out_reg[2943] ;
  output \LOCKSTEP_Out_reg[2942] ;
  output \LOCKSTEP_Out_reg[2941] ;
  output \LOCKSTEP_Out_reg[2940] ;
  output \LOCKSTEP_Out_reg[2939] ;
  output \LOCKSTEP_Out_reg[2938] ;
  output \LOCKSTEP_Out_reg[2937] ;
  output \LOCKSTEP_Out_reg[2936] ;
  output \LOCKSTEP_Out_reg[2935] ;
  output \LOCKSTEP_Out_reg[2934] ;
  output \LOCKSTEP_Out_reg[2933] ;
  output \LOCKSTEP_Out_reg[2932] ;
  output \LOCKSTEP_Out_reg[2931] ;
  output \LOCKSTEP_Out_reg[2930] ;
  output \LOCKSTEP_Out_reg[2929] ;
  output \LOCKSTEP_Out_reg[2928] ;
  output \LOCKSTEP_Out_reg[2927] ;
  output \LOCKSTEP_Out_reg[2926] ;
  output \LOCKSTEP_Out_reg[2925] ;
  output \LOCKSTEP_Out_reg[2924] ;
  output \LOCKSTEP_Out_reg[2923] ;
  output \LOCKSTEP_Out_reg[2922] ;
  output \LOCKSTEP_Out_reg[2921] ;
  output \LOCKSTEP_Out_reg[2920] ;
  output \LOCKSTEP_Out_reg[2919] ;
  output \LOCKSTEP_Out_reg[2918] ;
  output \LOCKSTEP_Out_reg[2917] ;
  output \LOCKSTEP_Out_reg[2916] ;
  output \LOCKSTEP_Out_reg[2915] ;
  output [91:0]\Data_Addr[0] ;
  output [15:0]\LOCKSTEP_Out_reg[3007] ;
  output [0:0]\Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output [15:0]\data_rd_reg_reg[16] ;
  output [15:0]\LOCKSTEP_Out_reg[3007]_0 ;
  output [23:0]swap_result;
  output [0:7]swap_result_reg;
  output [3:0]MEM_Fwd;
  output [0:31]GPR_Op1;
  output [0:31]GPR_Op2;
  output [0:31]GPR_Op3;
  output [15:0]\EX_Op2_reg[0] ;
  output [31:0]\MEM_DataBus_Write_Data_reg[24] ;
  output LO;
  output [1:0]\LOCKSTEP_Out_reg[3031] ;
  output [1:0]ex_databus_addr;
  input of_op1_sel_spr;
  input [31:0]D;
  input I1;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input \Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input \Using_FPGA.Native_26 ;
  input \Using_FPGA.Native_27 ;
  input \Using_FPGA.Native_28 ;
  input \Using_FPGA.Native_29 ;
  input \Using_FPGA.Native_30 ;
  input \Using_FPGA.Native_31 ;
  input \Using_FPGA.Native_32 ;
  input \Using_FPGA.Native_33 ;
  input ex_use_carry;
  input ex_unsigned_op;
  input [1:0]Q;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input in0;
  input ex_op1_cmp_equal;
  input ex_op1_cmp_equal_n;
  input sync_reset;
  input \Using_FPGA.Native_34 ;
  input ex_reverse_mem_access;
  input Clk;
  input mem_load_store_access_reg;
  input R;
  input [0:31]EX_Fwd;
  input \Using_FPGA.Native_35 ;
  input \Using_FPGA.Native_36 ;
  input \Using_FPGA.Native_37 ;
  input \Using_FPGA.Native_38 ;
  input \Using_FPGA.Native_39 ;
  input \Using_FPGA.Native_40 ;
  input \Using_FPGA.Native_41 ;
  input \Using_FPGA.Native_42 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [31:0]\mem_pc_i_reg[0] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input I1_0;
  input ex_move_to_MSR_instr;
  input ex_Take_Intr_or_Exc_reg;
  input ex_doublet_access;
  input ex_byte_access;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input wb_read_msb_doublet_sel_reg_0;
  input wb_read_msb_doublet_sel_reg_1;
  input wb_read_msb_doublet_sel_reg_2;
  input [7:0]wb_databus_steered_read_data;
  input wb_read_msb_doublet_sel_reg_3;
  input wb_read_msb_doublet_sel_reg_4;
  input wb_read_msb_doublet_sel_reg_5;
  input wb_read_msb_doublet_sel_reg_6;
  input ex_cmp_op;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input ex_swap_byte_instr;
  input mem_sel_msr;
  input WB_GPR_Wr;
  input WB_Doublet_Access_reg;
  input WB_Doublet_Access_reg_0;
  input [0:4]of_gpr_op1_rd_addr;
  input [0:15]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;
  input WB_Doublet_Access_reg_1;
  input WB_Doublet_Access_reg_2;
  input WB_Doublet_Access_reg_3;
  input WB_Doublet_Access_reg_4;
  input WB_Doublet_Access_reg_5;
  input WB_Doublet_Access_reg_6;
  input WB_Doublet_Access_reg_7;
  input WB_Doublet_Access_reg_8;
  input WB_Doublet_Access_reg_9;
  input WB_Doublet_Access_reg_10;
  input WB_Doublet_Access_reg_11;
  input WB_Doublet_Access_reg_12;
  input WB_Doublet_Access_reg_13;
  input WB_Doublet_Access_reg_14;
  input [0:0]E;
  input of_pause_reg;
  input [31:0]ex_sel_alu_i_reg;
  input [31:0]ex_sel_alu_i_reg_0;
  input [31:0]\Using_FPGA.Native_43 ;
  input wb_piperun;
  input wb_MSR_Clear_IE;
  input [0:0]SR;
  input mem_byte_access;
  input mem_doublet_access;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire [4:0]ADDRD;
  wire Clk;
  wire [31:0]D;
  wire [91:0]\^Data_Addr[0] ;
  wire [0:0]E;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:31]EX_Fwd;
  wire [15:0]\EX_Op2_reg[0] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire I1;
  wire I1_0;
  wire LO;
  wire \LOCKSTEP_Out_reg[2915] ;
  wire \LOCKSTEP_Out_reg[2916] ;
  wire \LOCKSTEP_Out_reg[2917] ;
  wire \LOCKSTEP_Out_reg[2918] ;
  wire \LOCKSTEP_Out_reg[2919] ;
  wire \LOCKSTEP_Out_reg[2920] ;
  wire \LOCKSTEP_Out_reg[2921] ;
  wire \LOCKSTEP_Out_reg[2922] ;
  wire \LOCKSTEP_Out_reg[2923] ;
  wire \LOCKSTEP_Out_reg[2924] ;
  wire \LOCKSTEP_Out_reg[2925] ;
  wire \LOCKSTEP_Out_reg[2926] ;
  wire \LOCKSTEP_Out_reg[2927] ;
  wire \LOCKSTEP_Out_reg[2928] ;
  wire \LOCKSTEP_Out_reg[2929] ;
  wire [15:0]\LOCKSTEP_Out_reg[3007] ;
  wire [15:0]\LOCKSTEP_Out_reg[3007]_0 ;
  wire [1:0]\LOCKSTEP_Out_reg[3031] ;
  wire [31:0]\MEM_DataBus_Write_Data_reg[24] ;
  wire [3:0]MEM_Fwd;
  wire Operand_Select_I_n_106;
  wire Operand_Select_I_n_138;
  wire Operand_Select_I_n_71;
  wire Operand_Select_I_n_73;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [1:0]Q;
  wire R;
  wire [0:0]SR;
  wire \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ;
  wire [31:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_40 ;
  wire \Using_FPGA.Native_41 ;
  wire \Using_FPGA.Native_42 ;
  wire [31:0]\Using_FPGA.Native_43 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire WB_Doublet_Access_reg;
  wire WB_Doublet_Access_reg_0;
  wire WB_Doublet_Access_reg_1;
  wire WB_Doublet_Access_reg_10;
  wire WB_Doublet_Access_reg_11;
  wire WB_Doublet_Access_reg_12;
  wire WB_Doublet_Access_reg_13;
  wire WB_Doublet_Access_reg_14;
  wire WB_Doublet_Access_reg_2;
  wire WB_Doublet_Access_reg_3;
  wire WB_Doublet_Access_reg_4;
  wire WB_Doublet_Access_reg_5;
  wire WB_Doublet_Access_reg_6;
  wire WB_Doublet_Access_reg_7;
  wire WB_Doublet_Access_reg_8;
  wire WB_Doublet_Access_reg_9;
  wire WB_GPR_Wr;
  wire [27:0]\WB_MEM_Result_reg[1] ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire [15:0]\data_rd_reg_reg[16] ;
  wire [2:0]ex_MSR;
  wire ex_Take_Intr_or_Exc_reg;
  wire [1:29]ex_branch_cmp_op1;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [1:0]ex_databus_addr;
  wire ex_doublet_access;
  wire ex_move_to_MSR_instr;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire [0:31]ex_op2;
  wire ex_reverse_mem_access;
  wire [31:0]ex_sel_alu_i_reg;
  wire [31:0]ex_sel_alu_i_reg_0;
  wire ex_swap_byte_instr;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire in0;
  wire \^lopt_1 ;
  wire lopt_10;
  wire lopt_11;
  wire \^lopt_2 ;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [2:0]mem_MSR;
  wire mem_byte_access;
  wire mem_doublet_access;
  wire [0:30]mem_ex_result;
  wire mem_load_store_access_reg;
  wire [31:0]\mem_pc_i_reg[0] ;
  wire mem_sel_msr;
  wire muxcy_di;
  wire muxcy_sel;
  wire [1:0]of_MSR;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire of_pause_reg;
  wire out;
  wire read_register_MSR_1_reg;
  wire [23:0]swap_result;
  wire [0:7]swap_result_reg;
  wire sync_reset;
  wire wb_MSR_Clear_IE;
  wire wb_byte_access;
  wire [7:0]wb_databus_steered_read_data;
  wire [0:0]\wb_exception_kind_i_reg[28] ;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire [16:31]wb_mem_result;
  wire wb_piperun;
  wire [0:0]wb_read_lsb_1_sel;
  wire wb_read_msb_doublet_sel;
  wire wb_read_msb_doublet_sel_reg;
  wire wb_read_msb_doublet_sel_reg_0;
  wire wb_read_msb_doublet_sel_reg_1;
  wire wb_read_msb_doublet_sel_reg_2;
  wire wb_read_msb_doublet_sel_reg_3;
  wire wb_read_msb_doublet_sel_reg_4;
  wire wb_read_msb_doublet_sel_reg_5;
  wire wb_read_msb_doublet_sel_reg_6;
  wire NLW_ALU_I_ex_alu_carryin_UNCONNECTED;
  wire NLW_ALU_I_lopt_UNCONNECTED;
  wire [3:0]\NLW_Byte_Doublet_Handle_gti_I_EX_Op2_reg[31]_UNCONNECTED ;
  wire [3:0]\NLW_Byte_Doublet_Handle_gti_I_M_AXI_DP_WDATA[31]_UNCONNECTED ;
  wire [5:4]\NLW_Operand_Select_I_Data_Addr[30]_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_alu_carryin_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_lopt_UNCONNECTED ;
  wire NLW_Zero_Detect_I_ex_op1_zero_UNCONNECTED;
  wire NLW_exception_registers_I1_DI_UNCONNECTED;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2930]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2931]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2932]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2933]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2934]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2935]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2936]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2937]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2938]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2939]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2940]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2941]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2942]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2943]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2944]_UNCONNECTED ;

  assign \Data_Addr[0] [91:62] = \^Data_Addr[0] [91:62];
  assign \Data_Addr[0] [59:24] = \^Data_Addr[0] [59:24];
  assign \Data_Addr[0] [19] = \^Data_Addr[0] [19];
  assign \Data_Addr[0] [15:0] = \^Data_Addr[0] [15:0];
  assign lopt = lopt_9;
  assign lopt_10 = lopt_1;
  assign lopt_11 = lopt_2;
  ublaze_sopc_microblaze_0_0__ALU ALU_I
       (.\Data_Addr[0] (\^Data_Addr[0] [91:62]),
        .\EX_ALU_Op_reg[0] (Q),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CMP_Op_reg(Operand_Select_I_n_106),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[0] (\Using_FPGA.Native ),
        .LO(LO),
        .Q({ex_op2[0],ex_op2[1],ex_op2[2],ex_op2[3],ex_op2[4],ex_op2[5],ex_op2[6],ex_op2[7],ex_op2[8],ex_op2[9],ex_op2[10],ex_op2[11],ex_op2[12],ex_op2[13],ex_op2[14],ex_op2[15],ex_op2[16],ex_op2[17],ex_op2[18],ex_op2[19],ex_op2[20],ex_op2[21],ex_op2[22],ex_op2[23],ex_op2[24],ex_op2[25],ex_op2[26],ex_op2[27],ex_op2[28],ex_op2[29],ex_op2[30],ex_op2[31]}),
        .S(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ),
        .ex_alu_carryin(NLW_ALU_I_ex_alu_carryin_UNCONNECTED),
        .ex_databus_addr(ex_databus_addr),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(ex_use_carry),
        .lopt(NLW_ALU_I_lopt_UNCONNECTED),
        .lopt_1(lopt_4),
        .lopt_2(lopt_5),
        .lopt_3(lopt_6),
        .lopt_4(lopt_7),
        .lopt_5(lopt_8));
  ublaze_sopc_microblaze_0_0__Byte_Doublet_Handle_gti Byte_Doublet_Handle_gti_I
       (.Clk(Clk),
        .D(Operand_Select_I_n_138),
        .\EX_Op2_reg[31] (\NLW_Byte_Doublet_Handle_gti_I_EX_Op2_reg[31]_UNCONNECTED [3:0]),
        .\LOCKSTEP_Out_reg[3031] (\LOCKSTEP_Out_reg[3031] ),
        .\M_AXI_DP_WDATA[31] ({\^Data_Addr[0] [55:24],\NLW_Byte_Doublet_Handle_gti_I_M_AXI_DP_WDATA[31]_UNCONNECTED [3:0]}),
        .\Using_FPGA.Native (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_43 ),
        .\Using_FPGA.Native_1 (Operand_Select_I_n_71),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .mem_byte_access(mem_byte_access),
        .mem_doublet_access(mem_doublet_access),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .sync_reset(sync_reset),
        .wb_read_lsb_1_sel(wb_read_lsb_1_sel),
        .wb_read_msb_doublet_sel(wb_read_msb_doublet_sel));
  ublaze_sopc_microblaze_0_0__Data_Flow_Logic Data_Flow_Logic_I
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd),
        .MEM_Fwd(MEM_Fwd),
        .Q({\LOCKSTEP_Out_reg[3007]_0 ,wb_mem_result[16],wb_mem_result[17],wb_mem_result[18],wb_mem_result[19],wb_mem_result[20],wb_mem_result[21],wb_mem_result[22],wb_mem_result[23],wb_mem_result[24],wb_mem_result[25],wb_mem_result[26],wb_mem_result[27],wb_mem_result[28],wb_mem_result[29],wb_mem_result[30],wb_mem_result[31]}),
        .R(R),
        .SR(SR),
        .\Using_FPGA.Native (\Using_FPGA.Native_34 ),
        .\WB_MEM_Result_reg[1]_0 (\WB_MEM_Result_reg[1] ),
        .mem_ex_result({mem_ex_result[0],mem_ex_result[28],mem_ex_result[29],mem_ex_result[30]}),
        .mem_load_store_access_reg(mem_load_store_access_reg));
  ublaze_sopc_microblaze_0_0__Operand_Select_gti Operand_Select_I
       (.Clk(Clk),
        .D(D),
        .\Data_Addr[30] ({\NLW_Operand_Select_I_Data_Addr[30]_UNCONNECTED [5:4],\^Data_Addr[0] [59:56]}),
        .E(E),
        .\EX_Op2_reg[0]_0 (\EX_Op2_reg[0] ),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .I1(I1),
        .\MEM_DataBus_Addr_reg[0] ({ex_op2[0],ex_op2[1],ex_op2[2],ex_op2[3],ex_op2[4],ex_op2[5],ex_op2[6],ex_op2[7],ex_op2[8],ex_op2[9],ex_op2[10],ex_op2[11],ex_op2[12],ex_op2[13],ex_op2[14],ex_op2[15],ex_op2[16],ex_op2[17],ex_op2[18],ex_op2[19],ex_op2[20],ex_op2[21],ex_op2[22],ex_op2[23],ex_op2[24],ex_op2[25],ex_op2[26],ex_op2[27],ex_op2[28],ex_op2[29],ex_op2[30],ex_op2[31]}),
        .\MEM_DataBus_Addr_reg[0]_0 (Operand_Select_I_n_106),
        .\MEM_DataBus_Write_Data_reg[24] (\MEM_DataBus_Write_Data_reg[24] ),
        .Q(\Using_FPGA.Native ),
        .S(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ),
        .\Using_FPGA.Native (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_0 ({\Using_FPGA.Native_1 ,ex_branch_cmp_op1[1],ex_branch_cmp_op1[2],ex_branch_cmp_op1[3],ex_branch_cmp_op1[4],ex_branch_cmp_op1[5],ex_branch_cmp_op1[6],ex_branch_cmp_op1[7],ex_branch_cmp_op1[8],ex_branch_cmp_op1[9],ex_branch_cmp_op1[10],ex_branch_cmp_op1[11],ex_branch_cmp_op1[12],ex_branch_cmp_op1[13],ex_branch_cmp_op1[14],ex_branch_cmp_op1[15],ex_branch_cmp_op1[16],ex_branch_cmp_op1[17],ex_branch_cmp_op1[18],ex_branch_cmp_op1[19],ex_branch_cmp_op1[20],ex_branch_cmp_op1[21],ex_branch_cmp_op1[22],ex_branch_cmp_op1[23],ex_branch_cmp_op1[24],ex_branch_cmp_op1[25],ex_branch_cmp_op1[26],ex_branch_cmp_op1[27],ex_branch_cmp_op1[28],ex_branch_cmp_op1[29]}),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_10 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_12 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_13 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_14 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_15 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_16 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_17 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_18 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_19 (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_20 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_21 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_22 (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_23 (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_24 (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_25 (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_26 (\Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_27 (\Using_FPGA.Native_29 ),
        .\Using_FPGA.Native_28 (\Using_FPGA.Native_30 ),
        .\Using_FPGA.Native_29 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_30 (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_31 (\Using_FPGA.Native_33 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_7 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_11 ),
        .\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .ex_MSR(ex_MSR[1]),
        .ex_Take_Intr_or_Exc_reg(ex_Take_Intr_or_Exc_reg),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_doublet_access(ex_doublet_access),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg),
        .ex_sel_alu_i_reg_0(ex_sel_alu_i_reg_0),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .in0(Operand_Select_I_n_73),
        .\mem_byte_selects_reg[0] (Operand_Select_I_n_71),
        .\mem_byte_selects_reg[1] (Operand_Select_I_n_138),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg(of_pause_reg),
        .swap_result(swap_result),
        .swap_result_reg(swap_result_reg),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__Register_File_gti Register_File_I
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1(GPR_Op1),
        .GPR_Op2(GPR_Op2),
        .GPR_Op3(GPR_Op3),
        .WB_Fwd({WB_Doublet_Access_reg,WB_Doublet_Access_reg_0,WB_Doublet_Access_reg_1,WB_Doublet_Access_reg_2,WB_Doublet_Access_reg_3,WB_Doublet_Access_reg_4,WB_Doublet_Access_reg_5,WB_Doublet_Access_reg_6,WB_Doublet_Access_reg_7,WB_Doublet_Access_reg_8,WB_Doublet_Access_reg_9,WB_Doublet_Access_reg_10,WB_Doublet_Access_reg_11,WB_Doublet_Access_reg_12,WB_Doublet_Access_reg_13,WB_Doublet_Access_reg_14,\^Data_Addr[0] [15],\^Data_Addr[0] [14],\^Data_Addr[0] [13],\^Data_Addr[0] [12],\^Data_Addr[0] [11],\^Data_Addr[0] [10],\^Data_Addr[0] [9],\^Data_Addr[0] [8],\^Data_Addr[0] [7],\^Data_Addr[0] [6],\^Data_Addr[0] [5],\^Data_Addr[0] [4],\^Data_Addr[0] [3],\^Data_Addr[0] [2],\^Data_Addr[0] [1],\^Data_Addr[0] [0]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data({of_imm_data[0],of_imm_data[1],of_imm_data[2],of_imm_data[3],of_imm_data[4]}));
  ublaze_sopc_microblaze_0_0__Shift_Logic_Module_gti Shift_Logic_Module_I
       (.\EX_Op1_reg[24] (Operand_Select_I_n_73),
        .\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .in0(in0),
        .out(out));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_303 \Using_DAXI_ALU_Carry.Direct_MUXCY_I 
       (.ex_MSR(ex_MSR[1]),
        .ex_pre_alu_carry(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ),
        .lopt(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ),
        .lopt_3(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(ex_use_carry),
        .lopt_6(lopt_5),
        .lopt_7(lopt_6),
        .lopt_8(lopt_7),
        .lopt_9(lopt_8),
        .muxcy_di(muxcy_di),
        .muxcy_sel(muxcy_sel));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_304 \Using_DAXI_ALU_Carry.Post_MUXCY_I 
       (.ex_alu_carryin(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_alu_carryin_UNCONNECTED ),
        .ex_pre_alu_carry(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ),
        .lopt(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized1 \Using_DAXI_ALU_Carry.direct_lut_INST 
       (.muxcy_di(muxcy_di),
        .muxcy_sel(muxcy_sel));
  ublaze_sopc_microblaze_0_0__Zero_Detect_gti Zero_Detect_I
       (.\EX_Branch_CMP_Op1_reg[0] ({\Using_FPGA.Native_1 ,ex_branch_cmp_op1[1],ex_branch_cmp_op1[2],ex_branch_cmp_op1[3],ex_branch_cmp_op1[4],ex_branch_cmp_op1[5],ex_branch_cmp_op1[6],ex_branch_cmp_op1[7],ex_branch_cmp_op1[8],ex_branch_cmp_op1[9],ex_branch_cmp_op1[10],ex_branch_cmp_op1[11],ex_branch_cmp_op1[12],ex_branch_cmp_op1[13],ex_branch_cmp_op1[14],ex_branch_cmp_op1[15],ex_branch_cmp_op1[16],ex_branch_cmp_op1[17],ex_branch_cmp_op1[18],ex_branch_cmp_op1[19],ex_branch_cmp_op1[20],ex_branch_cmp_op1[21],ex_branch_cmp_op1[22],ex_branch_cmp_op1[23],ex_branch_cmp_op1[24],ex_branch_cmp_op1[25],ex_branch_cmp_op1[26],ex_branch_cmp_op1[27],ex_branch_cmp_op1[28],ex_branch_cmp_op1[29]}),
        .\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Zero_Detect_I_ex_op1_zero_UNCONNECTED),
        .lopt(lopt_9),
        .lopt_1(lopt_10),
        .lopt_2(lopt_11));
  ublaze_sopc_microblaze_0_0__exception_registers_gti exception_registers_I1
       (.Clk(Clk),
        .DI(NLW_exception_registers_I1_DI_UNCONNECTED),
        .I1_0(I1_0),
        .\LOCKSTEP_Out_reg[2914] ({\^Data_Addr[0] [19],\^Data_Addr[0] [15:0]}),
        .\LOCKSTEP_Out_reg[2915] (\LOCKSTEP_Out_reg[2915] ),
        .\LOCKSTEP_Out_reg[2916] (\LOCKSTEP_Out_reg[2916] ),
        .\LOCKSTEP_Out_reg[2917] (\LOCKSTEP_Out_reg[2917] ),
        .\LOCKSTEP_Out_reg[2918] (\LOCKSTEP_Out_reg[2918] ),
        .\LOCKSTEP_Out_reg[2919] (\LOCKSTEP_Out_reg[2919] ),
        .\LOCKSTEP_Out_reg[2920] (\LOCKSTEP_Out_reg[2920] ),
        .\LOCKSTEP_Out_reg[2921] (\LOCKSTEP_Out_reg[2921] ),
        .\LOCKSTEP_Out_reg[2922] (\LOCKSTEP_Out_reg[2922] ),
        .\LOCKSTEP_Out_reg[2923] (\LOCKSTEP_Out_reg[2923] ),
        .\LOCKSTEP_Out_reg[2924] (\LOCKSTEP_Out_reg[2924] ),
        .\LOCKSTEP_Out_reg[2925] (\LOCKSTEP_Out_reg[2925] ),
        .\LOCKSTEP_Out_reg[2926] (\LOCKSTEP_Out_reg[2926] ),
        .\LOCKSTEP_Out_reg[2927] (\LOCKSTEP_Out_reg[2927] ),
        .\LOCKSTEP_Out_reg[2928] (\LOCKSTEP_Out_reg[2928] ),
        .\LOCKSTEP_Out_reg[2929] (\LOCKSTEP_Out_reg[2929] ),
        .\LOCKSTEP_Out_reg[2930] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2930]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2931] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2931]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2932] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2932]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2933] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2933]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2934] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2934]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2935] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2935]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2936] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2936]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2937] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2937]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2938] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2938]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2939] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2939]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2940] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2940]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2941] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2941]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2942] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2942]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2943] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2943]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2944] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2944]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3007] (\LOCKSTEP_Out_reg[3007] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q({wb_mem_result[16],wb_mem_result[17],wb_mem_result[18],wb_mem_result[19],wb_mem_result[20],wb_mem_result[21],wb_mem_result[22],wb_mem_result[23],wb_mem_result[24],wb_mem_result[25],wb_mem_result[26],wb_mem_result[27],wb_mem_result[28],wb_mem_result[29],wb_mem_result[30],wb_mem_result[31]}),
        .\data_rd_reg_reg[16] (\data_rd_reg_reg[16] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .\mem_pc_i_reg[0] (\mem_pc_i_reg[0] ),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .\wb_MSR_i_reg[28] (\^Data_Addr[0] [18:16]),
        .wb_byte_access(wb_byte_access),
        .wb_databus_steered_read_data(wb_databus_steered_read_data),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg),
        .wb_read_msb_doublet_sel_reg_0(wb_read_msb_doublet_sel_reg_0),
        .wb_read_msb_doublet_sel_reg_1(wb_read_msb_doublet_sel_reg_1),
        .wb_read_msb_doublet_sel_reg_2(wb_read_msb_doublet_sel_reg_2),
        .wb_read_msb_doublet_sel_reg_3(wb_read_msb_doublet_sel_reg_3),
        .wb_read_msb_doublet_sel_reg_4(wb_read_msb_doublet_sel_reg_4),
        .wb_read_msb_doublet_sel_reg_5(wb_read_msb_doublet_sel_reg_5),
        .wb_read_msb_doublet_sel_reg_6(wb_read_msb_doublet_sel_reg_6));
  ublaze_sopc_microblaze_0_0__msr_reg_gti msr_reg_i
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2995] (\^Data_Addr[0] [18:16]),
        .MEM_Fwd(MEM_Fwd),
        .\Using_FPGA.Native (\Using_FPGA.Native_35 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_36 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_37 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_38 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_39 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_40 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_41 ),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_42 ),
        .ex_MSR(ex_MSR),
        .mem_MSR(mem_MSR),
        .mem_ex_result({mem_ex_result[0],mem_ex_result[28],mem_ex_result[29],mem_ex_result[30]}),
        .mem_sel_msr(mem_sel_msr),
        .of_MSR(of_MSR),
        .sync_reset(sync_reset),
        .wb_MSR_Clear_IE(wb_MSR_Clear_IE),
        .wb_piperun(wb_piperun));
endmodule

(* ORIG_REF_NAME = "Debug" *) 
module ublaze_sopc_microblaze_0_0__Debug
   (LOCKSTEP_Master_Out,
    command_reg_clear_reg_0,
    \Single_Synchronize.use_async_reset.sync_reg ,
    dbg_halt_reset_mode_reg_0,
    \Performance_Debug_Control.dbg_state_nohalt_reg_0 ,
    Sleep_Out,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    \Using_FPGA.Native ,
    ex_exception_no_load_store_mask,
    \if_pc_reg[29] ,
    p_44_out,
    Q,
    IB_Ready,
    \Serial_Dbg_Intf.control_reg_reg[8]_0 ,
    Dbg_TDO,
    Dbg_Clk,
    sync_reset,
    mem_load_store_access_reg,
    \Using_FPGA.Native_0 ,
    of_pause_reg,
    Dbg_Trig_Ack_In,
    Clk,
    Dbg_Trig_Out,
    Pause,
    Sleep,
    \Serial_Dbg_Intf.control_reg_reg[8]_1 ,
    wb_Halted,
    Dbg_Update,
    wb_read_imm_reg_1,
    D,
    wb_read_imm_reg,
    Dbg_Stop,
    Dbg_Capture,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ,
    dbg_halt_reset_mode_reg_1,
    wb_valid_reg,
    ex_Take_Intr_or_Exc,
    ex_Interrupt_i,
    p_4_out__0,
    Reset_Mode,
    wb_pc_valid,
    Data_Read_Reg_En,
    Config_Reg_En,
    MEM_DataBus_Access_reg,
    \Using_FPGA.Native_1 ,
    IReady,
    Dbg_Shift,
    Dbg_Reg_En,
    wb_gpr_wr_dbg,
    Status_Reg_En,
    wakeup_i,
    of_pause,
    ex_Exception_Taken,
    mem_Exception_Taken,
    Scan_Reset_Sel,
    Sleep_Decode,
    Scan_Reset,
    Scan_En,
    dbg_clean_stop,
    Dbg_TDI,
    Address,
    wb_gpr_write_dbg_reg,
    dbg_stop_i);
  output [38:0]LOCKSTEP_Master_Out;
  output command_reg_clear_reg_0;
  output \Single_Synchronize.use_async_reset.sync_reg ;
  output dbg_halt_reset_mode_reg_0;
  output \Performance_Debug_Control.dbg_state_nohalt_reg_0 ;
  output Sleep_Out;
  output \Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  output \Using_FPGA.Native ;
  output ex_exception_no_load_store_mask;
  output \if_pc_reg[29] ;
  output p_44_out;
  output [0:0]Q;
  output IB_Ready;
  output \Serial_Dbg_Intf.control_reg_reg[8]_0 ;
  output Dbg_TDO;
  input Dbg_Clk;
  input sync_reset;
  input mem_load_store_access_reg;
  input \Using_FPGA.Native_0 ;
  input of_pause_reg;
  input [1:0]Dbg_Trig_Ack_In;
  input Clk;
  input [1:0]Dbg_Trig_Out;
  input Pause;
  input Sleep;
  input \Serial_Dbg_Intf.control_reg_reg[8]_1 ;
  input wb_Halted;
  input Dbg_Update;
  input wb_read_imm_reg_1;
  input [3:0]D;
  input wb_read_imm_reg;
  input Dbg_Stop;
  input Dbg_Capture;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ;
  input dbg_halt_reset_mode_reg_1;
  input wb_valid_reg;
  input ex_Take_Intr_or_Exc;
  input ex_Interrupt_i;
  input p_4_out__0;
  input [0:1]Reset_Mode;
  input wb_pc_valid;
  input Data_Read_Reg_En;
  input Config_Reg_En;
  input [0:0]MEM_DataBus_Access_reg;
  input \Using_FPGA.Native_1 ;
  input IReady;
  input Dbg_Shift;
  input [0:7]Dbg_Reg_En;
  input wb_gpr_wr_dbg;
  input Status_Reg_En;
  input [0:1]wakeup_i;
  input of_pause;
  input ex_Exception_Taken;
  input mem_Exception_Taken;
  input Scan_Reset_Sel;
  input Sleep_Decode;
  input Scan_Reset;
  input Scan_En;
  input dbg_clean_stop;
  input Dbg_TDI;
  input [0:31]Address;
  input [31:0]wb_gpr_write_dbg_reg;
  input dbg_stop_i;

  wire A1;
  wire A2;
  wire A3;
  wire [0:31]Address;
  wire Clk;
  wire Command_Reg_En;
  wire Config_Reg_En;
  wire Control_Reg_En;
  wire [3:0]D;
  wire Data_Read_Reg_En;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_10_n_0;
  wire Dbg_TDO_INST_0_i_16_n_0;
  wire Dbg_TDO_INST_0_i_17_n_0;
  wire Dbg_TDO_INST_0_i_18_n_0;
  wire Dbg_TDO_INST_0_i_19_n_0;
  wire Dbg_TDO_INST_0_i_20_n_0;
  wire Dbg_TDO_INST_0_i_21_n_0;
  wire Dbg_TDO_INST_0_i_22_n_0;
  wire Dbg_TDO_INST_0_i_27_n_0;
  wire Dbg_TDO_INST_0_i_28_n_0;
  wire Dbg_TDO_INST_0_i_29_n_0;
  wire Dbg_TDO_INST_0_i_30_n_0;
  wire Dbg_TDO_INST_0_i_31_n_0;
  wire Dbg_TDO_INST_0_i_32_n_0;
  wire Dbg_TDO_INST_0_i_33_n_0;
  wire Dbg_TDO_INST_0_i_34_n_0;
  wire Dbg_TDO_INST_0_i_35_n_0;
  wire Dbg_TDO_INST_0_i_36_n_0;
  wire Dbg_TDO_INST_0_i_7_n_0;
  wire Dbg_TDO_INST_0_i_8_n_0;
  wire Dbg_TDO_INST_0_i_9_n_0;
  wire [1:0]Dbg_Trig_Out;
  wire Dbg_Update;
  wire Full_32_bit;
  wire Full_32_bit_1;
  wire IB_Ready;
  wire IReady;
  wire Instr_Insert_Reg_En;
  wire Instr_Insert_Reg_En_1;
  wire [38:0]LOCKSTEP_Master_Out;
  wire [0:0]MEM_DataBus_Access_reg;
  wire New_Dbg_Instr2_TCK;
  wire New_Dbg_Instr_TCK;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_i_3_n_0 ;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ;
  wire \Performance_Debug_Control.dbg_state_nohalt_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_state_nohalt_i_3_n_0 ;
  wire \Performance_Debug_Control.dbg_state_nohalt_i_4_n_0 ;
  wire \Performance_Debug_Control.dbg_state_nohalt_reg_0 ;
  wire \Performance_Debug_Control.dbg_stop_i_reg_n_0 ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ;
  wire \Performance_Debug_Control.force_stop_i_i_1_n_0 ;
  wire \Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ;
  wire \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0] ;
  wire \Performance_Debug_Control.normal_stop_i_i_1_n_0 ;
  wire \Performance_Debug_Control.step_continue_hold_i_1_n_0 ;
  wire \Performance_Debug_Control.step_continue_hold_reg_n_0 ;
  wire [0:0]Q;
  wire Q2_in;
  wire Q2_out;
  wire Q6_out;
  wire Q_0;
  wire \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ;
  wire \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ;
  wire \Serial_Dbg_Intf.continue_from_brk_reg_n_0 ;
  wire \Serial_Dbg_Intf.control_reg_reg[8]_0 ;
  wire \Serial_Dbg_Intf.control_reg_reg[8]_1 ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[3] ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[4] ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[5] ;
  wire \Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0 ;
  wire \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ;
  wire \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ;
  wire \Serial_Dbg_Intf.shift_count[0]_i_1_n_0 ;
  wire \Serial_Dbg_Intf.shift_count[5]_i_2_n_0 ;
  wire \Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ;
  wire \Serial_Dbg_Intf.shift_count_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[16] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[17] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[18] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[19] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[20] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[22] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[23] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[24] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[25] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[27] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[29] ;
  wire \Serial_Dbg_Intf.sync_pause_n_1 ;
  wire \Serial_Dbg_Intf.sync_stop_CPU_n_0 ;
  wire \Serial_Dbg_Intf.unchanged_i_1_n_0 ;
  wire \Single_Synchronize.use_async_reset.sync_reg ;
  wire Sleep;
  wire Sleep_Out;
  wire Status_Reg_En;
  wire TDO_Data_Reg__31;
  wire TDO_Instr_Reg__0;
  wire TDO_Status_Reg__17;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ;
  wire capture_1;
  wire [0:1]command_reg;
  wire command_reg_clear;
  wire command_reg_clear_i_1_n_0;
  wire command_reg_clear_reg_0;
  wire continue_from_brk_TClk;
  wire \data_rd_reg[0]_i_1_n_0 ;
  wire \data_rd_reg[32]_i_1_n_0 ;
  wire \data_rd_reg[32]_i_2_n_0 ;
  wire \data_rd_reg[32]_i_3_n_0 ;
  wire \data_rd_reg_reg_n_0_[0] ;
  wire \data_rd_reg_reg_n_0_[10] ;
  wire \data_rd_reg_reg_n_0_[11] ;
  wire \data_rd_reg_reg_n_0_[12] ;
  wire \data_rd_reg_reg_n_0_[13] ;
  wire \data_rd_reg_reg_n_0_[14] ;
  wire \data_rd_reg_reg_n_0_[15] ;
  wire \data_rd_reg_reg_n_0_[16] ;
  wire \data_rd_reg_reg_n_0_[17] ;
  wire \data_rd_reg_reg_n_0_[18] ;
  wire \data_rd_reg_reg_n_0_[19] ;
  wire \data_rd_reg_reg_n_0_[1] ;
  wire \data_rd_reg_reg_n_0_[20] ;
  wire \data_rd_reg_reg_n_0_[21] ;
  wire \data_rd_reg_reg_n_0_[22] ;
  wire \data_rd_reg_reg_n_0_[23] ;
  wire \data_rd_reg_reg_n_0_[24] ;
  wire \data_rd_reg_reg_n_0_[25] ;
  wire \data_rd_reg_reg_n_0_[26] ;
  wire \data_rd_reg_reg_n_0_[27] ;
  wire \data_rd_reg_reg_n_0_[28] ;
  wire \data_rd_reg_reg_n_0_[29] ;
  wire \data_rd_reg_reg_n_0_[2] ;
  wire \data_rd_reg_reg_n_0_[30] ;
  wire \data_rd_reg_reg_n_0_[31] ;
  wire \data_rd_reg_reg_n_0_[32] ;
  wire \data_rd_reg_reg_n_0_[3] ;
  wire \data_rd_reg_reg_n_0_[4] ;
  wire \data_rd_reg_reg_n_0_[5] ;
  wire \data_rd_reg_reg_n_0_[6] ;
  wire \data_rd_reg_reg_n_0_[7] ;
  wire \data_rd_reg_reg_n_0_[8] ;
  wire \data_rd_reg_reg_n_0_[9] ;
  wire [0:32]data_read_reg;
  wire dbg_brki_hit;
  wire dbg_brki_hit_synced;
  wire dbg_clean_stop;
  wire dbg_freeze_nohalt0_in;
  wire dbg_halt_reset_mode_i_1_n_0;
  wire dbg_halt_reset_mode_reg_0;
  wire dbg_halt_reset_mode_reg_1;
  wire [0:0]dbg_hit;
  wire dbg_stop_i;
  wire delay_slot_instr;
  wire ex_Exception_Taken;
  wire ex_Interrupt_i;
  wire ex_Take_Intr_or_Exc;
  wire ex_brki_hit;
  wire ex_exception_no_load_store_mask;
  wire ex_pc_brk;
  (* DIRECT_ENABLE *) wire ex_piperun_for_ce;
  wire ex_step_continue_hold;
  wire exception;
  wire exception_i_1_n_0;
  wire exception_i_2_n_0;
  wire executing;
  wire executing_i_1_n_0;
  wire force_stop_TClk;
  wire force_stop_cmd_1;
  wire force_stop_i;
  wire \if_pc_reg[29] ;
  wire [0:1]instr_read_reg;
  wire m0_brki_hit;
  (* DIRECT_ENABLE *) wire m3_piperun_for_ce;
  wire mem_Exception_Taken;
  wire normal_stop_TClk;
  wire normal_stop_cmd_1;
  wire normal_stop_i;
  (* DIRECT_ENABLE *) wire of_piperun_for_ce;
  wire [7:1]p_0_in;
  wire p_0_in70_in;
  wire p_0_in_1;
  wire [31:1]p_0_in__0;
  wire p_11_out;
  wire p_36_out__0;
  wire p_44_out;
  wire p_4_out__0;
  wire p_75_out;
  wire p_82_out;
  wire p_85_out;
  wire p_87_out;
  wire p_90_out;
  wire p_93_out;
  wire p_94_in;
  wire p_96_out;
  wire read_register_MSR;
  wire read_register_PC;
  wire read_register_PC_1_reg_n_0;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire running_clock;
  wire running_clock_synced;
  wire [0:9]sample_synced;
  wire saved_reset_mode_dbg_halt;
  wire saved_reset_mode_dbg_halt_i_1_n_0;
  wire saved_reset_mode_sleep;
  wire saved_reset_mode_sleep_i_1_n_0;
  wire [0:0]sel0;
  wire [3:1]sel0__0;
  wire single_Step_N;
  wire single_Step_N_i_1_n_0;
  wire single_Step_TClk;
  wire [0:1]single_step_count;
  wire \single_step_count[0]_i_1_n_0 ;
  wire \single_step_count[1]_i_1_n_0 ;
  wire sleep_reset_mode_i_1_n_0;
  wire sleep_synced;
  wire start_dbg_exec_reg_n_0;
  wire start_single_cmd;
  wire start_single_step_i_1_n_0;
  wire start_single_step_reg_n_0;
  wire step_continue__0;
  wire sync;
  wire sync_trig_out_0_n_2;
  wire unchanged;
  wire [0:1]wakeup_i;
  wire wb_Halted;
  wire wb_brki_hit;
  wire wb_dbg_hit;
  wire wb_gpr_wr_dbg;
  wire [31:0]wb_gpr_write_dbg_reg;
  wire wb_pc_valid;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire wb_valid_reg;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_Q0_in_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_Q0_out_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_Q3_in_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_0_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_Q11_in_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_Q3_out_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_Q4_out_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Dbg_Clk_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Pause_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Scan_En_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Scan_Reset_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Scan_Reset_Sel_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_pause_D_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_In_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Q_UNCONNECTED ;
  wire [8:8]\NLW_Serial_Dbg_Intf.sync_sample_sample_synced_UNCONNECTED ;
  wire NLW_sync_trig_out_0_Clk_UNCONNECTED;
  wire NLW_sync_trig_out_0_Dbg_Stop_UNCONNECTED;
  wire \NLW_sync_trig_out_0_Performance_Debug_Control.trig_ack_out_0_reg_UNCONNECTED ;
  wire NLW_sync_trig_out_0_dbg_stop_1_UNCONNECTED;
  wire NLW_sync_trig_out_0_sync_reset_UNCONNECTED;
  wire NLW_sync_trig_out_0_trig_out_0_synced_UNCONNECTED;
  wire NLW_sync_trig_out_0_trig_out_0_synced_1_UNCONNECTED;
  wire [0:0]NLW_sync_trig_out_0_D_UNCONNECTED;
  wire [0:0]NLW_sync_trig_out_0_Dbg_Trig_Ack_Out_UNCONNECTED;
  wire [0:0]NLW_sync_trig_out_0_Dbg_Trig_Out_UNCONNECTED;

  assign ex_piperun_for_ce = \Using_FPGA.Native_0 ;
  assign m3_piperun_for_ce = mem_load_store_access_reg;
  assign of_piperun_for_ce = of_pause_reg;
  assign reset_bool_for_rst = sync_reset;
  LUT5 #(
    .INIT(32'h20000002)) 
    Dbg_TDO_INST_0_i_10
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[0] ),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(A3),
        .I3(A1),
        .I4(A2),
        .O(Dbg_TDO_INST_0_i_10_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    Dbg_TDO_INST_0_i_15
       (.I0(instr_read_reg[1]),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(instr_read_reg[0]),
        .O(TDO_Instr_Reg__0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Dbg_TDO_INST_0_i_16
       (.I0(Dbg_TDO_INST_0_i_27_n_0),
        .I1(Dbg_TDO_INST_0_i_28_n_0),
        .I2(Dbg_TDO_INST_0_i_29_n_0),
        .I3(Dbg_TDO_INST_0_i_30_n_0),
        .I4(Dbg_TDO_INST_0_i_31_n_0),
        .I5(Dbg_TDO_INST_0_i_32_n_0),
        .O(Dbg_TDO_INST_0_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Dbg_TDO_INST_0_i_17
       (.I0(Dbg_TDO_INST_0_i_33_n_0),
        .I1(Dbg_TDO_INST_0_i_34_n_0),
        .I2(Dbg_TDO_INST_0_i_29_n_0),
        .I3(Dbg_TDO_INST_0_i_35_n_0),
        .I4(Dbg_TDO_INST_0_i_31_n_0),
        .I5(Dbg_TDO_INST_0_i_36_n_0),
        .O(Dbg_TDO_INST_0_i_17_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    Dbg_TDO_INST_0_i_18
       (.I0(A2),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A3),
        .O(Dbg_TDO_INST_0_i_18_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Dbg_TDO_INST_0_i_19
       (.I0(A1),
        .I1(A2),
        .O(Dbg_TDO_INST_0_i_19_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Dbg_TDO_INST_0_i_20
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[23] ),
        .I1(\Serial_Dbg_Intf.status_reg_reg_n_0_[22] ),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.status_reg_reg_n_0_[25] ),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I5(\Serial_Dbg_Intf.status_reg_reg_n_0_[24] ),
        .O(Dbg_TDO_INST_0_i_20_n_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'hB800)) 
    Dbg_TDO_INST_0_i_21
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[27] ),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.status_reg_reg_n_0_[29] ),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(Dbg_TDO_INST_0_i_21_n_0));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    Dbg_TDO_INST_0_i_22
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[19] ),
        .I1(\Serial_Dbg_Intf.status_reg_reg_n_0_[18] ),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.status_reg_reg_n_0_[20] ),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(Dbg_TDO_INST_0_i_22_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_27
       (.I0(data_read_reg[1]),
        .I1(data_read_reg[2]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[3]),
        .I5(data_read_reg[4]),
        .O(Dbg_TDO_INST_0_i_27_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_28
       (.I0(data_read_reg[5]),
        .I1(data_read_reg[6]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[7]),
        .I5(data_read_reg[8]),
        .O(Dbg_TDO_INST_0_i_28_n_0));
  LUT4 #(
    .INIT(16'h01FE)) 
    Dbg_TDO_INST_0_i_29
       (.I0(A2),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A3),
        .O(Dbg_TDO_INST_0_i_29_n_0));
  LUT6 #(
    .INIT(64'hACFAFFCFAC0A00C0)) 
    Dbg_TDO_INST_0_i_3
       (.I0(Dbg_TDO_INST_0_i_7_n_0),
        .I1(Dbg_TDO_INST_0_i_8_n_0),
        .I2(A3),
        .I3(Dbg_TDO_INST_0_i_9_n_0),
        .I4(sel0),
        .I5(Dbg_TDO_INST_0_i_10_n_0),
        .O(TDO_Status_Reg__17));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_30
       (.I0(data_read_reg[9]),
        .I1(data_read_reg[10]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[11]),
        .I5(data_read_reg[12]),
        .O(Dbg_TDO_INST_0_i_30_n_0));
  (* \PinAttr:I2:HOLD_DETOUR  = "191" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    Dbg_TDO_INST_0_i_31
       (.I0(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I1(A1),
        .I2(A2),
        .O(Dbg_TDO_INST_0_i_31_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_32
       (.I0(data_read_reg[13]),
        .I1(data_read_reg[14]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[15]),
        .I5(data_read_reg[16]),
        .O(Dbg_TDO_INST_0_i_32_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_33
       (.I0(data_read_reg[17]),
        .I1(data_read_reg[18]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[19]),
        .I5(data_read_reg[20]),
        .O(Dbg_TDO_INST_0_i_33_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_34
       (.I0(data_read_reg[21]),
        .I1(data_read_reg[22]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[23]),
        .I5(data_read_reg[24]),
        .O(Dbg_TDO_INST_0_i_34_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_35
       (.I0(data_read_reg[25]),
        .I1(data_read_reg[26]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[27]),
        .I5(data_read_reg[28]),
        .O(Dbg_TDO_INST_0_i_35_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_36
       (.I0(data_read_reg[29]),
        .I1(data_read_reg[30]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[31]),
        .I5(data_read_reg[32]),
        .O(Dbg_TDO_INST_0_i_36_n_0));
  LUT6 #(
    .INIT(64'hFCFFAFCA0C00A0CA)) 
    Dbg_TDO_INST_0_i_6
       (.I0(Dbg_TDO_INST_0_i_16_n_0),
        .I1(Dbg_TDO_INST_0_i_17_n_0),
        .I2(sel0),
        .I3(Dbg_TDO_INST_0_i_18_n_0),
        .I4(sel0__0[1]),
        .I5(data_read_reg[0]),
        .O(TDO_Data_Reg__31));
  MUXF7 Dbg_TDO_INST_0_i_7
       (.I0(Dbg_TDO_INST_0_i_20_n_0),
        .I1(Dbg_TDO_INST_0_i_21_n_0),
        .O(Dbg_TDO_INST_0_i_7_n_0),
        .S(Dbg_TDO_INST_0_i_19_n_0));
  LUT6 #(
    .INIT(64'h2B2B2B2828282B28)) 
    Dbg_TDO_INST_0_i_8
       (.I0(Dbg_TDO_INST_0_i_22_n_0),
        .I1(A1),
        .I2(A2),
        .I3(\Serial_Dbg_Intf.status_reg_reg_n_0_[16] ),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I5(\Serial_Dbg_Intf.status_reg_reg_n_0_[17] ),
        .O(Dbg_TDO_INST_0_i_8_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    Dbg_TDO_INST_0_i_9
       (.I0(A1),
        .I1(A2),
        .O(Dbg_TDO_INST_0_i_9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Full_32_bit_1_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_read_imm_reg_1),
        .Q(Full_32_bit_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    Full_32_bit_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_read_imm_reg),
        .Q(Full_32_bit),
        .R(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'hABAA)) 
    I_AS_INST_0_i_1
       (.I0(LOCKSTEP_Master_Out[36]),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .I2(wb_Halted),
        .I3(IReady),
        .O(IB_Ready));
  LUT2 #(
    .INIT(4'h8)) 
    \LOCKSTEP_Master_Out[1]_INST_0 
       (.I0(\Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0 ),
        .I1(MEM_DataBus_Access_reg),
        .O(LOCKSTEP_Master_Out[38]));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_brki_hit_reg 
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_brki_hit),
        .Q(dbg_brki_hit),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    \Performance_Debug_Control.dbg_freeze_nohalt_i_1 
       (.I0(dbg_freeze_nohalt0_in),
        .I1(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I2(p_4_out__0),
        .I3(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_i_3_n_0 ),
        .I5(\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .O(\Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFD00)) 
    \Performance_Debug_Control.dbg_freeze_nohalt_i_3 
       (.I0(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .I1(start_single_step_reg_n_0),
        .I2(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I3(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I4(reset_bool_for_rst),
        .O(\Performance_Debug_Control.dbg_freeze_nohalt_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_freeze_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ),
        .Q(\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_hit_reg[0] 
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_dbg_hit),
        .Q(dbg_hit),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    \Performance_Debug_Control.dbg_state_nohalt_i_1 
       (.I0(dbg_freeze_nohalt0_in),
        .I1(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .I2(saved_reset_mode_dbg_halt),
        .I3(dbg_halt_reset_mode_reg_0),
        .I4(\Performance_Debug_Control.dbg_state_nohalt_i_3_n_0 ),
        .I5(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .O(\Performance_Debug_Control.dbg_state_nohalt_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0054)) 
    \Performance_Debug_Control.dbg_state_nohalt_i_2 
       (.I0(reset_bool_for_rst),
        .I1(dbg_halt_reset_mode_reg_0),
        .I2(wb_Halted),
        .I3(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(dbg_freeze_nohalt0_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFEFE)) 
    \Performance_Debug_Control.dbg_state_nohalt_i_3 
       (.I0(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I1(reset_bool_for_rst),
        .I2(p_4_out__0),
        .I3(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .I4(p_36_out__0),
        .I5(\Performance_Debug_Control.dbg_state_nohalt_i_4_n_0 ),
        .O(\Performance_Debug_Control.dbg_state_nohalt_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h07)) 
    \Performance_Debug_Control.dbg_state_nohalt_i_4 
       (.I0(dbg_halt_reset_mode_reg_0),
        .I1(saved_reset_mode_dbg_halt),
        .I2(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .O(\Performance_Debug_Control.dbg_state_nohalt_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_state_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_state_nohalt_i_1_n_0 ),
        .Q(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(sync_trig_out_0_n_2),
        .Q(\Performance_Debug_Control.dbg_stop_i_reg_n_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000000000FE)) 
    \Performance_Debug_Control.dbg_stop_if_delay_i_i_1 
       (.I0(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I1(wb_Halted),
        .I2(\Single_Synchronize.use_async_reset.sync_reg ),
        .I3(reset_bool_for_rst),
        .I4(saved_reset_mode_sleep),
        .I5(dbg_halt_reset_mode_reg_0),
        .O(\Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ),
        .Q(LOCKSTEP_Master_Out[32]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000FE02)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1 
       (.I0(\Single_Synchronize.use_async_reset.sync_reg ),
        .I1(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ),
        .I2(reset_bool_for_rst),
        .I3(dbg_halt_reset_mode_reg_1),
        .I4(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFEFEEEFEEEE)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2 
       (.I0(dbg_halt_reset_mode_reg_0),
        .I1(wb_Halted),
        .I2(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .I3(Sleep_Out),
        .I4(saved_reset_mode_sleep),
        .I5(p_36_out__0),
        .O(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAA8AAAA)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4 
       (.I0(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I1(reset_bool_for_rst),
        .I2(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I3(start_single_step_reg_n_0),
        .I4(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .O(p_36_out__0));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ),
        .Q(\Single_Synchronize.use_async_reset.sync_reg ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_brki_hit_reg 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(\Serial_Dbg_Intf.control_reg_reg[8]_1 ),
        .Q(ex_brki_hit),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ),
        .Q(ex_pc_brk),
        .R(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'h8F)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_4 
       (.I0(normal_stop_i),
        .I1(dbg_clean_stop),
        .I2(single_Step_N),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ),
        .Q(LOCKSTEP_Master_Out[35]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ),
        .Q(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_step_continue_hold_reg 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(\Performance_Debug_Control.step_continue_hold_reg_n_0 ),
        .Q(ex_step_continue_hold),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.force_stop_cmd_1_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0 ),
        .Q(force_stop_cmd_1),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h000000000000AABA)) 
    \Performance_Debug_Control.force_stop_i_i_1 
       (.I0(force_stop_i),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0 ),
        .I2(force_stop_cmd_1),
        .I3(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I4(reset_bool_for_rst),
        .I5(wb_Halted),
        .O(\Performance_Debug_Control.force_stop_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.force_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.force_stop_i_i_1_n_0 ),
        .Q(force_stop_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.m0_brki_hit_reg 
       (.C(Clk),
        .CE(ex_piperun_for_ce),
        .D(ex_brki_hit),
        .Q(m0_brki_hit),
        .R(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'hBA)) 
    \Performance_Debug_Control.m0_dbg_hit[0]_i_1 
       (.I0(ex_pc_brk),
        .I1(ex_step_continue_hold),
        .I2(\Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .O(\Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.m0_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(ex_piperun_for_ce),
        .D(\Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ),
        .Q(\Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.normal_stop_cmd_1_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .Q(normal_stop_cmd_1),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h000000000000AABA)) 
    \Performance_Debug_Control.normal_stop_i_i_1 
       (.I0(normal_stop_i),
        .I1(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .I2(normal_stop_cmd_1),
        .I3(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I4(reset_bool_for_rst),
        .I5(wb_Halted),
        .O(\Performance_Debug_Control.normal_stop_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.normal_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.normal_stop_i_i_1_n_0 ),
        .Q(normal_stop_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0F0E)) 
    \Performance_Debug_Control.step_continue_hold_i_1 
       (.I0(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I1(start_single_step_reg_n_0),
        .I2(of_piperun_for_ce),
        .I3(\Performance_Debug_Control.step_continue_hold_reg_n_0 ),
        .O(\Performance_Debug_Control.step_continue_hold_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.step_continue_hold_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.step_continue_hold_i_1_n_0 ),
        .Q(\Performance_Debug_Control.step_continue_hold_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.wb_brki_hit_reg 
       (.C(Clk),
        .CE(m3_piperun_for_ce),
        .D(m0_brki_hit),
        .Q(wb_brki_hit),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.wb_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(m3_piperun_for_ce),
        .D(\Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .Q(wb_dbg_hit),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h00000010)) 
    \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_1 
       (.I0(\Serial_Dbg_Intf.control_reg_reg[8]_0 ),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[5]),
        .I3(Dbg_Reg_En[4]),
        .I4(Dbg_Reg_En[7]),
        .O(Instr_Insert_Reg_En));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(Instr_Insert_Reg_En),
        .Q(Instr_Insert_Reg_En_1));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(New_Dbg_Instr_TCK),
        .Q(New_Dbg_Instr2_TCK));
  LUT4 #(
    .INIT(16'h0008)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_1 
       (.I0(p_94_in),
        .I1(Instr_Insert_Reg_En),
        .I2(instr_read_reg[1]),
        .I3(instr_read_reg[0]),
        .O(p_96_out));
  LUT5 #(
    .INIT(32'h40000000)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2 
       (.I0(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I1(A1),
        .I2(sel0),
        .I3(A3),
        .I4(A2),
        .O(p_94_in));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_96_out),
        .Q(New_Dbg_Instr_TCK));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[31]),
        .Q(LOCKSTEP_Master_Out[31]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[21]),
        .Q(LOCKSTEP_Master_Out[21]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[20]),
        .Q(LOCKSTEP_Master_Out[20]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[19]),
        .Q(LOCKSTEP_Master_Out[19]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[18]),
        .Q(LOCKSTEP_Master_Out[18]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[17]),
        .Q(LOCKSTEP_Master_Out[17]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[16]),
        .Q(LOCKSTEP_Master_Out[16]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[15]),
        .Q(LOCKSTEP_Master_Out[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[14]),
        .Q(LOCKSTEP_Master_Out[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[13]),
        .Q(LOCKSTEP_Master_Out[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[12]),
        .Q(LOCKSTEP_Master_Out[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[30]),
        .Q(LOCKSTEP_Master_Out[30]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[11]),
        .Q(LOCKSTEP_Master_Out[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[10]),
        .Q(LOCKSTEP_Master_Out[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[9]),
        .Q(LOCKSTEP_Master_Out[9]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[8]),
        .Q(LOCKSTEP_Master_Out[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[7]),
        .Q(LOCKSTEP_Master_Out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[6]),
        .Q(LOCKSTEP_Master_Out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[5]),
        .Q(LOCKSTEP_Master_Out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[4]),
        .Q(LOCKSTEP_Master_Out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[3]),
        .Q(LOCKSTEP_Master_Out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[2]),
        .Q(LOCKSTEP_Master_Out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[29]),
        .Q(LOCKSTEP_Master_Out[29]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[1]),
        .Q(LOCKSTEP_Master_Out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(Dbg_TDI),
        .Q(LOCKSTEP_Master_Out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[28]),
        .Q(LOCKSTEP_Master_Out[28]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[27]),
        .Q(LOCKSTEP_Master_Out[27]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[26]),
        .Q(LOCKSTEP_Master_Out[26]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[25]),
        .Q(LOCKSTEP_Master_Out[25]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[24]),
        .Q(LOCKSTEP_Master_Out[24]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[23]),
        .Q(LOCKSTEP_Master_Out[23]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(1'b0),
        .D(p_0_in__0[22]),
        .Q(LOCKSTEP_Master_Out[22]));
  ublaze_sopc_microblaze_0_0__MB_SRL16E \Serial_Dbg_Intf.SRL16E_1 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q_0(Q_0));
  ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized7 \Serial_Dbg_Intf.SRL16E_3 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q2_in(Q2_in));
  ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized9 \Serial_Dbg_Intf.SRL16E_4 
       (.Config_Reg_En(Config_Reg_En),
        .Data_Read_Reg_En(Data_Read_Reg_En),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_TDO(Dbg_TDO),
        .Instr_Insert_Reg_En(Instr_Insert_Reg_En),
        .Q({sel0__0,sel0,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q0_in(\NLW_Serial_Dbg_Intf.SRL16E_4_Q0_in_UNCONNECTED ),
        .Q0_out(\NLW_Serial_Dbg_Intf.SRL16E_4_Q0_out_UNCONNECTED ),
        .Q2_in(Q2_in),
        .Q3_in(\NLW_Serial_Dbg_Intf.SRL16E_4_Q3_in_UNCONNECTED ),
        .\Serial_Dbg_Intf.shift_count_reg[6] (\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ),
        .Status_Reg_En(Status_Reg_En),
        .TDO_Data_Reg__31(TDO_Data_Reg__31),
        .TDO_Instr_Reg__0(TDO_Instr_Reg__0),
        .TDO_Status_Reg__17(TDO_Status_Reg__17),
        .tdo_config_word1_0(\NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_0_UNCONNECTED ));
  ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized3 \Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q6_out(Q6_out));
  ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized5 \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Dbg_TDO(\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ),
        .Q({sel0__0[2:1],sel0,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q11_in(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_Q11_in_UNCONNECTED ),
        .Q6_out(Q6_out),
        .Q_0(Q_0),
        .\Serial_Dbg_Intf.shift_count_reg[5] (\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ));
  ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized3_21 \Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q2_out(Q2_out));
  ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized5_22 \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Dbg_TDO(\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ),
        .Q({sel0__0[1],sel0,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q2_out(Q2_out),
        .Q3_out(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_Q3_out_UNCONNECTED ),
        .Q4_out(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_Q4_out_UNCONNECTED ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.capture_1_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(Dbg_Capture),
        .Q(capture_1));
  LUT5 #(
    .INIT(32'h00000010)) 
    \Serial_Dbg_Intf.command_reg[0]_i_1 
       (.I0(\Serial_Dbg_Intf.control_reg_reg[8]_0 ),
        .I1(Dbg_Reg_En[7]),
        .I2(Dbg_Reg_En[6]),
        .I3(Dbg_Reg_En[4]),
        .I4(Dbg_Reg_En[5]),
        .O(Command_Reg_En));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.command_reg_reg[0] 
       (.C(Dbg_Update),
        .CE(Command_Reg_En),
        .CLR(command_reg_clear),
        .D(p_0_in__0[2]),
        .Q(command_reg[0]));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.command_reg_reg[1] 
       (.C(Dbg_Update),
        .CE(Command_Reg_En),
        .CLR(command_reg_clear),
        .D(p_0_in__0[1]),
        .Q(command_reg[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.continue_from_brk_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .D(p_0_in__0[8]),
        .Q(continue_from_brk_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.continue_from_brk_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_11_out),
        .Q(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[0] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(1'b0),
        .D(p_0_in__0[10]),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[3] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(1'b0),
        .D(p_0_in__0[7]),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[4] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(1'b0),
        .D(p_0_in__0[6]),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[5] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(1'b0),
        .D(p_0_in__0[5]),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[8] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(1'b0),
        .D(p_0_in__0[2]),
        .Q(Q));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[0] ),
        .Q(data_read_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[10] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[10] ),
        .Q(data_read_reg[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[11] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[11] ),
        .Q(data_read_reg[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[12] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[12] ),
        .Q(data_read_reg[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[13] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[13] ),
        .Q(data_read_reg[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[14] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[14] ),
        .Q(data_read_reg[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[15] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[15] ),
        .Q(data_read_reg[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[16] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[16] ),
        .Q(data_read_reg[16]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[17] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[17] ),
        .Q(data_read_reg[17]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[18] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[18] ),
        .Q(data_read_reg[18]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[19] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[19] ),
        .Q(data_read_reg[19]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[1] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[1] ),
        .Q(data_read_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[20] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[20] ),
        .Q(data_read_reg[20]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[21] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[21] ),
        .Q(data_read_reg[21]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[22] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[22] ),
        .Q(data_read_reg[22]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[23] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[23] ),
        .Q(data_read_reg[23]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[24] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[24] ),
        .Q(data_read_reg[24]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[25] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[25] ),
        .Q(data_read_reg[25]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[26] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[26] ),
        .Q(data_read_reg[26]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[27] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[27] ),
        .Q(data_read_reg[27]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[28] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[28] ),
        .Q(data_read_reg[28]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[29] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[29] ),
        .Q(data_read_reg[29]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[2] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[2] ),
        .Q(data_read_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[30] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[30] ),
        .Q(data_read_reg[30]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[31] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[31] ),
        .Q(data_read_reg[31]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[32] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[32] ),
        .Q(data_read_reg[32]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[3] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[3] ),
        .Q(data_read_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[4] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[4] ),
        .Q(data_read_reg[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[5] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[5] ),
        .Q(data_read_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[6] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[6] ),
        .Q(data_read_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[7] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[7] ),
        .Q(data_read_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[8] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[8] ),
        .Q(data_read_reg[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[9] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\data_rd_reg_reg_n_0_[9] ),
        .Q(data_read_reg[9]));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.dbg_disable_interrupt_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[9]),
        .Q(LOCKSTEP_Master_Out[37]),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h00000010)) 
    \Serial_Dbg_Intf.dbg_wakeup_i_i_1 
       (.I0(\Serial_Dbg_Intf.control_reg_reg[8]_0 ),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[7]),
        .I3(Dbg_Reg_En[4]),
        .I4(Dbg_Reg_En[5]),
        .O(Control_Reg_En));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \Serial_Dbg_Intf.dbg_wakeup_i_i_3 
       (.I0(Dbg_Reg_En[0]),
        .I1(Dbg_Reg_En[1]),
        .I2(Dbg_Reg_En[3]),
        .I3(Dbg_Reg_En[2]),
        .O(\Serial_Dbg_Intf.control_reg_reg[8]_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.force_stop_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0 ),
        .D(p_0_in__0[3]),
        .Q(force_stop_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.force_stop_cmd_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_90_out),
        .Q(\Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.if_debug_ready_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_75_out),
        .Q(LOCKSTEP_Master_Out[36]),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.instr_read_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(executing),
        .Q(instr_read_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.instr_read_reg_reg[1] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(exception),
        .Q(instr_read_reg[1]));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(Instr_Insert_Reg_En_1),
        .Q(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.normal_stop_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .D(p_0_in__0[4]),
        .Q(normal_stop_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.normal_stop_cmd_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_93_out),
        .Q(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.read_register_MSR_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_85_out),
        .Q(read_register_MSR),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.read_register_PC_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_82_out),
        .Q(read_register_PC),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[0]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[1]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[2]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[3] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[3]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[4] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[4]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[5] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[5]),
        .Q(p_0_in_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[6] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[6]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[7] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[7]),
        .Q(p_0_in70_in),
        .R(reset_bool_for_rst));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.shift_count[0]_i_1 
       (.I0(Dbg_Shift),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(\Serial_Dbg_Intf.shift_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \Serial_Dbg_Intf.shift_count[1]_i_1 
       (.I0(A1),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(Dbg_Shift),
        .O(p_0_in[1]));
  (* \PinAttr:I0:HOLD_DETOUR  = "191" *) 
  LUT4 #(
    .INIT(16'h6A00)) 
    \Serial_Dbg_Intf.shift_count[2]_i_1 
       (.I0(A2),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(Dbg_Shift),
        .O(p_0_in[2]));
  LUT5 #(
    .INIT(32'h6AAA0000)) 
    \Serial_Dbg_Intf.shift_count[3]_i_1 
       (.I0(A3),
        .I1(A2),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(Dbg_Shift),
        .O(p_0_in[3]));
  LUT6 #(
    .INIT(64'h6AAAAAAA00000000)) 
    \Serial_Dbg_Intf.shift_count[4]_i_1 
       (.I0(sel0),
        .I1(A3),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(A2),
        .I5(Dbg_Shift),
        .O(p_0_in[4]));
  LUT3 #(
    .INIT(8'h60)) 
    \Serial_Dbg_Intf.shift_count[5]_i_1 
       (.I0(sel0__0[1]),
        .I1(\Serial_Dbg_Intf.shift_count[5]_i_2_n_0 ),
        .I2(Dbg_Shift),
        .O(p_0_in[5]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \Serial_Dbg_Intf.shift_count[5]_i_2 
       (.I0(sel0),
        .I1(A2),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(A3),
        .O(\Serial_Dbg_Intf.shift_count[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \Serial_Dbg_Intf.shift_count[6]_i_1 
       (.I0(sel0__0[2]),
        .I1(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ),
        .I2(Dbg_Shift),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h6A00)) 
    \Serial_Dbg_Intf.shift_count[7]_i_1 
       (.I0(sel0__0[3]),
        .I1(sel0__0[2]),
        .I2(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ),
        .I3(Dbg_Shift),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \Serial_Dbg_Intf.shift_count[7]_i_2 
       (.I0(sel0__0[1]),
        .I1(A3),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(A2),
        .I5(sel0),
        .O(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[0] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Serial_Dbg_Intf.shift_count[0]_i_1_n_0 ),
        .Q(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[1] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in[1]),
        .Q(A1));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[2] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in[2]),
        .Q(A2));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[3] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in[3]),
        .Q(A3));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[4] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in[4]),
        .Q(sel0));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[5] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in[5]),
        .Q(sel0__0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[6] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in[6]),
        .Q(sel0__0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[7] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in[7]),
        .Q(sel0__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[10] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[21]),
        .Q(p_0_in__0[22]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[11] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[20]),
        .Q(p_0_in__0[21]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[12] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[19]),
        .Q(p_0_in__0[20]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[13] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[18]),
        .Q(p_0_in__0[19]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[14] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[17]),
        .Q(p_0_in__0[18]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[15] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[16]),
        .Q(p_0_in__0[17]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[16] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[15]),
        .Q(p_0_in__0[16]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[17] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[14]),
        .Q(p_0_in__0[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[18] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[13]),
        .Q(p_0_in__0[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[19] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[12]),
        .Q(p_0_in__0[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[1] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[30]),
        .Q(p_0_in__0[31]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[20] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[11]),
        .Q(p_0_in__0[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[21] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[10]),
        .Q(p_0_in__0[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[22] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[9]),
        .Q(p_0_in__0[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[23] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[8]),
        .Q(p_0_in__0[9]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[24] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[7]),
        .Q(p_0_in__0[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[25] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[6]),
        .Q(p_0_in__0[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[26] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[5]),
        .Q(p_0_in__0[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[27] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[4]),
        .Q(p_0_in__0[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[28] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[3]),
        .Q(p_0_in__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[29] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[2]),
        .Q(p_0_in__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[2] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[29]),
        .Q(p_0_in__0[30]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[30] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[1]),
        .Q(p_0_in__0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[31] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(Dbg_TDI),
        .Q(p_0_in__0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[3] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[28]),
        .Q(p_0_in__0[29]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[4] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[27]),
        .Q(p_0_in__0[28]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[5] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[26]),
        .Q(p_0_in__0[27]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[6] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[25]),
        .Q(p_0_in__0[26]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[7] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[24]),
        .Q(p_0_in__0[25]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[8] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[23]),
        .Q(p_0_in__0[24]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[9] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[22]),
        .Q(p_0_in__0[23]));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.single_Step_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(start_single_step_reg_n_0),
        .D(p_0_in__0[9]),
        .Q(single_Step_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.start_single_cmd_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_87_out),
        .Q(start_single_cmd),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(sync),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[16] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(\Serial_Dbg_Intf.sync_stop_CPU_n_0 ),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[16] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[17] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(reset_bool_for_rst),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[17] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[18] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(Full_32_bit),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[18] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[19] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(delay_slot_instr),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[19] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[20] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(Full_32_bit_1),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[20] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[22] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(MEM_DataBus_Access_reg),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[22] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[23] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(dbg_brki_hit_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[23] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[24] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(running_clock_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[24] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[25] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(D[2]),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[27] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(sleep_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[27] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[29] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(1'b0),
        .D(unchanged),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[29] ));
  ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4 \Serial_Dbg_Intf.sync_dbg_brk_hit 
       (.D(dbg_brki_hit_synced),
        .Dbg_Clk(Dbg_Clk),
        .\Single_Synchronize.use_async_reset.sync_i_1 (\Serial_Dbg_Intf.sync_pause_n_1 ),
        .dbg_brki_hit(dbg_brki_hit));
  ublaze_sopc_microblaze_0_0__mb_sync_vec \Serial_Dbg_Intf.sync_dbg_hit 
       (.D(sync),
        .Dbg_Clk(Dbg_Clk),
        .\Single_Synchronize.use_async_reset.sync_i_1 (\Serial_Dbg_Intf.sync_pause_n_1 ),
        .dbg_hit(dbg_hit));
  ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_26 \Serial_Dbg_Intf.sync_pause 
       (.D(\NLW_Serial_Dbg_Intf.sync_pause_D_UNCONNECTED [0]),
        .Dbg_Clk(\NLW_Serial_Dbg_Intf.sync_pause_Dbg_Clk_UNCONNECTED ),
        .Pause(\NLW_Serial_Dbg_Intf.sync_pause_Pause_UNCONNECTED ),
        .Scan_En(\NLW_Serial_Dbg_Intf.sync_pause_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Serial_Dbg_Intf.sync_pause_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Serial_Dbg_Intf.sync_pause_Scan_Reset_Sel_UNCONNECTED ),
        .\Single_Synchronize.use_async_reset.sync_reg_0 (\Serial_Dbg_Intf.sync_pause_n_1 ));
  ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_27 \Serial_Dbg_Intf.sync_running_clock 
       (.D(running_clock_synced),
        .Dbg_Clk(Dbg_Clk),
        .\Single_Synchronize.use_async_reset.sync_i_1 (\Serial_Dbg_Intf.sync_pause_n_1 ),
        .running_clock(running_clock));
  ublaze_sopc_microblaze_0_0__mb_sync_vec__parameterized1 \Serial_Dbg_Intf.sync_sample 
       (.Clk(Clk),
        .D(normal_stop_TClk),
        .Dbg_Trig_Ack_In(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_In_UNCONNECTED [0]),
        .Dbg_Trig_Ack_Out(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_Out_UNCONNECTED [0]),
        .Dbg_Trig_In(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_In_UNCONNECTED [0]),
        .Dbg_Trig_Out(Dbg_Trig_Out[0]),
        .Q({\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ,p_0_in_1,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ,p_0_in70_in,\NLW_Serial_Dbg_Intf.sync_sample_Q_UNCONNECTED [0]}),
        .\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg (New_Dbg_Instr2_TCK),
        .\Serial_Dbg_Intf.command_reg_reg[0] ({command_reg[0],command_reg[1]}),
        .\Serial_Dbg_Intf.continue_from_brk_TClk_reg (continue_from_brk_TClk),
        .\Serial_Dbg_Intf.control_reg_reg[3] (\Serial_Dbg_Intf.control_reg_reg_n_0_[3] ),
        .\Serial_Dbg_Intf.force_stop_TClk_reg (force_stop_TClk),
        .\Serial_Dbg_Intf.single_Step_TClk_reg (single_Step_TClk),
        .\Serial_Dbg_Intf.trig_ack_out_1_reg (\NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ),
        .\Serial_Dbg_Intf.trig_in_1_reg (\NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ),
        .p_11_out(p_11_out),
        .p_75_out(p_75_out),
        .p_82_out(p_82_out),
        .p_85_out(p_85_out),
        .p_87_out(p_87_out),
        .p_90_out(p_90_out),
        .p_93_out(p_93_out),
        .sample_synced({sample_synced[0:7],\NLW_Serial_Dbg_Intf.sync_sample_sample_synced_UNCONNECTED [8],sample_synced[9]}),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_28 \Serial_Dbg_Intf.sync_sleep 
       (.D(sleep_synced),
        .Dbg_Clk(Dbg_Clk),
        .\Single_Synchronize.use_async_reset.sync_i_1 (\Serial_Dbg_Intf.sync_pause_n_1 ),
        .Sleep(Sleep));
  ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_29 \Serial_Dbg_Intf.sync_stop_CPU 
       (.D(\Serial_Dbg_Intf.sync_stop_CPU_n_0 ),
        .Dbg_Clk(Dbg_Clk),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Single_Synchronize.use_async_reset.sync_reg ),
        .\Single_Synchronize.use_async_reset.sync_i_1 (\Serial_Dbg_Intf.sync_pause_n_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00001000)) 
    \Serial_Dbg_Intf.unchanged_i_1 
       (.I0(Dbg_Reg_En[5]),
        .I1(Dbg_Reg_En[4]),
        .I2(Dbg_Reg_En[7]),
        .I3(Dbg_Reg_En[6]),
        .I4(\Serial_Dbg_Intf.control_reg_reg[8]_0 ),
        .I5(unchanged),
        .O(\Serial_Dbg_Intf.unchanged_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.unchanged_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Serial_Dbg_Intf.unchanged_i_1_n_0 ),
        .Q(unchanged));
  LUT4 #(
    .INIT(16'h00FB)) 
    \Using_FPGA.Native_i_1__3 
       (.I0(LOCKSTEP_Master_Out[32]),
        .I1(LOCKSTEP_Master_Out[35]),
        .I2(ex_Take_Intr_or_Exc),
        .I3(ex_Interrupt_i),
        .O(\Using_FPGA.Native ));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__49 
       (.I0(LOCKSTEP_Master_Out[32]),
        .O(\if_pc_reg[29] ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__8 
       (.I0(LOCKSTEP_Master_Out[35]),
        .I1(LOCKSTEP_Master_Out[32]),
        .O(ex_exception_no_load_store_mask));
  ublaze_sopc_microblaze_0_0__address_hit \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I 
       (.Address(Address),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_TDI(Dbg_TDI),
        .Hit(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ),
        .\Performance_Debug_Control.dbg_stop_i_reg (\Performance_Debug_Control.dbg_stop_i_reg_n_0 ),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Single_Synchronize.use_async_reset.sync_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .\Performance_Debug_Control.normal_stop_i_reg (\Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0 ),
        .Q({\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ,Q}),
        .\Using_FPGA.Native (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (ex_piperun_for_ce),
        .ex_Exception_Taken(ex_Exception_Taken),
        .force_stop_i(force_stop_i),
        .mem_Exception_Taken(mem_Exception_Taken),
        .of_pause_reg(of_piperun_for_ce),
        .p_44_out(p_44_out),
        .single_Step_N(single_Step_N));
  LUT2 #(
    .INIT(4'hE)) 
    command_reg_clear_i_1
       (.I0(read_register_PC_1_reg_n_0),
        .I1(command_reg_clear_reg_0),
        .O(command_reg_clear_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    command_reg_clear_reg
       (.C(Clk),
        .CE(1'b1),
        .D(command_reg_clear_i_1_n_0),
        .Q(command_reg_clear),
        .R(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \data_rd_reg[0]_i_1 
       (.I0(wb_gpr_wr_dbg),
        .I1(\Single_Synchronize.use_async_reset.sync_reg ),
        .I2(command_reg_clear_reg_0),
        .I3(read_register_PC_1_reg_n_0),
        .O(\data_rd_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCEAACFFFCEAACC00)) 
    \data_rd_reg[32]_i_1 
       (.I0(\data_rd_reg[32]_i_2_n_0 ),
        .I1(wb_gpr_wr_dbg),
        .I2(LOCKSTEP_Master_Out[36]),
        .I3(\Single_Synchronize.use_async_reset.sync_reg ),
        .I4(\data_rd_reg[32]_i_3_n_0 ),
        .I5(\data_rd_reg_reg_n_0_[32] ),
        .O(\data_rd_reg[32]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \data_rd_reg[32]_i_2 
       (.I0(command_reg_clear_reg_0),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .I2(wb_pc_valid),
        .O(\data_rd_reg[32]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \data_rd_reg[32]_i_3 
       (.I0(command_reg_clear_reg_0),
        .I1(read_register_PC_1_reg_n_0),
        .O(\data_rd_reg[32]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[0] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[31]),
        .Q(\data_rd_reg_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[10] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[21]),
        .Q(\data_rd_reg_reg_n_0_[10] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[11] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[20]),
        .Q(\data_rd_reg_reg_n_0_[11] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[12] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[19]),
        .Q(\data_rd_reg_reg_n_0_[12] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[13] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[18]),
        .Q(\data_rd_reg_reg_n_0_[13] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[14] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[17]),
        .Q(\data_rd_reg_reg_n_0_[14] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[15] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[16]),
        .Q(\data_rd_reg_reg_n_0_[15] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[16] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[15]),
        .Q(\data_rd_reg_reg_n_0_[16] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[17] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[14]),
        .Q(\data_rd_reg_reg_n_0_[17] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[18] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[13]),
        .Q(\data_rd_reg_reg_n_0_[18] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[19] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[12]),
        .Q(\data_rd_reg_reg_n_0_[19] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[1] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[30]),
        .Q(\data_rd_reg_reg_n_0_[1] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[20] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[11]),
        .Q(\data_rd_reg_reg_n_0_[20] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[21] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[10]),
        .Q(\data_rd_reg_reg_n_0_[21] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[22] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[9]),
        .Q(\data_rd_reg_reg_n_0_[22] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[23] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[8]),
        .Q(\data_rd_reg_reg_n_0_[23] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[24] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[7]),
        .Q(\data_rd_reg_reg_n_0_[24] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[25] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[6]),
        .Q(\data_rd_reg_reg_n_0_[25] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[26] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[5]),
        .Q(\data_rd_reg_reg_n_0_[26] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[27] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[4]),
        .Q(\data_rd_reg_reg_n_0_[27] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[28] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[3]),
        .Q(\data_rd_reg_reg_n_0_[28] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[29] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[2]),
        .Q(\data_rd_reg_reg_n_0_[29] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[2] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[29]),
        .Q(\data_rd_reg_reg_n_0_[2] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[30] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[1]),
        .Q(\data_rd_reg_reg_n_0_[30] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[31] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[0]),
        .Q(\data_rd_reg_reg_n_0_[31] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[32] 
       (.C(Clk),
        .CE(1'b1),
        .D(\data_rd_reg[32]_i_1_n_0 ),
        .Q(\data_rd_reg_reg_n_0_[32] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[3] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[28]),
        .Q(\data_rd_reg_reg_n_0_[3] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[4] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[27]),
        .Q(\data_rd_reg_reg_n_0_[4] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[5] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[26]),
        .Q(\data_rd_reg_reg_n_0_[5] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[6] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[25]),
        .Q(\data_rd_reg_reg_n_0_[6] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[7] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[24]),
        .Q(\data_rd_reg_reg_n_0_[7] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[8] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[23]),
        .Q(\data_rd_reg_reg_n_0_[8] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[9] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(wb_gpr_write_dbg_reg[22]),
        .Q(\data_rd_reg_reg_n_0_[9] ),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    dbg_halt_reset_mode_i_1
       (.I0(dbg_halt_reset_mode_reg_0),
        .I1(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .I2(step_continue__0),
        .I3(reset_bool_for_rst),
        .O(dbg_halt_reset_mode_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    dbg_halt_reset_mode_i_2
       (.I0(start_single_step_reg_n_0),
        .I1(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(step_continue__0));
  FDRE #(
    .INIT(1'b0)) 
    dbg_halt_reset_mode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(dbg_halt_reset_mode_i_1_n_0),
        .Q(dbg_halt_reset_mode_reg_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    delay_slot_instr_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(D[0]),
        .Q(delay_slot_instr),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h00000000BA8A8A8A)) 
    exception_i_1
       (.I0(exception),
        .I1(wb_Halted),
        .I2(wb_valid_reg),
        .I3(D[1]),
        .I4(\Single_Synchronize.use_async_reset.sync_reg ),
        .I5(exception_i_2_n_0),
        .O(exception_i_1_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    exception_i_2
       (.I0(reset_bool_for_rst),
        .I1(start_dbg_exec_reg_n_0),
        .I2(force_stop_i),
        .O(exception_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    exception_reg
       (.C(Clk),
        .CE(1'b1),
        .D(exception_i_1_n_0),
        .Q(exception),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000EECE)) 
    executing_i_1
       (.I0(executing),
        .I1(start_dbg_exec_reg_n_0),
        .I2(wb_valid_reg),
        .I3(wb_Halted),
        .I4(reset_bool_for_rst),
        .I5(force_stop_i),
        .O(executing_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    executing_reg
       (.C(Clk),
        .CE(1'b1),
        .D(executing_i_1_n_0),
        .Q(executing),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    read_register_MSR_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(read_register_MSR),
        .Q(command_reg_clear_reg_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    read_register_PC_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(read_register_PC),
        .Q(read_register_PC_1_reg_n_0),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    running_clock_reg
       (.C(Clk),
        .CE(1'b1),
        .CLR(capture_1),
        .D(1'b1),
        .Q(running_clock));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h4)) 
    saved_reset_mode_dbg_halt_i_1
       (.I0(reset_bool_for_rst),
        .I1(saved_reset_mode_dbg_halt),
        .O(saved_reset_mode_dbg_halt_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    saved_reset_mode_dbg_halt_reg
       (.C(Clk),
        .CE(1'b1),
        .D(saved_reset_mode_dbg_halt_i_1_n_0),
        .Q(saved_reset_mode_dbg_halt),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h2)) 
    saved_reset_mode_sleep_i_1
       (.I0(Sleep_Out),
        .I1(reset_bool_for_rst),
        .O(saved_reset_mode_sleep_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    saved_reset_mode_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(saved_reset_mode_sleep_i_1_n_0),
        .Q(saved_reset_mode_sleep),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hFD)) 
    single_Step_N_i_1
       (.I0(start_single_step_reg_n_0),
        .I1(single_step_count[1]),
        .I2(single_step_count[0]),
        .O(single_Step_N_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    single_Step_N_reg
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(single_Step_N_i_1_n_0),
        .Q(single_Step_N),
        .S(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'hAACF55C0)) 
    \single_step_count[0]_i_1 
       (.I0(single_step_count[1]),
        .I1(\Serial_Dbg_Intf.control_reg_reg_n_0_[4] ),
        .I2(start_single_cmd),
        .I3(of_piperun_for_ce),
        .I4(single_step_count[0]),
        .O(\single_step_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0BF8)) 
    \single_step_count[1]_i_1 
       (.I0(\Serial_Dbg_Intf.control_reg_reg_n_0_[5] ),
        .I1(start_single_cmd),
        .I2(of_piperun_for_ce),
        .I3(single_step_count[1]),
        .O(\single_step_count[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \single_step_count_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(\single_step_count[0]_i_1_n_0 ),
        .Q(single_step_count[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \single_step_count_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\single_step_count[1]_i_1_n_0 ),
        .Q(single_step_count[1]),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'h00570000)) 
    sleep_reset_mode_i_1
       (.I0(saved_reset_mode_sleep),
        .I1(wakeup_i[0]),
        .I2(wakeup_i[1]),
        .I3(reset_bool_for_rst),
        .I4(Sleep_Out),
        .O(sleep_reset_mode_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sleep_reset_mode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(sleep_reset_mode_i_1_n_0),
        .Q(Sleep_Out),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    start_dbg_exec_reg
       (.C(Clk),
        .CE(1'b1),
        .D(LOCKSTEP_Master_Out[36]),
        .Q(start_dbg_exec_reg_n_0),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h3232320232323232)) 
    start_single_step_i_1
       (.I0(start_single_cmd),
        .I1(reset_bool_for_rst),
        .I2(start_single_step_reg_n_0),
        .I3(single_step_count[1]),
        .I4(single_step_count[0]),
        .I5(of_piperun_for_ce),
        .O(start_single_step_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_single_step_reg
       (.C(Clk),
        .CE(1'b1),
        .D(start_single_step_i_1_n_0),
        .Q(start_single_step_reg_n_0),
        .R(1'b0));
  ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized1_31 sync_trig_out_0
       (.Clk(NLW_sync_trig_out_0_Clk_UNCONNECTED),
        .D(NLW_sync_trig_out_0_D_UNCONNECTED[0]),
        .Dbg_Stop(NLW_sync_trig_out_0_Dbg_Stop_UNCONNECTED),
        .Dbg_Trig_Ack_Out(NLW_sync_trig_out_0_Dbg_Trig_Ack_Out_UNCONNECTED[0]),
        .Dbg_Trig_Out(NLW_sync_trig_out_0_Dbg_Trig_Out_UNCONNECTED[0]),
        .\Performance_Debug_Control.dbg_stop_i_reg (sync_trig_out_0_n_2),
        .\Performance_Debug_Control.dbg_stop_i_reg_0 (\Performance_Debug_Control.dbg_stop_i_reg_n_0 ),
        .\Performance_Debug_Control.trig_ack_out_0_reg (\NLW_sync_trig_out_0_Performance_Debug_Control.trig_ack_out_0_reg_UNCONNECTED ),
        .dbg_stop_1(NLW_sync_trig_out_0_dbg_stop_1_UNCONNECTED),
        .dbg_stop_i(dbg_stop_i),
        .sync_reset(NLW_sync_trig_out_0_sync_reset_UNCONNECTED),
        .trig_out_0_synced(NLW_sync_trig_out_0_trig_out_0_synced_UNCONNECTED),
        .trig_out_0_synced_1(NLW_sync_trig_out_0_trig_out_0_synced_1_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "Decode_gti" *) 
module ublaze_sopc_microblaze_0_0__Decode_gti
   (use_Reg_Neg_S_reg,
    D,
    \Using_FPGA.Native ,
    of_gpr_op3_rd_addr,
    of_gpr_op1_rd_addr,
    of_imm_data,
    \wb_instr_reg[31]_0 ,
    ex_byte_access,
    ex_doublet_access,
    ex_reverse_mem_access,
    \Using_FPGA.Native_0 ,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    mem_Exception_Taken,
    ex_move_to_MSR_instr,
    ex_Interrupt_i,
    ex_Exception_Taken,
    Pause_Ack,
    mem_databus_read,
    mb_halted_1_reg,
    mem_databus_write,
    wb_byte_access,
    mem_byte_access,
    mem_doublet_access,
    wb_piperun,
    ex_cmp_op,
    ex_unsigned_op,
    ex_use_carry,
    EX_Enable_ALU,
    EX_ALU_Sel_Logic,
    ex_swap_byte_instr,
    mem_sel_msr,
    wb_gpr_wr_dbg,
    wb_read_imm_reg,
    wb_read_imm_reg_1,
    wb_pc_valid,
    dbg_clean_stop,
    of_pause,
    ex_Take_Intr_or_Exc,
    Hibernate,
    Sleep_Decode,
    Suspend,
    mem_databus_access,
    wb_valid_reg_0,
    wb_Halted,
    LOCKSTEP_Master_Out,
    \EX_Op2_reg[0] ,
    EX_Fwd,
    mem_Write_DCache_reg_0,
    \Using_FPGA.Native_1 ,
    wb_MSR_Clear_IE,
    SRI,
    E,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \EX_Op3_reg[0] ,
    \EX_Branch_CMP_Op1_reg[0] ,
    \data_rd_reg_reg[0] ,
    SR,
    R,
    \Using_FPGA.Native_4 ,
    active_access_reg,
    M_AXI_DP_WVALID_i_reg,
    M_AXI_DP_AWVALID_i_reg,
    M_AXI_DP_ARVALID_i_reg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    p_4_out__0,
    dbg_stop_i,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    Sleep,
    I1,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    in0,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    \Using_FPGA.Native_10 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    \EX_Op1_reg[31] ,
    \EX_Op1_reg[27] ,
    \EX_Op1_reg[26] ,
    \EX_Op1_reg[25] ,
    \EX_Op1_reg[24] ,
    \EX_Op1_reg[23] ,
    \EX_Op1_reg[22] ,
    \EX_Op1_reg[21] ,
    \EX_Op1_reg[20] ,
    \EX_Op1_reg[19] ,
    \EX_Op1_reg[18] ,
    \EX_Op1_reg[17] ,
    \EX_Op1_reg[16] ,
    \EX_Op1_reg[15] ,
    \EX_Op1_reg[14] ,
    \EX_Op1_reg[13] ,
    \EX_Op1_reg[12] ,
    \EX_Op1_reg[11] ,
    \EX_Op1_reg[10] ,
    \EX_Op1_reg[9] ,
    \EX_Op1_reg[8] ,
    \EX_Op1_reg[7] ,
    \EX_Op1_reg[6] ,
    \EX_Op1_reg[5] ,
    \EX_Op1_reg[4] ,
    \EX_Op1_reg[3] ,
    \EX_Op1_reg[2] ,
    \EX_Op1_reg[1] ,
    \EX_Op1_reg[30] ,
    \EX_Op1_reg[29] ,
    \EX_Op1_reg[28] ,
    I1_0,
    of_op1_sel_spr,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \MEM_DataBus_Addr_reg[9]_0 ,
    sync_reset,
    Clk,
    I139_out,
    ex_op1_zero,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    mem_databus_ready,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 ,
    ex_exception_no_load_store_mask,
    Pause,
    ex_databus_addr,
    \EX_Op2_reg[0]_0 ,
    \EX_Branch_CMP_Op1_reg[0]_0 ,
    IB_Ready,
    Y,
    of_MSR,
    \Serial_Dbg_Intf.force_stop_cmd_i_reg ,
    external_interrupt,
    MEM_Fwd,
    \Using_FPGA.Native_13 ,
    GPR_Op2,
    \imm_reg_reg[0] ,
    mem_MSR,
    ex_MSR,
    \EX_Op1_reg[29]_0 ,
    \EX_Op1_reg[0] ,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ,
    \Performance_Debug_Control.dbg_state_nohalt_reg ,
    LO,
    GPR_Op3,
    GPR_Op1,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    M_AXI_DP_AWVALID_i_reg_0,
    read_register_MSR_1_reg,
    \Using_FPGA.Native_14 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ,
    \WB_MEM_Result_reg[0] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ,
    M_AXI_DP_BVALID,
    active_access,
    M_AXI_DP_RVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    M_AXI_DP_ARREADY,
    Reset_Mode,
    dbg_halt_reset_mode_reg,
    Q,
    DReady,
    DWait,
    active_access_d1,
    Sleep_Out,
    wakeup_i,
    swap_result,
    out,
    \EX_Op1_reg[24]_0 ,
    swap_result_reg,
    \EX_Op3_reg[0]_0 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    p_44_out,
    IReady,
    in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output use_Reg_Neg_S_reg;
  output [31:0]D;
  output [0:0]\Using_FPGA.Native ;
  output [0:4]of_gpr_op3_rd_addr;
  output [0:4]of_gpr_op1_rd_addr;
  output [0:15]of_imm_data;
  output \wb_instr_reg[31]_0 ;
  output ex_byte_access;
  output ex_doublet_access;
  output ex_reverse_mem_access;
  output \Using_FPGA.Native_0 ;
  output ex_op1_cmp_equal;
  output ex_op1_cmp_equal_n;
  output mem_Exception_Taken;
  output ex_move_to_MSR_instr;
  output ex_Interrupt_i;
  output ex_Exception_Taken;
  output Pause_Ack;
  output mem_databus_read;
  output [161:0]mb_halted_1_reg;
  output mem_databus_write;
  output wb_byte_access;
  output mem_byte_access;
  output mem_doublet_access;
  output wb_piperun;
  output ex_cmp_op;
  output ex_unsigned_op;
  output ex_use_carry;
  output EX_Enable_ALU;
  output EX_ALU_Sel_Logic;
  output ex_swap_byte_instr;
  output mem_sel_msr;
  output wb_gpr_wr_dbg;
  output wb_read_imm_reg;
  output wb_read_imm_reg_1;
  output wb_pc_valid;
  output dbg_clean_stop;
  output of_pause;
  output ex_Take_Intr_or_Exc;
  output Hibernate;
  output Sleep_Decode;
  output Suspend;
  output mem_databus_access;
  output wb_valid_reg_0;
  output wb_Halted;
  output [1:0]LOCKSTEP_Master_Out;
  output [31:0]\EX_Op2_reg[0] ;
  output [0:31]EX_Fwd;
  output mem_Write_DCache_reg_0;
  output \Using_FPGA.Native_1 ;
  output wb_MSR_Clear_IE;
  output SRI;
  output [0:0]E;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output [31:0]\EX_Op3_reg[0] ;
  output [31:0]\EX_Branch_CMP_Op1_reg[0] ;
  output [15:0]\data_rd_reg_reg[0] ;
  output [0:0]SR;
  output R;
  output \Using_FPGA.Native_4 ;
  output active_access_reg;
  output M_AXI_DP_WVALID_i_reg;
  output M_AXI_DP_AWVALID_i_reg;
  output M_AXI_DP_ARVALID_i_reg;
  output \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  output p_4_out__0;
  output dbg_stop_i;
  output \Performance_Debug_Control.ex_brki_hit_reg ;
  output Sleep;
  output I1;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output [1:0]\Using_FPGA.Native_7 ;
  output in0;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  output \Using_FPGA.Native_10 ;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  output \EX_Op1_reg[31] ;
  output \EX_Op1_reg[27] ;
  output \EX_Op1_reg[26] ;
  output \EX_Op1_reg[25] ;
  output \EX_Op1_reg[24] ;
  output \EX_Op1_reg[23] ;
  output \EX_Op1_reg[22] ;
  output \EX_Op1_reg[21] ;
  output \EX_Op1_reg[20] ;
  output \EX_Op1_reg[19] ;
  output \EX_Op1_reg[18] ;
  output \EX_Op1_reg[17] ;
  output \EX_Op1_reg[16] ;
  output \EX_Op1_reg[15] ;
  output \EX_Op1_reg[14] ;
  output \EX_Op1_reg[13] ;
  output \EX_Op1_reg[12] ;
  output \EX_Op1_reg[11] ;
  output \EX_Op1_reg[10] ;
  output \EX_Op1_reg[9] ;
  output \EX_Op1_reg[8] ;
  output \EX_Op1_reg[7] ;
  output \EX_Op1_reg[6] ;
  output \EX_Op1_reg[5] ;
  output \EX_Op1_reg[4] ;
  output \EX_Op1_reg[3] ;
  output \EX_Op1_reg[2] ;
  output \EX_Op1_reg[1] ;
  output \EX_Op1_reg[30] ;
  output \EX_Op1_reg[29] ;
  output \EX_Op1_reg[28] ;
  output I1_0;
  output of_op1_sel_spr;
  output [0:0]\Using_FPGA.Native_11 ;
  output [31:0]\Using_FPGA.Native_12 ;
  output [1:0]\MEM_DataBus_Addr_reg[9]_0 ;
  input sync_reset;
  input Clk;
  input I139_out;
  input ex_op1_zero;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input mem_databus_ready;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  input ex_exception_no_load_store_mask;
  input Pause;
  input [1:0]ex_databus_addr;
  input [46:0]\EX_Op2_reg[0]_0 ;
  input [0:0]\EX_Branch_CMP_Op1_reg[0]_0 ;
  input IB_Ready;
  input [0:31]Y;
  input [1:0]of_MSR;
  input [4:0]\Serial_Dbg_Intf.force_stop_cmd_i_reg ;
  input external_interrupt;
  input [3:0]MEM_Fwd;
  input [27:0]\Using_FPGA.Native_13 ;
  input [0:31]GPR_Op2;
  input [15:0]\imm_reg_reg[0] ;
  input [2:0]mem_MSR;
  input [2:0]ex_MSR;
  input \EX_Op1_reg[29]_0 ;
  input [31:0]\EX_Op1_reg[0] ;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  input \Performance_Debug_Control.dbg_state_nohalt_reg ;
  input LO;
  input [0:31]GPR_Op3;
  input [0:31]GPR_Op1;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [17:0]M_AXI_DP_AWVALID_i_reg_0;
  input read_register_MSR_1_reg;
  input [15:0]\Using_FPGA.Native_14 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ;
  input [15:0]\WB_MEM_Result_reg[0] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ;
  input M_AXI_DP_BVALID;
  input active_access;
  input M_AXI_DP_RVALID;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input M_AXI_DP_ARREADY;
  input [0:1]Reset_Mode;
  input dbg_halt_reset_mode_reg;
  input [0:0]Q;
  input DReady;
  input DWait;
  input active_access_d1;
  input Sleep_Out;
  input [0:1]wakeup_i;
  input [23:0]swap_result;
  input out;
  input \EX_Op1_reg[24]_0 ;
  input [0:7]swap_result_reg;
  input [31:0]\EX_Op3_reg[0]_0 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  input p_44_out;
  input IReady;
  input [0:0]in;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;
  output lopt_4;
  output lopt_5;
  input lopt_6;
  output lopt_7;
  output lopt_8;
  input lopt_9;
  output lopt_10;
  output lopt_11;

  wire A;
  wire Clk;
  wire [31:0]D;
  wire D233_out;
  wire DReady;
  wire [0:0]\Data_Flow_I/EX_Shift_Logic_Result ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O0_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O10_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O11_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O12_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O13_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O14_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O15_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O17_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O18_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O19_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O1_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O20_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O21_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O22_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O23_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O24_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O26_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O27_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O28_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O29_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O2_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O30_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O31_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O3_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O4_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O5_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O6_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O7_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O8_out ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O9_out ;
  wire [30:30]\Data_Flow_I/msr_reg_i/ex_MSR_cmb2_out ;
  wire Dbg_Clean_Stop0;
  wire [0:0]E;
  wire EX_ALU_Sel_Logic;
  wire [31:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire [0:0]\EX_Branch_CMP_Op1_reg[0]_0 ;
  wire EX_Enable_ALU;
  wire [0:31]EX_Fwd;
  wire EX_Is_Div_Instr;
  wire EX_MBAR_Stall__2;
  wire [31:0]\EX_Op1_reg[0] ;
  wire \EX_Op1_reg[10] ;
  wire \EX_Op1_reg[11] ;
  wire \EX_Op1_reg[12] ;
  wire \EX_Op1_reg[13] ;
  wire \EX_Op1_reg[14] ;
  wire \EX_Op1_reg[15] ;
  wire \EX_Op1_reg[16] ;
  wire \EX_Op1_reg[17] ;
  wire \EX_Op1_reg[18] ;
  wire \EX_Op1_reg[19] ;
  wire \EX_Op1_reg[1] ;
  wire \EX_Op1_reg[20] ;
  wire \EX_Op1_reg[21] ;
  wire \EX_Op1_reg[22] ;
  wire \EX_Op1_reg[23] ;
  wire \EX_Op1_reg[24] ;
  wire \EX_Op1_reg[24]_0 ;
  wire \EX_Op1_reg[25] ;
  wire \EX_Op1_reg[26] ;
  wire \EX_Op1_reg[27] ;
  wire \EX_Op1_reg[28] ;
  wire \EX_Op1_reg[29] ;
  wire \EX_Op1_reg[29]_0 ;
  wire \EX_Op1_reg[2] ;
  wire \EX_Op1_reg[30] ;
  wire \EX_Op1_reg[31] ;
  wire \EX_Op1_reg[3] ;
  wire \EX_Op1_reg[4] ;
  wire \EX_Op1_reg[5] ;
  wire \EX_Op1_reg[6] ;
  wire \EX_Op1_reg[7] ;
  wire \EX_Op1_reg[8] ;
  wire \EX_Op1_reg[9] ;
  wire [31:0]\EX_Op2_reg[0] ;
  wire [46:0]\EX_Op2_reg[0]_0 ;
  wire [31:0]\EX_Op3_reg[0] ;
  wire [31:0]\EX_Op3_reg[0]_0 ;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire \^Hibernate ;
  wire I0;
  wire I139_out;
  wire I1_0;
  wire I2;
  wire I4;
  wire I5;
  wire IB_Ready;
  wire IF_PC_Write;
  wire IReady;
  wire LO;
  wire [1:0]\^LOCKSTEP_Master_Out ;
  wire [1:0]\MEM_DataBus_Addr_reg[9]_0 ;
  wire [3:0]MEM_Fwd;
  wire MEM_Sel_MEM_Res;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_ARVALID_i_reg;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_AWVALID_i_reg;
  wire [17:0]M_AXI_DP_AWVALID_i_reg_0;
  wire M_AXI_DP_BVALID;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire M_AXI_DP_WVALID_i_reg;
  wire O31_out;
  wire O33_out;
  wire O35_out;
  wire O37_out;
  wire O39_out;
  wire O41_out;
  wire O43_out;
  wire O45_out;
  wire O47_out;
  wire O49_out;
  wire O51_out;
  wire O53_out;
  wire O55_out;
  wire O56_out;
  wire O57_out;
  wire O59_out;
  wire O61_out;
  wire O63_out;
  wire O65_out;
  wire O67_out;
  wire O69_out;
  wire O71_out;
  wire O73_out;
  wire O75_out;
  wire O77_out;
  wire O79_out;
  wire O81_out;
  wire O83_out;
  wire O85_out;
  wire O87_out;
  wire PC_Module_I_n_34;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_state_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire PreFetch_Buffer_I1_n_103;
  wire PreFetch_Buffer_I1_n_104;
  wire PreFetch_Buffer_I1_n_170;
  wire PreFetch_Buffer_I1_n_174;
  wire PreFetch_Buffer_I1_n_177;
  wire PreFetch_Buffer_I1_n_178;
  wire PreFetch_Buffer_I1_n_179;
  wire PreFetch_Buffer_I1_n_180;
  wire PreFetch_Buffer_I1_n_183;
  wire PreFetch_Buffer_I1_n_184;
  wire PreFetch_Buffer_I1_n_185;
  wire PreFetch_Buffer_I1_n_186;
  wire PreFetch_Buffer_I1_n_187;
  wire PreFetch_Buffer_I1_n_188;
  wire PreFetch_Buffer_I1_n_189;
  wire PreFetch_Buffer_I1_n_190;
  wire PreFetch_Buffer_I1_n_191;
  wire PreFetch_Buffer_I1_n_192;
  wire PreFetch_Buffer_I1_n_193;
  wire PreFetch_Buffer_I1_n_194;
  wire PreFetch_Buffer_I1_n_196;
  wire PreFetch_Buffer_I1_n_197;
  wire PreFetch_Buffer_I1_n_198;
  wire PreFetch_Buffer_I1_n_3;
  wire PreFetch_Buffer_I1_n_49;
  wire PreFetch_Buffer_I1_n_50;
  wire PreFetch_Buffer_I1_n_51;
  wire PreFetch_Buffer_I1_n_57;
  wire PreFetch_Buffer_I1_n_60;
  wire PreFetch_Buffer_I1_n_97;
  wire PreFetch_Buffer_I1_n_98;
  wire PreFetch_Buffer_I1_n_99;
  wire [0:0]Q;
  wire R;
  wire [0:0]SR;
  wire SRI;
  wire [4:0]\Serial_Dbg_Intf.force_stop_cmd_i_reg ;
  wire Sleep;
  wire \^Sleep_Decode ;
  wire Sleep_Out;
  wire \^Suspend ;
  wire \Use_DBUS.DAXI_Interface_I1/new_request ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_1 ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_2 ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_3 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_1 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_2 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_5 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_6 ;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire [0:0]\Using_FPGA.Native_11 ;
  wire [31:0]\Using_FPGA.Native_12 ;
  wire [27:0]\Using_FPGA.Native_13 ;
  wire [15:0]\Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire [1:0]\Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Using_FPGA.Native_i_3_n_0 ;
  wire \Using_FPGA.Native_i_5__1_n_0 ;
  wire \Using_FPGA_2.ex_is_load_instr_Inst_n_3 ;
  wire \Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ;
  wire \Using_FPGA_2.ex_is_swx_instr_Inst_n_4 ;
  wire \Using_FPGA_2.ex_load_store_instr_Inst_n_2 ;
  wire \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ;
  wire \Using_FPGA_4.of_read_ex_write_op3_conflict_INST1_n_0 ;
  wire \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0 ;
  wire \Using_FPGA_4.of_read_mem_write_op3_conflict_INST2_n_0 ;
  wire [15:0]\WB_MEM_Result_reg[0] ;
  wire [0:31]Y;
  wire active_access;
  wire active_access_d1;
  wire active_access_reg;
  wire active_wakeup;
  wire active_wakeup0;
  wire [15:0]\data_rd_reg_reg[0] ;
  wire dbg_clean_stop;
  wire dbg_halt_reset_mode_reg;
  wire dbg_stop_i;
  wire ex_Enable_Sext_Shift;
  wire ex_Exception_Taken;
  wire ex_Interrupt_Brk_combo_i_3_n_0;
  wire ex_Interrupt_i;
  wire [2:0]ex_MSR;
  wire ex_MSR_Load_ALU_C;
  wire ex_MSR_Load_LWX_SWX_C;
  wire ex_MSR_Load_Shift_C;
  wire ex_MSR_Set_SW_BIP;
  wire ex_MSR_change_instr;
  wire ex_Take_Intr_or_Exc;
  (* RTL_KEEP = "true" *) wire ex_Write_DCache_decode_cmb;
  wire ex_atomic_Instruction_Pair;
  wire ex_atomic_Instruction_Pair0;
  wire ex_branch_with_delayslot;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr;
  wire ex_delayslot_Instr0;
  wire ex_doublet_access;
  wire ex_enable_sext_shift_i0;
  wire ex_exception_no_load_store_mask;
  wire ex_first_cycle;
  wire \ex_gpr_write_addr_reg_n_0_[0] ;
  wire \ex_gpr_write_addr_reg_n_0_[4] ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_reg_n_0;
  wire ex_hibernate_i_i_1_n_0;
  wire ex_is_load_instr_s;
  wire ex_is_lwx_instr_s;
  wire ex_is_multi_instr2;
  wire ex_is_multi_or_load_instr;
  wire ex_is_multi_or_load_instr0;
  wire ex_is_swx_instr_s;
  wire ex_jump;
  wire ex_jump_hold;
  wire ex_jump_nodelay_i_2_n_0;
  wire ex_jump_nodelay_reg_n_0;
  wire ex_jump_q;
  wire ex_load_alu_carry_reg_n_0;
  wire ex_load_shift_carry;
  wire ex_load_shift_carry0;
  wire ex_load_store_instr_s;
  wire ex_mbar_decode;
  (* RTL_KEEP = "true" *) wire ex_mbar_decode_cmb;
  wire ex_mbar_is_sleep;
  (* RTL_KEEP = "true" *) wire ex_mbar_is_sleep_cmb;
  wire ex_mbar_sleep;
  wire ex_mbar_sleep_i_1_n_0;
  wire ex_mbar_stall_no_sleep_1;
  wire ex_mbar_stall_no_sleep_10;
  wire ex_mbar_stall_no_sleep__0;
  wire ex_mfsmsr_i;
  wire ex_move_to_MSR_instr;
  wire ex_move_to_MSR_instr113_out;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire [0:5]ex_opcode;
  wire ex_read_imm_reg;
  wire ex_read_imm_reg_1;
  wire ex_read_imm_reg_i_1_n_0;
  wire ex_reservation;
  wire ex_reverse_mem_access;
  wire ex_sel_alu;
  wire ex_sel_alu_i0;
  wire ex_set_MSR_IE_instr;
  wire ex_set_bip;
  wire ex_set_bip_reg_n_0;
  wire [0:1]ex_shift_op;
  wire ex_sleep_i0;
  wire ex_sleep_i_i_1_n_0;
  wire ex_suspend_i_i_1_n_0;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire ex_valid;
  (* RTL_KEEP = "true" *) wire ex_valid_jump;
  wire ex_valid_keep;
  wire ex_write_dcache_instr;
  wire external_interrupt;
  wire flush_pipe;
  wire force12_out;
  wire force_Val10_out;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  (* RTL_KEEP = "true" *) wire if_fetch_without_full_or_jump;
  wire if_missed_fetch;
  wire [1:1]if_pre_buffer_addr;
  wire [0:4]if_sel_input;
  wire [15:0]\imm_reg_reg[0] ;
  wire [0:0]in;
  wire in0;
  wire jump_logic_I1_n_41;
  wire jump_logic_I1_n_42;
  wire jump_logic_I1_n_5;
  wire jump_logic_I1_n_7;
  wire keep_jump_taken_with_ds;
  wire lopt;
  wire lopt_1;
  wire \^lopt_10 ;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_28;
  wire lopt_30;
  wire lopt_31;
  wire lopt_32;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire \^lopt_4 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [161:0]\^mb_halted_1_reg ;
  wire mem_Exception_Taken;
  wire [2:0]mem_MSR;
  wire mem_PipeRun_carry_and_n_1;
  wire mem_PipeRun_carry_and_n_2;
  wire mem_Write_DCache;
  wire mem_Write_DCache_i_1_n_0;
  wire mem_Write_DCache_reg_0;
  wire mem_byte_access;
  wire mem_databus_access;
  wire \^mem_databus_write ;
  wire mem_delayslot_instr;
  wire mem_doublet_access;
  wire mem_exception_from_ex;
  wire [28:31]mem_exception_kind;
  wire mem_gpr_write;
  wire [0:4]mem_gpr_write_addr;
  wire mem_gpr_write_dbg;
  wire mem_is_multi_or_load_instr;
  wire mem_is_multi_or_load_instr0;
  wire mem_load_store_access;
  wire mem_load_store_access0;
  wire mem_read_imm_reg;
  wire mem_read_imm_reg_1;
  wire mem_sel_msr;
  wire mem_valid_i_2_n_0;
  wire mem_valid_instr;
  wire of_Interrupt;
  wire [1:0]of_MSR;
  wire of_PipeRun_carry_10;
  wire of_PipeRun_carry_2;
  wire of_PipeRun_carry_6;
  (* DIRECT_ENABLE *) wire of_PipeRun_for_ce;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire of_Take_Interrupt;
  wire of_Take_Interrupt_hold;
  wire of_branch_with_delayslot118_out;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire [0:5]of_instr;
  wire of_op1_sel_spr;
  wire [0:10]of_predecode;
  wire of_read_ex_write_op1_conflict_part2;
  wire of_read_ex_write_op2_conflict_part1;
  wire of_read_ex_write_op2_conflict_part2;
  wire of_read_ex_write_op3_conflict_part2;
  wire of_read_imm_reg_ii;
  wire of_read_mem_write_op1_conflict_part1;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire of_read_mem_write_op3_conflict_part1;
  wire of_set_MSR_IE_hold0;
  wire of_set_MSR_IE_hold_reg_n_0;
  wire of_valid;
  wire out;
  wire p_0_in126_in;
  wire p_193_in;
  wire p_1_in127_in;
  wire p_1_in3_in;
  wire p_222_in;
  wire p_225_in;
  wire p_236_in;
  wire p_237_in;
  wire p_242_in;
  wire p_29_in;
  wire p_2_in;
  wire p_44_out;
  wire p_4_out__0;
  wire read_register_MSR_1_reg;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire [23:0]swap_result;
  wire [0:7]swap_result_reg;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;
  wire [0:1]wakeup_i;
  wire wb_Halted;
  wire wb_MSR_Clear_IE;
  wire wb_byte_access;
  wire wb_doublet_access;
  wire wb_exception;
  wire wb_gpr_wr_dbg;
  wire wb_gpr_write_dbg0;
  wire wb_gpr_write_i;
  wire wb_gpr_write_i0;
  wire \wb_instr_reg[31]_0 ;
  wire [0:4]wb_new_esr_ess_rx;
  wire wb_pc_valid;
  wire wb_piperun;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire wb_reset;
  wire wb_valid_reg_0;
  wire NLW_PC_Module_I_CI_UNCONNECTED;
  wire \NLW_Use_MuxCy[10].OF_Piperun_Stage_of_PipeRun_carry_1_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_ex_Write_ICache_i_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_ex_Write_ICache_i_cmb_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_of_PipeRun_carry_1_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_of_pause_UNCONNECTED ;
  wire [0:0]\NLW_Use_MuxCy[1].OF_Piperun_Stage_E_UNCONNECTED ;
  wire \NLW_Use_MuxCy[2].OF_Piperun_Stage_lopt_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[2].OF_Piperun_Stage_of_PipeRun_carry_9_UNCONNECTED ;
  wire \NLW_Use_MuxCy[3].OF_Piperun_Stage_of_PipeRun_carry_9_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ;
  wire [0:0]\NLW_Use_MuxCy[4].OF_Piperun_Stage_E_UNCONNECTED ;
  wire \NLW_Use_MuxCy[5].OF_Piperun_Stage_A_UNCONNECTED ;
  wire \NLW_Use_MuxCy[5].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ;
  wire \NLW_Use_MuxCy[6].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[6].OF_Piperun_Stage_lopt_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[6].OF_Piperun_Stage_of_PipeRun_carry_5_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_ex_is_multi_or_load_instr_reg_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_5_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_mem_is_multi_or_load_instr_reg_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ;
  wire \NLW_Use_MuxCy[9].OF_Piperun_Stage_ex_is_multi_or_load_instr_reg_UNCONNECTED ;
  wire \NLW_Use_MuxCy[9].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Interrupt_Brk_combo_reg_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_BTR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EAR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EDR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_ESR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_FSR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_PVR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_SHR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_SLR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Take_Intr_or_Exc_reg_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_valid_UNCONNECTED ;
  wire [1:0]\NLW_Using_FPGA_2.ex_is_load_instr_Inst_Performance_Debug_Control.ex_dbg_pc_hit_i_reg_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA_2.ex_is_load_instr_Inst_Read_Strobe_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_Performance_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry0_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry1_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_lopt_UNCONNECTED ;
  wire NLW_if_pc_incr_carry_and_0_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_0_lopt_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_0_lopt_3_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_CI_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_if_fetch_for_timing_optimization1_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_lopt_UNCONNECTED;
  wire NLW_jump_logic_I1_ex_op1_zero_UNCONNECTED;
  wire NLW_jump_logic_I1_mem_jump_taken0_UNCONNECTED;
  wire NLW_mem_PipeRun_carry_and_mem_wait_on_ready_N_UNCONNECTED;
  wire NLW_mem_wait_on_ready_N_carry_or_lopt_UNCONNECTED;
  wire NLW_mem_wait_on_ready_N_carry_or_mem_databus_ready_UNCONNECTED;
  wire NLW_mem_wait_on_ready_N_carry_or_mem_wait_on_ready_N_UNCONNECTED;

  assign I1 = \^mb_halted_1_reg [4];
  assign lopt_10 = lopt_18;
  assign lopt_11 = lopt_19;
  assign lopt_14 = lopt_6;
  assign lopt_17 = lopt_9;
  assign lopt_4 = lopt_12;
  assign lopt_5 = lopt_13;
  assign lopt_7 = lopt_15;
  assign lopt_8 = lopt_16;
  assign mb_halted_1_reg[160:159] = \^mb_halted_1_reg [160:159];
  assign mb_halted_1_reg[141:129] = \^mb_halted_1_reg [141:129];
  assign mb_halted_1_reg[126:95] = \^mb_halted_1_reg [126:95];
  assign mb_halted_1_reg[93:61] = \^mb_halted_1_reg [93:61];
  assign mb_halted_1_reg[27:4] = \^mb_halted_1_reg [27:4];
  assign mb_halted_1_reg[0] = \^mb_halted_1_reg [0];
  assign reset_bool_for_rst = sync_reset;
  assign use_Reg_Neg_S_reg = of_PipeRun_for_ce;
  FDRE #(
    .INIT(1'b0)) 
    Dbg_Clean_Stop_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(Dbg_Clean_Stop0),
        .Q(dbg_clean_stop),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_ALU_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_97),
        .Q(\MEM_DataBus_Addr_reg[9]_0 [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_ALU_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_98),
        .Q(\MEM_DataBus_Addr_reg[9]_0 [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_CMP_Op_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_185),
        .Q(ex_cmp_op),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_SWAP_BYTE_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(p_2_in),
        .Q(ex_swap_byte_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_SWAP_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_170),
        .Q(ex_swap_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Sext_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_177),
        .Q(\Using_FPGA.Native_7 [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Sext_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_178),
        .Q(\Using_FPGA.Native_7 [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Shift_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_imm_data[9]),
        .Q(ex_shift_op[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Shift_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_imm_data[10]),
        .Q(ex_shift_op[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_Unsigned_Op_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_186),
        .Q(ex_unsigned_op),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_Use_Carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_187),
        .Q(ex_use_carry),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    IFetch_INST_0_i_1
       (.I0(ex_mbar_stall_no_sleep__0),
        .I1(ex_mbar_sleep),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(wb_Halted),
        .I4(\Performance_Debug_Control.dbg_state_nohalt_reg ),
        .I5(reset_bool_for_rst),
        .O(if_fetch_without_full_or_jump));
  LUT5 #(
    .INIT(32'h54000000)) 
    IFetch_INST_0_i_2
       (.I0(ex_jump_hold),
        .I1(ex_mbar_stall_no_sleep_1),
        .I2(ex_first_cycle),
        .I3(ex_mbar_decode),
        .I4(mem_Write_DCache_reg_0),
        .O(ex_mbar_stall_no_sleep__0));
  LUT6 #(
    .INIT(64'hFFFFFFFFAEAAAAAA)) 
    \LOCKSTEP_Master_Out[5]_INST_0 
       (.I0(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I1(\^mb_halted_1_reg [4]),
        .I2(\^mb_halted_1_reg [3]),
        .I3(\^mb_halted_1_reg [2]),
        .I4(wb_exception),
        .I5(\Performance_Debug_Control.dbg_state_nohalt_reg ),
        .O(\^LOCKSTEP_Master_Out [1]));
  LUT5 #(
    .INIT(32'hAAEAAAAA)) 
    \LOCKSTEP_Master_Out[7]_INST_0 
       (.I0(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I1(wb_exception),
        .I2(\^mb_halted_1_reg [2]),
        .I3(\^mb_halted_1_reg [3]),
        .I4(\^mb_halted_1_reg [4]),
        .O(\^LOCKSTEP_Master_Out [0]));
  FDRE #(
    .INIT(1'b0)) 
    MEM_DataBus_Access_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ),
        .Q(mem_databus_access),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [46]),
        .Q(\^mb_halted_1_reg [92]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[10] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [36]),
        .Q(\^mb_halted_1_reg [82]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[11] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [35]),
        .Q(\^mb_halted_1_reg [81]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[12] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [34]),
        .Q(\^mb_halted_1_reg [80]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[13] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [33]),
        .Q(\^mb_halted_1_reg [79]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[14] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [32]),
        .Q(\^mb_halted_1_reg [78]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[15] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [31]),
        .Q(\^mb_halted_1_reg [77]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[16] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [30]),
        .Q(\^mb_halted_1_reg [76]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[17] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [29]),
        .Q(\^mb_halted_1_reg [75]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[18] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [28]),
        .Q(\^mb_halted_1_reg [74]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[19] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [27]),
        .Q(\^mb_halted_1_reg [73]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [45]),
        .Q(\^mb_halted_1_reg [91]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[20] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [26]),
        .Q(\^mb_halted_1_reg [72]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[21] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [25]),
        .Q(\^mb_halted_1_reg [71]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[22] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [24]),
        .Q(\^mb_halted_1_reg [70]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[23] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [23]),
        .Q(\^mb_halted_1_reg [69]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[24] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [22]),
        .Q(\^mb_halted_1_reg [68]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[25] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [21]),
        .Q(\^mb_halted_1_reg [67]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[26] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [20]),
        .Q(\^mb_halted_1_reg [66]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[27] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [19]),
        .Q(\^mb_halted_1_reg [65]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[28] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [18]),
        .Q(\^mb_halted_1_reg [64]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[29] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [17]),
        .Q(\^mb_halted_1_reg [63]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [44]),
        .Q(\^mb_halted_1_reg [90]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[30] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_databus_addr[1]),
        .Q(\^mb_halted_1_reg [62]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[31] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_databus_addr[0]),
        .Q(\^mb_halted_1_reg [61]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [43]),
        .Q(\^mb_halted_1_reg [89]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [42]),
        .Q(\^mb_halted_1_reg [88]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[5] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [41]),
        .Q(\^mb_halted_1_reg [87]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[6] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [40]),
        .Q(\^mb_halted_1_reg [86]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[7] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [39]),
        .Q(\^mb_halted_1_reg [85]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[8] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [38]),
        .Q(\^mb_halted_1_reg [84]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[9] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\EX_Op2_reg[0]_0 [37]),
        .Q(\^mb_halted_1_reg [83]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    MEM_DataBus_Write_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\^mb_halted_1_reg [93]),
        .Q(\^mem_databus_write ),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    MEM_Sel_MEM_Res_I_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\Using_FPGA_2.ex_is_load_instr_Inst_n_3 ),
        .Q(MEM_Sel_MEM_Res),
        .S(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h00000F22)) 
    M_AXI_DP_ARVALID_i_i_1
       (.I0(\Use_DBUS.DAXI_Interface_I1/new_request ),
        .I1(\^mem_databus_write ),
        .I2(M_AXI_DP_ARREADY),
        .I3(M_AXI_DP_AWVALID_i_reg_0[15]),
        .I4(reset_bool_for_rst),
        .O(M_AXI_DP_ARVALID_i_reg));
  LUT5 #(
    .INIT(32'h00000F88)) 
    M_AXI_DP_AWVALID_i_i_1
       (.I0(\Use_DBUS.DAXI_Interface_I1/new_request ),
        .I1(\^mem_databus_write ),
        .I2(M_AXI_DP_AWREADY),
        .I3(M_AXI_DP_AWVALID_i_reg_0[17]),
        .I4(reset_bool_for_rst),
        .O(M_AXI_DP_AWVALID_i_reg));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h02)) 
    M_AXI_DP_AWVALID_i_i_2
       (.I0(mem_databus_access),
        .I1(DReady),
        .I2(active_access_d1),
        .O(\Use_DBUS.DAXI_Interface_I1/new_request ));
  LUT5 #(
    .INIT(32'h00000F88)) 
    M_AXI_DP_WVALID_i_i_1
       (.I0(\Use_DBUS.DAXI_Interface_I1/new_request ),
        .I1(\^mem_databus_write ),
        .I2(M_AXI_DP_WREADY),
        .I3(M_AXI_DP_AWVALID_i_reg_0[16]),
        .I4(reset_bool_for_rst),
        .O(M_AXI_DP_WVALID_i_reg));
  ublaze_sopc_microblaze_0_0__PC_Module_gti PC_Module_I
       (.CI(NLW_PC_Module_I_CI_UNCONNECTED),
        .Clk(Clk),
        .D(D),
        .E(\Use_MuxCy[3].OF_Piperun_Stage_n_2 ),
        .O(O87_out),
        .O56_out(O56_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (PreFetch_Buffer_I1_n_3),
        .Q({p_1_in3_in,PC_Module_I_n_34}),
        .\Using_FPGA.Native (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .if_fetch_in_progress_reg(IF_PC_Write),
        .\if_pc_reg[0]_0 (\^mb_halted_1_reg [158:127]),
        .\if_pc_reg[10]_0 (O49_out),
        .\if_pc_reg[11]_0 (O51_out),
        .\if_pc_reg[12]_0 (O53_out),
        .\if_pc_reg[13]_0 (O55_out),
        .\if_pc_reg[14]_0 (O57_out),
        .\if_pc_reg[15]_0 (O59_out),
        .\if_pc_reg[16]_0 (O61_out),
        .\if_pc_reg[17]_0 (O63_out),
        .\if_pc_reg[18]_0 (O65_out),
        .\if_pc_reg[19]_0 (O67_out),
        .\if_pc_reg[1]_0 (O31_out),
        .\if_pc_reg[20]_0 (O69_out),
        .\if_pc_reg[21]_0 (O71_out),
        .\if_pc_reg[22]_0 (O73_out),
        .\if_pc_reg[23]_0 (O75_out),
        .\if_pc_reg[24]_0 (O77_out),
        .\if_pc_reg[25]_0 (O79_out),
        .\if_pc_reg[26]_0 (O81_out),
        .\if_pc_reg[27]_0 (O83_out),
        .\if_pc_reg[28]_0 (O85_out),
        .\if_pc_reg[2]_0 (O33_out),
        .\if_pc_reg[3]_0 (O35_out),
        .\if_pc_reg[4]_0 (O37_out),
        .\if_pc_reg[5]_0 (O39_out),
        .\if_pc_reg[6]_0 (O41_out),
        .\if_pc_reg[7]_0 (O43_out),
        .\if_pc_reg[8]_0 (O45_out),
        .\if_pc_reg[9]_0 (O47_out),
        .if_pre_buffer_addr(if_pre_buffer_addr),
        .if_sel_input({if_sel_input[0],if_sel_input[4]}),
        .lopt(\^lopt_7 ),
        .lopt_1(\^lopt_8 ),
        .lopt_2(\^lopt_9 ),
        .lopt_3(\^lopt_10 ),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'h2000)) 
    \Performance_Debug_Control.dbg_brki_hit_i_1 
       (.I0(\^mb_halted_1_reg [4]),
        .I1(\^mb_halted_1_reg [3]),
        .I2(\^mb_halted_1_reg [2]),
        .I3(wb_exception),
        .O(wb_Halted));
  LUT5 #(
    .INIT(32'hFFFF0800)) 
    \Performance_Debug_Control.dbg_freeze_nohalt_i_2 
       (.I0(wb_exception),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\^mb_halted_1_reg [3]),
        .I3(\^mb_halted_1_reg [4]),
        .I4(dbg_halt_reset_mode_reg),
        .O(p_4_out__0));
  LUT5 #(
    .INIT(32'hFFFF0800)) 
    \Performance_Debug_Control.dbg_stop_i_i_3 
       (.I0(wb_exception),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\^mb_halted_1_reg [3]),
        .I3(\^mb_halted_1_reg [4]),
        .I4(reset_bool_for_rst),
        .O(dbg_stop_i));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3 
       (.I0(wb_Halted),
        .I1(dbg_halt_reset_mode_reg),
        .I2(reset_bool_for_rst),
        .O(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ));
  ublaze_sopc_microblaze_0_0__PreFetch_Buffer_gti PreFetch_Buffer_I1
       (.Clk(Clk),
        .D({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .D233_out(D233_out),
        .Dbg_Clean_Stop0(Dbg_Clean_Stop0),
        .E(\Using_FPGA.Native_0 ),
        .\EX_ALU_Op_reg[0] ({PreFetch_Buffer_I1_n_97,PreFetch_Buffer_I1_n_98}),
        .\EX_Branch_CMP_Op1_reg[0] (\EX_Branch_CMP_Op1_reg[0] ),
        .EX_CMP_Op_reg(PreFetch_Buffer_I1_n_185),
        .EX_Is_Div_Instr(EX_Is_Div_Instr),
        .\EX_Op1_reg[10] (\EX_Op1_reg[10] ),
        .\EX_Op1_reg[11] (\EX_Op1_reg[11] ),
        .\EX_Op1_reg[12] (\EX_Op1_reg[12] ),
        .\EX_Op1_reg[13] (\EX_Op1_reg[13] ),
        .\EX_Op1_reg[14] (\EX_Op1_reg[14] ),
        .\EX_Op1_reg[15] (\EX_Op1_reg[15] ),
        .\EX_Op1_reg[16] (\EX_Op1_reg[16] ),
        .\EX_Op1_reg[17] (\EX_Op1_reg[17] ),
        .\EX_Op1_reg[18] (\EX_Op1_reg[18] ),
        .\EX_Op1_reg[19] (\EX_Op1_reg[19] ),
        .\EX_Op1_reg[1] (\EX_Op1_reg[1] ),
        .\EX_Op1_reg[20] (\EX_Op1_reg[20] ),
        .\EX_Op1_reg[21] (\EX_Op1_reg[21] ),
        .\EX_Op1_reg[22] (\EX_Op1_reg[22] ),
        .\EX_Op1_reg[23] (\EX_Op1_reg[23] ),
        .\EX_Op1_reg[24] (\EX_Op1_reg[24] ),
        .\EX_Op1_reg[25] (\EX_Op1_reg[25] ),
        .\EX_Op1_reg[26] (\EX_Op1_reg[26] ),
        .\EX_Op1_reg[27] (\EX_Op1_reg[27] ),
        .\EX_Op1_reg[28] (\EX_Op1_reg[28] ),
        .\EX_Op1_reg[29] (\EX_Op1_reg[29] ),
        .\EX_Op1_reg[2] (\EX_Op1_reg[2] ),
        .\EX_Op1_reg[30] (\EX_Op1_reg[30] ),
        .\EX_Op1_reg[31] (\EX_Op1_reg[31] ),
        .\EX_Op1_reg[3] (\EX_Op1_reg[3] ),
        .\EX_Op1_reg[4] (\EX_Op1_reg[4] ),
        .\EX_Op1_reg[5] (\EX_Op1_reg[5] ),
        .\EX_Op1_reg[6] (\EX_Op1_reg[6] ),
        .\EX_Op1_reg[7] (\EX_Op1_reg[7] ),
        .\EX_Op1_reg[8] (\EX_Op1_reg[8] ),
        .\EX_Op1_reg[9] (\EX_Op1_reg[9] ),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] ),
        .\EX_Op3_reg[0] (\EX_Op3_reg[0] ),
        .EX_SWAP_Instr_reg(PreFetch_Buffer_I1_n_170),
        .EX_SWAP_Instr_reg_0(EX_Fwd[1]),
        .EX_SWAP_Instr_reg_1(EX_Fwd[2]),
        .EX_SWAP_Instr_reg_10(EX_Fwd[11]),
        .EX_SWAP_Instr_reg_11(EX_Fwd[12]),
        .EX_SWAP_Instr_reg_12(EX_Fwd[13]),
        .EX_SWAP_Instr_reg_13(EX_Fwd[14]),
        .EX_SWAP_Instr_reg_14(EX_Fwd[15]),
        .EX_SWAP_Instr_reg_15(EX_Fwd[16]),
        .EX_SWAP_Instr_reg_16(EX_Fwd[17]),
        .EX_SWAP_Instr_reg_17(EX_Fwd[18]),
        .EX_SWAP_Instr_reg_18(EX_Fwd[19]),
        .EX_SWAP_Instr_reg_19(EX_Fwd[20]),
        .EX_SWAP_Instr_reg_2(EX_Fwd[3]),
        .EX_SWAP_Instr_reg_20(EX_Fwd[21]),
        .EX_SWAP_Instr_reg_21(EX_Fwd[22]),
        .EX_SWAP_Instr_reg_22(EX_Fwd[23]),
        .EX_SWAP_Instr_reg_23(EX_Fwd[24]),
        .EX_SWAP_Instr_reg_24(EX_Fwd[25]),
        .EX_SWAP_Instr_reg_25(EX_Fwd[26]),
        .EX_SWAP_Instr_reg_26(EX_Fwd[27]),
        .EX_SWAP_Instr_reg_27(EX_Fwd[28]),
        .EX_SWAP_Instr_reg_28(EX_Fwd[29]),
        .EX_SWAP_Instr_reg_29(EX_Fwd[30]),
        .EX_SWAP_Instr_reg_3(EX_Fwd[4]),
        .EX_SWAP_Instr_reg_30(EX_Fwd[31]),
        .EX_SWAP_Instr_reg_4(EX_Fwd[5]),
        .EX_SWAP_Instr_reg_5(EX_Fwd[6]),
        .EX_SWAP_Instr_reg_6(EX_Fwd[7]),
        .EX_SWAP_Instr_reg_7(EX_Fwd[8]),
        .EX_SWAP_Instr_reg_8(EX_Fwd[9]),
        .EX_SWAP_Instr_reg_9(EX_Fwd[10]),
        .\EX_Sext_Op_reg[0] ({PreFetch_Buffer_I1_n_177,PreFetch_Buffer_I1_n_178}),
        .EX_Unsigned_Op_reg(PreFetch_Buffer_I1_n_186),
        .EX_Use_Carry_reg(PreFetch_Buffer_I1_n_187),
        .GPR_Op1(GPR_Op1),
        .GPR_Op2(GPR_Op2),
        .GPR_Op3(GPR_Op3),
        .I0(I0),
        .I139_out(I139_out),
        .I1_0(I1_0),
        .I4(I4),
        .I5(I5),
        .IB_Ready(IB_Ready),
        .IFetch(\^mb_halted_1_reg [160]),
        .IReady(IReady),
        .I_AS(\^mb_halted_1_reg [159]),
        .LOCKSTEP_Master_Out(\^LOCKSTEP_Master_Out [0]),
        .MEM_Fwd(MEM_Fwd),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .\Performance_Debug_Control.dbg_state_nohalt_reg (\^mb_halted_1_reg [161]),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (ex_Exception_Taken),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .\Performance_Debug_Control.ex_brki_hit_reg (\Performance_Debug_Control.ex_brki_hit_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ),
        .Q(\^mb_halted_1_reg [4:2]),
        .\Serial_Dbg_Intf.control_reg_reg[8] (Q),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (\Serial_Dbg_Intf.force_stop_cmd_i_reg [2]),
        .\Using_FPGA.Native ({if_sel_input[0],if_sel_input[4]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (PreFetch_Buffer_I1_n_3),
        .\Using_FPGA.Native_10 (D),
        .\Using_FPGA.Native_2 (PreFetch_Buffer_I1_n_174),
        .\Using_FPGA.Native_3 (PreFetch_Buffer_I1_n_179),
        .\Using_FPGA.Native_4 (PreFetch_Buffer_I1_n_180),
        .\Using_FPGA.Native_5 (PreFetch_Buffer_I1_n_192),
        .\Using_FPGA.Native_6 (PreFetch_Buffer_I1_n_196),
        .\Using_FPGA.Native_7 (PreFetch_Buffer_I1_n_197),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_13 ),
        .WB_Byte_Access_reg(\EX_Op2_reg[0]_0 [15:0]),
        .WB_Doublet_Access_reg(\^mb_halted_1_reg [21]),
        .WB_Doublet_Access_reg_0(\^mb_halted_1_reg [20]),
        .WB_Doublet_Access_reg_1(\^mb_halted_1_reg [19]),
        .WB_Doublet_Access_reg_10(\^mb_halted_1_reg [10]),
        .WB_Doublet_Access_reg_11(\^mb_halted_1_reg [9]),
        .WB_Doublet_Access_reg_12(\^mb_halted_1_reg [8]),
        .WB_Doublet_Access_reg_13(\^mb_halted_1_reg [7]),
        .WB_Doublet_Access_reg_14(\^mb_halted_1_reg [6]),
        .WB_Doublet_Access_reg_2(\^mb_halted_1_reg [18]),
        .WB_Doublet_Access_reg_3(\^mb_halted_1_reg [17]),
        .WB_Doublet_Access_reg_4(\^mb_halted_1_reg [16]),
        .WB_Doublet_Access_reg_5(\^mb_halted_1_reg [15]),
        .WB_Doublet_Access_reg_6(\^mb_halted_1_reg [14]),
        .WB_Doublet_Access_reg_7(\^mb_halted_1_reg [13]),
        .WB_Doublet_Access_reg_8(\^mb_halted_1_reg [12]),
        .WB_Doublet_Access_reg_9(\^mb_halted_1_reg [11]),
        .ex_MSR(ex_MSR),
        .ex_alu_sel_logic_i_reg(PreFetch_Buffer_I1_n_198),
        .ex_atomic_Instruction_Pair0(ex_atomic_Instruction_Pair0),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_enable_alu_i_reg(PreFetch_Buffer_I1_n_99),
        .ex_enable_sext_shift_i0(ex_enable_sext_shift_i0),
        .\ex_gpr_write_addr_reg[0] ({\ex_gpr_write_addr_reg_n_0_[0] ,I2}),
        .\ex_gpr_write_addr_reg[2] (of_gpr_op3_rd_addr[2]),
        .\ex_gpr_write_addr_reg[3] (of_gpr_op3_rd_addr[3]),
        .\ex_gpr_write_addr_reg[4] (of_gpr_op3_rd_addr[4]),
        .\ex_gpr_write_addr_reg[4]_0 (\ex_gpr_write_addr_reg_n_0_[4] ),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_dbg_reg(PreFetch_Buffer_I1_n_184),
        .ex_gpr_write_reg(PreFetch_Buffer_I1_n_49),
        .ex_gpr_write_reg_0(ex_gpr_write_reg_n_0),
        .\ex_instr_reg[11] ({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4],of_imm_data[0],of_imm_data[1],of_imm_data[2],of_imm_data[3],of_imm_data[4],of_imm_data[5],of_imm_data[6],of_imm_data[7],of_imm_data[8],of_imm_data[9],of_imm_data[10],of_imm_data[11],of_imm_data[12],of_imm_data[13],of_imm_data[14],of_imm_data[15]}),
        .ex_is_div_instr_I_reg(PreFetch_Buffer_I1_n_51),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .ex_is_multi_or_load_instr0(ex_is_multi_or_load_instr0),
        .ex_jump(ex_jump),
        .ex_jump_nodelay_reg(ex_jump_nodelay_reg_n_0),
        .ex_jump_q(ex_jump_q),
        .ex_jump_q_reg(PreFetch_Buffer_I1_n_193),
        .ex_load_alu_carry_reg(PreFetch_Buffer_I1_n_188),
        .ex_load_shift_carry0(ex_load_shift_carry0),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_decode_cmb(ex_mbar_decode_cmb),
        .ex_mbar_is_sleep(ex_mbar_is_sleep),
        .ex_mbar_is_sleep_cmb(ex_mbar_is_sleep_cmb),
        .ex_move_to_MSR_instr113_out(ex_move_to_MSR_instr113_out),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .ex_op1_cmp_eq_reg(PreFetch_Buffer_I1_n_57),
        .ex_sel_alu_i0(ex_sel_alu_i0),
        .ex_sel_alu_i_reg(EX_Fwd[0]),
        .ex_set_bip(ex_set_bip),
        .ex_valid(ex_valid),
        .ex_valid_jump_reg(PreFetch_Buffer_I1_n_189),
        .ex_valid_jump_reg_0(ex_valid_jump),
        .ex_valid_keep(ex_valid_keep),
        .ex_valid_keep_reg(PreFetch_Buffer_I1_n_191),
        .ex_valid_reg(PreFetch_Buffer_I1_n_190),
        .force12_out(force12_out),
        .force_Val10_out(force_Val10_out),
        .force_Val2_N_reg(PreFetch_Buffer_I1_n_60),
        .if_fetch_for_timing_optimization1(if_fetch_for_timing_optimization1),
        .if_fetch_in_progress(if_fetch_in_progress),
        .if_fetch_in_progress_reg(PreFetch_Buffer_I1_n_183),
        .if_missed_fetch(if_missed_fetch),
        .\if_pc_reg[0] (IF_PC_Write),
        .if_pre_buffer_addr(if_pre_buffer_addr),
        .\imm_reg_reg[0] (\imm_reg_reg[0] ),
        .\imm_reg_reg[15] (E),
        .in({Y[0],Y[1],Y[2],Y[3],Y[4],Y[5],Y[6],Y[7],Y[8],Y[9],Y[10],Y[21],Y[22],Y[23],Y[24],Y[25],Y[26],Y[27],Y[28],Y[29],Y[30],Y[31],in,Y[11],Y[12],Y[13],Y[14],Y[15],Y[16],Y[17],Y[18],Y[19],Y[20]}),
        .in0(if_fetch_without_full_or_jump),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_exception_from_ex_reg(mem_Exception_Taken),
        .mem_gpr_write(mem_gpr_write),
        .\mem_gpr_write_addr_reg[0] ({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2],mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .mem_valid_instr(mem_valid_instr),
        .of_Sel_SPR_MSR1(of_Sel_SPR_MSR1),
        .of_Sel_SPR_MSR88_out(of_Sel_SPR_MSR88_out),
        .of_Take_Interrupt(of_Take_Interrupt),
        .of_branch_with_delayslot118_out(of_branch_with_delayslot118_out),
        .of_instr({of_instr[0],of_instr[1],of_instr[2],of_instr[3],of_instr[4],of_instr[5]}),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg(of_PipeRun_for_ce),
        .of_predecode(of_predecode),
        .of_read_ex_write_op2_conflict_part1(of_read_ex_write_op2_conflict_part1),
        .of_read_ex_write_op2_conflict_part2(of_read_ex_write_op2_conflict_part2),
        .of_read_imm_reg_ii(of_read_imm_reg_ii),
        .of_read_imm_reg_ii_reg(PreFetch_Buffer_I1_n_50),
        .of_read_imm_reg_ii_reg_0(ex_read_imm_reg_i_1_n_0),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2),
        .of_valid(of_valid),
        .out(if_fetch_without_full_or_jump),
        .p_222_in(p_222_in),
        .p_225_in(p_225_in),
        .p_29_in(p_29_in),
        .p_2_in(p_2_in),
        .sync_reset(reset_bool_for_rst),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out),
        .use_Reg_Neg_S_reg(PreFetch_Buffer_I1_n_103),
        .use_Reg_Neg_S_reg_0(PreFetch_Buffer_I1_n_104),
        .use_Reg_Neg_S_reg_1(PreFetch_Buffer_I1_n_194),
        .wb_exception(wb_exception),
        .\wb_exception_kind_i_reg[28] (wb_Halted),
        .\wb_gpr_write_addr_reg[0] ({wb_new_esr_ess_rx[0],wb_new_esr_ess_rx[1],wb_new_esr_ess_rx[2],wb_new_esr_ess_rx[3],wb_new_esr_ess_rx[4]}),
        .wb_gpr_write_i(wb_gpr_write_i),
        .wb_reset(wb_reset),
        .wb_valid_reg(wb_valid_reg_0));
  LUT2 #(
    .INIT(4'hE)) 
    Sleep_INST_0
       (.I0(\^Sleep_Decode ),
        .I1(Sleep_Out),
        .O(Sleep));
  LUT4 #(
    .INIT(16'hDF00)) 
    Trace_Exception_Taken_INST_0
       (.I0(\^mb_halted_1_reg [2]),
        .I1(\^mb_halted_1_reg [3]),
        .I2(\^mb_halted_1_reg [4]),
        .I3(wb_exception),
        .O(\^mb_halted_1_reg [5]));
  LUT5 #(
    .INIT(32'hAAEAAAAA)) 
    Trace_MB_Halted_INST_0
       (.I0(\Performance_Debug_Control.dbg_state_nohalt_reg ),
        .I1(wb_exception),
        .I2(\^mb_halted_1_reg [2]),
        .I3(\^mb_halted_1_reg [3]),
        .I4(\^mb_halted_1_reg [4]),
        .O(\^mb_halted_1_reg [161]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[0]_INST_0 
       (.I0(\Using_FPGA.Native_14 [15]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[24] ),
        .I5(\WB_MEM_Result_reg[0] [15]),
        .O(\^mb_halted_1_reg [21]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[10]_INST_0 
       (.I0(\Using_FPGA.Native_14 [5]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[18] ),
        .I5(\WB_MEM_Result_reg[0] [5]),
        .O(\^mb_halted_1_reg [11]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[11]_INST_0 
       (.I0(\Using_FPGA.Native_14 [4]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[19] ),
        .I5(\WB_MEM_Result_reg[0] [4]),
        .O(\^mb_halted_1_reg [10]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[12]_INST_0 
       (.I0(\Using_FPGA.Native_14 [3]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[20] ),
        .I5(\WB_MEM_Result_reg[0] [3]),
        .O(\^mb_halted_1_reg [9]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[13]_INST_0 
       (.I0(\Using_FPGA.Native_14 [2]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[21] ),
        .I5(\WB_MEM_Result_reg[0] [2]),
        .O(\^mb_halted_1_reg [8]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[14]_INST_0 
       (.I0(\Using_FPGA.Native_14 [1]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[22] ),
        .I5(\WB_MEM_Result_reg[0] [1]),
        .O(\^mb_halted_1_reg [7]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[15]_INST_0 
       (.I0(\Using_FPGA.Native_14 [0]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[23] ),
        .I5(\WB_MEM_Result_reg[0] [0]),
        .O(\^mb_halted_1_reg [6]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[1]_INST_0 
       (.I0(\Using_FPGA.Native_14 [14]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[25] ),
        .I5(\WB_MEM_Result_reg[0] [14]),
        .O(\^mb_halted_1_reg [20]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[2]_INST_0 
       (.I0(\Using_FPGA.Native_14 [13]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[26] ),
        .I5(\WB_MEM_Result_reg[0] [13]),
        .O(\^mb_halted_1_reg [19]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[3]_INST_0 
       (.I0(\Using_FPGA.Native_14 [12]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[27] ),
        .I5(\WB_MEM_Result_reg[0] [12]),
        .O(\^mb_halted_1_reg [18]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[4]_INST_0 
       (.I0(\Using_FPGA.Native_14 [11]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[28] ),
        .I5(\WB_MEM_Result_reg[0] [11]),
        .O(\^mb_halted_1_reg [17]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[5]_INST_0 
       (.I0(\Using_FPGA.Native_14 [10]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[29] ),
        .I5(\WB_MEM_Result_reg[0] [10]),
        .O(\^mb_halted_1_reg [16]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[6]_INST_0 
       (.I0(\Using_FPGA.Native_14 [9]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[30] ),
        .I5(\WB_MEM_Result_reg[0] [9]),
        .O(\^mb_halted_1_reg [15]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[7]_INST_0 
       (.I0(\Using_FPGA.Native_14 [8]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[31] ),
        .I5(\WB_MEM_Result_reg[0] [8]),
        .O(\^mb_halted_1_reg [14]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[8]_INST_0 
       (.I0(\Using_FPGA.Native_14 [7]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[16] ),
        .I5(\WB_MEM_Result_reg[0] [7]),
        .O(\^mb_halted_1_reg [13]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[9]_INST_0 
       (.I0(\Using_FPGA.Native_14 [6]),
        .I1(\^mb_halted_1_reg [5]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\Use_DLMB.wb_dlmb_valid_read_data_reg[17] ),
        .I5(\WB_MEM_Result_reg[0] [6]),
        .O(\^mb_halted_1_reg [12]));
  LUT5 #(
    .INIT(32'hAA2AAAAA)) 
    \Trace_Reg_Addr[0]_INST_0 
       (.I0(wb_new_esr_ess_rx[0]),
        .I1(wb_exception),
        .I2(\^mb_halted_1_reg [3]),
        .I3(\^mb_halted_1_reg [2]),
        .I4(\^mb_halted_1_reg [4]),
        .O(\^mb_halted_1_reg [26]));
  LUT5 #(
    .INIT(32'hFFFF0800)) 
    \Trace_Reg_Addr[1]_INST_0 
       (.I0(wb_exception),
        .I1(\^mb_halted_1_reg [3]),
        .I2(\^mb_halted_1_reg [2]),
        .I3(\^mb_halted_1_reg [4]),
        .I4(wb_new_esr_ess_rx[1]),
        .O(\^mb_halted_1_reg [25]));
  LUT5 #(
    .INIT(32'hFFFF0800)) 
    \Trace_Reg_Addr[2]_INST_0 
       (.I0(wb_exception),
        .I1(\^mb_halted_1_reg [3]),
        .I2(\^mb_halted_1_reg [2]),
        .I3(\^mb_halted_1_reg [4]),
        .I4(wb_new_esr_ess_rx[2]),
        .O(\^mb_halted_1_reg [24]));
  LUT5 #(
    .INIT(32'hFFFF0800)) 
    \Trace_Reg_Addr[3]_INST_0 
       (.I0(wb_exception),
        .I1(\^mb_halted_1_reg [3]),
        .I2(\^mb_halted_1_reg [2]),
        .I3(\^mb_halted_1_reg [4]),
        .I4(wb_new_esr_ess_rx[3]),
        .O(\^mb_halted_1_reg [23]));
  LUT5 #(
    .INIT(32'hAA2AAAAA)) 
    \Trace_Reg_Addr[4]_INST_0 
       (.I0(wb_new_esr_ess_rx[4]),
        .I1(wb_exception),
        .I2(\^mb_halted_1_reg [3]),
        .I3(\^mb_halted_1_reg [2]),
        .I4(\^mb_halted_1_reg [4]),
        .O(\^mb_halted_1_reg [22]));
  LUT5 #(
    .INIT(32'hFFFFFF20)) 
    Trace_Reg_Write_INST_0
       (.I0(wb_valid_reg_0),
        .I1(wb_exception),
        .I2(wb_gpr_write_i),
        .I3(wb_reset),
        .I4(wb_MSR_Clear_IE),
        .O(\^mb_halted_1_reg [27]));
  LUT4 #(
    .INIT(16'h2000)) 
    Trace_Reg_Write_INST_0_i_1
       (.I0(\^mb_halted_1_reg [4]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\^mb_halted_1_reg [3]),
        .I3(wb_exception),
        .O(wb_MSR_Clear_IE));
  ublaze_sopc_microblaze_0_0__carry_and \Use_MuxCy[10].OF_Piperun_Stage 
       (.lopt(lopt_33),
        .lopt_1(lopt_34),
        .lopt_2(lopt_35),
        .mem_is_multi_or_load_instr_reg(\Using_FPGA_4.of_read_mem_write_op3_conflict_INST2_n_0 ),
        .of_PipeRun_carry_1(\NLW_Use_MuxCy[10].OF_Piperun_Stage_of_PipeRun_carry_1_UNCONNECTED ),
        .of_PipeRun_carry_2(of_PipeRun_carry_2));
  ublaze_sopc_microblaze_0_0__carry_and_59 \Use_MuxCy[11].OF_Piperun_Stage 
       (.E(\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native (\Using_FPGA.Native_9 ),
        .ex_MSR_cmb2_out(\Data_Flow_I/msr_reg_i/ex_MSR_cmb2_out ),
        .ex_Take_Intr_or_Exc_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_2 ),
        .ex_Take_Intr_or_Exc_reg_0(ex_Take_Intr_or_Exc),
        .ex_Write_ICache_i(\NLW_Use_MuxCy[11].OF_Piperun_Stage_ex_Write_ICache_i_UNCONNECTED ),
        .ex_Write_ICache_i_cmb(\NLW_Use_MuxCy[11].OF_Piperun_Stage_ex_Write_ICache_i_cmb_UNCONNECTED ),
        .ex_jump(ex_jump),
        .ex_jump_nodelay_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_1 ),
        .ex_jump_nodelay_reg_0(ex_jump_nodelay_reg_n_0),
        .ex_write_dcache_instr(ex_write_dcache_instr),
        .if_missed_fetch_reg(ex_jump_nodelay_i_2_n_0),
        .in0(ex_Write_DCache_decode_cmb),
        .lopt(lopt_33),
        .lopt_1(lopt_34),
        .lopt_2(lopt_35),
        .of_MSR(of_MSR[0]),
        .of_PipeRun_carry_1(\NLW_Use_MuxCy[11].OF_Piperun_Stage_of_PipeRun_carry_1_UNCONNECTED ),
        .of_PipeRun_for_ce(of_PipeRun_for_ce),
        .of_Take_Interrupt(of_Take_Interrupt),
        .of_Take_Interrupt_hold(of_Take_Interrupt_hold),
        .of_Take_Interrupt_hold_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_3 ),
        .of_branch_with_delayslot118_out(of_branch_with_delayslot118_out),
        .of_pause(\NLW_Use_MuxCy[11].OF_Piperun_Stage_of_pause_UNCONNECTED ),
        .sync_reset(reset_bool_for_rst),
        .\wb_exception_kind_i_reg[28] (wb_MSR_Clear_IE));
  ublaze_sopc_microblaze_0_0__carry_and_60 \Use_MuxCy[1].OF_Piperun_Stage 
       (.E(\NLW_Use_MuxCy[1].OF_Piperun_Stage_E_UNCONNECTED [0]),
        .lopt(lopt_17),
        .lopt_1(lopt_18),
        .lopt_2(lopt_19),
        .of_PipeRun_carry_10(of_PipeRun_carry_10));
  ublaze_sopc_microblaze_0_0__carry_and_61 \Use_MuxCy[2].OF_Piperun_Stage 
       (.EX_MBAR_Stall__2(EX_MBAR_Stall__2),
        .\Using_FPGA.Native (jump_logic_I1_n_42),
        .ex_Take_Intr_or_Exc_reg(ex_Take_Intr_or_Exc),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .lopt(lopt_20),
        .lopt_1(lopt_21),
        .lopt_2(lopt_22),
        .lopt_3(\NLW_Use_MuxCy[2].OF_Piperun_Stage_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_24),
        .lopt_5(PreFetch_Buffer_I1_n_194),
        .lopt_6(lopt_25),
        .lopt_7(lopt_26),
        .lopt_8(A),
        .of_PipeRun_carry_10(of_PipeRun_carry_10),
        .of_PipeRun_carry_9(\NLW_Use_MuxCy[2].OF_Piperun_Stage_of_PipeRun_carry_9_UNCONNECTED ));
  ublaze_sopc_microblaze_0_0__carry_and_62 \Use_MuxCy[3].OF_Piperun_Stage 
       (.E(\Using_FPGA.Native_0 ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (ex_Exception_Taken),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 (\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .Q(\^mb_halted_1_reg [4:2]),
        .\Using_FPGA.Native (\Using_FPGA.Native_8 ),
        .ex_MSR(ex_MSR[0]),
        .ex_MSR_cmb2_out(\Data_Flow_I/msr_reg_i/ex_MSR_cmb2_out ),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg_n_0_[4] ),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_reg(ex_gpr_write_reg_n_0),
        .lopt(lopt_20),
        .lopt_1(lopt_21),
        .lopt_2(lopt_22),
        .mem_exception_from_ex_reg(mem_Exception_Taken),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_gpr_write_dbg_reg(\Use_MuxCy[3].OF_Piperun_Stage_n_6 ),
        .mem_gpr_write_reg(\Use_MuxCy[3].OF_Piperun_Stage_n_5 ),
        .\mem_pc_i_reg[0] (\Use_MuxCy[3].OF_Piperun_Stage_n_2 ),
        .of_PipeRun_carry_9(\NLW_Use_MuxCy[3].OF_Piperun_Stage_of_PipeRun_carry_9_UNCONNECTED ),
        .of_pause_reg(of_PipeRun_for_ce),
        .of_set_MSR_IE_hold_reg(\Use_MuxCy[3].OF_Piperun_Stage_n_1 ),
        .of_set_MSR_IE_hold_reg_0(of_set_MSR_IE_hold_reg_n_0),
        .p_193_in(p_193_in),
        .p_44_out(p_44_out),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .\wb_exception_kind_i_reg[28] (wb_MSR_Clear_IE));
  ublaze_sopc_microblaze_0_0__carry_and_63 \Use_MuxCy[4].OF_Piperun_Stage 
       (.E(\NLW_Use_MuxCy[4].OF_Piperun_Stage_E_UNCONNECTED [0]),
        .\Using_FPGA.Native (\NLW_Use_MuxCy[4].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[4].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_24),
        .of_PipeRun_carry_7(\NLW_Use_MuxCy[4].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ));
  ublaze_sopc_microblaze_0_0__carry_and_64 \Use_MuxCy[5].OF_Piperun_Stage 
       (.A(\NLW_Use_MuxCy[5].OF_Piperun_Stage_A_UNCONNECTED ),
        .lopt(lopt_25),
        .lopt_1(lopt_26),
        .of_PipeRun_carry_6(of_PipeRun_carry_6),
        .of_PipeRun_carry_7(\NLW_Use_MuxCy[5].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ));
  ublaze_sopc_microblaze_0_0__carry_and_65 \Use_MuxCy[6].OF_Piperun_Stage 
       (.lopt(\NLW_Use_MuxCy[6].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_28),
        .lopt_2(PreFetch_Buffer_I1_n_103),
        .lopt_3(\NLW_Use_MuxCy[6].OF_Piperun_Stage_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_30),
        .lopt_5(PreFetch_Buffer_I1_n_104),
        .lopt_6(lopt_31),
        .lopt_7(lopt_32),
        .lopt_8(\Using_FPGA_4.of_read_ex_write_op3_conflict_INST1_n_0 ),
        .mem_is_multi_or_load_instr_reg(\Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0 ),
        .of_PipeRun_carry_5(\NLW_Use_MuxCy[6].OF_Piperun_Stage_of_PipeRun_carry_5_UNCONNECTED ),
        .of_PipeRun_carry_6(of_PipeRun_carry_6));
  ublaze_sopc_microblaze_0_0__carry_and_66 \Use_MuxCy[7].OF_Piperun_Stage 
       (.ex_is_multi_or_load_instr_reg(\NLW_Use_MuxCy[7].OF_Piperun_Stage_ex_is_multi_or_load_instr_reg_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[7].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_28),
        .of_PipeRun_carry_4(\NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ),
        .of_PipeRun_carry_5(\NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_5_UNCONNECTED ));
  ublaze_sopc_microblaze_0_0__carry_and_67 \Use_MuxCy[8].OF_Piperun_Stage 
       (.lopt(\NLW_Use_MuxCy[8].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_30),
        .mem_is_multi_or_load_instr_reg(\NLW_Use_MuxCy[8].OF_Piperun_Stage_mem_is_multi_or_load_instr_reg_UNCONNECTED ),
        .of_PipeRun_carry_3(\NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ),
        .of_PipeRun_carry_4(\NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ));
  ublaze_sopc_microblaze_0_0__carry_and_68 \Use_MuxCy[9].OF_Piperun_Stage 
       (.ex_is_multi_or_load_instr_reg(\NLW_Use_MuxCy[9].OF_Piperun_Stage_ex_is_multi_or_load_instr_reg_UNCONNECTED ),
        .lopt(lopt_31),
        .lopt_1(lopt_32),
        .of_PipeRun_carry_2(of_PipeRun_carry_2),
        .of_PipeRun_carry_3(\NLW_Use_MuxCy[9].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ));
  ublaze_sopc_microblaze_0_0__MB_FDRE \Using_FPGA.Gen_Bits[28].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .D(mem_exception_kind[28]),
        .E(\Using_FPGA.Native_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (\Serial_Dbg_Intf.force_stop_cmd_i_reg [1:0]),
        .ex_Interrupt_Brk_combo_reg(ex_Interrupt_i),
        .ex_valid(ex_valid),
        .mem_exception_from_ex(mem_exception_from_ex),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__MB_FDRE_69 \Using_FPGA.Gen_Bits[30].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .D(mem_exception_kind[30]),
        .E(\Using_FPGA.Native_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (\Serial_Dbg_Intf.force_stop_cmd_i_reg [1:0]),
        .ex_Interrupt_Brk_combo_reg(ex_Interrupt_i),
        .ex_valid(ex_valid),
        .mem_exception_from_ex(mem_exception_from_ex),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__MB_FDRE_70 \Using_FPGA.Gen_Bits[31].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .D(mem_exception_kind[31]),
        .E(\Using_FPGA.Native_0 ),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .mem_exception_from_ex(mem_exception_from_ex),
        .sync_reset(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_10 
       (.I0(mem_gpr_write),
        .I1(mem_valid_instr),
        .O(p_222_in));
  LUT4 #(
    .INIT(16'hAEAA)) 
    \Using_FPGA.Native_i_13 
       (.I0(wb_reset),
        .I1(wb_gpr_write_i),
        .I2(wb_exception),
        .I3(wb_valid_reg_0),
        .O(p_29_in));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_14 
       (.I0(ex_gpr_write_reg_n_0),
        .I1(ex_valid),
        .O(p_225_in));
  LUT5 #(
    .INIT(32'h55155555)) 
    \Using_FPGA.Native_i_1__100 
       (.I0(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I1(wb_exception),
        .I2(\^mb_halted_1_reg [2]),
        .I3(\^mb_halted_1_reg [3]),
        .I4(\^mb_halted_1_reg [4]),
        .O(\Using_FPGA.Native_10 ));
  LUT2 #(
    .INIT(4'hE)) 
    \Using_FPGA.Native_i_1__50 
       (.I0(reset_bool_for_rst),
        .I1(EX_Is_Div_Instr),
        .O(R));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__61 
       (.I0(ex_databus_addr[0]),
        .I1(swap_result[0]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[31]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__62 
       (.I0(ex_databus_addr[1]),
        .I1(swap_result[1]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O31_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[30]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__63 
       (.I0(\EX_Op2_reg[0]_0 [17]),
        .I1(swap_result[2]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O30_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[29]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__64 
       (.I0(\EX_Op2_reg[0]_0 [18]),
        .I1(swap_result[3]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O29_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[28]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__65 
       (.I0(\EX_Op2_reg[0]_0 [19]),
        .I1(swap_result[4]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O28_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[27]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__66 
       (.I0(\EX_Op2_reg[0]_0 [20]),
        .I1(swap_result[5]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O27_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[26]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__67 
       (.I0(\EX_Op2_reg[0]_0 [21]),
        .I1(swap_result[6]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O26_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[25]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__68 
       (.I0(\EX_Op2_reg[0]_0 [22]),
        .I1(swap_result[7]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O24_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[24]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__69 
       (.I0(\EX_Op2_reg[0]_0 [23]),
        .I1(swap_result[8]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O23_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[23]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__70 
       (.I0(\EX_Op2_reg[0]_0 [24]),
        .I1(swap_result[9]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O22_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[22]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__71 
       (.I0(\EX_Op2_reg[0]_0 [25]),
        .I1(swap_result[10]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O21_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[21]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__72 
       (.I0(\EX_Op2_reg[0]_0 [26]),
        .I1(swap_result[11]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O20_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[20]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__73 
       (.I0(\EX_Op2_reg[0]_0 [27]),
        .I1(swap_result[12]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O19_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[19]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__74 
       (.I0(\EX_Op2_reg[0]_0 [28]),
        .I1(swap_result[13]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O18_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[18]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__75 
       (.I0(\EX_Op2_reg[0]_0 [29]),
        .I1(swap_result[14]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O17_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[17]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__76 
       (.I0(\EX_Op2_reg[0]_0 [30]),
        .I1(swap_result[15]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O15_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[16]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__77 
       (.I0(\EX_Op2_reg[0]_0 [31]),
        .I1(swap_result[16]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O14_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[15]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__78 
       (.I0(\EX_Op2_reg[0]_0 [32]),
        .I1(swap_result[17]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O13_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[14]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__79 
       (.I0(\EX_Op2_reg[0]_0 [33]),
        .I1(swap_result[18]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O12_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[13]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__80 
       (.I0(\EX_Op2_reg[0]_0 [34]),
        .I1(swap_result[19]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O11_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[12]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__81 
       (.I0(\EX_Op2_reg[0]_0 [35]),
        .I1(swap_result[20]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O10_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[11]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__82 
       (.I0(\EX_Op2_reg[0]_0 [36]),
        .I1(swap_result[21]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O9_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[10]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__83 
       (.I0(\EX_Op2_reg[0]_0 [37]),
        .I1(swap_result[22]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O8_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[9]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__84 
       (.I0(\EX_Op2_reg[0]_0 [38]),
        .I1(swap_result[23]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O7_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[8]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__85 
       (.I0(\EX_Op2_reg[0]_0 [39]),
        .I1(swap_result_reg[7]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O6_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[7]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__86 
       (.I0(\EX_Op2_reg[0]_0 [40]),
        .I1(swap_result_reg[6]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O5_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[6]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__87 
       (.I0(\EX_Op2_reg[0]_0 [41]),
        .I1(swap_result_reg[5]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O4_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[5]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__88 
       (.I0(\EX_Op2_reg[0]_0 [42]),
        .I1(swap_result_reg[4]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O3_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[4]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__89 
       (.I0(\EX_Op2_reg[0]_0 [43]),
        .I1(swap_result_reg[3]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O2_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[3]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__90 
       (.I0(\EX_Op2_reg[0]_0 [44]),
        .I1(swap_result_reg[2]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O1_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[2]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__91 
       (.I0(\EX_Op2_reg[0]_0 [45]),
        .I1(swap_result_reg[1]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O0_out ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[1]));
  LUT6 #(
    .INIT(64'h00000000008A0000)) 
    \Using_FPGA.Native_i_2__24 
       (.I0(ex_set_bip_reg_n_0),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg [0]),
        .I2(\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .I3(ex_Interrupt_i),
        .I4(ex_valid),
        .I5(ex_Take_Intr_or_Exc),
        .O(ex_MSR_Set_SW_BIP));
  LUT5 #(
    .INIT(32'hFCECACEC)) 
    \Using_FPGA.Native_i_2__26 
       (.I0(ex_set_MSR_IE_instr),
        .I1(ex_MSR[0]),
        .I2(mem_Write_DCache_reg_0),
        .I3(ex_move_to_MSR_instr),
        .I4(\EX_Op1_reg[0] [1]),
        .O(\Data_Flow_I/msr_reg_i/ex_MSR_cmb2_out ));
  LUT3 #(
    .INIT(8'hAC)) 
    \Using_FPGA.Native_i_2__87 
       (.I0(\EX_Op2_reg[0]_0 [46]),
        .I1(\Data_Flow_I/EX_Shift_Logic_Result ),
        .I2(ex_sel_alu),
        .O(EX_Fwd[0]));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3 
       (.I0(LO),
        .I1(mem_Write_DCache_reg_0),
        .I2(ex_load_alu_carry_reg_n_0),
        .O(\Using_FPGA.Native_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__10 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [8]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\Using_FPGA.Native_7 [1]),
        .I4(\EX_Op1_reg[0] [9]),
        .I5(out),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O23_out ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__11 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [9]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\Using_FPGA.Native_7 [1]),
        .I4(\EX_Op1_reg[0] [10]),
        .I5(out),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O22_out ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__12 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [10]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\Using_FPGA.Native_7 [1]),
        .I4(\EX_Op1_reg[0] [11]),
        .I5(out),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O21_out ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__13 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [11]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\Using_FPGA.Native_7 [1]),
        .I4(\EX_Op1_reg[0] [12]),
        .I5(out),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O20_out ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__14 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [12]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\Using_FPGA.Native_7 [1]),
        .I4(\EX_Op1_reg[0] [13]),
        .I5(out),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O19_out ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__15 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [13]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\Using_FPGA.Native_7 [1]),
        .I4(\EX_Op1_reg[0] [14]),
        .I5(out),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O18_out ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__16 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [14]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\Using_FPGA.Native_7 [1]),
        .I4(\EX_Op1_reg[0] [15]),
        .I5(out),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O17_out ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__17 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [15]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\Using_FPGA.Native_7 [1]),
        .I4(\EX_Op1_reg[0] [16]),
        .I5(out),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O15_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__18 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [17]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [16]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O14_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__19 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [18]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [17]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O13_out ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__2 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [0]),
        .I2(\Using_FPGA.Native_7 [1]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [1]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__20 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [19]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [18]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O12_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__21 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [20]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [19]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O11_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__22 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [21]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [20]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O10_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__23 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [22]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [21]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O9_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__24 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [23]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [22]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O8_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__25 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [24]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [23]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O7_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__26 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [25]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [24]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O6_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__27 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [26]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [25]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O5_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__28 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [27]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [26]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O4_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__29 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [28]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [27]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O3_out ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__3 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [1]),
        .I2(\Using_FPGA.Native_7 [1]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [2]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O31_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__30 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [29]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [28]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O2_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__31 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [30]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [29]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O1_out ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__32 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [31]),
        .I2(\Using_FPGA.Native_7 [0]),
        .I3(\EX_Op1_reg[0] [30]),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O0_out ));
  LUT6 #(
    .INIT(64'hB888B8B8B8888888)) 
    \Using_FPGA.Native_i_3__33 
       (.I0(swap_result_reg[0]),
        .I1(ex_swap_instr),
        .I2(ex_Enable_Sext_Shift),
        .I3(\Using_FPGA.Native_i_5__1_n_0 ),
        .I4(\Using_FPGA.Native_7 [1]),
        .I5(\EX_Op1_reg[24]_0 ),
        .O(\Data_Flow_I/EX_Shift_Logic_Result ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__4 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [2]),
        .I2(\Using_FPGA.Native_7 [1]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [3]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O30_out ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__5 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [3]),
        .I2(\Using_FPGA.Native_7 [1]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [4]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O29_out ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__6 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [4]),
        .I2(\Using_FPGA.Native_7 [1]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [5]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O28_out ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__7 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [5]),
        .I2(\Using_FPGA.Native_7 [1]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [6]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O27_out ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__8 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [6]),
        .I2(\Using_FPGA.Native_7 [1]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [7]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O26_out ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__9 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [7]),
        .I2(\Using_FPGA.Native_7 [1]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [8]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O24_out ));
  LUT6 #(
    .INIT(64'h00000000008A0000)) 
    \Using_FPGA.Native_i_5 
       (.I0(ex_load_alu_carry_reg_n_0),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg [0]),
        .I2(\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .I3(ex_Interrupt_i),
        .I4(ex_valid),
        .I5(ex_Take_Intr_or_Exc),
        .O(ex_MSR_Load_ALU_C));
  LUT5 #(
    .INIT(32'h0DFF0800)) 
    \Using_FPGA.Native_i_5__1 
       (.I0(ex_shift_op[1]),
        .I1(ex_MSR[1]),
        .I2(ex_shift_op[0]),
        .I3(\Using_FPGA.Native_7 [0]),
        .I4(\EX_Op1_reg[0] [31]),
        .O(\Using_FPGA.Native_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000008A0000)) 
    \Using_FPGA.Native_i_6 
       (.I0(ex_load_shift_carry),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg [0]),
        .I2(\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .I3(ex_Interrupt_i),
        .I4(ex_valid),
        .I5(ex_Take_Intr_or_Exc),
        .O(ex_MSR_Load_Shift_C));
  ublaze_sopc_microblaze_0_0__MB_FDRE_71 \Using_FPGA_2.ex_byte_access_i_Inst 
       (.Clk(Clk),
        .\Data_Write[0] (\^mb_halted_1_reg [126:95]),
        .\EX_Op3_reg[0] (\EX_Op3_reg[0]_0 ),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_179),
        .\Using_FPGA.Native_1 (ex_doublet_access),
        .\Using_FPGA.Native_2 (ex_reverse_mem_access),
        .mem_byte_access_reg(ex_byte_access),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__MB_FDRE_72 \Using_FPGA_2.ex_doublet_access_i_Inst 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_180),
        .ex_doublet_access(ex_doublet_access),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__MB_FDRE_73 \Using_FPGA_2.ex_is_load_instr_Inst 
       (.Clk(Clk),
        .MEM_Sel_MEM_Res_I_reg(\Using_FPGA_2.ex_is_load_instr_Inst_n_3 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (\NLW_Using_FPGA_2.ex_is_load_instr_Inst_Performance_Debug_Control.ex_dbg_pc_hit_i_reg_UNCONNECTED [1:0]),
        .Read_Strobe(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_Read_Strobe_UNCONNECTED [0]),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_196),
        .ex_Interrupt_Brk_combo_reg(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Interrupt_Brk_combo_reg_UNCONNECTED ),
        .ex_Sel_SPR_BTR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_BTR_UNCONNECTED ),
        .ex_Sel_SPR_EAR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EAR_UNCONNECTED ),
        .ex_Sel_SPR_EDR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EDR_UNCONNECTED ),
        .ex_Sel_SPR_ESR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_ESR_UNCONNECTED ),
        .ex_Sel_SPR_FSR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_FSR_UNCONNECTED ),
        .ex_Sel_SPR_PVR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_PVR_UNCONNECTED ),
        .ex_Sel_SPR_SHR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_SHR_UNCONNECTED ),
        .ex_Sel_SPR_SLR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_SLR_UNCONNECTED ),
        .ex_Take_Intr_or_Exc_reg(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Take_Intr_or_Exc_reg_UNCONNECTED ),
        .ex_is_load_instr_s(ex_is_load_instr_s),
        .ex_is_multi_instr2(ex_is_multi_instr2),
        .ex_valid(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_valid_UNCONNECTED ),
        .mem_is_multi_or_load_instr0(mem_is_multi_or_load_instr0),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__MB_FDRE_74 \Using_FPGA_2.ex_is_lwx_instr_Inst 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_174),
        .ex_is_lwx_instr_s(ex_is_lwx_instr_s),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__MB_FDRE_75 \Using_FPGA_2.ex_is_swx_instr_Inst 
       (.Clk(Clk),
        .D233_out(D233_out),
        .E(\wb_instr_reg[31]_0 ),
        .\EX_Op1_reg[29] (\EX_Op1_reg[29]_0 ),
        .\EX_Op1_reg[31] (\EX_Op1_reg[0] [0]),
        .MEM_DataBus_Access_reg(\Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ),
        .SRI(SRI),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_LWX_SWX_instr.ex_reservation_reg (\Using_FPGA_2.ex_is_swx_instr_Inst_n_4 ),
        .Write_Strobe(\^mb_halted_1_reg [93]),
        .ex_MSR(ex_MSR[1]),
        .ex_MSR_Load_ALU_C(ex_MSR_Load_ALU_C),
        .ex_MSR_Load_LWX_SWX_C(ex_MSR_Load_LWX_SWX_C),
        .ex_MSR_Load_Shift_C(ex_MSR_Load_Shift_C),
        .ex_MSR_Set_SW_BIP(ex_MSR_Set_SW_BIP),
        .ex_is_load_instr_s(ex_is_load_instr_s),
        .ex_is_swx_instr_s(ex_is_swx_instr_s),
        .ex_load_alu_carry_reg(\Using_FPGA.Native_i_3_n_0 ),
        .ex_load_store_instr_s(ex_load_store_instr_s),
        .ex_reservation(ex_reservation),
        .mem_MSR(mem_MSR[1]),
        .mem_databus_access(mem_databus_access),
        .of_pause_reg(of_PipeRun_for_ce),
        .p_236_in(p_236_in),
        .p_237_in(p_237_in),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .\wb_exception_kind_i_reg[28] (wb_MSR_Clear_IE),
        .\wb_exception_kind_i_reg[28]_0 (wb_Halted));
  ublaze_sopc_microblaze_0_0__MB_FDRE_76 \Using_FPGA_2.ex_load_store_instr_Inst 
       (.Clk(Clk),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (ex_Exception_Taken),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_192),
        .\Using_LWX_SWX_instr.ex_reservation_reg (\Using_FPGA_2.ex_load_store_instr_Inst_n_2 ),
        .ex_MSR_Load_LWX_SWX_C(ex_MSR_Load_LWX_SWX_C),
        .ex_Take_Intr_or_Exc_reg(ex_Take_Intr_or_Exc),
        .ex_is_lwx_instr_s(ex_is_lwx_instr_s),
        .ex_is_swx_instr_s(ex_is_swx_instr_s),
        .ex_load_store_instr_s(ex_load_store_instr_s),
        .ex_reservation(ex_reservation),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_exception_from_ex_reg(mem_Exception_Taken),
        .mem_load_store_access0(mem_load_store_access0),
        .mem_valid_instr(mem_valid_instr),
        .of_pause_reg(of_PipeRun_for_ce),
        .p_236_in(p_236_in),
        .p_237_in(p_237_in),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(\Using_FPGA_2.ex_is_swx_instr_Inst_n_4 ));
  ublaze_sopc_microblaze_0_0__MB_FDRE_77 \Using_FPGA_2.ex_reverse_mem_access_inst 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_197),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__MB_FDRE_78 \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst 
       (.Clk(Clk),
        .E(\Using_FPGA.Native_0 ),
        .\EX_Op1_reg[28] (\EX_Op1_reg[0] [3]),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (\Serial_Dbg_Intf.force_stop_cmd_i_reg [1:0]),
        .Q({ex_opcode[0],ex_opcode[1],ex_opcode[2],ex_opcode[3],ex_opcode[4],ex_opcode[5]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_3 ),
        .ex_Interrupt_Brk_combo_reg(ex_Interrupt_i),
        .ex_MSR(ex_MSR[2]),
        .ex_MSR_Set_SW_BIP(ex_MSR_Set_SW_BIP),
        .ex_Take_Intr_or_Exc_reg(mem_Write_DCache_reg_0),
        .ex_Take_Intr_or_Exc_reg_0(ex_Take_Intr_or_Exc),
        .\ex_gpr_write_addr_reg[3] (\Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ),
        .ex_move_to_MSR_instr_reg(ex_move_to_MSR_instr),
        .ex_set_bip_reg(ex_set_bip_reg_n_0),
        .ex_valid(ex_valid),
        .mem_MSR(mem_MSR[2]),
        .of_MSR(of_MSR[1]),
        .of_pause_reg(of_PipeRun_for_ce),
        .p_193_in(p_193_in),
        .sync_reset(reset_bool_for_rst),
        .\wb_exception_kind_i_reg[28] (wb_MSR_Clear_IE));
  ublaze_sopc_microblaze_0_0__MB_FDR \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst 
       (.Clk(Clk),
        .E(\Using_FPGA.Native_0 ),
        .I0(I0),
        .\Using_FPGA.Native_0 (\Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ),
        .of_pause_reg(of_PipeRun_for_ce),
        .p_193_in(p_193_in),
        .sync_reset(reset_bool_for_rst));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8 \Using_FPGA_4.of_read_ex_write_op1_conflict_INST1 
       (.A(A),
        .D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .of_predecode({of_predecode[1],of_predecode[2],of_predecode[3]}),
        .of_read_ex_write_op1_conflict_part2(of_read_ex_write_op1_conflict_part2));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10 \Using_FPGA_4.of_read_ex_write_op1_conflict_INST2 
       (.I0(I0),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg_n_0_[4] ),
        .ex_gpr_write_reg(ex_gpr_write_reg_n_0),
        .ex_valid(ex_valid),
        .of_predecode({of_predecode[4],of_predecode[5]}),
        .of_read_ex_write_op1_conflict_part2(of_read_ex_write_op1_conflict_part2));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_79 \Using_FPGA_4.of_read_ex_write_op2_conflict_INST1 
       (.D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .of_predecode({of_predecode[6],of_predecode[7],of_predecode[8]}),
        .of_read_ex_write_op2_conflict_part1(of_read_ex_write_op2_conflict_part1));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_80 \Using_FPGA_4.of_read_ex_write_op2_conflict_INST2 
       (.I0(I0),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg_n_0_[4] ),
        .ex_gpr_write_reg(ex_gpr_write_reg_n_0),
        .ex_valid(ex_valid),
        .of_predecode({of_predecode[9],of_predecode[10]}),
        .of_read_ex_write_op2_conflict_part2(of_read_ex_write_op2_conflict_part2));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_81 \Using_FPGA_4.of_read_ex_write_op3_conflict_INST1 
       (.D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .\Using_FPGA.Native_0 ({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .\Using_FPGA.Native_1 (of_gpr_op3_rd_addr[2]),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .of_predecode(of_predecode[0]),
        .of_read_ex_write_op3_conflict_part2(of_read_ex_write_op3_conflict_part2),
        .use_Reg_Neg_S_reg(\Using_FPGA_4.of_read_ex_write_op3_conflict_INST1_n_0 ));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_82 \Using_FPGA_4.of_read_ex_write_op3_conflict_INST2 
       (.I0(I0),
        .\Using_FPGA.Native_0 (of_gpr_op3_rd_addr[3]),
        .\Using_FPGA.Native_1 (of_gpr_op3_rd_addr[4]),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg_n_0_[4] ),
        .ex_gpr_write_reg(ex_gpr_write_reg_n_0),
        .ex_valid(ex_valid),
        .of_read_ex_write_op3_conflict_part2(of_read_ex_write_op3_conflict_part2));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_83 \Using_FPGA_4.of_read_mem_write_op1_conflict_INST1 
       (.Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .of_predecode({of_predecode[1],of_predecode[2],of_predecode[3]}),
        .of_read_mem_write_op1_conflict_part1(of_read_mem_write_op1_conflict_part1));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_84 \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .mem_gpr_write(mem_gpr_write),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .mem_valid_instr(mem_valid_instr),
        .of_predecode({of_predecode[4],of_predecode[5]}),
        .of_read_mem_write_op1_conflict_part1(of_read_mem_write_op1_conflict_part1),
        .use_Reg_Neg_S_reg(\Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0 ));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_85 \Using_FPGA_4.of_read_mem_write_op2_conflict_INST1 
       (.Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .of_predecode({of_predecode[6],of_predecode[7],of_predecode[8]}),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_86 \Using_FPGA_4.of_read_mem_write_op2_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .mem_gpr_write(mem_gpr_write),
        .mem_valid_instr(mem_valid_instr),
        .of_predecode({of_predecode[9],of_predecode[10]}),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_87 \Using_FPGA_4.of_read_mem_write_op3_conflict_INST1 
       (.D({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .\Using_FPGA.Native_0 (of_gpr_op3_rd_addr[2]),
        .of_read_mem_write_op3_conflict_part1(of_read_mem_write_op3_conflict_part1));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_88 \Using_FPGA_4.of_read_mem_write_op3_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .\Using_FPGA.Native_0 (of_gpr_op3_rd_addr[3]),
        .\Using_FPGA.Native_1 (of_gpr_op3_rd_addr[4]),
        .mem_gpr_write(mem_gpr_write),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .mem_valid_instr(mem_valid_instr),
        .of_predecode(of_predecode[0]),
        .of_read_mem_write_op3_conflict_part1(of_read_mem_write_op3_conflict_part1),
        .use_Reg_Neg_S_reg(\Using_FPGA_4.of_read_mem_write_op3_conflict_INST2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Using_LWX_SWX_instr.ex_reservation_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA_2.ex_load_store_instr_Inst_n_2 ),
        .Q(ex_reservation),
        .R(1'b0));
  ublaze_sopc_microblaze_0_0__carry_and_89 \Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1 
       (.\Performance_Debug_Control.dbg_stop_if_delay_i_reg (\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_Performance_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ),
        .if_pc_incr_carry0(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry0_UNCONNECTED ),
        .if_pc_incr_carry1(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry1_UNCONNECTED ),
        .lopt(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_4 ));
  FDRE #(
    .INIT(1'b0)) 
    WB_Byte_Access_reg
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_byte_access),
        .Q(wb_byte_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_DelaySlot_Instr_reg
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_delayslot_instr),
        .Q(\^mb_halted_1_reg [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Doublet_Access_reg
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_doublet_access),
        .Q(wb_doublet_access),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'hB)) 
    \WB_MEM_Result[0]_i_1 
       (.I0(reset_bool_for_rst),
        .I1(MEM_Sel_MEM_Res),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    WB_PC_Valid_reg
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_valid_instr),
        .Q(wb_pc_valid),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Read_Imm_Reg_1_reg
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_read_imm_reg_1),
        .Q(wb_read_imm_reg_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Read_Imm_Reg_reg
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_read_imm_reg),
        .Q(wb_read_imm_reg),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h0000008A)) 
    Write_Strobe_INST_0_i_1
       (.I0(ex_valid),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg [0]),
        .I2(\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .I3(ex_Take_Intr_or_Exc),
        .I4(ex_Interrupt_i),
        .O(p_236_in));
  LUT6 #(
    .INIT(64'h0000000000220322)) 
    active_access_i_1
       (.I0(\Use_DBUS.DAXI_Interface_I1/new_request ),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg [4]),
        .I2(M_AXI_DP_BVALID),
        .I3(active_access),
        .I4(M_AXI_DP_RVALID),
        .I5(reset_bool_for_rst),
        .O(active_access_reg));
  LUT5 #(
    .INIT(32'hFEFEFE00)) 
    active_wakeup_i_1
       (.I0(\^Sleep_Decode ),
        .I1(\^Hibernate ),
        .I2(\^Suspend ),
        .I3(wakeup_i[0]),
        .I4(wakeup_i[1]),
        .O(active_wakeup0));
  FDRE #(
    .INIT(1'b0)) 
    active_wakeup_reg
       (.C(Clk),
        .CE(1'b1),
        .D(active_wakeup0),
        .Q(active_wakeup),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[0]_i_2 
       (.I0(\^mb_halted_1_reg [21]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(\EX_Op2_reg[0]_0 [16]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [15]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[10]_i_1 
       (.I0(\^mb_halted_1_reg [11]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[5]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [5]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[11]_i_1 
       (.I0(\^mb_halted_1_reg [10]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[4]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [4]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[12]_i_1 
       (.I0(\^mb_halted_1_reg [9]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[3]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [3]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[13]_i_1 
       (.I0(\^mb_halted_1_reg [8]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[2]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [2]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[14]_i_1 
       (.I0(\^mb_halted_1_reg [7]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[1]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [1]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[15]_i_1 
       (.I0(\^mb_halted_1_reg [6]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[0]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [0]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[1]_i_1 
       (.I0(\^mb_halted_1_reg [20]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[14]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [14]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[2]_i_1 
       (.I0(\^mb_halted_1_reg [19]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[13]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [13]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[3]_i_1 
       (.I0(\^mb_halted_1_reg [18]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[12]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [12]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[4]_i_1 
       (.I0(\^mb_halted_1_reg [17]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[11]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [11]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[5]_i_1 
       (.I0(\^mb_halted_1_reg [16]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[10]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [10]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[6]_i_1 
       (.I0(\^mb_halted_1_reg [15]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[9]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [9]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[7]_i_1 
       (.I0(\^mb_halted_1_reg [14]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[8]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [8]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[8]_i_1 
       (.I0(\^mb_halted_1_reg [13]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[7]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [7]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[9]_i_1 
       (.I0(\^mb_halted_1_reg [12]),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(M_AXI_DP_AWVALID_i_reg_0[6]),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[0] [6]));
  LUT5 #(
    .INIT(32'h00000400)) 
    ex_Interrupt_Brk_combo_i_1
       (.I0(ex_MSR_change_instr),
        .I1(of_MSR[0]),
        .I2(\Serial_Dbg_Intf.force_stop_cmd_i_reg [3]),
        .I3(external_interrupt),
        .I4(ex_Interrupt_Brk_combo_i_3_n_0),
        .O(of_Interrupt));
  LUT6 #(
    .INIT(64'h0000000008000808)) 
    ex_Interrupt_Brk_combo_i_2
       (.I0(ex_valid_keep),
        .I1(ex_move_to_MSR_instr),
        .I2(ex_Take_Intr_or_Exc),
        .I3(\Serial_Dbg_Intf.force_stop_cmd_i_reg [0]),
        .I4(\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .I5(ex_Interrupt_i),
        .O(ex_MSR_change_instr));
  LUT4 #(
    .INIT(16'hFFEA)) 
    ex_Interrupt_Brk_combo_i_3
       (.I0(of_MSR[1]),
        .I1(ex_atomic_Instruction_Pair),
        .I2(ex_valid_keep),
        .I3(of_Take_Interrupt),
        .O(ex_Interrupt_Brk_combo_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_Interrupt_Brk_combo_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_Interrupt),
        .Q(ex_Interrupt_i),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_Take_Intr_or_Exc_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_2 ),
        .Q(ex_Take_Intr_or_Exc),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_Write_DCache_decode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_Write_DCache_decode_cmb),
        .Q(ex_write_dcache_instr),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_alu_sel_logic_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_198),
        .Q(EX_ALU_Sel_Logic),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_atomic_Instruction_Pair_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_atomic_Instruction_Pair0),
        .Q(ex_atomic_Instruction_Pair),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'hFFFF0800)) 
    ex_branch_with_delayslot_i_3
       (.I0(wb_exception),
        .I1(\^mb_halted_1_reg [3]),
        .I2(\^mb_halted_1_reg [2]),
        .I3(\^mb_halted_1_reg [4]),
        .I4(of_Take_Interrupt_hold),
        .O(of_Take_Interrupt));
  FDRE #(
    .INIT(1'b0)) 
    ex_branch_with_delayslot_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_branch_with_delayslot118_out),
        .Q(ex_branch_with_delayslot),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_delayslot_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_delayslot_Instr0),
        .Q(ex_delayslot_Instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_enable_alu_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_99),
        .Q(EX_Enable_ALU),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_enable_sext_shift_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_enable_sext_shift_i0),
        .Q(ex_Enable_Sext_Shift),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'hE)) 
    ex_first_cycle_i_1
       (.I0(reset_bool_for_rst),
        .I1(wb_exception),
        .O(flush_pipe));
  FDRE #(
    .INIT(1'b0)) 
    ex_first_cycle_reg
       (.C(Clk),
        .CE(1'b1),
        .D(of_PipeRun_for_ce),
        .Q(ex_first_cycle),
        .R(flush_pipe));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[0]),
        .Q(\ex_gpr_write_addr_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[1]),
        .Q(I2),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[2]),
        .Q(I4),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[3]),
        .Q(I0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[4]),
        .Q(\ex_gpr_write_addr_reg_n_0_[4] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_184),
        .Q(ex_gpr_write_dbg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_gpr_write_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_49),
        .Q(ex_gpr_write_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000002E)) 
    ex_hibernate_i_i_1
       (.I0(\^Hibernate ),
        .I1(ex_sleep_i0),
        .I2(p_1_in127_in),
        .I3(reset_bool_for_rst),
        .I4(active_wakeup),
        .O(ex_hibernate_i_i_1_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA2A2A2AAA)) 
    ex_hibernate_i_i_2
       (.I0(ex_mbar_sleep),
        .I1(mem_Write_DCache_reg_0),
        .I2(ex_mbar_decode),
        .I3(ex_first_cycle),
        .I4(ex_mbar_stall_no_sleep_1),
        .I5(ex_jump_hold),
        .O(ex_sleep_i0));
  FDRE #(
    .INIT(1'b0)) 
    ex_hibernate_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_hibernate_i_i_1_n_0),
        .Q(\^Hibernate ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ex_instr_reg[6] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[0]),
        .Q(p_1_in127_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ex_instr_reg[7] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[1]),
        .Q(p_0_in126_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_div_instr_I_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_51),
        .Q(EX_Is_Div_Instr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_multi_instr2_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_Sel_SPR_MSR1),
        .Q(ex_is_multi_instr2),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_multi_or_load_instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_is_multi_or_load_instr0),
        .Q(ex_is_multi_or_load_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_hold_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_5),
        .Q(ex_jump_hold),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hAAAA0008)) 
    ex_jump_nodelay_i_2
       (.I0(if_missed_fetch),
        .I1(IReady),
        .I2(wb_Halted),
        .I3(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I4(\Serial_Dbg_Intf.force_stop_cmd_i_reg [2]),
        .O(ex_jump_nodelay_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_nodelay_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_1 ),
        .Q(ex_jump_nodelay_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_load_alu_carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_188),
        .Q(ex_load_alu_carry_reg_n_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_load_shift_carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_load_shift_carry0),
        .Q(ex_load_shift_carry),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_decode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_decode_cmb),
        .Q(ex_mbar_decode),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_is_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_is_sleep_cmb),
        .Q(ex_mbar_is_sleep),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h000000000000EAAA)) 
    ex_mbar_sleep_i_1
       (.I0(ex_mbar_sleep),
        .I1(ex_first_cycle),
        .I2(ex_mbar_is_sleep),
        .I3(p_242_in),
        .I4(active_wakeup),
        .I5(reset_bool_for_rst),
        .O(ex_mbar_sleep_i_1_n_0));
  LUT6 #(
    .INIT(64'h00000B0000000000)) 
    ex_mbar_sleep_i_2
       (.I0(\Serial_Dbg_Intf.force_stop_cmd_i_reg [0]),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .I2(ex_Interrupt_i),
        .I3(ex_valid),
        .I4(ex_Take_Intr_or_Exc),
        .I5(ex_mbar_decode),
        .O(p_242_in));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_sleep_i_1_n_0),
        .Q(ex_mbar_sleep),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    ex_mbar_stall_no_sleep_1_i_1
       (.I0(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I1(if_fetch_in_progress),
        .I2(I0),
        .I3(mem_valid_instr),
        .O(ex_mbar_stall_no_sleep_10));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_stall_no_sleep_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_stall_no_sleep_10),
        .Q(ex_mbar_stall_no_sleep_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mfsmsr_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_Sel_SPR_MSR88_out),
        .Q(ex_mfsmsr_i),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_move_to_MSR_instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_move_to_MSR_instr113_out),
        .Q(ex_move_to_MSR_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[0]),
        .Q(ex_opcode[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[1]),
        .Q(ex_opcode[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[2] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[2]),
        .Q(ex_opcode[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[3] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[3]),
        .Q(ex_opcode[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[4] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[4]),
        .Q(ex_opcode[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[5] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[5]),
        .Q(ex_opcode[5]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_read_imm_reg_1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_read_imm_reg),
        .Q(ex_read_imm_reg_1),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h00000000A2AAAAAA)) 
    ex_read_imm_reg_i_1
       (.I0(of_read_imm_reg_ii),
        .I1(\^mb_halted_1_reg [4]),
        .I2(\^mb_halted_1_reg [3]),
        .I3(\^mb_halted_1_reg [2]),
        .I4(wb_exception),
        .I5(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .O(ex_read_imm_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_read_imm_reg_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_read_imm_reg_i_1_n_0),
        .Q(ex_read_imm_reg),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_sel_alu_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_sel_alu_i0),
        .Q(ex_sel_alu),
        .S(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'hF8)) 
    ex_set_MSR_IE_instr_i_1
       (.I0(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I1(p_193_in),
        .I2(of_set_MSR_IE_hold_reg_n_0),
        .O(of_set_MSR_IE_hold0));
  FDRE #(
    .INIT(1'b0)) 
    ex_set_MSR_IE_instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_set_MSR_IE_hold0),
        .Q(ex_set_MSR_IE_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_set_bip_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_set_bip),
        .Q(ex_set_bip_reg_n_0),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h0000002E)) 
    ex_sleep_i_i_1
       (.I0(\^Sleep_Decode ),
        .I1(ex_sleep_i0),
        .I2(p_0_in126_in),
        .I3(reset_bool_for_rst),
        .I4(active_wakeup),
        .O(ex_sleep_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_sleep_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_sleep_i_i_1_n_0),
        .Q(\^Sleep_Decode ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    ex_suspend_i_i_1
       (.I0(\^Suspend ),
        .I1(ex_sleep_i0),
        .I2(p_0_in126_in),
        .I3(p_1_in127_in),
        .I4(reset_bool_for_rst),
        .I5(active_wakeup),
        .O(ex_suspend_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_suspend_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_suspend_i_i_1_n_0),
        .Q(\^Suspend ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ex_valid_jump_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_189),
        .Q(ex_valid_jump),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_valid_keep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_191),
        .Q(ex_valid_keep),
        .R(flush_pipe));
  FDRE #(
    .INIT(1'b0)) 
    ex_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_190),
        .Q(ex_valid),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    if_fetch_in_progress_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_183),
        .Q(if_fetch_in_progress),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    if_missed_fetch_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_41),
        .Q(if_missed_fetch),
        .R(1'b0));
  ublaze_sopc_microblaze_0_0__carry_and_90 if_pc_incr_carry_and_0
       (.if_missed_fetch(if_missed_fetch),
        .if_pc_incr_carry0(NLW_if_pc_incr_carry_and_0_if_pc_incr_carry0_UNCONNECTED),
        .lopt(NLW_if_pc_incr_carry_and_0_lopt_UNCONNECTED),
        .lopt_1(\^lopt_4 ),
        .lopt_2(\Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .lopt_3(NLW_if_pc_incr_carry_and_0_lopt_3_UNCONNECTED),
        .lopt_4(\^lopt_6 ),
        .lopt_5(if_fetch_for_timing_optimization1),
        .lopt_6(\^lopt_7 ),
        .lopt_7(\^lopt_8 ),
        .lopt_8(\^lopt_9 ),
        .lopt_9(\^lopt_10 ));
  ublaze_sopc_microblaze_0_0__carry_and_91 if_pc_incr_carry_and_3
       (.CI(NLW_if_pc_incr_carry_and_3_CI_UNCONNECTED),
        .if_fetch_for_timing_optimization1(NLW_if_pc_incr_carry_and_3_if_fetch_for_timing_optimization1_UNCONNECTED),
        .if_pc_incr_carry1(NLW_if_pc_incr_carry_and_3_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_if_pc_incr_carry_and_3_lopt_UNCONNECTED),
        .lopt_1(\^lopt_6 ));
  ublaze_sopc_microblaze_0_0__jump_logic jump_logic_I1
       (.Clk(Clk),
        .E(\Using_FPGA.Native_0 ),
        .\EX_Branch_CMP_Op1_reg[0] (\EX_Branch_CMP_Op1_reg[0]_0 ),
        .EX_MBAR_Stall__2(EX_MBAR_Stall__2),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0]_0 [46:17]),
        .I5(I5),
        .IB_Ready(IB_Ready),
        .\Instr_Addr[0] (\^mb_halted_1_reg [158:127]),
        .LOCKSTEP_Master_Out(\^LOCKSTEP_Master_Out [1]),
        .O(O87_out),
        .O56_out(O56_out),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .Q(\^mb_halted_1_reg [4:2]),
        .\Using_FPGA.Native (jump_logic_I1_n_42),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_57),
        .\Using_FPGA.Native_1 (PreFetch_Buffer_I1_n_60),
        .ex_Take_Intr_or_Exc_reg(ex_Take_Intr_or_Exc),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_branch_with_delayslot_reg(PreFetch_Buffer_I1_n_193),
        .ex_databus_addr(ex_databus_addr),
        .ex_delayslot_Instr0(ex_delayslot_Instr0),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump(ex_jump),
        .ex_jump_hold(ex_jump_hold),
        .ex_jump_hold_reg(jump_logic_I1_n_5),
        .ex_jump_q(ex_jump_q),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_jump_logic_I1_ex_op1_zero_UNCONNECTED),
        .force12_out(force12_out),
        .force_Val10_out(force_Val10_out),
        .if_fetch_in_progress_reg(\^mb_halted_1_reg [159]),
        .if_missed_fetch(if_missed_fetch),
        .if_missed_fetch_reg(jump_logic_I1_n_41),
        .\if_pc_reg[10] (O49_out),
        .\if_pc_reg[11] (O51_out),
        .\if_pc_reg[12] (O53_out),
        .\if_pc_reg[13] (O55_out),
        .\if_pc_reg[14] (O57_out),
        .\if_pc_reg[15] (O59_out),
        .\if_pc_reg[16] (O61_out),
        .\if_pc_reg[17] (O63_out),
        .\if_pc_reg[18] (O65_out),
        .\if_pc_reg[19] (O67_out),
        .\if_pc_reg[1] (O31_out),
        .\if_pc_reg[20] (O69_out),
        .\if_pc_reg[21] (O71_out),
        .\if_pc_reg[22] (O73_out),
        .\if_pc_reg[23] (O75_out),
        .\if_pc_reg[24] (O77_out),
        .\if_pc_reg[25] (O79_out),
        .\if_pc_reg[26] (O81_out),
        .\if_pc_reg[27] (O83_out),
        .\if_pc_reg[28] (O85_out),
        .\if_pc_reg[2] (O33_out),
        .\if_pc_reg[30] ({p_1_in3_in,PC_Module_I_n_34}),
        .\if_pc_reg[3] (O35_out),
        .\if_pc_reg[4] (O37_out),
        .\if_pc_reg[5] (O39_out),
        .\if_pc_reg[6] (O41_out),
        .\if_pc_reg[7] (O43_out),
        .\if_pc_reg[8] (O45_out),
        .\if_pc_reg[9] (O47_out),
        .keep_jump_taken_with_ds(keep_jump_taken_with_ds),
        .keep_jump_taken_with_ds_reg(jump_logic_I1_n_7),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_jump_taken0(NLW_jump_logic_I1_mem_jump_taken0_UNCONNECTED),
        .of_pause_reg(of_PipeRun_for_ce),
        .of_valid(of_valid),
        .out(ex_valid_jump),
        .sync_reset(reset_bool_for_rst),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    keep_jump_taken_with_ds_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_7),
        .Q(keep_jump_taken_with_ds),
        .R(1'b0));
  ublaze_sopc_microblaze_0_0__carry_and_92 mem_PipeRun_carry_and
       (.E(\wb_instr_reg[31]_0 ),
        .\Using_FPGA.Native (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_0 ),
        .ex_MSR(ex_MSR),
        .ex_valid_reg(mem_valid_i_2_n_0),
        .flush_pipe(flush_pipe),
        .lopt(lopt_14),
        .lopt_1(lopt_15),
        .lopt_2(lopt_16),
        .mem_MSR(mem_MSR),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(mem_PipeRun_carry_and_n_1),
        .mem_wait_on_ready_N(NLW_mem_PipeRun_carry_and_mem_wait_on_ready_N_UNCONNECTED),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .\wb_exception_kind_i_reg[28] (wb_MSR_Clear_IE),
        .wb_gpr_write_dbg0(wb_gpr_write_dbg0),
        .wb_gpr_write_i0(wb_gpr_write_i0),
        .wb_piperun(wb_piperun),
        .wb_valid_reg(mem_PipeRun_carry_and_n_2),
        .wb_valid_reg_0(wb_valid_reg_0));
  LUT5 #(
    .INIT(32'h00000888)) 
    mem_Write_DCache_i_1
       (.I0(ex_write_dcache_instr),
        .I1(mem_Write_DCache_reg_0),
        .I2(mem_exception_from_ex),
        .I3(mem_valid_instr),
        .I4(wb_exception),
        .O(mem_Write_DCache_i_1_n_0));
  LUT5 #(
    .INIT(32'h04040004)) 
    mem_Write_DCache_i_2
       (.I0(ex_Take_Intr_or_Exc),
        .I1(ex_valid),
        .I2(ex_Interrupt_i),
        .I3(\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .I4(\Serial_Dbg_Intf.force_stop_cmd_i_reg [0]),
        .O(mem_Write_DCache_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    mem_Write_DCache_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_Write_DCache_i_1_n_0),
        .Q(mem_Write_DCache),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_byte_access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_byte_access),
        .Q(mem_byte_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_delayslot_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_delayslot_Instr),
        .Q(mem_delayslot_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_doublet_access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_doublet_access),
        .Q(mem_doublet_access),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'hFF040000)) 
    mem_exception_from_ex_i_1
       (.I0(\Serial_Dbg_Intf.force_stop_cmd_i_reg [0]),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg [1]),
        .I2(ex_Take_Intr_or_Exc),
        .I3(ex_Interrupt_i),
        .I4(ex_valid),
        .O(ex_Exception_Taken));
  FDRE #(
    .INIT(1'b0)) 
    mem_exception_from_ex_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_Exception_Taken),
        .Q(mem_exception_from_ex),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\ex_gpr_write_addr_reg_n_0_[0] ),
        .Q(mem_gpr_write_addr[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(I2),
        .Q(mem_gpr_write_addr[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(I4),
        .Q(mem_gpr_write_addr[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(I0),
        .Q(mem_gpr_write_addr[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .Q(mem_gpr_write_addr[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[3].OF_Piperun_Stage_n_6 ),
        .Q(mem_gpr_write_dbg),
        .R(flush_pipe));
  FDRE #(
    .INIT(1'b0)) 
    mem_gpr_write_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[3].OF_Piperun_Stage_n_5 ),
        .Q(mem_gpr_write),
        .R(flush_pipe));
  FDRE #(
    .INIT(1'b0)) 
    mem_is_msr_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_mfsmsr_i),
        .Q(mem_sel_msr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_is_multi_or_load_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_is_multi_or_load_instr0),
        .Q(mem_is_multi_or_load_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_load_store_access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_load_store_access0),
        .Q(mem_load_store_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_read_imm_reg_1_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_read_imm_reg_1),
        .Q(mem_read_imm_reg_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_read_imm_reg_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_read_imm_reg),
        .Q(mem_read_imm_reg),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h2)) 
    mem_valid_i_2
       (.I0(ex_valid),
        .I1(ex_Take_Intr_or_Exc),
        .O(mem_valid_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mem_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_PipeRun_carry_and_n_1),
        .Q(mem_valid_instr),
        .R(1'b0));
  ublaze_sopc_microblaze_0_0__carry_or_93 mem_wait_on_ready_N_carry_or
       (.lopt(NLW_mem_wait_on_ready_N_carry_or_lopt_UNCONNECTED),
        .lopt_1(lopt_12),
        .lopt_2(lopt_13),
        .mem_Write_DCache(mem_Write_DCache),
        .mem_databus_ready(NLW_mem_wait_on_ready_N_carry_or_mem_databus_ready_UNCONNECTED),
        .mem_load_store_access(mem_load_store_access),
        .mem_valid_instr(mem_valid_instr),
        .mem_wait_on_ready_N(NLW_mem_wait_on_ready_N_carry_or_mem_wait_on_ready_N_UNCONNECTED));
  FDRE #(
    .INIT(1'b0)) 
    of_Take_Interrupt_hold_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_3 ),
        .Q(of_Take_Interrupt_hold),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    of_read_imm_reg_ii_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_50),
        .Q(of_read_imm_reg_ii),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    of_set_MSR_IE_hold_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[3].OF_Piperun_Stage_n_1 ),
        .Q(of_set_MSR_IE_hold_reg_n_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h02)) 
    sign_16_23_inferred_i_1
       (.I0(\EX_Op1_reg[0] [7]),
        .I1(\Using_FPGA.Native_7 [0]),
        .I2(\Using_FPGA.Native_7 [1]),
        .O(in0));
  FDRE #(
    .INIT(1'b0)) 
    wb_PipeRun_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\wb_instr_reg[31]_0 ),
        .Q(wb_piperun),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h8)) 
    wb_exception_i_i_1
       (.I0(mem_exception_from_ex),
        .I1(mem_valid_instr),
        .O(mem_Exception_Taken));
  FDRE #(
    .INIT(1'b0)) 
    wb_exception_i_reg
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_Exception_Taken),
        .Q(wb_exception),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_exception_kind_i_reg[28] 
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_exception_kind[28]),
        .Q(\^mb_halted_1_reg [4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_exception_kind_i_reg[30] 
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_exception_kind[30]),
        .Q(\^mb_halted_1_reg [3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_exception_kind_i_reg[31] 
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_exception_kind[31]),
        .Q(\^mb_halted_1_reg [2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_gpr_write_addr[0]),
        .Q(wb_new_esr_ess_rx[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_gpr_write_addr[1]),
        .Q(wb_new_esr_ess_rx[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_gpr_write_addr[2]),
        .Q(wb_new_esr_ess_rx[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_gpr_write_addr[3]),
        .Q(wb_new_esr_ess_rx[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(\wb_instr_reg[31]_0 ),
        .D(mem_gpr_write_addr[4]),
        .Q(wb_new_esr_ess_rx[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    wb_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(wb_gpr_write_dbg0),
        .Q(wb_gpr_wr_dbg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wb_gpr_write_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(wb_gpr_write_i0),
        .Q(wb_gpr_write_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wb_reset_reg
       (.C(Clk),
        .CE(1'b1),
        .D(reset_bool_for_rst),
        .Q(wb_reset),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wb_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_PipeRun_carry_and_n_2),
        .Q(wb_valid_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_AND2B1L" *) 
module ublaze_sopc_microblaze_0_0__MB_AND2B1L
   (D,
    E,
    SRI);
  output [0:0]D;
  input [0:0]E;
  input SRI;

  wire [0:0]D;
  wire [0:0]E;
  wire SRI;

  (* box_type = "PRIMITIVE" *) 
  AND2B1L #(
    .IS_SRI_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.DI(E),
        .O(D),
        .SRI(SRI));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE
   (\LOCKSTEP_Out_reg[2914] ,
    mem_load_store_access_reg,
    wb_PC_II_31,
    Clk);
  output [0:0]\LOCKSTEP_Out_reg[2914] ;
  input mem_load_store_access_reg;
  input wb_PC_II_31;
  input Clk;

  wire Clk;
  wire [0:0]\LOCKSTEP_Out_reg[2914] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_31;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_31),
        .Q(\LOCKSTEP_Out_reg[2914] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_317
   (\LOCKSTEP_Out_reg[2924] ,
    mem_load_store_access_reg,
    wb_PC_II_21,
    Clk);
  output \LOCKSTEP_Out_reg[2924] ;
  input mem_load_store_access_reg;
  input wb_PC_II_21;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2924] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_21;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_21),
        .Q(\LOCKSTEP_Out_reg[2924] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_320
   (\LOCKSTEP_Out_reg[2925] ,
    mem_load_store_access_reg,
    wb_PC_II_20,
    Clk);
  output \LOCKSTEP_Out_reg[2925] ;
  input mem_load_store_access_reg;
  input wb_PC_II_20;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2925] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_20;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_20),
        .Q(\LOCKSTEP_Out_reg[2925] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_323
   (\LOCKSTEP_Out_reg[2926] ,
    mem_load_store_access_reg,
    wb_PC_II_19,
    Clk);
  output \LOCKSTEP_Out_reg[2926] ;
  input mem_load_store_access_reg;
  input wb_PC_II_19;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2926] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_19;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_19),
        .Q(\LOCKSTEP_Out_reg[2926] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_326
   (\LOCKSTEP_Out_reg[2927] ,
    mem_load_store_access_reg,
    wb_PC_II_18,
    Clk);
  output \LOCKSTEP_Out_reg[2927] ;
  input mem_load_store_access_reg;
  input wb_PC_II_18;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2927] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_18;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_18),
        .Q(\LOCKSTEP_Out_reg[2927] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_329
   (\LOCKSTEP_Out_reg[2928] ,
    mem_load_store_access_reg,
    wb_PC_II_17,
    Clk);
  output \LOCKSTEP_Out_reg[2928] ;
  input mem_load_store_access_reg;
  input wb_PC_II_17;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2928] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_17;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_17),
        .Q(\LOCKSTEP_Out_reg[2928] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_332
   (\LOCKSTEP_Out_reg[2929] ,
    mem_load_store_access_reg,
    wb_PC_II_16,
    Clk);
  output \LOCKSTEP_Out_reg[2929] ;
  input mem_load_store_access_reg;
  input wb_PC_II_16;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2929] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_16;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_16),
        .Q(\LOCKSTEP_Out_reg[2929] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_335
   (\LOCKSTEP_Out_reg[2930] ,
    mem_load_store_access_reg,
    wb_PC_II_15,
    Clk);
  output \LOCKSTEP_Out_reg[2930] ;
  input mem_load_store_access_reg;
  input wb_PC_II_15;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2930] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_15;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_15),
        .Q(\LOCKSTEP_Out_reg[2930] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_338
   (\LOCKSTEP_Out_reg[2931] ,
    mem_load_store_access_reg,
    wb_PC_II_14,
    Clk);
  output \LOCKSTEP_Out_reg[2931] ;
  input mem_load_store_access_reg;
  input wb_PC_II_14;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2931] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_14;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_14),
        .Q(\LOCKSTEP_Out_reg[2931] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_341
   (\LOCKSTEP_Out_reg[2932] ,
    mem_load_store_access_reg,
    wb_PC_II_13,
    Clk);
  output \LOCKSTEP_Out_reg[2932] ;
  input mem_load_store_access_reg;
  input wb_PC_II_13;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2932] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_13;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_13),
        .Q(\LOCKSTEP_Out_reg[2932] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_344
   (\LOCKSTEP_Out_reg[2933] ,
    mem_load_store_access_reg,
    wb_PC_II_12,
    Clk);
  output \LOCKSTEP_Out_reg[2933] ;
  input mem_load_store_access_reg;
  input wb_PC_II_12;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2933] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_12;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_12),
        .Q(\LOCKSTEP_Out_reg[2933] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_347
   (\LOCKSTEP_Out_reg[2915] ,
    mem_load_store_access_reg,
    wb_PC_II_30,
    Clk);
  output \LOCKSTEP_Out_reg[2915] ;
  input mem_load_store_access_reg;
  input wb_PC_II_30;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2915] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_30;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_30),
        .Q(\LOCKSTEP_Out_reg[2915] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_350
   (\LOCKSTEP_Out_reg[2934] ,
    mem_load_store_access_reg,
    wb_PC_II_11,
    Clk);
  output \LOCKSTEP_Out_reg[2934] ;
  input mem_load_store_access_reg;
  input wb_PC_II_11;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2934] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_11;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_11),
        .Q(\LOCKSTEP_Out_reg[2934] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_353
   (\LOCKSTEP_Out_reg[2935] ,
    mem_load_store_access_reg,
    wb_PC_II_10,
    Clk);
  output \LOCKSTEP_Out_reg[2935] ;
  input mem_load_store_access_reg;
  input wb_PC_II_10;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2935] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_10;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_10),
        .Q(\LOCKSTEP_Out_reg[2935] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_356
   (\LOCKSTEP_Out_reg[2936] ,
    mem_load_store_access_reg,
    wb_PC_II_9,
    Clk);
  output \LOCKSTEP_Out_reg[2936] ;
  input mem_load_store_access_reg;
  input wb_PC_II_9;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2936] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_9;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_9),
        .Q(\LOCKSTEP_Out_reg[2936] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_359
   (\LOCKSTEP_Out_reg[2937] ,
    mem_load_store_access_reg,
    wb_PC_II_8,
    Clk);
  output \LOCKSTEP_Out_reg[2937] ;
  input mem_load_store_access_reg;
  input wb_PC_II_8;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2937] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_8;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_8),
        .Q(\LOCKSTEP_Out_reg[2937] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_362
   (\LOCKSTEP_Out_reg[2938] ,
    mem_load_store_access_reg,
    wb_PC_II_7,
    Clk);
  output \LOCKSTEP_Out_reg[2938] ;
  input mem_load_store_access_reg;
  input wb_PC_II_7;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2938] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_7;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_7),
        .Q(\LOCKSTEP_Out_reg[2938] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_365
   (\LOCKSTEP_Out_reg[2939] ,
    mem_load_store_access_reg,
    wb_PC_II_6,
    Clk);
  output \LOCKSTEP_Out_reg[2939] ;
  input mem_load_store_access_reg;
  input wb_PC_II_6;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2939] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_6;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_6),
        .Q(\LOCKSTEP_Out_reg[2939] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_368
   (\LOCKSTEP_Out_reg[2940] ,
    mem_load_store_access_reg,
    wb_PC_II_5,
    Clk);
  output \LOCKSTEP_Out_reg[2940] ;
  input mem_load_store_access_reg;
  input wb_PC_II_5;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2940] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_5;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_5),
        .Q(\LOCKSTEP_Out_reg[2940] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_371
   (\LOCKSTEP_Out_reg[2941] ,
    mem_load_store_access_reg,
    wb_PC_II_4,
    Clk);
  output \LOCKSTEP_Out_reg[2941] ;
  input mem_load_store_access_reg;
  input wb_PC_II_4;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2941] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_4;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_4),
        .Q(\LOCKSTEP_Out_reg[2941] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_374
   (\LOCKSTEP_Out_reg[2942] ,
    mem_load_store_access_reg,
    wb_PC_II_3,
    Clk);
  output \LOCKSTEP_Out_reg[2942] ;
  input mem_load_store_access_reg;
  input wb_PC_II_3;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2942] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_3;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_3),
        .Q(\LOCKSTEP_Out_reg[2942] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_377
   (\LOCKSTEP_Out_reg[2943] ,
    mem_load_store_access_reg,
    wb_PC_II_2,
    Clk);
  output \LOCKSTEP_Out_reg[2943] ;
  input mem_load_store_access_reg;
  input wb_PC_II_2;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2943] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_2;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_2),
        .Q(\LOCKSTEP_Out_reg[2943] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_380
   (\LOCKSTEP_Out_reg[2916] ,
    mem_load_store_access_reg,
    wb_PC_II_29,
    Clk);
  output \LOCKSTEP_Out_reg[2916] ;
  input mem_load_store_access_reg;
  input wb_PC_II_29;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2916] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_29;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_29),
        .Q(\LOCKSTEP_Out_reg[2916] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_383
   (\LOCKSTEP_Out_reg[2944] ,
    mem_load_store_access_reg,
    wb_PC_II_1,
    Clk);
  output \LOCKSTEP_Out_reg[2944] ;
  input mem_load_store_access_reg;
  input wb_PC_II_1;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2944] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_1;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_1),
        .Q(\LOCKSTEP_Out_reg[2944] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_386
   (DI,
    mem_load_store_access_reg,
    wb_PC_II_0,
    Clk);
  output DI;
  input mem_load_store_access_reg;
  input wb_PC_II_0;
  input Clk;

  wire Clk;
  wire DI;
  wire mem_load_store_access_reg;
  wire wb_PC_II_0;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_0),
        .Q(DI),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_389
   (\LOCKSTEP_Out_reg[2917] ,
    mem_load_store_access_reg,
    wb_PC_II_28,
    Clk);
  output \LOCKSTEP_Out_reg[2917] ;
  input mem_load_store_access_reg;
  input wb_PC_II_28;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2917] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_28;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_28),
        .Q(\LOCKSTEP_Out_reg[2917] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_392
   (\LOCKSTEP_Out_reg[2918] ,
    mem_load_store_access_reg,
    wb_PC_II_27,
    Clk);
  output \LOCKSTEP_Out_reg[2918] ;
  input mem_load_store_access_reg;
  input wb_PC_II_27;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2918] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_27;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_27),
        .Q(\LOCKSTEP_Out_reg[2918] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_395
   (\LOCKSTEP_Out_reg[2919] ,
    mem_load_store_access_reg,
    wb_PC_II_26,
    Clk);
  output \LOCKSTEP_Out_reg[2919] ;
  input mem_load_store_access_reg;
  input wb_PC_II_26;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2919] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_26;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_26),
        .Q(\LOCKSTEP_Out_reg[2919] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_398
   (\LOCKSTEP_Out_reg[2920] ,
    mem_load_store_access_reg,
    wb_PC_II_25,
    Clk);
  output \LOCKSTEP_Out_reg[2920] ;
  input mem_load_store_access_reg;
  input wb_PC_II_25;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2920] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_25;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_25),
        .Q(\LOCKSTEP_Out_reg[2920] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_401
   (\LOCKSTEP_Out_reg[2921] ,
    mem_load_store_access_reg,
    wb_PC_II_24,
    Clk);
  output \LOCKSTEP_Out_reg[2921] ;
  input mem_load_store_access_reg;
  input wb_PC_II_24;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2921] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_24;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_24),
        .Q(\LOCKSTEP_Out_reg[2921] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_404
   (\LOCKSTEP_Out_reg[2922] ,
    mem_load_store_access_reg,
    wb_PC_II_23,
    Clk);
  output \LOCKSTEP_Out_reg[2922] ;
  input mem_load_store_access_reg;
  input wb_PC_II_23;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2922] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_23;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_23),
        .Q(\LOCKSTEP_Out_reg[2922] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDE_407
   (\LOCKSTEP_Out_reg[2923] ,
    mem_load_store_access_reg,
    wb_PC_II_22,
    Clk);
  output \LOCKSTEP_Out_reg[2923] ;
  input mem_load_store_access_reg;
  input wb_PC_II_22;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2923] ;
  wire mem_load_store_access_reg;
  wire wb_PC_II_22;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_load_store_access_reg),
        .D(wb_PC_II_22),
        .Q(\LOCKSTEP_Out_reg[2923] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR
   (\Using_FPGA.Native_0 ,
    sync_reset,
    Clk,
    I0,
    p_193_in,
    E,
    of_pause_reg);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input Clk;
  input I0;
  input p_193_in;
  input [0:0]E;
  input of_pause_reg;

  wire Clk;
  wire [0:0]E;
  wire I0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_i_1__97_n_0 ;
  wire of_clear_MSR_BIP_hold_s;
  wire of_pause_reg;
  wire p_193_in;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_i_1__97_n_0 ),
        .Q(of_clear_MSR_BIP_hold_s),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \Using_FPGA.Native_i_1__7 
       (.I0(I0),
        .I1(p_193_in),
        .I2(of_clear_MSR_BIP_hold_s),
        .O(\Using_FPGA.Native_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \Using_FPGA.Native_i_1__97 
       (.I0(of_clear_MSR_BIP_hold_s),
        .I1(I0),
        .I2(p_193_in),
        .I3(E),
        .I4(of_pause_reg),
        .O(\Using_FPGA.Native_i_1__97_n_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE
   (D,
    sync_reset,
    E,
    Clk,
    ex_valid,
    ex_Interrupt_Brk_combo_reg,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    mem_exception_from_ex);
  output [0:0]D;
  input sync_reset;
  input [0:0]E;
  input Clk;
  input ex_valid;
  input ex_Interrupt_Brk_combo_reg;
  input [1:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input mem_exception_from_ex;

  wire Clk;
  wire [0:0]D;
  wire [0:0]E;
  wire [1:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire Q2_out;
  wire \Using_FPGA.Native_i_1__4_n_0 ;
  wire ex_Interrupt_Brk_combo_reg;
  wire ex_valid;
  wire mem_exception_from_ex;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(E),
        .D(\Using_FPGA.Native_i_1__4_n_0 ),
        .Q(Q2_out),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'h8F88)) 
    \Using_FPGA.Native_i_1__4 
       (.I0(ex_valid),
        .I1(ex_Interrupt_Brk_combo_reg),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg [0]),
        .I3(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg [1]),
        .O(\Using_FPGA.Native_i_1__4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \wb_exception_kind_i[28]_i_1 
       (.I0(mem_exception_from_ex),
        .I1(Q2_out),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_462
   (mem_ex_result,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_463
   (\WB_MEM_Result_reg[10] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[10] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[10] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[10] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_464
   (\WB_MEM_Result_reg[11] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[11] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[11] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[11] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_465
   (\WB_MEM_Result_reg[12] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[12] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[12] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[12] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_466
   (\WB_MEM_Result_reg[13] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[13] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[13] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[13] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_467
   (\WB_MEM_Result_reg[14] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[14] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[14] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[14] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_468
   (\WB_MEM_Result_reg[15] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[15] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[15] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[15] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_469
   (\WB_MEM_Result_reg[16] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[16] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[16] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[16] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_470
   (\WB_MEM_Result_reg[17] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[17] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[17] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[17] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_471
   (\WB_MEM_Result_reg[18] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[18] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[18] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[18] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_472
   (\WB_MEM_Result_reg[19] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[19] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[19] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[19] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_473
   (\WB_MEM_Result_reg[1] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[1] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[1] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[1] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_474
   (\WB_MEM_Result_reg[20] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[20] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[20] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[20] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_475
   (\WB_MEM_Result_reg[21] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[21] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[21] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[21] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_476
   (\WB_MEM_Result_reg[22] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[22] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[22] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[22] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_477
   (\WB_MEM_Result_reg[23] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[23] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[23] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[23] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_478
   (\WB_MEM_Result_reg[24] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[24] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[24] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[24] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_479
   (\WB_MEM_Result_reg[25] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[25] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[25] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[25] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_480
   (\WB_MEM_Result_reg[26] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[26] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[26] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[26] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_481
   (\WB_MEM_Result_reg[27] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[27] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[27] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[27] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_482
   (mem_ex_result,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_483
   (mem_ex_result,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_484
   (\WB_MEM_Result_reg[2] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[2] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[2] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[2] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_485
   (mem_ex_result,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_486
   (\WB_MEM_Result_reg[31] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[31] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[31] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[31] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_487
   (\WB_MEM_Result_reg[3] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[3] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[3] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[3] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_488
   (\WB_MEM_Result_reg[4] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[4] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[4] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[4] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_489
   (\WB_MEM_Result_reg[5] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[5] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[5] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[5] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_490
   (\WB_MEM_Result_reg[6] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[6] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[6] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[6] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_491
   (\WB_MEM_Result_reg[7] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[7] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[7] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[7] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_492
   (\WB_MEM_Result_reg[8] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[8] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[8] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[8] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_493
   (\WB_MEM_Result_reg[9] ,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk);
  output [0:0]\WB_MEM_Result_reg[9] ;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[9] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(\WB_MEM_Result_reg[9] ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_69
   (D,
    sync_reset,
    E,
    Clk,
    mem_exception_from_ex,
    ex_valid,
    ex_Interrupt_Brk_combo_reg,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg );
  output [0:0]D;
  input sync_reset;
  input [0:0]E;
  input Clk;
  input mem_exception_from_ex;
  input ex_valid;
  input ex_Interrupt_Brk_combo_reg;
  input [1:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;

  wire Clk;
  wire [0:0]D;
  wire [0:0]E;
  wire [1:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire Q0_out;
  wire \Using_FPGA.Native_i_1__96_n_0 ;
  wire ex_Interrupt_Brk_combo_reg;
  wire ex_valid;
  wire mem_exception_from_ex;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(E),
        .D(\Using_FPGA.Native_i_1__96_n_0 ),
        .Q(Q0_out),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'h8088)) 
    \Using_FPGA.Native_i_1__96 
       (.I0(ex_valid),
        .I1(ex_Interrupt_Brk_combo_reg),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg [0]),
        .I3(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg [1]),
        .O(\Using_FPGA.Native_i_1__96_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \wb_exception_kind_i[30]_i_1 
       (.I0(mem_exception_from_ex),
        .I1(Q0_out),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_70
   (D,
    sync_reset,
    E,
    ex_exception_no_load_store_mask,
    Clk,
    mem_exception_from_ex);
  output [0:0]D;
  input sync_reset;
  input [0:0]E;
  input ex_exception_no_load_store_mask;
  input Clk;
  input mem_exception_from_ex;

  wire Clk;
  wire [0:0]D;
  wire [0:0]E;
  wire \Using_FPGA.Native_n_0 ;
  wire ex_exception_no_load_store_mask;
  wire mem_exception_from_ex;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(E),
        .D(ex_exception_no_load_store_mask),
        .Q(\Using_FPGA.Native_n_0 ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h8)) 
    \wb_exception_kind_i[31]_i_1 
       (.I0(mem_exception_from_ex),
        .I1(\Using_FPGA.Native_n_0 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_71
   (mem_byte_access_reg,
    \Data_Write[0] ,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk,
    \EX_Op3_reg[0] ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output mem_byte_access_reg;
  output [31:0]\Data_Write[0] ;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input [31:0]\EX_Op3_reg[0] ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire [31:0]\Data_Write[0] ;
  wire [31:0]\EX_Op3_reg[0] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire mem_byte_access_reg;
  wire of_pause_reg;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[0]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [15]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [7]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [31]),
        .O(\Data_Write[0] [31]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[10]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [5]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [13]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [21]),
        .O(\Data_Write[0] [21]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[11]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [4]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [12]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [20]),
        .O(\Data_Write[0] [20]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[12]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [3]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [11]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [19]),
        .O(\Data_Write[0] [19]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[13]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [2]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [10]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [18]),
        .O(\Data_Write[0] [18]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[14]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [1]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [9]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [17]),
        .O(\Data_Write[0] [17]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[15]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [0]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [8]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [16]),
        .O(\Data_Write[0] [16]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[16]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [7]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [23]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [15]),
        .O(\Data_Write[0] [15]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[17]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [6]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [22]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [14]),
        .O(\Data_Write[0] [14]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[18]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [5]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [21]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [13]),
        .O(\Data_Write[0] [13]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[19]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [4]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [20]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [12]),
        .O(\Data_Write[0] [12]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[1]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [14]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [6]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [30]),
        .O(\Data_Write[0] [30]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[20]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [3]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [19]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [11]),
        .O(\Data_Write[0] [11]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[21]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [2]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [18]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [10]),
        .O(\Data_Write[0] [10]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[22]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [1]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [17]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [9]),
        .O(\Data_Write[0] [9]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[23]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [0]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [16]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [8]),
        .O(\Data_Write[0] [8]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[24]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [15]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [31]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [7]),
        .O(\Data_Write[0] [7]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[25]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [14]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [30]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [6]),
        .O(\Data_Write[0] [6]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[26]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [13]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [29]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [5]),
        .O(\Data_Write[0] [5]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[27]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [12]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [28]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [4]),
        .O(\Data_Write[0] [4]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[28]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [11]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [27]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [3]),
        .O(\Data_Write[0] [3]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[29]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [10]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [26]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [2]),
        .O(\Data_Write[0] [2]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[2]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [13]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [5]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [29]),
        .O(\Data_Write[0] [29]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[30]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [9]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [25]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [1]),
        .O(\Data_Write[0] [1]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[31]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [8]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [24]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [0]),
        .O(\Data_Write[0] [0]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[3]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [12]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [4]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [28]),
        .O(\Data_Write[0] [28]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[4]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [11]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [3]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [27]),
        .O(\Data_Write[0] [27]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[5]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [10]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [2]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [26]),
        .O(\Data_Write[0] [26]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[6]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [9]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [1]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [25]),
        .O(\Data_Write[0] [25]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[7]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [8]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [0]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [24]),
        .O(\Data_Write[0] [24]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[8]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [7]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [15]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [23]),
        .O(\Data_Write[0] [23]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[9]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[0] [6]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[0] [14]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[0] [22]),
        .O(\Data_Write[0] [22]));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(mem_byte_access_reg),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_72
   (ex_doublet_access,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk);
  output ex_doublet_access;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire ex_doublet_access;
  wire of_pause_reg;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_doublet_access),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_73
   (ex_is_load_instr_s,
    Read_Strobe,
    mem_is_multi_or_load_instr0,
    MEM_Sel_MEM_Res_I_reg,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk,
    ex_Interrupt_Brk_combo_reg,
    ex_Take_Intr_or_Exc_reg,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    ex_valid,
    ex_is_multi_instr2,
    ex_Sel_SPR_PVR,
    ex_Sel_SPR_BTR,
    ex_Sel_SPR_FSR,
    ex_Sel_SPR_EDR,
    ex_Sel_SPR_EAR,
    ex_Sel_SPR_SHR,
    ex_Sel_SPR_SLR,
    ex_Sel_SPR_ESR);
  output ex_is_load_instr_s;
  output [0:0]Read_Strobe;
  output mem_is_multi_or_load_instr0;
  output MEM_Sel_MEM_Res_I_reg;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input ex_Interrupt_Brk_combo_reg;
  input ex_Take_Intr_or_Exc_reg;
  input [1:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input ex_valid;
  input ex_is_multi_instr2;
  input ex_Sel_SPR_PVR;
  input ex_Sel_SPR_BTR;
  input ex_Sel_SPR_FSR;
  input ex_Sel_SPR_EDR;
  input ex_Sel_SPR_EAR;
  input ex_Sel_SPR_SHR;
  input ex_Sel_SPR_SLR;
  input ex_Sel_SPR_ESR;

  wire Clk;
  wire MEM_Sel_MEM_Res_I_reg;
  wire \Using_FPGA.Native_0 ;
  wire ex_is_load_instr_s;
  wire ex_is_multi_instr2;
  wire mem_is_multi_or_load_instr0;
  wire of_pause_reg;
  wire sync_reset;

  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT1 #(
    .INIT(2'h1)) 
    MEM_Sel_MEM_Res_I_i_1
       (.I0(ex_is_load_instr_s),
        .O(MEM_Sel_MEM_Res_I_reg));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_is_load_instr_s),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'hE)) 
    mem_is_multi_or_load_instr_i_1
       (.I0(ex_is_multi_instr2),
        .I1(ex_is_load_instr_s),
        .O(mem_is_multi_or_load_instr0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_74
   (ex_is_lwx_instr_s,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk);
  output ex_is_lwx_instr_s;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire ex_is_lwx_instr_s;
  wire of_pause_reg;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_is_lwx_instr_s),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_75
   (ex_is_swx_instr_s,
    MEM_DataBus_Access_reg,
    \Using_FPGA.Native_0 ,
    SRI,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    Write_Strobe,
    sync_reset,
    of_pause_reg,
    D233_out,
    Clk,
    mem_databus_access,
    p_237_in,
    E,
    \Using_FPGA.Native_1 ,
    mem_MSR,
    \wb_exception_kind_i_reg[28] ,
    ex_load_alu_carry_reg,
    ex_MSR,
    \EX_Op1_reg[29] ,
    ex_MSR_Load_ALU_C,
    \EX_Op1_reg[31] ,
    ex_MSR_Load_Shift_C,
    ex_MSR_Load_LWX_SWX_C,
    ex_reservation,
    wb_exception,
    \wb_exception_kind_i_reg[28]_0 ,
    ex_MSR_Set_SW_BIP,
    p_236_in,
    ex_load_store_instr_s,
    ex_is_load_instr_s);
  output ex_is_swx_instr_s;
  output MEM_DataBus_Access_reg;
  output \Using_FPGA.Native_0 ;
  output SRI;
  output \Using_LWX_SWX_instr.ex_reservation_reg ;
  output [0:0]Write_Strobe;
  input sync_reset;
  input of_pause_reg;
  input D233_out;
  input Clk;
  input mem_databus_access;
  input p_237_in;
  input [0:0]E;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]mem_MSR;
  input \wb_exception_kind_i_reg[28] ;
  input ex_load_alu_carry_reg;
  input [0:0]ex_MSR;
  input \EX_Op1_reg[29] ;
  input ex_MSR_Load_ALU_C;
  input [0:0]\EX_Op1_reg[31] ;
  input ex_MSR_Load_Shift_C;
  input ex_MSR_Load_LWX_SWX_C;
  input ex_reservation;
  input wb_exception;
  input \wb_exception_kind_i_reg[28]_0 ;
  input ex_MSR_Set_SW_BIP;
  input p_236_in;
  input ex_load_store_instr_s;
  input ex_is_load_instr_s;

  wire Clk;
  wire D233_out;
  wire [0:0]E;
  wire \EX_Op1_reg[29] ;
  wire [0:0]\EX_Op1_reg[31] ;
  wire MEM_DataBus_Access_reg;
  wire SRI;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_2__21_n_0 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire [0:0]Write_Strobe;
  wire [0:0]ex_MSR;
  wire ex_MSR_Load_ALU_C;
  wire ex_MSR_Load_LWX_SWX_C;
  wire ex_MSR_Load_Shift_C;
  wire ex_MSR_Set_SW_BIP;
  wire ex_is_load_instr_s;
  wire ex_is_swx_instr_s;
  wire ex_load_alu_carry_reg;
  wire ex_load_store_instr_s;
  wire ex_reservation;
  wire ex_swx_access__0;
  wire [0:0]mem_MSR;
  wire mem_databus_access;
  wire of_pause_reg;
  wire p_236_in;
  wire p_237_in;
  wire sync_reset;
  wire wb_exception;
  wire \wb_exception_kind_i_reg[28] ;
  wire \wb_exception_kind_i_reg[28]_0 ;

  LUT6 #(
    .INIT(64'h00000000C0C000AA)) 
    MEM_DataBus_Access_i_1
       (.I0(mem_databus_access),
        .I1(ex_swx_access__0),
        .I2(p_237_in),
        .I3(E),
        .I4(\Using_FPGA.Native_1 ),
        .I5(sync_reset),
        .O(MEM_DataBus_Access_reg));
  LUT2 #(
    .INIT(4'hB)) 
    MEM_DataBus_Access_i_2
       (.I0(ex_reservation),
        .I1(ex_is_swx_instr_s),
        .O(ex_swx_access__0));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D233_out),
        .Q(ex_is_swx_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hBBB8BBBBBBB88888)) 
    \Using_FPGA.Native_i_1__1 
       (.I0(mem_MSR),
        .I1(\wb_exception_kind_i_reg[28] ),
        .I2(\Using_FPGA.Native_i_2__21_n_0 ),
        .I3(ex_load_alu_carry_reg),
        .I4(\Using_FPGA.Native_1 ),
        .I5(ex_MSR),
        .O(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \Using_FPGA.Native_i_1__2 
       (.I0(ex_reservation),
        .I1(ex_is_swx_instr_s),
        .I2(p_237_in),
        .O(SRI));
  LUT6 #(
    .INIT(64'h3030003330302222)) 
    \Using_FPGA.Native_i_2__21 
       (.I0(\EX_Op1_reg[29] ),
        .I1(ex_MSR_Load_ALU_C),
        .I2(\EX_Op1_reg[31] ),
        .I3(ex_swx_access__0),
        .I4(ex_MSR_Load_Shift_C),
        .I5(ex_MSR_Load_LWX_SWX_C),
        .O(\Using_FPGA.Native_i_2__21_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2F2F2F2F2F2F2)) 
    \Using_LWX_SWX_instr.ex_reservation_i_2 
       (.I0(wb_exception),
        .I1(\wb_exception_kind_i_reg[28]_0 ),
        .I2(ex_MSR_Set_SW_BIP),
        .I3(ex_is_swx_instr_s),
        .I4(\Using_FPGA.Native_1 ),
        .I5(p_237_in),
        .O(\Using_LWX_SWX_instr.ex_reservation_reg ));
  LUT5 #(
    .INIT(32'h00008A00)) 
    Write_Strobe_INST_0
       (.I0(p_236_in),
        .I1(ex_reservation),
        .I2(ex_is_swx_instr_s),
        .I3(ex_load_store_instr_s),
        .I4(ex_is_load_instr_s),
        .O(Write_Strobe));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_76
   (ex_load_store_instr_s,
    ex_MSR_Load_LWX_SWX_C,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    p_237_in,
    mem_load_store_access0,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk,
    wb_exception,
    mem_exception_from_ex_reg,
    p_236_in,
    ex_is_lwx_instr_s,
    ex_is_swx_instr_s,
    ex_reservation,
    wb_exception_i_reg,
    mem_valid_instr,
    mem_exception_from_ex,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    ex_Take_Intr_or_Exc_reg);
  output ex_load_store_instr_s;
  output ex_MSR_Load_LWX_SWX_C;
  output \Using_LWX_SWX_instr.ex_reservation_reg ;
  output p_237_in;
  output mem_load_store_access0;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input wb_exception;
  input mem_exception_from_ex_reg;
  input p_236_in;
  input ex_is_lwx_instr_s;
  input ex_is_swx_instr_s;
  input ex_reservation;
  input wb_exception_i_reg;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input ex_Take_Intr_or_Exc_reg;

  wire Clk;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire ex_MSR_Load_LWX_SWX_C;
  wire ex_Take_Intr_or_Exc_reg;
  wire ex_is_lwx_instr_s;
  wire ex_is_swx_instr_s;
  wire ex_load_store_instr_s;
  wire ex_reservation;
  wire mem_exception_from_ex;
  wire mem_exception_from_ex_reg;
  wire mem_load_store_access0;
  wire mem_valid_instr;
  wire of_pause_reg;
  wire p_236_in;
  wire p_237_in;
  wire sync_reset;
  wire wb_exception;
  wire wb_exception_i_reg;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_load_store_instr_s),
        .R(sync_reset));
  LUT5 #(
    .INIT(32'h002A0000)) 
    \Using_FPGA.Native_i_2__22 
       (.I0(p_236_in),
        .I1(mem_valid_instr),
        .I2(mem_exception_from_ex),
        .I3(wb_exception),
        .I4(ex_load_store_instr_s),
        .O(p_237_in));
  LUT6 #(
    .INIT(64'h0200020002000000)) 
    \Using_FPGA.Native_i_7 
       (.I0(ex_load_store_instr_s),
        .I1(wb_exception),
        .I2(mem_exception_from_ex_reg),
        .I3(p_236_in),
        .I4(ex_is_lwx_instr_s),
        .I5(ex_is_swx_instr_s),
        .O(ex_MSR_Load_LWX_SWX_C));
  LUT5 #(
    .INIT(32'h000000EA)) 
    \Using_LWX_SWX_instr.ex_reservation_i_1 
       (.I0(ex_reservation),
        .I1(p_237_in),
        .I2(ex_is_lwx_instr_s),
        .I3(wb_exception_i_reg),
        .I4(sync_reset),
        .O(\Using_LWX_SWX_instr.ex_reservation_reg ));
  LUT5 #(
    .INIT(32'h0000008A)) 
    mem_load_store_access_i_1
       (.I0(ex_load_store_instr_s),
        .I1(ex_reservation),
        .I2(ex_is_swx_instr_s),
        .I3(\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .I4(ex_Take_Intr_or_Exc_reg),
        .O(mem_load_store_access0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_77
   (ex_reverse_mem_access,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk);
  output ex_reverse_mem_access;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire ex_reverse_mem_access;
  wire of_pause_reg;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_reverse_mem_access),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module ublaze_sopc_microblaze_0_0__MB_FDRE_78
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    p_193_in,
    sync_reset,
    of_pause_reg,
    \ex_gpr_write_addr_reg[3] ,
    Clk,
    mem_MSR,
    \wb_exception_kind_i_reg[28] ,
    ex_MSR_Set_SW_BIP,
    of_MSR,
    E,
    ex_MSR,
    ex_set_bip_reg,
    ex_Take_Intr_or_Exc_reg,
    \EX_Op1_reg[28] ,
    ex_move_to_MSR_instr_reg,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    ex_Interrupt_Brk_combo_reg,
    ex_valid,
    ex_Take_Intr_or_Exc_reg_0,
    Q);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output p_193_in;
  input sync_reset;
  input of_pause_reg;
  input \ex_gpr_write_addr_reg[3] ;
  input Clk;
  input [0:0]mem_MSR;
  input \wb_exception_kind_i_reg[28] ;
  input ex_MSR_Set_SW_BIP;
  input [0:0]of_MSR;
  input [0:0]E;
  input [0:0]ex_MSR;
  input ex_set_bip_reg;
  input ex_Take_Intr_or_Exc_reg;
  input [0:0]\EX_Op1_reg[28] ;
  input ex_move_to_MSR_instr_reg;
  input [1:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input ex_Interrupt_Brk_combo_reg;
  input ex_valid;
  input ex_Take_Intr_or_Exc_reg_0;
  input [5:0]Q;

  wire Clk;
  wire [28:28]\Data_Flow_I/msr_reg_i/ex_MSR_cmb2_out ;
  wire [0:0]E;
  wire [0:0]\EX_Op1_reg[28] ;
  wire [1:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire [5:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_Interrupt_Brk_combo_reg;
  wire [0:0]ex_MSR;
  wire ex_MSR_Set_SW_BIP;
  wire ex_Take_Intr_or_Exc_reg;
  wire ex_Take_Intr_or_Exc_reg_0;
  wire ex_clear_MSR_BIP_instr_s;
  wire \ex_gpr_write_addr_reg[3] ;
  wire ex_move_to_MSR_instr_reg;
  wire ex_set_bip_reg;
  wire ex_valid;
  wire [0:0]mem_MSR;
  wire [0:0]of_MSR;
  wire of_pause_reg;
  wire of_set_MSR_IE1;
  wire p_193_in;
  wire sync_reset;
  wire \wb_exception_kind_i_reg[28] ;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\ex_gpr_write_addr_reg[3] ),
        .Q(ex_clear_MSR_BIP_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hB8BBB8BBB8BBB888)) 
    \Using_FPGA.Native_i_1__5 
       (.I0(mem_MSR),
        .I1(\wb_exception_kind_i_reg[28] ),
        .I2(\Data_Flow_I/msr_reg_i/ex_MSR_cmb2_out ),
        .I3(of_pause_reg),
        .I4(ex_MSR_Set_SW_BIP),
        .I5(of_MSR),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__6 
       (.I0(mem_MSR),
        .I1(\wb_exception_kind_i_reg[28] ),
        .I2(\Data_Flow_I/msr_reg_i/ex_MSR_cmb2_out ),
        .I3(E),
        .I4(ex_MSR),
        .O(\Using_FPGA.Native_1 ));
  LUT6 #(
    .INIT(64'hBFBBBFBF8C888888)) 
    \Using_FPGA.Native_i_2__23 
       (.I0(ex_set_bip_reg),
        .I1(ex_Take_Intr_or_Exc_reg),
        .I2(ex_clear_MSR_BIP_instr_s),
        .I3(\EX_Op1_reg[28] ),
        .I4(ex_move_to_MSR_instr_reg),
        .I5(ex_MSR),
        .O(\Data_Flow_I/msr_reg_i/ex_MSR_cmb2_out ));
  LUT6 #(
    .INIT(64'h00000B0000000000)) 
    \Using_FPGA.Native_i_2__25 
       (.I0(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg [0]),
        .I1(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg [1]),
        .I2(ex_Interrupt_Brk_combo_reg),
        .I3(ex_valid),
        .I4(ex_Take_Intr_or_Exc_reg_0),
        .I5(of_set_MSR_IE1),
        .O(p_193_in));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \Using_FPGA.Native_i_3__0 
       (.I0(Q[1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[5]),
        .I5(Q[2]),
        .O(of_set_MSR_IE1));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_116
   (addr,
    sync_reset,
    sel_input_iii_3,
    Clk);
  output [0:0]addr;
  input sync_reset;
  input sel_input_iii_3;
  input Clk;

  wire Clk;
  wire [0:0]addr;
  wire sel_input_iii_3;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_3),
        .Q(addr),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_117
   (if_sel_input,
    addr,
    \if_pc_reg[0] ,
    I_AS,
    IFetch,
    if_fetch_for_timing_optimization1,
    if_fetch_in_progress_reg,
    sync_reset,
    sel_input_iii_2,
    Clk,
    \Using_FPGA.Native_0 ,
    ex_jump,
    out,
    if_fetch_in_progress,
    IB_Ready,
    in0,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    \Performance_Debug_Control.dbg_state_nohalt_reg );
  output [0:0]if_sel_input;
  output [0:0]addr;
  output [0:0]\if_pc_reg[0] ;
  output I_AS;
  output [0:0]IFetch;
  output if_fetch_for_timing_optimization1;
  output if_fetch_in_progress_reg;
  input sync_reset;
  input sel_input_iii_2;
  input Clk;
  input [0:0]\Using_FPGA.Native_0 ;
  input ex_jump;
  input out;
  input if_fetch_in_progress;
  input IB_Ready;
  input in0;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input [0:0]\Performance_Debug_Control.dbg_state_nohalt_reg ;

  wire Clk;
  wire IB_Ready;
  wire [0:0]IFetch;
  wire I_AS;
  wire [0:0]\Performance_Debug_Control.dbg_state_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]addr;
  wire ex_jump;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  wire if_fetch_in_progress_reg;
  wire [0:0]\if_pc_reg[0] ;
  wire [0:0]if_sel_input;
  wire in0;
  wire out;
  wire sel_input_iii_2;
  wire sync_reset;

  LUT5 #(
    .INIT(32'hFFFFAB00)) 
    IFetch_INST_0
       (.I0(ex_jump),
        .I1(if_sel_input),
        .I2(\Using_FPGA.Native_0 ),
        .I3(in0),
        .I4(if_fetch_in_progress),
        .O(IFetch));
  LUT6 #(
    .INIT(64'hA200A200A200A2A2)) 
    I_AS_INST_0
       (.I0(out),
        .I1(if_fetch_in_progress),
        .I2(IB_Ready),
        .I3(ex_jump),
        .I4(if_sel_input),
        .I5(\Using_FPGA.Native_0 ),
        .O(I_AS));
  LUT2 #(
    .INIT(4'h2)) 
    \PC_Buffer_reg[3][31]_srl4_i_2 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .O(addr));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_2),
        .Q(if_sel_input),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .O(if_fetch_for_timing_optimization1));
  LUT6 #(
    .INIT(64'h00000000000000F4)) 
    if_fetch_in_progress_i_1
       (.I0(IB_Ready),
        .I1(if_fetch_in_progress),
        .I2(I_AS),
        .I3(sync_reset),
        .I4(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I5(\Performance_Debug_Control.dbg_state_nohalt_reg ),
        .O(if_fetch_in_progress_reg));
  LUT2 #(
    .INIT(4'hE)) 
    \if_pc[0]_i_1 
       (.I0(I_AS),
        .I1(ex_jump),
        .O(\if_pc_reg[0] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_119
   (if_sel_input,
    sync_reset,
    sel_input_iii_1,
    Clk);
  output [0:0]if_sel_input;
  input sync_reset;
  input sel_input_iii_1;
  input Clk;

  wire Clk;
  wire [0:0]if_sel_input;
  wire sel_input_iii_1;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_1),
        .Q(if_sel_input),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_121
   (\Using_FPGA.Native_0 ,
    I187_out,
    I1,
    I191_out,
    I13_out,
    I195_out,
    I17_out,
    I199_out,
    I111_out,
    I1103_out,
    I115_out,
    I1107_out,
    I119_out,
    I1111_out,
    I123_out,
    I1115_out,
    I127_out,
    I1119_out,
    I131_out,
    I1123_out,
    I135_out,
    I143_out,
    I147_out,
    I151_out,
    I155_out,
    I159_out,
    I163_out,
    I167_out,
    I171_out,
    I175_out,
    I179_out,
    I183_out,
    I1127_out,
    I1131_out,
    I1135_out,
    I1139_out,
    I1143_out,
    I1147_out,
    I1151_out,
    I1155_out,
    I1159_out,
    I1163_out,
    I1167_out,
    sync_reset,
    sel_input_i_1,
    Clk,
    out,
    in);
  output \Using_FPGA.Native_0 ;
  output I187_out;
  output I1;
  output I191_out;
  output I13_out;
  output I195_out;
  output I17_out;
  output I199_out;
  output I111_out;
  output I1103_out;
  output I115_out;
  output I1107_out;
  output I119_out;
  output I1111_out;
  output I123_out;
  output I1115_out;
  output I127_out;
  output I1119_out;
  output I131_out;
  output I1123_out;
  output I135_out;
  output I143_out;
  output I147_out;
  output I151_out;
  output I155_out;
  output I159_out;
  output I163_out;
  output I167_out;
  output I171_out;
  output I175_out;
  output I179_out;
  output I183_out;
  output I1127_out;
  output I1131_out;
  output I1135_out;
  output I1139_out;
  output I1143_out;
  output I1147_out;
  output I1151_out;
  output I1155_out;
  output I1159_out;
  output I1163_out;
  output I1167_out;
  input sync_reset;
  input sel_input_i_1;
  input Clk;
  input [41:0]out;
  input [31:0]in;

  wire Clk;
  wire I1;
  wire I1103_out;
  wire I1107_out;
  wire I1111_out;
  wire I1115_out;
  wire I1119_out;
  wire I111_out;
  wire I1123_out;
  wire I1127_out;
  wire I1131_out;
  wire I1135_out;
  wire I1139_out;
  wire I1143_out;
  wire I1147_out;
  wire I1151_out;
  wire I1155_out;
  wire I1159_out;
  wire I115_out;
  wire I1163_out;
  wire I1167_out;
  wire I119_out;
  wire I123_out;
  wire I127_out;
  wire I131_out;
  wire I135_out;
  wire I13_out;
  wire I143_out;
  wire I147_out;
  wire I151_out;
  wire I155_out;
  wire I159_out;
  wire I163_out;
  wire I167_out;
  wire I171_out;
  wire I175_out;
  wire I179_out;
  wire I17_out;
  wire I183_out;
  wire I187_out;
  wire I191_out;
  wire I195_out;
  wire I199_out;
  wire \Using_FPGA.Native_0 ;
  wire [31:0]in;
  wire [41:0]out;
  wire sel_input_i_1;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_i_1),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__0 
       (.I0(out[21]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[0]),
        .O(I187_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__1 
       (.I0(out[0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[0]),
        .O(I1));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__10 
       (.I0(out[26]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[5]),
        .O(I1107_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__11 
       (.I0(out[5]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[5]),
        .O(I119_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__12 
       (.I0(out[27]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[6]),
        .O(I1111_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__13 
       (.I0(out[6]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[6]),
        .O(I123_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__14 
       (.I0(out[28]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[7]),
        .O(I1115_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__15 
       (.I0(out[7]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[7]),
        .O(I127_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__16 
       (.I0(out[29]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[8]),
        .O(I1119_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__17 
       (.I0(out[8]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[8]),
        .O(I131_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__18 
       (.I0(out[30]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[9]),
        .O(I1123_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__19 
       (.I0(out[9]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[9]),
        .O(I135_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__2 
       (.I0(out[22]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[1]),
        .O(I191_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__3 
       (.I0(out[1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[1]),
        .O(I13_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__4 
       (.I0(out[23]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[2]),
        .O(I195_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__5 
       (.I0(out[2]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[2]),
        .O(I17_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__6 
       (.I0(out[24]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[3]),
        .O(I199_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__62 
       (.I0(out[10]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[10]),
        .O(I143_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__63 
       (.I0(out[11]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[11]),
        .O(I147_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__64 
       (.I0(out[12]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[12]),
        .O(I151_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__65 
       (.I0(out[13]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[13]),
        .O(I155_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__66 
       (.I0(out[14]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[14]),
        .O(I159_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__67 
       (.I0(out[15]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[15]),
        .O(I163_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__68 
       (.I0(out[16]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[16]),
        .O(I167_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__69 
       (.I0(out[17]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[17]),
        .O(I171_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__7 
       (.I0(out[3]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[3]),
        .O(I111_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__70 
       (.I0(out[18]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[18]),
        .O(I175_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__71 
       (.I0(out[19]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[19]),
        .O(I179_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__72 
       (.I0(out[20]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[20]),
        .O(I183_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__73 
       (.I0(out[31]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[21]),
        .O(I1127_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__74 
       (.I0(out[32]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[22]),
        .O(I1131_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__75 
       (.I0(out[33]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[23]),
        .O(I1135_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__76 
       (.I0(out[34]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[24]),
        .O(I1139_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__77 
       (.I0(out[35]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[25]),
        .O(I1143_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__78 
       (.I0(out[36]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[26]),
        .O(I1147_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__79 
       (.I0(out[37]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[27]),
        .O(I1151_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__8 
       (.I0(out[25]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[4]),
        .O(I1103_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__80 
       (.I0(out[38]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[28]),
        .O(I1155_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__81 
       (.I0(out[39]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[29]),
        .O(I1159_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__82 
       (.I0(out[40]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[30]),
        .O(I1163_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__83 
       (.I0(out[41]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[31]),
        .O(I1167_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__9 
       (.I0(out[4]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[4]),
        .O(I115_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_123
   (\ex_opcode_reg[0] ,
    ex_is_div_instr_I_reg,
    ex_gpr_write_dbg_reg,
    OF_Op1_Sel_SPR_PC0__0,
    EX_CMP_Op_reg,
    EX_Unsigned_Op_reg,
    EX_Use_Carry_reg,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_42,
    Clk,
    EX_Is_Div_Instr,
    E,
    of_pause_reg,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    EX_ALU_Op1__1,
    \Using_FPGA.Native_8 ,
    ex_jump,
    ex_jump_nodelay_reg);
  output \ex_opcode_reg[0] ;
  output ex_is_div_instr_I_reg;
  output ex_gpr_write_dbg_reg;
  output OF_Op1_Sel_SPR_PC0__0;
  output EX_CMP_Op_reg;
  output EX_Unsigned_Op_reg;
  output EX_Use_Carry_reg;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_42;
  input Clk;
  input EX_Is_Div_Instr;
  input [0:0]E;
  input of_pause_reg;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input EX_ALU_Op1__1;
  input \Using_FPGA.Native_8 ;
  input ex_jump;
  input ex_jump_nodelay_reg;

  wire Clk;
  wire [0:0]E;
  wire EX_ALU_Op1__1;
  wire EX_CMP_Op_reg;
  wire EX_Is_Div_Instr;
  wire EX_Unsigned_Op_reg;
  wire EX_Use_Carry_reg;
  wire OF_Op1_Sel_SPR_PC0__0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire ex_gpr_write_dbg_reg;
  wire ex_is_div_instr_I0;
  wire ex_is_div_instr_I_reg;
  wire ex_jump;
  wire ex_jump_nodelay_reg;
  wire \ex_opcode_reg[0] ;
  wire of_instr_ii_42;
  wire of_pause_reg;
  wire sync_reset;

  LUT5 #(
    .INIT(32'h00000010)) 
    EX_CMP_Op_i_1
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_7 ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(EX_ALU_Op1__1),
        .O(EX_CMP_Op_reg));
  LUT5 #(
    .INIT(32'h00000010)) 
    EX_Unsigned_Op_i_1
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_8 ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(EX_ALU_Op1__1),
        .O(EX_Unsigned_Op_reg));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    EX_Use_Carry_i_1
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(EX_ALU_Op1__1),
        .O(EX_Use_Carry_reg));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_42),
        .Q(\ex_opcode_reg[0] ),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \Using_FPGA.Native_i_1__104 
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_4 ),
        .O(\Using_FPGA.Native_1 ));
  LUT4 #(
    .INIT(16'h0888)) 
    \Using_FPGA.Native_i_1__98 
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(ex_jump),
        .I3(ex_jump_nodelay_reg),
        .O(\Using_FPGA.Native_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \Using_FPGA.Native_i_4__1 
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(OF_Op1_Sel_SPR_PC0__0));
  LUT6 #(
    .INIT(64'h2020A0A00000A000)) 
    ex_gpr_write_i_6
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\Using_FPGA.Native_4 ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(\Using_FPGA.Native_5 ),
        .I5(\Using_FPGA.Native_2 ),
        .O(ex_gpr_write_dbg_reg));
  LUT5 #(
    .INIT(32'h0000CC0A)) 
    ex_is_div_instr_I_i_1
       (.I0(EX_Is_Div_Instr),
        .I1(ex_is_div_instr_I0),
        .I2(E),
        .I3(of_pause_reg),
        .I4(sync_reset),
        .O(ex_is_div_instr_I_reg));
  LUT5 #(
    .INIT(32'h00040000)) 
    ex_is_div_instr_I_i_2
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_3 ),
        .I3(\Using_FPGA.Native_4 ),
        .I4(\Using_FPGA.Native_5 ),
        .O(ex_is_div_instr_I0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_125
   (\ex_gpr_write_addr_reg[4] ,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    \EX_Op3_reg[31]_1 ,
    sync_reset,
    of_instr_ii_32,
    Clk,
    \mem_gpr_write_addr_reg[2] ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \wb_gpr_write_addr_reg[2] ,
    \ex_gpr_write_addr_reg[4]_0 ,
    I4,
    I0);
  output \ex_gpr_write_addr_reg[4] ;
  output \EX_Op3_reg[31] ;
  output \EX_Op3_reg[31]_0 ;
  output \EX_Op3_reg[31]_1 ;
  input sync_reset;
  input of_instr_ii_32;
  input Clk;
  input [2:0]\mem_gpr_write_addr_reg[2] ;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [2:0]\wb_gpr_write_addr_reg[2] ;
  input \ex_gpr_write_addr_reg[4]_0 ;
  input I4;
  input I0;

  wire Clk;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire \EX_Op3_reg[31]_1 ;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire \ex_gpr_write_addr_reg[4]_0 ;
  wire [2:0]\mem_gpr_write_addr_reg[2] ;
  wire of_instr_ii_32;
  wire sync_reset;
  wire [2:0]\wb_gpr_write_addr_reg[2] ;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op3[0]_i_11 
       (.I0(\ex_gpr_write_addr_reg[4]_0 ),
        .I1(\ex_gpr_write_addr_reg[4] ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(I4),
        .I4(\Using_FPGA.Native_1 ),
        .I5(I0),
        .O(\EX_Op3_reg[31]_1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op3[0]_i_7 
       (.I0(\mem_gpr_write_addr_reg[2] [0]),
        .I1(\ex_gpr_write_addr_reg[4] ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\mem_gpr_write_addr_reg[2] [2]),
        .I4(\Using_FPGA.Native_1 ),
        .I5(\mem_gpr_write_addr_reg[2] [1]),
        .O(\EX_Op3_reg[31] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op3[0]_i_9 
       (.I0(\wb_gpr_write_addr_reg[2] [0]),
        .I1(\ex_gpr_write_addr_reg[4] ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\wb_gpr_write_addr_reg[2] [2]),
        .I4(\Using_FPGA.Native_1 ),
        .I5(\wb_gpr_write_addr_reg[2] [1]),
        .O(\EX_Op3_reg[31]_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_32),
        .Q(\ex_gpr_write_addr_reg[4] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_127
   (\ex_instr_reg[11] ,
    ex_set_bip0__1,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    sync_reset,
    of_instr_ii_31,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    of_Imm180,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    p_1_in26_in);
  output \ex_instr_reg[11] ;
  output ex_set_bip0__1;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  input sync_reset;
  input of_instr_ii_31;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input of_Imm180;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input p_1_in26_in;

  wire Clk;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \ex_instr_reg[11] ;
  wire ex_set_bip0__1;
  wire of_Imm180;
  wire of_instr_ii_31;
  wire p_1_in26_in;
  wire sync_reset;

  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 
       (.I0(ex_set_bip0__1),
        .I1(of_Imm180),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(p_1_in26_in),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_31),
        .Q(\ex_instr_reg[11] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'h40)) 
    ex_set_bip_i_2
       (.I0(\ex_instr_reg[11] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .O(ex_set_bip0__1));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_129
   (\ex_instr_reg[12] ,
    \EX_ALU_Op_reg[1] ,
    EX_ALU_Op1__1,
    ex_enable_alu_i_reg,
    sync_reset,
    of_instr_ii_30,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    of_Take_Interrupt,
    p_28_in);
  output \ex_instr_reg[12] ;
  output [0:0]\EX_ALU_Op_reg[1] ;
  output EX_ALU_Op1__1;
  output ex_enable_alu_i_reg;
  input sync_reset;
  input of_instr_ii_30;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input of_Take_Interrupt;
  input p_28_in;

  wire Clk;
  wire EX_ALU_Op1__1;
  wire [0:0]\EX_ALU_Op_reg[1] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire ex_enable_alu_i_reg;
  wire \ex_instr_reg[12] ;
  wire of_Take_Interrupt;
  wire of_instr_ii_30;
  wire p_28_in;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hAAAAAAAEAEAEAEEE)) 
    \EX_ALU_Op[1]_i_1 
       (.I0(EX_ALU_Op1__1),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(\Using_FPGA.Native_4 ),
        .O(\EX_ALU_Op_reg[1] ));
  LUT3 #(
    .INIT(8'hEA)) 
    EX_CMP_Op_i_2
       (.I0(of_Take_Interrupt),
        .I1(\ex_instr_reg[12] ),
        .I2(p_28_in),
        .O(EX_ALU_Op1__1));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_30),
        .Q(\ex_instr_reg[12] ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEBFFFF)) 
    ex_enable_alu_i_i_1
       (.I0(EX_ALU_Op1__1),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_5 ),
        .I4(\Using_FPGA.Native_6 ),
        .I5(\Using_FPGA.Native_3 ),
        .O(ex_enable_alu_i_reg));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_131
   (\ex_instr_reg[13] ,
    sync_reset,
    of_instr_ii_29,
    Clk);
  output \ex_instr_reg[13] ;
  input sync_reset;
  input of_instr_ii_29;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[13] ;
  wire of_instr_ii_29;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_29),
        .Q(\ex_instr_reg[13] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_133
   (\ex_instr_reg[14] ,
    sync_reset,
    of_instr_ii_28,
    Clk);
  output [0:0]\ex_instr_reg[14] ;
  input sync_reset;
  input of_instr_ii_28;
  input Clk;

  wire Clk;
  wire [0:0]\ex_instr_reg[14] ;
  wire of_instr_ii_28;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_28),
        .Q(\ex_instr_reg[14] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_135
   (\ex_instr_reg[15] ,
    sync_reset,
    of_instr_ii_27,
    Clk);
  output [0:0]\ex_instr_reg[15] ;
  input sync_reset;
  input of_instr_ii_27;
  input Clk;

  wire Clk;
  wire [0:0]\ex_instr_reg[15] ;
  wire of_instr_ii_27;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_27),
        .Q(\ex_instr_reg[15] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_137
   (\ex_instr_reg[16] ,
    sync_reset,
    of_instr_ii_26,
    Clk);
  output \ex_instr_reg[16] ;
  input sync_reset;
  input of_instr_ii_26;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[16] ;
  wire of_instr_ii_26;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_26),
        .Q(\ex_instr_reg[16] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_139
   (\ex_instr_reg[17] ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    sync_reset,
    of_instr_ii_25,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output \ex_instr_reg[17] ;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  input sync_reset;
  input of_instr_ii_25;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \ex_instr_reg[17] ;
  wire of_instr_ii_25;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hFE)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_6 
       (.I0(\ex_instr_reg[17] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_25),
        .Q(\ex_instr_reg[17] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_141
   (\ex_instr_reg[18] ,
    sync_reset,
    of_instr_ii_24,
    Clk);
  output \ex_instr_reg[18] ;
  input sync_reset;
  input of_instr_ii_24;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[18] ;
  wire of_instr_ii_24;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_24),
        .Q(\ex_instr_reg[18] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_143
   (\ex_instr_reg[19] ,
    sync_reset,
    of_instr_ii_23,
    Clk);
  output \ex_instr_reg[19] ;
  input sync_reset;
  input of_instr_ii_23;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[19] ;
  wire of_instr_ii_23;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_23),
        .Q(\ex_instr_reg[19] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_145
   (\ex_opcode_reg[1] ,
    ex_branch_with_delayslot_i_reg,
    ex_branch_with_delayslot_reg,
    ex_gpr_write_reg,
    of_op2_imm_addr,
    of_op2_sel_imm,
    \EX_Op2_reg[0] ,
    \EX_Op2_reg[1] ,
    \EX_Op2_reg[2] ,
    \EX_Op2_reg[3] ,
    \EX_Op2_reg[4] ,
    \EX_Op2_reg[5] ,
    \EX_Op2_reg[6] ,
    \EX_Op2_reg[7] ,
    \EX_Op2_reg[8] ,
    \EX_Op2_reg[9] ,
    \EX_Op2_reg[10] ,
    \EX_Op2_reg[11] ,
    \EX_Op2_reg[12] ,
    \EX_Op2_reg[13] ,
    \EX_Op2_reg[14] ,
    \EX_Op2_reg[15] ,
    \EX_Op2_reg[16] ,
    \EX_Op2_reg[17] ,
    \EX_Op2_reg[18] ,
    \EX_Op2_reg[19] ,
    \EX_Op2_reg[20] ,
    \EX_Op2_reg[21] ,
    \EX_Op2_reg[22] ,
    \EX_Op2_reg[23] ,
    \EX_Op2_reg[24] ,
    \EX_Op2_reg[25] ,
    \EX_Op2_reg[26] ,
    \EX_Op2_reg[28] ,
    \EX_Op2_reg[29] ,
    \EX_Op2_reg[30] ,
    \EX_Op2_reg[31] ,
    \EX_ALU_Op_reg[0] ,
    p_28_in,
    use_Reg_Neg_S_reg,
    use_Reg_Neg_S_reg_0,
    ex_enable_sext_shift_i0,
    ex_gpr_write_dbg_reg,
    ex_alu_sel_logic_i_reg,
    ex_set_bip,
    sync_reset,
    of_instr_ii_41,
    Clk,
    ex_branch_with_delayslot_i,
    of_pause_reg,
    \wb_exception_kind_i_reg[28] ,
    ex_gpr_write_reg_0,
    ex_gpr_write111_out__0,
    wb_exception,
    of_Take_Interrupt,
    GPR_Op2,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    of_read_imm_reg_ii_reg,
    \imm_reg_reg[0] ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    EX_ALU_Op1__1,
    \Using_FPGA.Native_20 ,
    p_0_in31_in,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    of_read_ex_write_op2_conflict_part2,
    ex_is_multi_or_load_instr,
    of_read_ex_write_op2_conflict_part1,
    of_read_mem_write_op2_conflict_part2,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op2_conflict_part1,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    E,
    ex_gpr_write_dbg,
    ex_set_bip0__1);
  output \ex_opcode_reg[1] ;
  output ex_branch_with_delayslot_i_reg;
  output ex_branch_with_delayslot_reg;
  output ex_gpr_write_reg;
  output [0:0]of_op2_imm_addr;
  output of_op2_sel_imm;
  output \EX_Op2_reg[0] ;
  output \EX_Op2_reg[1] ;
  output \EX_Op2_reg[2] ;
  output \EX_Op2_reg[3] ;
  output \EX_Op2_reg[4] ;
  output \EX_Op2_reg[5] ;
  output \EX_Op2_reg[6] ;
  output \EX_Op2_reg[7] ;
  output \EX_Op2_reg[8] ;
  output \EX_Op2_reg[9] ;
  output \EX_Op2_reg[10] ;
  output \EX_Op2_reg[11] ;
  output \EX_Op2_reg[12] ;
  output \EX_Op2_reg[13] ;
  output \EX_Op2_reg[14] ;
  output \EX_Op2_reg[15] ;
  output \EX_Op2_reg[16] ;
  output \EX_Op2_reg[17] ;
  output \EX_Op2_reg[18] ;
  output \EX_Op2_reg[19] ;
  output \EX_Op2_reg[20] ;
  output \EX_Op2_reg[21] ;
  output \EX_Op2_reg[22] ;
  output \EX_Op2_reg[23] ;
  output \EX_Op2_reg[24] ;
  output \EX_Op2_reg[25] ;
  output \EX_Op2_reg[26] ;
  output \EX_Op2_reg[28] ;
  output \EX_Op2_reg[29] ;
  output \EX_Op2_reg[30] ;
  output \EX_Op2_reg[31] ;
  output [0:0]\EX_ALU_Op_reg[0] ;
  output p_28_in;
  output use_Reg_Neg_S_reg;
  output use_Reg_Neg_S_reg_0;
  output ex_enable_sext_shift_i0;
  output ex_gpr_write_dbg_reg;
  output ex_alu_sel_logic_i_reg;
  output ex_set_bip;
  input sync_reset;
  input of_instr_ii_41;
  input Clk;
  input ex_branch_with_delayslot_i;
  input of_pause_reg;
  input \wb_exception_kind_i_reg[28] ;
  input ex_gpr_write_reg_0;
  input ex_gpr_write111_out__0;
  input wb_exception;
  input of_Take_Interrupt;
  input [0:31]GPR_Op2;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input of_read_imm_reg_ii_reg;
  input [15:0]\imm_reg_reg[0] ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input EX_ALU_Op1__1;
  input \Using_FPGA.Native_20 ;
  input p_0_in31_in;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input of_read_ex_write_op2_conflict_part2;
  input ex_is_multi_or_load_instr;
  input of_read_ex_write_op2_conflict_part1;
  input of_read_mem_write_op2_conflict_part2;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op2_conflict_part1;
  input \Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input [0:0]E;
  input ex_gpr_write_dbg;
  input ex_set_bip0__1;

  wire Clk;
  wire [0:0]E;
  wire EX_ALU_Op1__1;
  wire [0:0]\EX_ALU_Op_reg[0] ;
  wire \EX_Op2_reg[0] ;
  wire \EX_Op2_reg[10] ;
  wire \EX_Op2_reg[11] ;
  wire \EX_Op2_reg[12] ;
  wire \EX_Op2_reg[13] ;
  wire \EX_Op2_reg[14] ;
  wire \EX_Op2_reg[15] ;
  wire \EX_Op2_reg[16] ;
  wire \EX_Op2_reg[17] ;
  wire \EX_Op2_reg[18] ;
  wire \EX_Op2_reg[19] ;
  wire \EX_Op2_reg[1] ;
  wire \EX_Op2_reg[20] ;
  wire \EX_Op2_reg[21] ;
  wire \EX_Op2_reg[22] ;
  wire \EX_Op2_reg[23] ;
  wire \EX_Op2_reg[24] ;
  wire \EX_Op2_reg[25] ;
  wire \EX_Op2_reg[26] ;
  wire \EX_Op2_reg[28] ;
  wire \EX_Op2_reg[29] ;
  wire \EX_Op2_reg[2] ;
  wire \EX_Op2_reg[30] ;
  wire \EX_Op2_reg[31] ;
  wire \EX_Op2_reg[3] ;
  wire \EX_Op2_reg[4] ;
  wire \EX_Op2_reg[5] ;
  wire \EX_Op2_reg[6] ;
  wire \EX_Op2_reg[7] ;
  wire \EX_Op2_reg[8] ;
  wire \EX_Op2_reg[9] ;
  wire [0:31]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire ex_alu_sel_logic_i_reg;
  wire ex_branch_with_delayslot_i;
  wire ex_branch_with_delayslot_i_reg;
  wire ex_branch_with_delayslot_reg;
  wire ex_enable_sext_shift_i0;
  wire ex_gpr_write;
  wire ex_gpr_write111_out__0;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_dbg108_in;
  wire ex_gpr_write_dbg_reg;
  wire ex_gpr_write_i_5_n_0;
  wire ex_gpr_write_reg;
  wire ex_gpr_write_reg_0;
  wire ex_is_multi_or_load_instr;
  wire \ex_opcode_reg[1] ;
  wire ex_set_bip;
  wire ex_set_bip0__1;
  wire [15:0]\imm_reg_reg[0] ;
  wire mem_is_multi_or_load_instr;
  wire of_Take_Interrupt;
  wire of_instr_ii_41;
  wire [0:0]of_op2_imm_addr;
  wire of_op2_sel_imm;
  wire of_pause_reg;
  wire of_read_ex_write_op2_conflict_part1;
  wire of_read_ex_write_op2_conflict_part2;
  wire of_read_imm_reg_ii_reg;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire p_0_in31_in;
  wire p_28_in;
  wire sync_reset;
  wire use_Reg_Neg_S_reg;
  wire use_Reg_Neg_S_reg_0;
  wire wb_exception;
  wire \wb_exception_kind_i_reg[28] ;

  LUT6 #(
    .INIT(64'h00000000FFFFFFF9)) 
    \EX_ALU_Op[0]_i_1 
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_16 ),
        .I2(\Using_FPGA.Native_17 ),
        .I3(\Using_FPGA.Native_18 ),
        .I4(\Using_FPGA.Native_19 ),
        .I5(EX_ALU_Op1__1),
        .O(\EX_ALU_Op_reg[0] ));
  LUT5 #(
    .INIT(32'h00004000)) 
    EX_CMP_Op_i_3
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_18 ),
        .I2(\Using_FPGA.Native_19 ),
        .I3(\Using_FPGA.Native_16 ),
        .I4(\Using_FPGA.Native_24 ),
        .O(p_28_in));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[0]_i_2 
       (.I0(GPR_Op2[0]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [15]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[0] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[10]_i_2 
       (.I0(GPR_Op2[10]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [5]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[10] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[11]_i_2 
       (.I0(GPR_Op2[11]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [4]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[11] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[12]_i_2 
       (.I0(GPR_Op2[12]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [3]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[12] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[13]_i_2 
       (.I0(GPR_Op2[13]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [2]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[13] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[14]_i_2 
       (.I0(GPR_Op2[14]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [1]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[14] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[15]_i_2 
       (.I0(GPR_Op2[15]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [0]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[15] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[16]_i_2 
       (.I0(GPR_Op2[16]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[16] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[17]_i_2 
       (.I0(GPR_Op2[17]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_2 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[17] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[18]_i_2 
       (.I0(GPR_Op2[18]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_3 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[18] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[19]_i_2 
       (.I0(GPR_Op2[19]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_4 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[19] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[1]_i_2 
       (.I0(GPR_Op2[1]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [14]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[1] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[20]_i_2 
       (.I0(GPR_Op2[20]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_5 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[20] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[21]_i_2 
       (.I0(GPR_Op2[21]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_6 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[21] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[22]_i_2 
       (.I0(GPR_Op2[22]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_7 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[22] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[23]_i_2 
       (.I0(GPR_Op2[23]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_8 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[23] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[24]_i_2 
       (.I0(GPR_Op2[24]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_9 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[24] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[25]_i_2 
       (.I0(GPR_Op2[25]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_10 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[25] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[26]_i_2 
       (.I0(GPR_Op2[26]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_11 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[26] ));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \EX_Op2[27]_i_2 
       (.I0(of_Take_Interrupt),
        .I1(GPR_Op2[27]),
        .I2(of_op2_sel_imm),
        .I3(\Using_FPGA.Native_0 ),
        .O(of_op2_imm_addr));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[28]_i_2 
       (.I0(GPR_Op2[28]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_12 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[28] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[29]_i_2 
       (.I0(GPR_Op2[29]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_13 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[29] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[2]_i_2 
       (.I0(GPR_Op2[2]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [13]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[2] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[30]_i_2 
       (.I0(GPR_Op2[30]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_14 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[30] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \EX_Op2[31]_i_2 
       (.I0(GPR_Op2[31]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_15 ),
        .I3(of_Take_Interrupt),
        .O(\EX_Op2_reg[31] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[3]_i_2 
       (.I0(GPR_Op2[3]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [12]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[3] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[4]_i_2 
       (.I0(GPR_Op2[4]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [11]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[4] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[5]_i_2 
       (.I0(GPR_Op2[5]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [10]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[5] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[6]_i_2 
       (.I0(GPR_Op2[6]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [9]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[6] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[7]_i_2 
       (.I0(GPR_Op2[7]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [8]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[7] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[8]_i_2 
       (.I0(GPR_Op2[8]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [7]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[8] ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \EX_Op2[9]_i_2 
       (.I0(GPR_Op2[9]),
        .I1(of_op2_sel_imm),
        .I2(\Using_FPGA.Native_1 ),
        .I3(of_read_imm_reg_ii_reg),
        .I4(\imm_reg_reg[0] [6]),
        .I5(of_Take_Interrupt),
        .O(\EX_Op2_reg[9] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_41),
        .Q(\ex_opcode_reg[1] ),
        .R(sync_reset));
  LUT5 #(
    .INIT(32'hFFF7FFFF)) 
    \Using_FPGA.Native_i_1__10 
       (.I0(of_read_mem_write_op2_conflict_part2),
        .I1(mem_is_multi_or_load_instr),
        .I2(of_op2_sel_imm),
        .I3(p_0_in31_in),
        .I4(of_read_mem_write_op2_conflict_part1),
        .O(use_Reg_Neg_S_reg_0));
  LUT5 #(
    .INIT(32'hFFF7FFFF)) 
    \Using_FPGA.Native_i_1__9 
       (.I0(of_read_ex_write_op2_conflict_part2),
        .I1(ex_is_multi_or_load_instr),
        .I2(of_op2_sel_imm),
        .I3(p_0_in31_in),
        .I4(of_read_ex_write_op2_conflict_part1),
        .O(use_Reg_Neg_S_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF00004000)) 
    \Using_FPGA.Native_i_2__27 
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_16 ),
        .I2(\Using_FPGA.Native_24 ),
        .I3(\Using_FPGA.Native_19 ),
        .I4(\Using_FPGA.Native_18 ),
        .I5(\Using_FPGA.Native_25 ),
        .O(of_op2_sel_imm));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h0006)) 
    ex_alu_sel_logic_i_i_1
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_16 ),
        .I2(\Using_FPGA.Native_19 ),
        .I3(EX_ALU_Op1__1),
        .O(ex_alu_sel_logic_i_reg));
  LUT4 #(
    .INIT(16'h0040)) 
    ex_branch_with_delayslot_i_1
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_16 ),
        .I2(\Using_FPGA.Native_20 ),
        .I3(of_Take_Interrupt),
        .O(ex_branch_with_delayslot_reg));
  LUT5 #(
    .INIT(32'h000000E2)) 
    ex_branch_with_delayslot_i_i_1
       (.I0(ex_branch_with_delayslot_i),
        .I1(of_pause_reg),
        .I2(ex_branch_with_delayslot_reg),
        .I3(\wb_exception_kind_i_reg[28] ),
        .I4(sync_reset),
        .O(ex_branch_with_delayslot_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h40)) 
    ex_enable_sext_shift_i_i_1
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_16 ),
        .I2(\Using_FPGA.Native_19 ),
        .O(ex_enable_sext_shift_i0));
  LUT6 #(
    .INIT(64'h0202000302020000)) 
    ex_gpr_write_dbg_i_1
       (.I0(ex_gpr_write),
        .I1(wb_exception),
        .I2(sync_reset),
        .I3(E),
        .I4(of_pause_reg),
        .I5(ex_gpr_write_dbg),
        .O(ex_gpr_write_dbg_reg));
  LUT6 #(
    .INIT(64'h00000000000000E2)) 
    ex_gpr_write_i_1
       (.I0(ex_gpr_write_reg_0),
        .I1(of_pause_reg),
        .I2(ex_gpr_write),
        .I3(ex_gpr_write111_out__0),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_gpr_write_reg));
  LUT4 #(
    .INIT(16'h0A2A)) 
    ex_gpr_write_i_2
       (.I0(ex_gpr_write_dbg108_in),
        .I1(\Using_FPGA.Native_12 ),
        .I2(p_0_in31_in),
        .I3(\Using_FPGA.Native_13 ),
        .O(ex_gpr_write));
  LUT6 #(
    .INIT(64'h8888888888888BBB)) 
    ex_gpr_write_i_4
       (.I0(\Using_FPGA.Native_21 ),
        .I1(p_28_in),
        .I2(\Using_FPGA.Native_22 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(ex_gpr_write_i_5_n_0),
        .I5(\Using_FPGA.Native_23 ),
        .O(ex_gpr_write_dbg108_in));
  LUT5 #(
    .INIT(32'h40000000)) 
    ex_gpr_write_i_5
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_18 ),
        .I2(\Using_FPGA.Native_19 ),
        .I3(\Using_FPGA.Native_24 ),
        .I4(\Using_FPGA.Native_16 ),
        .O(ex_gpr_write_i_5_n_0));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    ex_set_bip_i_1
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_24 ),
        .I2(\Using_FPGA.Native_18 ),
        .I3(\Using_FPGA.Native_19 ),
        .I4(\Using_FPGA.Native_16 ),
        .I5(ex_set_bip0__1),
        .O(ex_set_bip));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_147
   (\ex_instr_reg[20] ,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    sync_reset,
    of_instr_ii_22,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \ex_instr_reg[20] ;
  output \Performance_Debug_Control.ex_brki_hit_reg ;
  input sync_reset;
  input of_instr_ii_22;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire \Performance_Debug_Control.ex_brki_hit_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_instr_reg[20] ;
  wire of_instr_ii_22;
  wire sync_reset;

  LUT4 #(
    .INIT(16'hFFFE)) 
    \Performance_Debug_Control.ex_brki_hit_i_4 
       (.I0(\ex_instr_reg[20] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(\Performance_Debug_Control.ex_brki_hit_reg ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_22),
        .Q(\ex_instr_reg[20] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_149
   (\ex_instr_reg[21] ,
    sync_reset,
    of_instr_ii_21,
    Clk);
  output \ex_instr_reg[21] ;
  input sync_reset;
  input of_instr_ii_21;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[21] ;
  wire of_instr_ii_21;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_21),
        .Q(\ex_instr_reg[21] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_151
   (\ex_instr_reg[22] ,
    \Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_20,
    Clk,
    \Using_FPGA.Native_1 );
  output \ex_instr_reg[22] ;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_20;
  input Clk;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \ex_instr_reg[22] ;
  wire of_instr_ii_20;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_20),
        .Q(\ex_instr_reg[22] ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__105 
       (.I0(\ex_instr_reg[22] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_153
   (\ex_instr_reg[23] ,
    sync_reset,
    of_instr_ii_19,
    Clk);
  output \ex_instr_reg[23] ;
  input sync_reset;
  input of_instr_ii_19;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[23] ;
  wire of_instr_ii_19;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_19),
        .Q(\ex_instr_reg[23] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_155
   (\ex_instr_reg[24] ,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    sync_reset,
    of_instr_ii_18,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \ex_instr_reg[24] ;
  output \Performance_Debug_Control.ex_brki_hit_reg ;
  input sync_reset;
  input of_instr_ii_18;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire \Performance_Debug_Control.ex_brki_hit_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_instr_reg[24] ;
  wire of_instr_ii_18;
  wire sync_reset;

  LUT4 #(
    .INIT(16'hFFFE)) 
    \Performance_Debug_Control.ex_brki_hit_i_5 
       (.I0(\ex_instr_reg[24] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(\Performance_Debug_Control.ex_brki_hit_reg ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_18),
        .Q(\ex_instr_reg[24] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_157
   (\ex_instr_reg[25] ,
    sync_reset,
    of_instr_ii_17,
    Clk);
  output \ex_instr_reg[25] ;
  input sync_reset;
  input of_instr_ii_17;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[25] ;
  wire of_instr_ii_17;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_17),
        .Q(\ex_instr_reg[25] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_159
   (\ex_instr_reg[26] ,
    \EX_Sext_Op_reg[0] ,
    sync_reset,
    of_instr_ii_16,
    Clk,
    \Using_FPGA.Native_0 );
  output \ex_instr_reg[26] ;
  output \EX_Sext_Op_reg[0] ;
  input sync_reset;
  input of_instr_ii_16;
  input Clk;
  input \Using_FPGA.Native_0 ;

  wire Clk;
  wire \EX_Sext_Op_reg[0] ;
  wire \Using_FPGA.Native_0 ;
  wire \ex_instr_reg[26] ;
  wire of_instr_ii_16;
  wire sync_reset;

  LUT2 #(
    .INIT(4'h8)) 
    \EX_Sext_Op[0]_i_2 
       (.I0(\ex_instr_reg[26] ),
        .I1(\Using_FPGA.Native_0 ),
        .O(\EX_Sext_Op_reg[0] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_16),
        .Q(\ex_instr_reg[26] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_161
   (\ex_instr_reg[27] ,
    of_Imm180,
    sync_reset,
    of_instr_ii_15,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \ex_instr_reg[27] ;
  output of_Imm180;
  input sync_reset;
  input of_instr_ii_15;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \ex_instr_reg[27] ;
  wire of_Imm180;
  wire of_instr_ii_15;
  wire sync_reset;

  LUT5 #(
    .INIT(32'h00000020)) 
    \Performance_Debug_Control.ex_brki_hit_i_3 
       (.I0(\ex_instr_reg[27] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .O(of_Imm180));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_15),
        .Q(\ex_instr_reg[27] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_163
   (\ex_instr_reg[28] ,
    sync_reset,
    of_instr_ii_14,
    Clk);
  output \ex_instr_reg[28] ;
  input sync_reset;
  input of_instr_ii_14;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[28] ;
  wire of_instr_ii_14;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_14),
        .Q(\ex_instr_reg[28] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_165
   (\ex_instr_reg[29] ,
    sync_reset,
    of_instr_ii_13,
    Clk);
  output \ex_instr_reg[29] ;
  input sync_reset;
  input of_instr_ii_13;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[29] ;
  wire of_instr_ii_13;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_13),
        .Q(\ex_instr_reg[29] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_167
   (\ex_opcode_reg[2] ,
    ex_mbar_decode_reg,
    p_1_in26_in,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    \Using_FPGA.Native_0 ,
    \EX_ALU_Op_reg[0] ,
    EX_SWAP_Instr_reg,
    sync_reset,
    of_instr_ii_40,
    Clk,
    \Using_FPGA.Native_1 ,
    of_pause_reg,
    ex_mbar_decode,
    E,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    of_Imm180,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 );
  output \ex_opcode_reg[2] ;
  output ex_mbar_decode_reg;
  output p_1_in26_in;
  output \Performance_Debug_Control.ex_brki_hit_reg ;
  output \Using_FPGA.Native_0 ;
  output \EX_ALU_Op_reg[0] ;
  output EX_SWAP_Instr_reg;
  input sync_reset;
  input of_instr_ii_40;
  input Clk;
  input [7:0]\Using_FPGA.Native_1 ;
  input of_pause_reg;
  input ex_mbar_decode;
  input [0:0]E;
  input [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  input of_Imm180;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;

  wire Clk;
  wire [0:0]E;
  wire \EX_ALU_Op_reg[0] ;
  wire EX_SWAP_Instr_reg;
  wire \Performance_Debug_Control.ex_brki_hit_i_2_n_0 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg ;
  wire [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  wire \Using_FPGA.Native_0 ;
  wire [7:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire ex_mbar_decode;
  wire ex_mbar_decode_reg;
  wire \ex_opcode_reg[2] ;
  wire of_Imm180;
  wire of_instr_ii_40;
  wire of_pause_reg;
  wire p_1_in26_in;
  wire sync_reset;

  LUT3 #(
    .INIT(8'h04)) 
    \EX_ALU_Op[0]_i_2 
       (.I0(\ex_opcode_reg[2] ),
        .I1(\Using_FPGA.Native_1 [0]),
        .I2(\Using_FPGA.Native_4 ),
        .O(\EX_ALU_Op_reg[0] ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \EX_Sext_Op[1]_i_2 
       (.I0(\ex_opcode_reg[2] ),
        .I1(\Using_FPGA.Native_8 ),
        .I2(\Using_FPGA.Native_6 ),
        .I3(\Using_FPGA.Native_4 ),
        .O(EX_SWAP_Instr_reg));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \Performance_Debug_Control.ex_brki_hit_i_1 
       (.I0(\Serial_Dbg_Intf.control_reg_reg[8] ),
        .I1(\Performance_Debug_Control.ex_brki_hit_i_2_n_0 ),
        .I2(of_Imm180),
        .I3(\Using_FPGA.Native_1 [6]),
        .I4(\Using_FPGA.Native_1 [5]),
        .I5(\Using_FPGA.Native_1 [7]),
        .O(\Performance_Debug_Control.ex_brki_hit_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    \Performance_Debug_Control.ex_brki_hit_i_2 
       (.I0(p_1_in26_in),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_3 ),
        .I3(\Using_FPGA.Native_1 [2]),
        .I4(\Using_FPGA.Native_1 [1]),
        .I5(\Using_FPGA.Native_1 [3]),
        .O(\Performance_Debug_Control.ex_brki_hit_i_2_n_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_40),
        .Q(\ex_opcode_reg[2] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hEF)) 
    \Using_FPGA.Native_i_2__86 
       (.I0(\ex_opcode_reg[2] ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\Using_FPGA.Native_6 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'h80808F80)) 
    ex_mbar_decode_cmb_inferred_i_1
       (.I0(p_1_in26_in),
        .I1(\Using_FPGA.Native_1 [4]),
        .I2(of_pause_reg),
        .I3(ex_mbar_decode),
        .I4(E),
        .O(ex_mbar_decode_reg));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    ex_mbar_decode_cmb_inferred_i_2
       (.I0(\ex_opcode_reg[2] ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(\Using_FPGA.Native_7 ),
        .I5(\Using_FPGA.Native_8 ),
        .O(p_1_in26_in));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_169
   (\ex_instr_reg[30] ,
    p_2_in,
    sync_reset,
    of_instr_ii_12,
    Clk);
  output \ex_instr_reg[30] ;
  output p_2_in;
  input sync_reset;
  input of_instr_ii_12;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[30] ;
  wire of_instr_ii_12;
  wire p_2_in;
  wire sync_reset;

  LUT1 #(
    .INIT(2'h1)) 
    EX_SWAP_BYTE_Instr_i_1
       (.I0(\ex_instr_reg[30] ),
        .O(p_2_in));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_12),
        .Q(\ex_instr_reg[30] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_171
   (\ex_instr_reg[31] ,
    ex_move_to_MSR_instr113_out,
    sync_reset,
    of_instr_ii_11,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \ex_instr_reg[31] ;
  output ex_move_to_MSR_instr113_out;
  input sync_reset;
  input of_instr_ii_11;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \ex_instr_reg[31] ;
  wire ex_move_to_MSR_instr113_out;
  wire of_instr_ii_11;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_11),
        .Q(\ex_instr_reg[31] ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    ex_move_to_MSR_instr_i_1
       (.I0(\ex_instr_reg[31] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(\Using_FPGA.Native_4 ),
        .O(ex_move_to_MSR_instr113_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_173
   (\Using_FPGA.Native_0 ,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    \EX_Op3_reg[31]_1 ,
    sync_reset,
    of_instr_ii_10,
    Clk,
    mem_valid_instr,
    mem_gpr_write,
    ex_valid,
    ex_gpr_write_reg,
    wb_valid_reg,
    wb_exception,
    wb_gpr_write_i,
    wb_reset);
  output \Using_FPGA.Native_0 ;
  output \EX_Op3_reg[31] ;
  output \EX_Op3_reg[31]_0 ;
  output \EX_Op3_reg[31]_1 ;
  input sync_reset;
  input of_instr_ii_10;
  input Clk;
  input mem_valid_instr;
  input mem_gpr_write;
  input ex_valid;
  input ex_gpr_write_reg;
  input wb_valid_reg;
  input wb_exception;
  input wb_gpr_write_i;
  input wb_reset;

  wire Clk;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire \EX_Op3_reg[31]_1 ;
  wire \Using_FPGA.Native_0 ;
  wire ex_gpr_write_reg;
  wire ex_valid;
  wire mem_gpr_write;
  wire mem_valid_instr;
  wire of_instr_ii_10;
  wire sync_reset;
  wire wb_exception;
  wire wb_gpr_write_i;
  wire wb_reset;
  wire wb_valid_reg;

  LUT5 #(
    .INIT(32'hAAAA0800)) 
    \EX_Op3[0]_i_10 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(wb_valid_reg),
        .I2(wb_exception),
        .I3(wb_gpr_write_i),
        .I4(wb_reset),
        .O(\EX_Op3_reg[31]_1 ));
  LUT3 #(
    .INIT(8'h80)) 
    \EX_Op3[0]_i_12 
       (.I0(ex_valid),
        .I1(ex_gpr_write_reg),
        .I2(\Using_FPGA.Native_0 ),
        .O(\EX_Op3_reg[31]_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \EX_Op3[0]_i_8 
       (.I0(mem_valid_instr),
        .I1(mem_gpr_write),
        .I2(\Using_FPGA.Native_0 ),
        .O(\EX_Op3_reg[31] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_10),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_175
   (\Using_FPGA.Native_0 ,
    \EX_Branch_CMP_Op1_reg[0] ,
    sync_reset,
    of_instr_ii_9,
    Clk,
    ex_sel_alu_i_reg,
    GPR_Op1,
    WB_Doublet_Access_reg,
    MEM_Fwd,
    EX_SWAP_Instr_reg,
    WB_Doublet_Access_reg_0,
    \Using_FPGA.Native_1 ,
    EX_SWAP_Instr_reg_0,
    WB_Doublet_Access_reg_1,
    EX_SWAP_Instr_reg_1,
    WB_Doublet_Access_reg_2,
    EX_SWAP_Instr_reg_2,
    WB_Doublet_Access_reg_3,
    EX_SWAP_Instr_reg_3,
    WB_Doublet_Access_reg_4,
    EX_SWAP_Instr_reg_4,
    WB_Doublet_Access_reg_5,
    EX_SWAP_Instr_reg_5,
    WB_Doublet_Access_reg_6,
    EX_SWAP_Instr_reg_6,
    WB_Doublet_Access_reg_7,
    EX_SWAP_Instr_reg_7,
    WB_Doublet_Access_reg_8,
    EX_SWAP_Instr_reg_8,
    WB_Doublet_Access_reg_9,
    EX_SWAP_Instr_reg_9,
    WB_Doublet_Access_reg_10,
    EX_SWAP_Instr_reg_10,
    WB_Doublet_Access_reg_11,
    EX_SWAP_Instr_reg_11,
    WB_Doublet_Access_reg_12,
    EX_SWAP_Instr_reg_12,
    WB_Doublet_Access_reg_13,
    EX_SWAP_Instr_reg_13,
    WB_Doublet_Access_reg_14,
    EX_SWAP_Instr_reg_14,
    WB_Byte_Access_reg,
    EX_SWAP_Instr_reg_15,
    EX_SWAP_Instr_reg_16,
    EX_SWAP_Instr_reg_17,
    EX_SWAP_Instr_reg_18,
    EX_SWAP_Instr_reg_19,
    EX_SWAP_Instr_reg_20,
    EX_SWAP_Instr_reg_21,
    EX_SWAP_Instr_reg_22,
    EX_SWAP_Instr_reg_23,
    EX_SWAP_Instr_reg_24,
    EX_SWAP_Instr_reg_25,
    EX_SWAP_Instr_reg_26,
    EX_SWAP_Instr_reg_27,
    EX_SWAP_Instr_reg_28,
    EX_SWAP_Instr_reg_29,
    p_222_in,
    \mem_gpr_write_addr_reg[0] ,
    \mem_gpr_write_addr_reg[4] ,
    \Using_FPGA.Native_2 ,
    \wb_gpr_write_addr_reg[0] ,
    \wb_gpr_write_addr_reg[4] ,
    p_29_in,
    p_225_in,
    \ex_gpr_write_addr_reg[0] ,
    \ex_gpr_write_addr_reg[4] );
  output \Using_FPGA.Native_0 ;
  output [31:0]\EX_Branch_CMP_Op1_reg[0] ;
  input sync_reset;
  input of_instr_ii_9;
  input Clk;
  input ex_sel_alu_i_reg;
  input [0:31]GPR_Op1;
  input WB_Doublet_Access_reg;
  input [3:0]MEM_Fwd;
  input EX_SWAP_Instr_reg;
  input WB_Doublet_Access_reg_0;
  input [27:0]\Using_FPGA.Native_1 ;
  input EX_SWAP_Instr_reg_0;
  input WB_Doublet_Access_reg_1;
  input EX_SWAP_Instr_reg_1;
  input WB_Doublet_Access_reg_2;
  input EX_SWAP_Instr_reg_2;
  input WB_Doublet_Access_reg_3;
  input EX_SWAP_Instr_reg_3;
  input WB_Doublet_Access_reg_4;
  input EX_SWAP_Instr_reg_4;
  input WB_Doublet_Access_reg_5;
  input EX_SWAP_Instr_reg_5;
  input WB_Doublet_Access_reg_6;
  input EX_SWAP_Instr_reg_6;
  input WB_Doublet_Access_reg_7;
  input EX_SWAP_Instr_reg_7;
  input WB_Doublet_Access_reg_8;
  input EX_SWAP_Instr_reg_8;
  input WB_Doublet_Access_reg_9;
  input EX_SWAP_Instr_reg_9;
  input WB_Doublet_Access_reg_10;
  input EX_SWAP_Instr_reg_10;
  input WB_Doublet_Access_reg_11;
  input EX_SWAP_Instr_reg_11;
  input WB_Doublet_Access_reg_12;
  input EX_SWAP_Instr_reg_12;
  input WB_Doublet_Access_reg_13;
  input EX_SWAP_Instr_reg_13;
  input WB_Doublet_Access_reg_14;
  input EX_SWAP_Instr_reg_14;
  input [15:0]WB_Byte_Access_reg;
  input EX_SWAP_Instr_reg_15;
  input EX_SWAP_Instr_reg_16;
  input EX_SWAP_Instr_reg_17;
  input EX_SWAP_Instr_reg_18;
  input EX_SWAP_Instr_reg_19;
  input EX_SWAP_Instr_reg_20;
  input EX_SWAP_Instr_reg_21;
  input EX_SWAP_Instr_reg_22;
  input EX_SWAP_Instr_reg_23;
  input EX_SWAP_Instr_reg_24;
  input EX_SWAP_Instr_reg_25;
  input EX_SWAP_Instr_reg_26;
  input EX_SWAP_Instr_reg_27;
  input EX_SWAP_Instr_reg_28;
  input EX_SWAP_Instr_reg_29;
  input p_222_in;
  input [1:0]\mem_gpr_write_addr_reg[0] ;
  input \mem_gpr_write_addr_reg[4] ;
  input \Using_FPGA.Native_2 ;
  input [1:0]\wb_gpr_write_addr_reg[0] ;
  input \wb_gpr_write_addr_reg[4] ;
  input p_29_in;
  input p_225_in;
  input [1:0]\ex_gpr_write_addr_reg[0] ;
  input \ex_gpr_write_addr_reg[4] ;

  wire Clk;
  wire [31:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire EX_SWAP_Instr_reg;
  wire EX_SWAP_Instr_reg_0;
  wire EX_SWAP_Instr_reg_1;
  wire EX_SWAP_Instr_reg_10;
  wire EX_SWAP_Instr_reg_11;
  wire EX_SWAP_Instr_reg_12;
  wire EX_SWAP_Instr_reg_13;
  wire EX_SWAP_Instr_reg_14;
  wire EX_SWAP_Instr_reg_15;
  wire EX_SWAP_Instr_reg_16;
  wire EX_SWAP_Instr_reg_17;
  wire EX_SWAP_Instr_reg_18;
  wire EX_SWAP_Instr_reg_19;
  wire EX_SWAP_Instr_reg_2;
  wire EX_SWAP_Instr_reg_20;
  wire EX_SWAP_Instr_reg_21;
  wire EX_SWAP_Instr_reg_22;
  wire EX_SWAP_Instr_reg_23;
  wire EX_SWAP_Instr_reg_24;
  wire EX_SWAP_Instr_reg_25;
  wire EX_SWAP_Instr_reg_26;
  wire EX_SWAP_Instr_reg_27;
  wire EX_SWAP_Instr_reg_28;
  wire EX_SWAP_Instr_reg_29;
  wire EX_SWAP_Instr_reg_3;
  wire EX_SWAP_Instr_reg_4;
  wire EX_SWAP_Instr_reg_5;
  wire EX_SWAP_Instr_reg_6;
  wire EX_SWAP_Instr_reg_7;
  wire EX_SWAP_Instr_reg_8;
  wire EX_SWAP_Instr_reg_9;
  wire [0:31]GPR_Op1;
  wire [3:0]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire [27:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [15:0]WB_Byte_Access_reg;
  wire WB_Doublet_Access_reg;
  wire WB_Doublet_Access_reg_0;
  wire WB_Doublet_Access_reg_1;
  wire WB_Doublet_Access_reg_10;
  wire WB_Doublet_Access_reg_11;
  wire WB_Doublet_Access_reg_12;
  wire WB_Doublet_Access_reg_13;
  wire WB_Doublet_Access_reg_14;
  wire WB_Doublet_Access_reg_2;
  wire WB_Doublet_Access_reg_3;
  wire WB_Doublet_Access_reg_4;
  wire WB_Doublet_Access_reg_5;
  wire WB_Doublet_Access_reg_6;
  wire WB_Doublet_Access_reg_7;
  wire WB_Doublet_Access_reg_8;
  wire WB_Doublet_Access_reg_9;
  wire [1:0]\ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_sel_alu_i_reg;
  wire [1:0]\mem_gpr_write_addr_reg[0] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire of_instr_ii_9;
  wire [0:1]of_op1_sel;
  wire of_read_ex_write_op1_conflict__0;
  wire of_read_mem_write_op1_conflict__0;
  wire of_read_wb_write_op1_conflict__0;
  wire p_222_in;
  wire p_225_in;
  wire p_29_in;
  wire sync_reset;
  wire [1:0]\wb_gpr_write_addr_reg[0] ;
  wire \wb_gpr_write_addr_reg[4] ;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_9),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__11 
       (.I0(EX_SWAP_Instr_reg),
        .I1(GPR_Op1[1]),
        .I2(WB_Doublet_Access_reg_0),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [27]),
        .O(\EX_Branch_CMP_Op1_reg[0] [30]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__12 
       (.I0(EX_SWAP_Instr_reg_0),
        .I1(GPR_Op1[2]),
        .I2(WB_Doublet_Access_reg_1),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [26]),
        .O(\EX_Branch_CMP_Op1_reg[0] [29]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__13 
       (.I0(EX_SWAP_Instr_reg_1),
        .I1(GPR_Op1[3]),
        .I2(WB_Doublet_Access_reg_2),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [25]),
        .O(\EX_Branch_CMP_Op1_reg[0] [28]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__14 
       (.I0(EX_SWAP_Instr_reg_2),
        .I1(GPR_Op1[4]),
        .I2(WB_Doublet_Access_reg_3),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [24]),
        .O(\EX_Branch_CMP_Op1_reg[0] [27]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__15 
       (.I0(EX_SWAP_Instr_reg_3),
        .I1(GPR_Op1[5]),
        .I2(WB_Doublet_Access_reg_4),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [23]),
        .O(\EX_Branch_CMP_Op1_reg[0] [26]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__16 
       (.I0(EX_SWAP_Instr_reg_4),
        .I1(GPR_Op1[6]),
        .I2(WB_Doublet_Access_reg_5),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [22]),
        .O(\EX_Branch_CMP_Op1_reg[0] [25]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__17 
       (.I0(EX_SWAP_Instr_reg_5),
        .I1(GPR_Op1[7]),
        .I2(WB_Doublet_Access_reg_6),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [21]),
        .O(\EX_Branch_CMP_Op1_reg[0] [24]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__18 
       (.I0(EX_SWAP_Instr_reg_6),
        .I1(GPR_Op1[8]),
        .I2(WB_Doublet_Access_reg_7),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [20]),
        .O(\EX_Branch_CMP_Op1_reg[0] [23]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__19 
       (.I0(EX_SWAP_Instr_reg_7),
        .I1(GPR_Op1[9]),
        .I2(WB_Doublet_Access_reg_8),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [19]),
        .O(\EX_Branch_CMP_Op1_reg[0] [22]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__20 
       (.I0(EX_SWAP_Instr_reg_8),
        .I1(GPR_Op1[10]),
        .I2(WB_Doublet_Access_reg_9),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [18]),
        .O(\EX_Branch_CMP_Op1_reg[0] [21]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__21 
       (.I0(EX_SWAP_Instr_reg_9),
        .I1(GPR_Op1[11]),
        .I2(WB_Doublet_Access_reg_10),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [17]),
        .O(\EX_Branch_CMP_Op1_reg[0] [20]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__22 
       (.I0(EX_SWAP_Instr_reg_10),
        .I1(GPR_Op1[12]),
        .I2(WB_Doublet_Access_reg_11),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [16]),
        .O(\EX_Branch_CMP_Op1_reg[0] [19]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__23 
       (.I0(EX_SWAP_Instr_reg_11),
        .I1(GPR_Op1[13]),
        .I2(WB_Doublet_Access_reg_12),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [15]),
        .O(\EX_Branch_CMP_Op1_reg[0] [18]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__24 
       (.I0(EX_SWAP_Instr_reg_12),
        .I1(GPR_Op1[14]),
        .I2(WB_Doublet_Access_reg_13),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [14]),
        .O(\EX_Branch_CMP_Op1_reg[0] [17]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__25 
       (.I0(EX_SWAP_Instr_reg_13),
        .I1(GPR_Op1[15]),
        .I2(WB_Doublet_Access_reg_14),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [13]),
        .O(\EX_Branch_CMP_Op1_reg[0] [16]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__26 
       (.I0(EX_SWAP_Instr_reg_14),
        .I1(GPR_Op1[16]),
        .I2(WB_Byte_Access_reg[15]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [12]),
        .O(\EX_Branch_CMP_Op1_reg[0] [15]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__27 
       (.I0(EX_SWAP_Instr_reg_15),
        .I1(GPR_Op1[17]),
        .I2(WB_Byte_Access_reg[14]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [11]),
        .O(\EX_Branch_CMP_Op1_reg[0] [14]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__28 
       (.I0(EX_SWAP_Instr_reg_16),
        .I1(GPR_Op1[18]),
        .I2(WB_Byte_Access_reg[13]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [10]),
        .O(\EX_Branch_CMP_Op1_reg[0] [13]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__29 
       (.I0(EX_SWAP_Instr_reg_17),
        .I1(GPR_Op1[19]),
        .I2(WB_Byte_Access_reg[12]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [9]),
        .O(\EX_Branch_CMP_Op1_reg[0] [12]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__30 
       (.I0(EX_SWAP_Instr_reg_18),
        .I1(GPR_Op1[20]),
        .I2(WB_Byte_Access_reg[11]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [8]),
        .O(\EX_Branch_CMP_Op1_reg[0] [11]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__31 
       (.I0(EX_SWAP_Instr_reg_19),
        .I1(GPR_Op1[21]),
        .I2(WB_Byte_Access_reg[10]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [7]),
        .O(\EX_Branch_CMP_Op1_reg[0] [10]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__32 
       (.I0(EX_SWAP_Instr_reg_20),
        .I1(GPR_Op1[22]),
        .I2(WB_Byte_Access_reg[9]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [6]),
        .O(\EX_Branch_CMP_Op1_reg[0] [9]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__33 
       (.I0(EX_SWAP_Instr_reg_21),
        .I1(GPR_Op1[23]),
        .I2(WB_Byte_Access_reg[8]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [5]),
        .O(\EX_Branch_CMP_Op1_reg[0] [8]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__34 
       (.I0(EX_SWAP_Instr_reg_22),
        .I1(GPR_Op1[24]),
        .I2(WB_Byte_Access_reg[7]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [4]),
        .O(\EX_Branch_CMP_Op1_reg[0] [7]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__35 
       (.I0(EX_SWAP_Instr_reg_23),
        .I1(GPR_Op1[25]),
        .I2(WB_Byte_Access_reg[6]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [3]),
        .O(\EX_Branch_CMP_Op1_reg[0] [6]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__36 
       (.I0(EX_SWAP_Instr_reg_24),
        .I1(GPR_Op1[26]),
        .I2(WB_Byte_Access_reg[5]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [2]),
        .O(\EX_Branch_CMP_Op1_reg[0] [5]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__37 
       (.I0(EX_SWAP_Instr_reg_25),
        .I1(GPR_Op1[27]),
        .I2(WB_Byte_Access_reg[4]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [1]),
        .O(\EX_Branch_CMP_Op1_reg[0] [4]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__38 
       (.I0(EX_SWAP_Instr_reg_26),
        .I1(GPR_Op1[28]),
        .I2(WB_Byte_Access_reg[3]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[2]),
        .O(\EX_Branch_CMP_Op1_reg[0] [3]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__39 
       (.I0(EX_SWAP_Instr_reg_27),
        .I1(GPR_Op1[29]),
        .I2(WB_Byte_Access_reg[2]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[1]),
        .O(\EX_Branch_CMP_Op1_reg[0] [2]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__40 
       (.I0(EX_SWAP_Instr_reg_28),
        .I1(GPR_Op1[30]),
        .I2(WB_Byte_Access_reg[1]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[0]),
        .O(\EX_Branch_CMP_Op1_reg[0] [1]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__41 
       (.I0(EX_SWAP_Instr_reg_29),
        .I1(GPR_Op1[31]),
        .I2(WB_Byte_Access_reg[0]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(\Using_FPGA.Native_1 [0]),
        .O(\EX_Branch_CMP_Op1_reg[0] [0]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_2__28 
       (.I0(ex_sel_alu_i_reg),
        .I1(GPR_Op1[0]),
        .I2(WB_Doublet_Access_reg),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[3]),
        .O(\EX_Branch_CMP_Op1_reg[0] [31]));
  LUT3 #(
    .INIT(8'h0E)) 
    \Using_FPGA.Native_i_5__0 
       (.I0(of_read_mem_write_op1_conflict__0),
        .I1(of_read_wb_write_op1_conflict__0),
        .I2(of_read_ex_write_op1_conflict__0),
        .O(of_op1_sel[0]));
  LUT3 #(
    .INIT(8'hF4)) 
    \Using_FPGA.Native_i_6__0 
       (.I0(of_read_mem_write_op1_conflict__0),
        .I1(of_read_wb_write_op1_conflict__0),
        .I2(of_read_ex_write_op1_conflict__0),
        .O(of_op1_sel[1]));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \Using_FPGA.Native_i_7__0 
       (.I0(p_222_in),
        .I1(\mem_gpr_write_addr_reg[0] [1]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\mem_gpr_write_addr_reg[4] ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\mem_gpr_write_addr_reg[0] [0]),
        .O(of_read_mem_write_op1_conflict__0));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \Using_FPGA.Native_i_8 
       (.I0(\wb_gpr_write_addr_reg[0] [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\wb_gpr_write_addr_reg[4] ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\wb_gpr_write_addr_reg[0] [0]),
        .I5(p_29_in),
        .O(of_read_wb_write_op1_conflict__0));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \Using_FPGA.Native_i_9 
       (.I0(p_225_in),
        .I1(\ex_gpr_write_addr_reg[0] [1]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\ex_gpr_write_addr_reg[4] ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\ex_gpr_write_addr_reg[0] [0]),
        .O(of_read_ex_write_op1_conflict__0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_177
   (of_predecode,
    sync_reset,
    of_instr_ii_8,
    Clk);
  output [0:0]of_predecode;
  input sync_reset;
  input of_instr_ii_8;
  input Clk;

  wire Clk;
  wire of_instr_ii_8;
  wire [0:0]of_predecode;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_8),
        .Q(of_predecode),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_179
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_7,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_7;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_7;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_7),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_181
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_6,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_6;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_6;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_6),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_183
   (\Using_FPGA.Native_0 ,
    \EX_Branch_CMP_Op1_reg[31] ,
    \EX_Branch_CMP_Op1_reg[31]_0 ,
    \EX_Branch_CMP_Op1_reg[31]_1 ,
    sync_reset,
    of_instr_ii_5,
    Clk,
    \mem_gpr_write_addr_reg[2] ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \wb_gpr_write_addr_reg[2] ,
    \ex_gpr_write_addr_reg[4] ,
    I4,
    I0);
  output \Using_FPGA.Native_0 ;
  output \EX_Branch_CMP_Op1_reg[31] ;
  output \EX_Branch_CMP_Op1_reg[31]_0 ;
  output \EX_Branch_CMP_Op1_reg[31]_1 ;
  input sync_reset;
  input of_instr_ii_5;
  input Clk;
  input [2:0]\mem_gpr_write_addr_reg[2] ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [2:0]\wb_gpr_write_addr_reg[2] ;
  input \ex_gpr_write_addr_reg[4] ;
  input I4;
  input I0;

  wire Clk;
  wire \EX_Branch_CMP_Op1_reg[31] ;
  wire \EX_Branch_CMP_Op1_reg[31]_0 ;
  wire \EX_Branch_CMP_Op1_reg[31]_1 ;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire [2:0]\mem_gpr_write_addr_reg[2] ;
  wire of_instr_ii_5;
  wire sync_reset;
  wire [2:0]\wb_gpr_write_addr_reg[2] ;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_5),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native_i_11 
       (.I0(\mem_gpr_write_addr_reg[2] [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\mem_gpr_write_addr_reg[2] [2]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\mem_gpr_write_addr_reg[2] [1]),
        .O(\EX_Branch_CMP_Op1_reg[31] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native_i_12 
       (.I0(\wb_gpr_write_addr_reg[2] [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\wb_gpr_write_addr_reg[2] [2]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\wb_gpr_write_addr_reg[2] [1]),
        .O(\EX_Branch_CMP_Op1_reg[31]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native_i_15 
       (.I0(\ex_gpr_write_addr_reg[4] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(I4),
        .I4(\Using_FPGA.Native_2 ),
        .I5(I0),
        .O(\EX_Branch_CMP_Op1_reg[31]_1 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_185
   (\Using_FPGA.Native_0 ,
    \EX_Op2_reg[0] ,
    sync_reset,
    of_instr_ii_4,
    Clk,
    ex_sel_alu_i_reg,
    \Using_FPGA.Native_1 ,
    WB_Doublet_Access_reg,
    MEM_Fwd,
    EX_SWAP_Instr_reg,
    \Using_FPGA.Native_2 ,
    WB_Doublet_Access_reg_0,
    \Using_FPGA.Native_3 ,
    EX_SWAP_Instr_reg_0,
    \Using_FPGA.Native_4 ,
    WB_Doublet_Access_reg_1,
    EX_SWAP_Instr_reg_1,
    \Using_FPGA.Native_5 ,
    WB_Doublet_Access_reg_2,
    EX_SWAP_Instr_reg_2,
    \Using_FPGA.Native_6 ,
    WB_Doublet_Access_reg_3,
    EX_SWAP_Instr_reg_3,
    \Using_FPGA.Native_7 ,
    WB_Doublet_Access_reg_4,
    EX_SWAP_Instr_reg_4,
    \Using_FPGA.Native_8 ,
    WB_Doublet_Access_reg_5,
    EX_SWAP_Instr_reg_5,
    \Using_FPGA.Native_9 ,
    WB_Doublet_Access_reg_6,
    EX_SWAP_Instr_reg_6,
    \Using_FPGA.Native_10 ,
    WB_Doublet_Access_reg_7,
    EX_SWAP_Instr_reg_7,
    \Using_FPGA.Native_11 ,
    WB_Doublet_Access_reg_8,
    EX_SWAP_Instr_reg_8,
    \Using_FPGA.Native_12 ,
    WB_Doublet_Access_reg_9,
    EX_SWAP_Instr_reg_9,
    \Using_FPGA.Native_13 ,
    WB_Doublet_Access_reg_10,
    EX_SWAP_Instr_reg_10,
    \Using_FPGA.Native_14 ,
    WB_Doublet_Access_reg_11,
    EX_SWAP_Instr_reg_11,
    \Using_FPGA.Native_15 ,
    WB_Doublet_Access_reg_12,
    EX_SWAP_Instr_reg_12,
    \Using_FPGA.Native_16 ,
    WB_Doublet_Access_reg_13,
    EX_SWAP_Instr_reg_13,
    \Using_FPGA.Native_17 ,
    WB_Doublet_Access_reg_14,
    EX_SWAP_Instr_reg_14,
    \Using_FPGA.Native_18 ,
    WB_Byte_Access_reg,
    EX_SWAP_Instr_reg_15,
    \Using_FPGA.Native_19 ,
    EX_SWAP_Instr_reg_16,
    \Using_FPGA.Native_20 ,
    EX_SWAP_Instr_reg_17,
    \Using_FPGA.Native_21 ,
    EX_SWAP_Instr_reg_18,
    \Using_FPGA.Native_22 ,
    EX_SWAP_Instr_reg_19,
    \Using_FPGA.Native_23 ,
    EX_SWAP_Instr_reg_20,
    \Using_FPGA.Native_24 ,
    EX_SWAP_Instr_reg_21,
    \Using_FPGA.Native_25 ,
    EX_SWAP_Instr_reg_22,
    \Using_FPGA.Native_26 ,
    EX_SWAP_Instr_reg_23,
    \Using_FPGA.Native_27 ,
    EX_SWAP_Instr_reg_24,
    \Using_FPGA.Native_28 ,
    EX_SWAP_Instr_reg_25,
    of_op2_imm_addr,
    EX_SWAP_Instr_reg_26,
    \Using_FPGA.Native_29 ,
    EX_SWAP_Instr_reg_27,
    \Using_FPGA.Native_30 ,
    EX_SWAP_Instr_reg_28,
    \Using_FPGA.Native_31 ,
    EX_SWAP_Instr_reg_29,
    \Using_FPGA.Native_32 ,
    of_Take_Interrupt,
    of_op2_sel_imm,
    p_0_in31_in,
    p_222_in,
    \mem_gpr_write_addr_reg[0] ,
    \mem_gpr_write_addr_reg[4] ,
    \Using_FPGA.Native_33 ,
    p_225_in,
    \ex_gpr_write_addr_reg[0] ,
    \ex_gpr_write_addr_reg[4] ,
    \wb_gpr_write_addr_reg[0] ,
    \wb_gpr_write_addr_reg[4] ,
    p_29_in);
  output \Using_FPGA.Native_0 ;
  output [31:0]\EX_Op2_reg[0] ;
  input sync_reset;
  input of_instr_ii_4;
  input Clk;
  input ex_sel_alu_i_reg;
  input \Using_FPGA.Native_1 ;
  input WB_Doublet_Access_reg;
  input [3:0]MEM_Fwd;
  input EX_SWAP_Instr_reg;
  input \Using_FPGA.Native_2 ;
  input WB_Doublet_Access_reg_0;
  input [27:0]\Using_FPGA.Native_3 ;
  input EX_SWAP_Instr_reg_0;
  input \Using_FPGA.Native_4 ;
  input WB_Doublet_Access_reg_1;
  input EX_SWAP_Instr_reg_1;
  input \Using_FPGA.Native_5 ;
  input WB_Doublet_Access_reg_2;
  input EX_SWAP_Instr_reg_2;
  input \Using_FPGA.Native_6 ;
  input WB_Doublet_Access_reg_3;
  input EX_SWAP_Instr_reg_3;
  input \Using_FPGA.Native_7 ;
  input WB_Doublet_Access_reg_4;
  input EX_SWAP_Instr_reg_4;
  input \Using_FPGA.Native_8 ;
  input WB_Doublet_Access_reg_5;
  input EX_SWAP_Instr_reg_5;
  input \Using_FPGA.Native_9 ;
  input WB_Doublet_Access_reg_6;
  input EX_SWAP_Instr_reg_6;
  input \Using_FPGA.Native_10 ;
  input WB_Doublet_Access_reg_7;
  input EX_SWAP_Instr_reg_7;
  input \Using_FPGA.Native_11 ;
  input WB_Doublet_Access_reg_8;
  input EX_SWAP_Instr_reg_8;
  input \Using_FPGA.Native_12 ;
  input WB_Doublet_Access_reg_9;
  input EX_SWAP_Instr_reg_9;
  input \Using_FPGA.Native_13 ;
  input WB_Doublet_Access_reg_10;
  input EX_SWAP_Instr_reg_10;
  input \Using_FPGA.Native_14 ;
  input WB_Doublet_Access_reg_11;
  input EX_SWAP_Instr_reg_11;
  input \Using_FPGA.Native_15 ;
  input WB_Doublet_Access_reg_12;
  input EX_SWAP_Instr_reg_12;
  input \Using_FPGA.Native_16 ;
  input WB_Doublet_Access_reg_13;
  input EX_SWAP_Instr_reg_13;
  input \Using_FPGA.Native_17 ;
  input WB_Doublet_Access_reg_14;
  input EX_SWAP_Instr_reg_14;
  input \Using_FPGA.Native_18 ;
  input [15:0]WB_Byte_Access_reg;
  input EX_SWAP_Instr_reg_15;
  input \Using_FPGA.Native_19 ;
  input EX_SWAP_Instr_reg_16;
  input \Using_FPGA.Native_20 ;
  input EX_SWAP_Instr_reg_17;
  input \Using_FPGA.Native_21 ;
  input EX_SWAP_Instr_reg_18;
  input \Using_FPGA.Native_22 ;
  input EX_SWAP_Instr_reg_19;
  input \Using_FPGA.Native_23 ;
  input EX_SWAP_Instr_reg_20;
  input \Using_FPGA.Native_24 ;
  input EX_SWAP_Instr_reg_21;
  input \Using_FPGA.Native_25 ;
  input EX_SWAP_Instr_reg_22;
  input \Using_FPGA.Native_26 ;
  input EX_SWAP_Instr_reg_23;
  input \Using_FPGA.Native_27 ;
  input EX_SWAP_Instr_reg_24;
  input \Using_FPGA.Native_28 ;
  input EX_SWAP_Instr_reg_25;
  input [0:0]of_op2_imm_addr;
  input EX_SWAP_Instr_reg_26;
  input \Using_FPGA.Native_29 ;
  input EX_SWAP_Instr_reg_27;
  input \Using_FPGA.Native_30 ;
  input EX_SWAP_Instr_reg_28;
  input \Using_FPGA.Native_31 ;
  input EX_SWAP_Instr_reg_29;
  input \Using_FPGA.Native_32 ;
  input of_Take_Interrupt;
  input of_op2_sel_imm;
  input p_0_in31_in;
  input p_222_in;
  input [1:0]\mem_gpr_write_addr_reg[0] ;
  input \mem_gpr_write_addr_reg[4] ;
  input \Using_FPGA.Native_33 ;
  input p_225_in;
  input [1:0]\ex_gpr_write_addr_reg[0] ;
  input \ex_gpr_write_addr_reg[4] ;
  input [1:0]\wb_gpr_write_addr_reg[0] ;
  input \wb_gpr_write_addr_reg[4] ;
  input p_29_in;

  wire Clk;
  wire [31:0]\EX_Op2_reg[0] ;
  wire EX_SWAP_Instr_reg;
  wire EX_SWAP_Instr_reg_0;
  wire EX_SWAP_Instr_reg_1;
  wire EX_SWAP_Instr_reg_10;
  wire EX_SWAP_Instr_reg_11;
  wire EX_SWAP_Instr_reg_12;
  wire EX_SWAP_Instr_reg_13;
  wire EX_SWAP_Instr_reg_14;
  wire EX_SWAP_Instr_reg_15;
  wire EX_SWAP_Instr_reg_16;
  wire EX_SWAP_Instr_reg_17;
  wire EX_SWAP_Instr_reg_18;
  wire EX_SWAP_Instr_reg_19;
  wire EX_SWAP_Instr_reg_2;
  wire EX_SWAP_Instr_reg_20;
  wire EX_SWAP_Instr_reg_21;
  wire EX_SWAP_Instr_reg_22;
  wire EX_SWAP_Instr_reg_23;
  wire EX_SWAP_Instr_reg_24;
  wire EX_SWAP_Instr_reg_25;
  wire EX_SWAP_Instr_reg_26;
  wire EX_SWAP_Instr_reg_27;
  wire EX_SWAP_Instr_reg_28;
  wire EX_SWAP_Instr_reg_29;
  wire EX_SWAP_Instr_reg_3;
  wire EX_SWAP_Instr_reg_4;
  wire EX_SWAP_Instr_reg_5;
  wire EX_SWAP_Instr_reg_6;
  wire EX_SWAP_Instr_reg_7;
  wire EX_SWAP_Instr_reg_8;
  wire EX_SWAP_Instr_reg_9;
  wire [3:0]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire [27:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire [15:0]WB_Byte_Access_reg;
  wire WB_Doublet_Access_reg;
  wire WB_Doublet_Access_reg_0;
  wire WB_Doublet_Access_reg_1;
  wire WB_Doublet_Access_reg_10;
  wire WB_Doublet_Access_reg_11;
  wire WB_Doublet_Access_reg_12;
  wire WB_Doublet_Access_reg_13;
  wire WB_Doublet_Access_reg_14;
  wire WB_Doublet_Access_reg_2;
  wire WB_Doublet_Access_reg_3;
  wire WB_Doublet_Access_reg_4;
  wire WB_Doublet_Access_reg_5;
  wire WB_Doublet_Access_reg_6;
  wire WB_Doublet_Access_reg_7;
  wire WB_Doublet_Access_reg_8;
  wire WB_Doublet_Access_reg_9;
  wire [1:0]\ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_sel_alu_i_reg;
  wire [1:0]\mem_gpr_write_addr_reg[0] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire of_Take_Interrupt;
  wire of_instr_ii_4;
  wire [0:0]of_op2_imm_addr;
  wire [0:1]of_op2_sel;
  wire of_op2_sel_imm;
  wire of_read_ex_write_op2_conflict__0;
  wire of_read_mem_write_op2_conflict__0;
  wire of_read_wb_write_op2_conflict__0;
  wire p_0_in31_in;
  wire p_222_in;
  wire p_225_in;
  wire p_29_in;
  wire sync_reset;
  wire [1:0]\wb_gpr_write_addr_reg[0] ;
  wire \wb_gpr_write_addr_reg[4] ;

  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[0]_i_1 
       (.I0(ex_sel_alu_i_reg),
        .I1(\Using_FPGA.Native_1 ),
        .I2(WB_Doublet_Access_reg),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[3]),
        .O(\EX_Op2_reg[0] [31]));
  LUT6 #(
    .INIT(64'h000000000000000E)) 
    \EX_Op2[0]_i_3 
       (.I0(of_read_mem_write_op2_conflict__0),
        .I1(of_read_wb_write_op2_conflict__0),
        .I2(of_read_ex_write_op2_conflict__0),
        .I3(p_0_in31_in),
        .I4(of_op2_sel_imm),
        .I5(of_Take_Interrupt),
        .O(of_op2_sel[0]));
  LUT6 #(
    .INIT(64'h0100010001010100)) 
    \EX_Op2[0]_i_4 
       (.I0(of_Take_Interrupt),
        .I1(of_op2_sel_imm),
        .I2(p_0_in31_in),
        .I3(of_read_ex_write_op2_conflict__0),
        .I4(of_read_wb_write_op2_conflict__0),
        .I5(of_read_mem_write_op2_conflict__0),
        .O(of_op2_sel[1]));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \EX_Op2[0]_i_5 
       (.I0(p_222_in),
        .I1(\mem_gpr_write_addr_reg[0] [1]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\mem_gpr_write_addr_reg[4] ),
        .I4(\Using_FPGA.Native_33 ),
        .I5(\mem_gpr_write_addr_reg[0] [0]),
        .O(of_read_mem_write_op2_conflict__0));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op2[0]_i_6 
       (.I0(\wb_gpr_write_addr_reg[0] [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\wb_gpr_write_addr_reg[4] ),
        .I3(\Using_FPGA.Native_33 ),
        .I4(\wb_gpr_write_addr_reg[0] [0]),
        .I5(p_29_in),
        .O(of_read_wb_write_op2_conflict__0));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \EX_Op2[0]_i_7 
       (.I0(p_225_in),
        .I1(\ex_gpr_write_addr_reg[0] [1]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\ex_gpr_write_addr_reg[4] ),
        .I4(\Using_FPGA.Native_33 ),
        .I5(\ex_gpr_write_addr_reg[0] [0]),
        .O(of_read_ex_write_op2_conflict__0));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[10]_i_1 
       (.I0(EX_SWAP_Instr_reg_8),
        .I1(\Using_FPGA.Native_12 ),
        .I2(WB_Doublet_Access_reg_9),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [18]),
        .O(\EX_Op2_reg[0] [21]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[11]_i_1 
       (.I0(EX_SWAP_Instr_reg_9),
        .I1(\Using_FPGA.Native_13 ),
        .I2(WB_Doublet_Access_reg_10),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [17]),
        .O(\EX_Op2_reg[0] [20]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[12]_i_1 
       (.I0(EX_SWAP_Instr_reg_10),
        .I1(\Using_FPGA.Native_14 ),
        .I2(WB_Doublet_Access_reg_11),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [16]),
        .O(\EX_Op2_reg[0] [19]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[13]_i_1 
       (.I0(EX_SWAP_Instr_reg_11),
        .I1(\Using_FPGA.Native_15 ),
        .I2(WB_Doublet_Access_reg_12),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [15]),
        .O(\EX_Op2_reg[0] [18]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[14]_i_1 
       (.I0(EX_SWAP_Instr_reg_12),
        .I1(\Using_FPGA.Native_16 ),
        .I2(WB_Doublet_Access_reg_13),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [14]),
        .O(\EX_Op2_reg[0] [17]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[15]_i_1 
       (.I0(EX_SWAP_Instr_reg_13),
        .I1(\Using_FPGA.Native_17 ),
        .I2(WB_Doublet_Access_reg_14),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [13]),
        .O(\EX_Op2_reg[0] [16]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[16]_i_1 
       (.I0(EX_SWAP_Instr_reg_14),
        .I1(\Using_FPGA.Native_18 ),
        .I2(WB_Byte_Access_reg[15]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [12]),
        .O(\EX_Op2_reg[0] [15]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[17]_i_1 
       (.I0(EX_SWAP_Instr_reg_15),
        .I1(\Using_FPGA.Native_19 ),
        .I2(WB_Byte_Access_reg[14]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [11]),
        .O(\EX_Op2_reg[0] [14]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[18]_i_1 
       (.I0(EX_SWAP_Instr_reg_16),
        .I1(\Using_FPGA.Native_20 ),
        .I2(WB_Byte_Access_reg[13]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [10]),
        .O(\EX_Op2_reg[0] [13]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[19]_i_1 
       (.I0(EX_SWAP_Instr_reg_17),
        .I1(\Using_FPGA.Native_21 ),
        .I2(WB_Byte_Access_reg[12]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [9]),
        .O(\EX_Op2_reg[0] [12]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[1]_i_1 
       (.I0(EX_SWAP_Instr_reg),
        .I1(\Using_FPGA.Native_2 ),
        .I2(WB_Doublet_Access_reg_0),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [27]),
        .O(\EX_Op2_reg[0] [30]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[20]_i_1 
       (.I0(EX_SWAP_Instr_reg_18),
        .I1(\Using_FPGA.Native_22 ),
        .I2(WB_Byte_Access_reg[11]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [8]),
        .O(\EX_Op2_reg[0] [11]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[21]_i_1 
       (.I0(EX_SWAP_Instr_reg_19),
        .I1(\Using_FPGA.Native_23 ),
        .I2(WB_Byte_Access_reg[10]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [7]),
        .O(\EX_Op2_reg[0] [10]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[22]_i_1 
       (.I0(EX_SWAP_Instr_reg_20),
        .I1(\Using_FPGA.Native_24 ),
        .I2(WB_Byte_Access_reg[9]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [6]),
        .O(\EX_Op2_reg[0] [9]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[23]_i_1 
       (.I0(EX_SWAP_Instr_reg_21),
        .I1(\Using_FPGA.Native_25 ),
        .I2(WB_Byte_Access_reg[8]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [5]),
        .O(\EX_Op2_reg[0] [8]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[24]_i_1 
       (.I0(EX_SWAP_Instr_reg_22),
        .I1(\Using_FPGA.Native_26 ),
        .I2(WB_Byte_Access_reg[7]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [4]),
        .O(\EX_Op2_reg[0] [7]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[25]_i_1 
       (.I0(EX_SWAP_Instr_reg_23),
        .I1(\Using_FPGA.Native_27 ),
        .I2(WB_Byte_Access_reg[6]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [3]),
        .O(\EX_Op2_reg[0] [6]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[26]_i_1 
       (.I0(EX_SWAP_Instr_reg_24),
        .I1(\Using_FPGA.Native_28 ),
        .I2(WB_Byte_Access_reg[5]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [2]),
        .O(\EX_Op2_reg[0] [5]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[27]_i_1 
       (.I0(EX_SWAP_Instr_reg_25),
        .I1(of_op2_imm_addr),
        .I2(WB_Byte_Access_reg[4]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [1]),
        .O(\EX_Op2_reg[0] [4]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[28]_i_1 
       (.I0(EX_SWAP_Instr_reg_26),
        .I1(\Using_FPGA.Native_29 ),
        .I2(WB_Byte_Access_reg[3]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[2]),
        .O(\EX_Op2_reg[0] [3]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[29]_i_1 
       (.I0(EX_SWAP_Instr_reg_27),
        .I1(\Using_FPGA.Native_30 ),
        .I2(WB_Byte_Access_reg[2]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[1]),
        .O(\EX_Op2_reg[0] [2]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[2]_i_1 
       (.I0(EX_SWAP_Instr_reg_0),
        .I1(\Using_FPGA.Native_4 ),
        .I2(WB_Doublet_Access_reg_1),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [26]),
        .O(\EX_Op2_reg[0] [29]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[30]_i_1 
       (.I0(EX_SWAP_Instr_reg_28),
        .I1(\Using_FPGA.Native_31 ),
        .I2(WB_Byte_Access_reg[1]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[0]),
        .O(\EX_Op2_reg[0] [1]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[31]_i_1 
       (.I0(EX_SWAP_Instr_reg_29),
        .I1(\Using_FPGA.Native_32 ),
        .I2(WB_Byte_Access_reg[0]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [0]),
        .O(\EX_Op2_reg[0] [0]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[3]_i_1 
       (.I0(EX_SWAP_Instr_reg_1),
        .I1(\Using_FPGA.Native_5 ),
        .I2(WB_Doublet_Access_reg_2),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [25]),
        .O(\EX_Op2_reg[0] [28]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[4]_i_1 
       (.I0(EX_SWAP_Instr_reg_2),
        .I1(\Using_FPGA.Native_6 ),
        .I2(WB_Doublet_Access_reg_3),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [24]),
        .O(\EX_Op2_reg[0] [27]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[5]_i_1 
       (.I0(EX_SWAP_Instr_reg_3),
        .I1(\Using_FPGA.Native_7 ),
        .I2(WB_Doublet_Access_reg_4),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [23]),
        .O(\EX_Op2_reg[0] [26]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[6]_i_1 
       (.I0(EX_SWAP_Instr_reg_4),
        .I1(\Using_FPGA.Native_8 ),
        .I2(WB_Doublet_Access_reg_5),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [22]),
        .O(\EX_Op2_reg[0] [25]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[7]_i_1 
       (.I0(EX_SWAP_Instr_reg_5),
        .I1(\Using_FPGA.Native_9 ),
        .I2(WB_Doublet_Access_reg_6),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [21]),
        .O(\EX_Op2_reg[0] [24]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[8]_i_1 
       (.I0(EX_SWAP_Instr_reg_6),
        .I1(\Using_FPGA.Native_10 ),
        .I2(WB_Doublet_Access_reg_7),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [20]),
        .O(\EX_Op2_reg[0] [23]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[9]_i_1 
       (.I0(EX_SWAP_Instr_reg_7),
        .I1(\Using_FPGA.Native_11 ),
        .I2(WB_Doublet_Access_reg_8),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(\Using_FPGA.Native_3 [19]),
        .O(\EX_Op2_reg[0] [22]));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_4),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_187
   (of_predecode,
    sync_reset,
    of_instr_ii_3,
    Clk);
  output [0:0]of_predecode;
  input sync_reset;
  input of_instr_ii_3;
  input Clk;

  wire Clk;
  wire of_instr_ii_3;
  wire [0:0]of_predecode;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_3),
        .Q(of_predecode),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_189
   (\ex_opcode_reg[3] ,
    ex_op1_cmp_eq_n5_out,
    force2_reg,
    force_Val2_N_reg,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    ex_sel_alu_i0,
    \EX_Sext_Op_reg[0] ,
    ex_branch_with_delayslot_reg,
    \Using_FPGA.Native_0 ,
    ex_load_alu_carry_reg,
    sync_reset,
    of_instr_ii_39,
    Clk,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    EX_ALU_Op1__1);
  output \ex_opcode_reg[3] ;
  output ex_op1_cmp_eq_n5_out;
  output force2_reg;
  output force_Val2_N_reg;
  output use_Reg_Neg_DI1_out;
  output force_Val10_out;
  output use_Reg_Neg_S3_out;
  output force12_out;
  output ex_sel_alu_i0;
  output [0:0]\EX_Sext_Op_reg[0] ;
  output ex_branch_with_delayslot_reg;
  output \Using_FPGA.Native_0 ;
  output ex_load_alu_carry_reg;
  input sync_reset;
  input of_instr_ii_39;
  input Clk;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input [1:0]\Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input EX_ALU_Op1__1;

  wire Clk;
  wire EX_ALU_Op1__1;
  wire [0:0]\EX_Sext_Op_reg[0] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire [1:0]\Using_FPGA.Native_9 ;
  wire ex_branch_with_delayslot_reg;
  wire ex_load_alu_carry_reg;
  wire ex_op1_cmp_eq_n5_out;
  wire \ex_opcode_reg[3] ;
  wire ex_sel_alu_i0;
  wire force12_out;
  wire force2_reg;
  wire force_Val10_out;
  wire force_Val2_N_reg;
  wire of_instr_ii_39;
  wire sync_reset;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
    \EX_Sext_Op[0]_i_1 
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_10 ),
        .I2(\Using_FPGA.Native_4 ),
        .I3(\Using_FPGA.Native_11 ),
        .I4(\Using_FPGA.Native_6 ),
        .I5(\Using_FPGA.Native_8 ),
        .O(\EX_Sext_Op_reg[0] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_39),
        .Q(\ex_opcode_reg[3] ),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'h0008)) 
    \Using_FPGA.Native_i_2__85 
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\Using_FPGA.Native_8 ),
        .O(\Using_FPGA.Native_0 ));
  LUT6 #(
    .INIT(64'hAA80A0800A800080)) 
    ex_branch_with_delayslot_i_2
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_9 [1]),
        .I2(\Using_FPGA.Native_7 ),
        .I3(\Using_FPGA.Native_5 ),
        .I4(\Using_FPGA.Native_8 ),
        .I5(\Using_FPGA.Native_12 ),
        .O(ex_branch_with_delayslot_reg));
  LUT4 #(
    .INIT(16'h0001)) 
    ex_load_alu_carry_i_1
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_6 ),
        .I3(EX_ALU_Op1__1),
        .O(ex_load_alu_carry_reg));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h0220)) 
    ex_op1_cmp_eq_n_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .O(ex_op1_cmp_eq_n5_out));
  LUT4 #(
    .INIT(16'h51FF)) 
    ex_sel_alu_i_i_1
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_9 [0]),
        .I2(\Using_FPGA.Native_8 ),
        .I3(\Using_FPGA.Native_4 ),
        .O(ex_sel_alu_i0));
  LUT3 #(
    .INIT(8'h02)) 
    force1_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\Using_FPGA.Native_1 ),
        .O(force12_out));
  LUT5 #(
    .INIT(32'h08000000)) 
    force2_i_1
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_6 ),
        .I3(\Using_FPGA.Native_5 ),
        .I4(\Using_FPGA.Native_4 ),
        .O(force2_reg));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h20)) 
    force_Val1_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\Using_FPGA.Native_1 ),
        .O(force_Val10_out));
  LUT6 #(
    .INIT(64'hFFF7FF7FFFF7FFFF)) 
    force_Val2_N_i_1
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(\Using_FPGA.Native_7 ),
        .I5(\Using_FPGA.Native_8 ),
        .O(force_Val2_N_reg));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h0820)) 
    use_Reg_Neg_DI_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(use_Reg_Neg_DI1_out));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h0820)) 
    use_Reg_Neg_S_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_3 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(use_Reg_Neg_S3_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_191
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_2,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_2;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_2;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_2),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_193
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_1,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_1;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_1;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_1),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_195
   (\Using_FPGA.Native_0 ,
    \EX_Op2_reg[31] ,
    \EX_Op2_reg[31]_0 ,
    \EX_Op2_reg[31]_1 ,
    sync_reset,
    of_instr_ii_0,
    Clk,
    \mem_gpr_write_addr_reg[2] ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \wb_gpr_write_addr_reg[2] ,
    \ex_gpr_write_addr_reg[4] ,
    I4,
    I0);
  output \Using_FPGA.Native_0 ;
  output \EX_Op2_reg[31] ;
  output \EX_Op2_reg[31]_0 ;
  output \EX_Op2_reg[31]_1 ;
  input sync_reset;
  input of_instr_ii_0;
  input Clk;
  input [2:0]\mem_gpr_write_addr_reg[2] ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [2:0]\wb_gpr_write_addr_reg[2] ;
  input \ex_gpr_write_addr_reg[4] ;
  input I4;
  input I0;

  wire Clk;
  wire \EX_Op2_reg[31] ;
  wire \EX_Op2_reg[31]_0 ;
  wire \EX_Op2_reg[31]_1 ;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire [2:0]\mem_gpr_write_addr_reg[2] ;
  wire of_instr_ii_0;
  wire sync_reset;
  wire [2:0]\wb_gpr_write_addr_reg[2] ;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op2[0]_i_10 
       (.I0(\ex_gpr_write_addr_reg[4] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(I4),
        .I4(\Using_FPGA.Native_2 ),
        .I5(I0),
        .O(\EX_Op2_reg[31]_1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op2[0]_i_8 
       (.I0(\mem_gpr_write_addr_reg[2] [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\mem_gpr_write_addr_reg[2] [2]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\mem_gpr_write_addr_reg[2] [1]),
        .O(\EX_Op2_reg[31] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op2[0]_i_9 
       (.I0(\wb_gpr_write_addr_reg[2] [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\wb_gpr_write_addr_reg[2] [2]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\wb_gpr_write_addr_reg[2] [1]),
        .O(\EX_Op2_reg[31]_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_0),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_197
   (\ex_opcode_reg[4] ,
    of_read_imm_reg_ii_reg,
    \imm_reg_reg[15] ,
    of_Sel_SPR_MSR1,
    ex_is_multi_instr2_reg,
    EX_SWAP_Instr_reg,
    ex_load_shift_carry0,
    p_0_in31_in,
    \Using_FPGA.Native_0 ,
    D233_out,
    \EX_Sext_Op_reg[1] ,
    \Using_FPGA.Native_1 ,
    ex_atomic_Instruction_Pair0,
    Dbg_Clean_Stop0,
    \EX_Op1_reg[31] ,
    \EX_Op1_reg[27] ,
    \EX_Op1_reg[26] ,
    \EX_Op1_reg[25] ,
    \EX_Op1_reg[24] ,
    \EX_Op1_reg[23] ,
    \EX_Op1_reg[22] ,
    \EX_Op1_reg[21] ,
    \EX_Op1_reg[20] ,
    \EX_Op1_reg[19] ,
    \EX_Op1_reg[18] ,
    \EX_Op1_reg[17] ,
    \EX_Op1_reg[16] ,
    \EX_Op1_reg[15] ,
    \EX_Op1_reg[14] ,
    \EX_Op1_reg[13] ,
    \EX_Op1_reg[12] ,
    \EX_Op1_reg[11] ,
    \EX_Op1_reg[10] ,
    \EX_Op1_reg[9] ,
    \EX_Op1_reg[8] ,
    \EX_Op1_reg[7] ,
    \EX_Op1_reg[6] ,
    \EX_Op1_reg[5] ,
    \EX_Op1_reg[4] ,
    \EX_Op1_reg[3] ,
    \EX_Op1_reg[2] ,
    \EX_Op1_reg[1] ,
    \EX_Op1_reg[30] ,
    \EX_Op1_reg[29] ,
    \EX_Op1_reg[28] ,
    I1_0,
    of_Sel_SPR_MSR88_out,
    ex_is_multi_or_load_instr0,
    of_op1_sel_spr,
    sync_reset,
    of_instr_ii_38,
    Clk,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    wb_exception,
    mem_exception_from_ex_reg,
    LOCKSTEP_Master_Out,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    of_Take_Interrupt,
    ex_jump,
    ex_jump_nodelay_reg,
    of_pause_reg,
    of_read_imm_reg_ii,
    of_branch_with_delayslot118_out,
    OF_Op1_Sel_SPR_PC0__0,
    \Using_FPGA.Native_16 ,
    ex_MSR,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 );
  output \ex_opcode_reg[4] ;
  output of_read_imm_reg_ii_reg;
  output [0:0]\imm_reg_reg[15] ;
  output of_Sel_SPR_MSR1;
  output ex_is_multi_instr2_reg;
  output EX_SWAP_Instr_reg;
  output ex_load_shift_carry0;
  output p_0_in31_in;
  output \Using_FPGA.Native_0 ;
  output D233_out;
  output [0:0]\EX_Sext_Op_reg[1] ;
  output \Using_FPGA.Native_1 ;
  output ex_atomic_Instruction_Pair0;
  output Dbg_Clean_Stop0;
  output \EX_Op1_reg[31] ;
  output \EX_Op1_reg[27] ;
  output \EX_Op1_reg[26] ;
  output \EX_Op1_reg[25] ;
  output \EX_Op1_reg[24] ;
  output \EX_Op1_reg[23] ;
  output \EX_Op1_reg[22] ;
  output \EX_Op1_reg[21] ;
  output \EX_Op1_reg[20] ;
  output \EX_Op1_reg[19] ;
  output \EX_Op1_reg[18] ;
  output \EX_Op1_reg[17] ;
  output \EX_Op1_reg[16] ;
  output \EX_Op1_reg[15] ;
  output \EX_Op1_reg[14] ;
  output \EX_Op1_reg[13] ;
  output \EX_Op1_reg[12] ;
  output \EX_Op1_reg[11] ;
  output \EX_Op1_reg[10] ;
  output \EX_Op1_reg[9] ;
  output \EX_Op1_reg[8] ;
  output \EX_Op1_reg[7] ;
  output \EX_Op1_reg[6] ;
  output \EX_Op1_reg[5] ;
  output \EX_Op1_reg[4] ;
  output \EX_Op1_reg[3] ;
  output \EX_Op1_reg[2] ;
  output \EX_Op1_reg[1] ;
  output \EX_Op1_reg[30] ;
  output \EX_Op1_reg[29] ;
  output \EX_Op1_reg[28] ;
  output I1_0;
  output of_Sel_SPR_MSR88_out;
  output ex_is_multi_or_load_instr0;
  output of_op1_sel_spr;
  input sync_reset;
  input of_instr_ii_38;
  input Clk;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input wb_exception;
  input mem_exception_from_ex_reg;
  input [0:0]LOCKSTEP_Master_Out;
  input \Using_FPGA.Native_2 ;
  input [1:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input of_Take_Interrupt;
  input ex_jump;
  input ex_jump_nodelay_reg;
  input of_pause_reg;
  input of_read_imm_reg_ii;
  input of_branch_with_delayslot118_out;
  input OF_Op1_Sel_SPR_PC0__0;
  input [31:0]\Using_FPGA.Native_16 ;
  input [2:0]ex_MSR;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;

  wire Clk;
  wire D233_out;
  wire Dbg_Clean_Stop0;
  wire \EX_Op1_reg[10] ;
  wire \EX_Op1_reg[11] ;
  wire \EX_Op1_reg[12] ;
  wire \EX_Op1_reg[13] ;
  wire \EX_Op1_reg[14] ;
  wire \EX_Op1_reg[15] ;
  wire \EX_Op1_reg[16] ;
  wire \EX_Op1_reg[17] ;
  wire \EX_Op1_reg[18] ;
  wire \EX_Op1_reg[19] ;
  wire \EX_Op1_reg[1] ;
  wire \EX_Op1_reg[20] ;
  wire \EX_Op1_reg[21] ;
  wire \EX_Op1_reg[22] ;
  wire \EX_Op1_reg[23] ;
  wire \EX_Op1_reg[24] ;
  wire \EX_Op1_reg[25] ;
  wire \EX_Op1_reg[26] ;
  wire \EX_Op1_reg[27] ;
  wire \EX_Op1_reg[28] ;
  wire \EX_Op1_reg[29] ;
  wire \EX_Op1_reg[2] ;
  wire \EX_Op1_reg[30] ;
  wire \EX_Op1_reg[31] ;
  wire \EX_Op1_reg[3] ;
  wire \EX_Op1_reg[4] ;
  wire \EX_Op1_reg[5] ;
  wire \EX_Op1_reg[6] ;
  wire \EX_Op1_reg[7] ;
  wire \EX_Op1_reg[8] ;
  wire \EX_Op1_reg[9] ;
  wire EX_SWAP_Instr_reg;
  wire [0:0]\EX_Sext_Op_reg[1] ;
  wire I1_0;
  wire [0:0]LOCKSTEP_Master_Out;
  wire OF_Op1_Sel_SPR_PC0__0;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire [31:0]\Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire [1:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire [2:0]ex_MSR;
  wire ex_atomic_Instruction_Pair0;
  wire ex_is_multi_instr2_reg;
  wire ex_is_multi_or_load_instr0;
  wire ex_jump;
  wire ex_jump_nodelay_reg;
  wire ex_load_shift_carry0;
  wire \ex_opcode_reg[4] ;
  wire [0:0]\imm_reg_reg[15] ;
  wire mem_exception_from_ex_reg;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire of_Take_Interrupt;
  wire of_branch_with_delayslot118_out;
  wire of_instr_ii_38;
  wire of_op1_sel_spr;
  wire of_pause_reg;
  wire of_read_imm_reg_ii;
  wire of_read_imm_reg_ii_i_2_n_0;
  wire of_read_imm_reg_ii_reg;
  wire p_0_in31_in;
  wire p_9_in;
  wire sync_reset;
  wire wb_exception;

  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'hF000F777)) 
    Dbg_Clean_Stop_i_1
       (.I0(p_9_in),
        .I1(\Using_FPGA.Native_2 ),
        .I2(ex_jump),
        .I3(ex_jump_nodelay_reg),
        .I4(of_branch_with_delayslot118_out),
        .O(Dbg_Clean_Stop0));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    EX_SWAP_Instr_i_1
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(\Using_FPGA.Native_7 ),
        .I5(\Using_FPGA.Native_8 ),
        .O(EX_SWAP_Instr_reg));
  LUT6 #(
    .INIT(64'h0000000010111111)) 
    \EX_Sext_Op[1]_i_1 
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_13 ),
        .I3(\Using_FPGA.Native_5 ),
        .I4(\Using_FPGA.Native_6 ),
        .I5(\Using_FPGA.Native_8 ),
        .O(\EX_Sext_Op_reg[1] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_38),
        .Q(\ex_opcode_reg[4] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hF2)) 
    \Using_FPGA.Native_i_1__182 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(OF_Op1_Sel_SPR_PC0__0),
        .O(of_op1_sel_spr));
  LUT5 #(
    .INIT(32'h00080000)) 
    \Using_FPGA.Native_i_1__42 
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_9 ),
        .I2(\Using_FPGA.Native_10 ),
        .I3(\Using_FPGA.Native_11 ),
        .I4(\Using_FPGA.Native_3 [0]),
        .O(\Using_FPGA.Native_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \Using_FPGA.Native_i_1__43 
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_12 ),
        .I2(\Using_FPGA.Native_9 ),
        .I3(\Using_FPGA.Native_3 [0]),
        .O(D233_out));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__47 
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_4 ),
        .O(\Using_FPGA.Native_1 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__119 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [0]),
        .O(\EX_Op1_reg[31] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__120 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [4]),
        .O(\EX_Op1_reg[27] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__121 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [5]),
        .O(\EX_Op1_reg[26] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__122 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [6]),
        .O(\EX_Op1_reg[25] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__123 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [7]),
        .O(\EX_Op1_reg[24] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__124 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [8]),
        .O(\EX_Op1_reg[23] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__125 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [9]),
        .O(\EX_Op1_reg[22] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__126 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [10]),
        .O(\EX_Op1_reg[21] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__127 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [11]),
        .O(\EX_Op1_reg[20] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__128 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [12]),
        .O(\EX_Op1_reg[19] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__129 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [13]),
        .O(\EX_Op1_reg[18] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__130 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [14]),
        .O(\EX_Op1_reg[17] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__131 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [15]),
        .O(\EX_Op1_reg[16] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__132 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [16]),
        .O(\EX_Op1_reg[15] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__133 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [17]),
        .O(\EX_Op1_reg[14] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__134 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [18]),
        .O(\EX_Op1_reg[13] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__135 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [19]),
        .O(\EX_Op1_reg[12] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__136 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [20]),
        .O(\EX_Op1_reg[11] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__137 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [21]),
        .O(\EX_Op1_reg[10] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__138 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [22]),
        .O(\EX_Op1_reg[9] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__139 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [23]),
        .O(\EX_Op1_reg[8] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__140 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [24]),
        .O(\EX_Op1_reg[7] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__141 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [25]),
        .O(\EX_Op1_reg[6] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__142 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [26]),
        .O(\EX_Op1_reg[5] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__143 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [27]),
        .O(\EX_Op1_reg[4] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__144 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [28]),
        .O(\EX_Op1_reg[3] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__145 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [29]),
        .O(\EX_Op1_reg[2] ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__146 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [30]),
        .O(\EX_Op1_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFF00FDFF020000)) 
    \Using_FPGA.Native_i_2__147 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [1]),
        .I5(ex_MSR[0]),
        .O(\EX_Op1_reg[30] ));
  LUT6 #(
    .INIT(64'hFFFF00FDFF020000)) 
    \Using_FPGA.Native_i_2__148 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [2]),
        .I5(ex_MSR[1]),
        .O(\EX_Op1_reg[29] ));
  LUT6 #(
    .INIT(64'hFFFF00FDFF020000)) 
    \Using_FPGA.Native_i_2__149 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [3]),
        .I5(ex_MSR[2]),
        .O(\EX_Op1_reg[28] ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \Using_FPGA.Native_i_3__1 
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_10 ),
        .I2(\Using_FPGA.Native_15 ),
        .I3(\Using_FPGA.Native_4 ),
        .I4(\Using_FPGA.Native_14 ),
        .I5(\Using_FPGA.Native_9 ),
        .O(p_0_in31_in));
  LUT6 #(
    .INIT(64'hFFFF00FDFF020000)) 
    \Using_FPGA.Native_i_3__34 
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\Using_FPGA.Native_16 [31]),
        .I5(ex_MSR[1]),
        .O(I1_0));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    ex_atomic_Instruction_Pair_i_1
       (.I0(p_9_in),
        .I1(\Using_FPGA.Native_2 ),
        .I2(of_branch_with_delayslot118_out),
        .O(ex_atomic_Instruction_Pair0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    ex_atomic_Instruction_Pair_i_2
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_14 ),
        .I2(\Using_FPGA.Native_10 ),
        .I3(\Using_FPGA.Native_4 ),
        .I4(\Using_FPGA.Native_15 ),
        .I5(\Using_FPGA.Native_9 ),
        .O(p_9_in));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ex_is_multi_instr2_i_1
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .O(of_Sel_SPR_MSR1));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h2F22FF22)) 
    ex_is_multi_or_load_instr_i_1
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_15 ),
        .I3(\Using_FPGA.Native_9 ),
        .I4(\Using_FPGA.Native_10 ),
        .O(ex_is_multi_or_load_instr0));
  LUT3 #(
    .INIT(8'h2A)) 
    ex_load_shift_carry_i_1
       (.I0(p_0_in31_in),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\Using_FPGA.Native_6 ),
        .O(ex_load_shift_carry0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    ex_mfsmsr_i_i_1
       (.I0(ex_is_multi_instr2_reg),
        .I1(\Using_FPGA.Native_3 [1]),
        .I2(\Using_FPGA.Native_13 ),
        .I3(\Using_FPGA.Native_17 ),
        .I4(\Using_FPGA.Native_18 ),
        .I5(\Using_FPGA.Native_19 ),
        .O(of_Sel_SPR_MSR88_out));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    ex_move_to_MSR_instr_i_2
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_14 ),
        .I2(\Using_FPGA.Native_10 ),
        .I3(\Using_FPGA.Native_4 ),
        .I4(\Using_FPGA.Native_15 ),
        .I5(\Using_FPGA.Native_9 ),
        .O(ex_is_multi_instr2_reg));
  LUT2 #(
    .INIT(4'h8)) 
    \imm_reg[0]_i_1 
       (.I0(p_9_in),
        .I1(\Using_FPGA.Native_2 ),
        .O(\imm_reg_reg[15] ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    of_read_imm_reg_ii_i_1
       (.I0(of_read_imm_reg_ii_i_2_n_0),
        .I1(\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .I2(sync_reset),
        .I3(wb_exception),
        .I4(mem_exception_from_ex_reg),
        .I5(LOCKSTEP_Master_Out),
        .O(of_read_imm_reg_ii_reg));
  LUT6 #(
    .INIT(64'h0222FFFF02220000)) 
    of_read_imm_reg_ii_i_2
       (.I0(p_9_in),
        .I1(of_Take_Interrupt),
        .I2(ex_jump),
        .I3(ex_jump_nodelay_reg),
        .I4(of_pause_reg),
        .I5(of_read_imm_reg_ii),
        .O(of_read_imm_reg_ii_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_199
   (\ex_opcode_reg[5] ,
    \Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_37,
    Clk,
    \Using_FPGA.Native_1 );
  output \ex_opcode_reg[5] ;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_37;
  input Clk;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \ex_opcode_reg[5] ;
  wire of_instr_ii_37;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_37),
        .Q(\ex_opcode_reg[5] ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__48 
       (.I0(\ex_opcode_reg[5] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_201
   (\ex_gpr_write_addr_reg[0] ,
    \EX_Op3_reg[0] ,
    sync_reset,
    of_instr_ii_36,
    Clk,
    ex_sel_alu_i_reg,
    GPR_Op3,
    WB_Doublet_Access_reg,
    MEM_Fwd,
    EX_SWAP_Instr_reg,
    WB_Doublet_Access_reg_0,
    \Using_FPGA.Native_0 ,
    EX_SWAP_Instr_reg_0,
    WB_Doublet_Access_reg_1,
    EX_SWAP_Instr_reg_1,
    WB_Doublet_Access_reg_2,
    EX_SWAP_Instr_reg_2,
    WB_Doublet_Access_reg_3,
    EX_SWAP_Instr_reg_3,
    WB_Doublet_Access_reg_4,
    EX_SWAP_Instr_reg_4,
    WB_Doublet_Access_reg_5,
    EX_SWAP_Instr_reg_5,
    WB_Doublet_Access_reg_6,
    EX_SWAP_Instr_reg_6,
    WB_Doublet_Access_reg_7,
    EX_SWAP_Instr_reg_7,
    WB_Doublet_Access_reg_8,
    EX_SWAP_Instr_reg_8,
    WB_Doublet_Access_reg_9,
    EX_SWAP_Instr_reg_9,
    WB_Doublet_Access_reg_10,
    EX_SWAP_Instr_reg_10,
    WB_Doublet_Access_reg_11,
    EX_SWAP_Instr_reg_11,
    WB_Doublet_Access_reg_12,
    EX_SWAP_Instr_reg_12,
    WB_Doublet_Access_reg_13,
    EX_SWAP_Instr_reg_13,
    WB_Doublet_Access_reg_14,
    EX_SWAP_Instr_reg_14,
    WB_Byte_Access_reg,
    EX_SWAP_Instr_reg_15,
    EX_SWAP_Instr_reg_16,
    EX_SWAP_Instr_reg_17,
    EX_SWAP_Instr_reg_18,
    EX_SWAP_Instr_reg_19,
    EX_SWAP_Instr_reg_20,
    EX_SWAP_Instr_reg_21,
    EX_SWAP_Instr_reg_22,
    EX_SWAP_Instr_reg_23,
    EX_SWAP_Instr_reg_24,
    EX_SWAP_Instr_reg_25,
    EX_SWAP_Instr_reg_26,
    EX_SWAP_Instr_reg_27,
    EX_SWAP_Instr_reg_28,
    EX_SWAP_Instr_reg_29,
    \mem_gpr_write_addr_reg[0] ,
    \mem_gpr_write_addr_reg[4] ,
    \Using_FPGA.Native_1 ,
    mem_valid_reg,
    \ex_gpr_write_addr_reg[0]_0 ,
    \ex_gpr_write_addr_reg[4] ,
    ex_valid_reg,
    \wb_gpr_write_addr_reg[0] ,
    \wb_gpr_write_addr_reg[4] ,
    \Using_FPGA.Native_2 );
  output \ex_gpr_write_addr_reg[0] ;
  output [31:0]\EX_Op3_reg[0] ;
  input sync_reset;
  input of_instr_ii_36;
  input Clk;
  input ex_sel_alu_i_reg;
  input [0:31]GPR_Op3;
  input WB_Doublet_Access_reg;
  input [3:0]MEM_Fwd;
  input EX_SWAP_Instr_reg;
  input WB_Doublet_Access_reg_0;
  input [27:0]\Using_FPGA.Native_0 ;
  input EX_SWAP_Instr_reg_0;
  input WB_Doublet_Access_reg_1;
  input EX_SWAP_Instr_reg_1;
  input WB_Doublet_Access_reg_2;
  input EX_SWAP_Instr_reg_2;
  input WB_Doublet_Access_reg_3;
  input EX_SWAP_Instr_reg_3;
  input WB_Doublet_Access_reg_4;
  input EX_SWAP_Instr_reg_4;
  input WB_Doublet_Access_reg_5;
  input EX_SWAP_Instr_reg_5;
  input WB_Doublet_Access_reg_6;
  input EX_SWAP_Instr_reg_6;
  input WB_Doublet_Access_reg_7;
  input EX_SWAP_Instr_reg_7;
  input WB_Doublet_Access_reg_8;
  input EX_SWAP_Instr_reg_8;
  input WB_Doublet_Access_reg_9;
  input EX_SWAP_Instr_reg_9;
  input WB_Doublet_Access_reg_10;
  input EX_SWAP_Instr_reg_10;
  input WB_Doublet_Access_reg_11;
  input EX_SWAP_Instr_reg_11;
  input WB_Doublet_Access_reg_12;
  input EX_SWAP_Instr_reg_12;
  input WB_Doublet_Access_reg_13;
  input EX_SWAP_Instr_reg_13;
  input WB_Doublet_Access_reg_14;
  input EX_SWAP_Instr_reg_14;
  input [15:0]WB_Byte_Access_reg;
  input EX_SWAP_Instr_reg_15;
  input EX_SWAP_Instr_reg_16;
  input EX_SWAP_Instr_reg_17;
  input EX_SWAP_Instr_reg_18;
  input EX_SWAP_Instr_reg_19;
  input EX_SWAP_Instr_reg_20;
  input EX_SWAP_Instr_reg_21;
  input EX_SWAP_Instr_reg_22;
  input EX_SWAP_Instr_reg_23;
  input EX_SWAP_Instr_reg_24;
  input EX_SWAP_Instr_reg_25;
  input EX_SWAP_Instr_reg_26;
  input EX_SWAP_Instr_reg_27;
  input EX_SWAP_Instr_reg_28;
  input EX_SWAP_Instr_reg_29;
  input [1:0]\mem_gpr_write_addr_reg[0] ;
  input \mem_gpr_write_addr_reg[4] ;
  input \Using_FPGA.Native_1 ;
  input mem_valid_reg;
  input [1:0]\ex_gpr_write_addr_reg[0]_0 ;
  input \ex_gpr_write_addr_reg[4] ;
  input ex_valid_reg;
  input [1:0]\wb_gpr_write_addr_reg[0] ;
  input \wb_gpr_write_addr_reg[4] ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire [31:0]\EX_Op3_reg[0] ;
  wire EX_SWAP_Instr_reg;
  wire EX_SWAP_Instr_reg_0;
  wire EX_SWAP_Instr_reg_1;
  wire EX_SWAP_Instr_reg_10;
  wire EX_SWAP_Instr_reg_11;
  wire EX_SWAP_Instr_reg_12;
  wire EX_SWAP_Instr_reg_13;
  wire EX_SWAP_Instr_reg_14;
  wire EX_SWAP_Instr_reg_15;
  wire EX_SWAP_Instr_reg_16;
  wire EX_SWAP_Instr_reg_17;
  wire EX_SWAP_Instr_reg_18;
  wire EX_SWAP_Instr_reg_19;
  wire EX_SWAP_Instr_reg_2;
  wire EX_SWAP_Instr_reg_20;
  wire EX_SWAP_Instr_reg_21;
  wire EX_SWAP_Instr_reg_22;
  wire EX_SWAP_Instr_reg_23;
  wire EX_SWAP_Instr_reg_24;
  wire EX_SWAP_Instr_reg_25;
  wire EX_SWAP_Instr_reg_26;
  wire EX_SWAP_Instr_reg_27;
  wire EX_SWAP_Instr_reg_28;
  wire EX_SWAP_Instr_reg_29;
  wire EX_SWAP_Instr_reg_3;
  wire EX_SWAP_Instr_reg_4;
  wire EX_SWAP_Instr_reg_5;
  wire EX_SWAP_Instr_reg_6;
  wire EX_SWAP_Instr_reg_7;
  wire EX_SWAP_Instr_reg_8;
  wire EX_SWAP_Instr_reg_9;
  wire [0:31]GPR_Op3;
  wire [3:0]MEM_Fwd;
  wire [27:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [15:0]WB_Byte_Access_reg;
  wire WB_Doublet_Access_reg;
  wire WB_Doublet_Access_reg_0;
  wire WB_Doublet_Access_reg_1;
  wire WB_Doublet_Access_reg_10;
  wire WB_Doublet_Access_reg_11;
  wire WB_Doublet_Access_reg_12;
  wire WB_Doublet_Access_reg_13;
  wire WB_Doublet_Access_reg_14;
  wire WB_Doublet_Access_reg_2;
  wire WB_Doublet_Access_reg_3;
  wire WB_Doublet_Access_reg_4;
  wire WB_Doublet_Access_reg_5;
  wire WB_Doublet_Access_reg_6;
  wire WB_Doublet_Access_reg_7;
  wire WB_Doublet_Access_reg_8;
  wire WB_Doublet_Access_reg_9;
  wire \ex_gpr_write_addr_reg[0] ;
  wire [1:0]\ex_gpr_write_addr_reg[0]_0 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_sel_alu_i_reg;
  wire ex_valid_reg;
  wire [1:0]\mem_gpr_write_addr_reg[0] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire mem_valid_reg;
  wire of_instr_ii_36;
  wire [0:1]of_op3_sel;
  wire of_read_ex_write_op3_conflict__1;
  wire of_read_mem_write_op3_conflict__1;
  wire of_read_wb_write_op3_conflict__1;
  wire sync_reset;
  wire [1:0]\wb_gpr_write_addr_reg[0] ;
  wire \wb_gpr_write_addr_reg[4] ;

  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[0]_i_1 
       (.I0(ex_sel_alu_i_reg),
        .I1(GPR_Op3[0]),
        .I2(WB_Doublet_Access_reg),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[3]),
        .O(\EX_Op3_reg[0] [31]));
  LUT3 #(
    .INIT(8'h0E)) 
    \EX_Op3[0]_i_2 
       (.I0(of_read_mem_write_op3_conflict__1),
        .I1(of_read_wb_write_op3_conflict__1),
        .I2(of_read_ex_write_op3_conflict__1),
        .O(of_op3_sel[0]));
  LUT3 #(
    .INIT(8'hF4)) 
    \EX_Op3[0]_i_3 
       (.I0(of_read_mem_write_op3_conflict__1),
        .I1(of_read_wb_write_op3_conflict__1),
        .I2(of_read_ex_write_op3_conflict__1),
        .O(of_op3_sel[1]));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op3[0]_i_4 
       (.I0(\mem_gpr_write_addr_reg[0] [1]),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .I2(\mem_gpr_write_addr_reg[4] ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\mem_gpr_write_addr_reg[0] [0]),
        .I5(mem_valid_reg),
        .O(of_read_mem_write_op3_conflict__1));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op3[0]_i_5 
       (.I0(\wb_gpr_write_addr_reg[0] [1]),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .I2(\wb_gpr_write_addr_reg[4] ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\wb_gpr_write_addr_reg[0] [0]),
        .I5(\Using_FPGA.Native_2 ),
        .O(of_read_wb_write_op3_conflict__1));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op3[0]_i_6 
       (.I0(\ex_gpr_write_addr_reg[0]_0 [1]),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .I2(\ex_gpr_write_addr_reg[4] ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\ex_gpr_write_addr_reg[0]_0 [0]),
        .I5(ex_valid_reg),
        .O(of_read_ex_write_op3_conflict__1));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[10]_i_1 
       (.I0(EX_SWAP_Instr_reg_8),
        .I1(GPR_Op3[10]),
        .I2(WB_Doublet_Access_reg_9),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [18]),
        .O(\EX_Op3_reg[0] [21]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[11]_i_1 
       (.I0(EX_SWAP_Instr_reg_9),
        .I1(GPR_Op3[11]),
        .I2(WB_Doublet_Access_reg_10),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [17]),
        .O(\EX_Op3_reg[0] [20]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[12]_i_1 
       (.I0(EX_SWAP_Instr_reg_10),
        .I1(GPR_Op3[12]),
        .I2(WB_Doublet_Access_reg_11),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [16]),
        .O(\EX_Op3_reg[0] [19]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[13]_i_1 
       (.I0(EX_SWAP_Instr_reg_11),
        .I1(GPR_Op3[13]),
        .I2(WB_Doublet_Access_reg_12),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [15]),
        .O(\EX_Op3_reg[0] [18]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[14]_i_1 
       (.I0(EX_SWAP_Instr_reg_12),
        .I1(GPR_Op3[14]),
        .I2(WB_Doublet_Access_reg_13),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [14]),
        .O(\EX_Op3_reg[0] [17]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[15]_i_1 
       (.I0(EX_SWAP_Instr_reg_13),
        .I1(GPR_Op3[15]),
        .I2(WB_Doublet_Access_reg_14),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [13]),
        .O(\EX_Op3_reg[0] [16]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[16]_i_1 
       (.I0(EX_SWAP_Instr_reg_14),
        .I1(GPR_Op3[16]),
        .I2(WB_Byte_Access_reg[15]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [12]),
        .O(\EX_Op3_reg[0] [15]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[17]_i_1 
       (.I0(EX_SWAP_Instr_reg_15),
        .I1(GPR_Op3[17]),
        .I2(WB_Byte_Access_reg[14]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [11]),
        .O(\EX_Op3_reg[0] [14]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[18]_i_1 
       (.I0(EX_SWAP_Instr_reg_16),
        .I1(GPR_Op3[18]),
        .I2(WB_Byte_Access_reg[13]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [10]),
        .O(\EX_Op3_reg[0] [13]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[19]_i_1 
       (.I0(EX_SWAP_Instr_reg_17),
        .I1(GPR_Op3[19]),
        .I2(WB_Byte_Access_reg[12]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [9]),
        .O(\EX_Op3_reg[0] [12]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[1]_i_1 
       (.I0(EX_SWAP_Instr_reg),
        .I1(GPR_Op3[1]),
        .I2(WB_Doublet_Access_reg_0),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [27]),
        .O(\EX_Op3_reg[0] [30]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[20]_i_1 
       (.I0(EX_SWAP_Instr_reg_18),
        .I1(GPR_Op3[20]),
        .I2(WB_Byte_Access_reg[11]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [8]),
        .O(\EX_Op3_reg[0] [11]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[21]_i_1 
       (.I0(EX_SWAP_Instr_reg_19),
        .I1(GPR_Op3[21]),
        .I2(WB_Byte_Access_reg[10]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [7]),
        .O(\EX_Op3_reg[0] [10]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[22]_i_1 
       (.I0(EX_SWAP_Instr_reg_20),
        .I1(GPR_Op3[22]),
        .I2(WB_Byte_Access_reg[9]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [6]),
        .O(\EX_Op3_reg[0] [9]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[23]_i_1 
       (.I0(EX_SWAP_Instr_reg_21),
        .I1(GPR_Op3[23]),
        .I2(WB_Byte_Access_reg[8]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [5]),
        .O(\EX_Op3_reg[0] [8]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[24]_i_1 
       (.I0(EX_SWAP_Instr_reg_22),
        .I1(GPR_Op3[24]),
        .I2(WB_Byte_Access_reg[7]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [4]),
        .O(\EX_Op3_reg[0] [7]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[25]_i_1 
       (.I0(EX_SWAP_Instr_reg_23),
        .I1(GPR_Op3[25]),
        .I2(WB_Byte_Access_reg[6]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [3]),
        .O(\EX_Op3_reg[0] [6]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[26]_i_1 
       (.I0(EX_SWAP_Instr_reg_24),
        .I1(GPR_Op3[26]),
        .I2(WB_Byte_Access_reg[5]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [2]),
        .O(\EX_Op3_reg[0] [5]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[27]_i_1 
       (.I0(EX_SWAP_Instr_reg_25),
        .I1(GPR_Op3[27]),
        .I2(WB_Byte_Access_reg[4]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [1]),
        .O(\EX_Op3_reg[0] [4]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[28]_i_1 
       (.I0(EX_SWAP_Instr_reg_26),
        .I1(GPR_Op3[28]),
        .I2(WB_Byte_Access_reg[3]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[2]),
        .O(\EX_Op3_reg[0] [3]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[29]_i_1 
       (.I0(EX_SWAP_Instr_reg_27),
        .I1(GPR_Op3[29]),
        .I2(WB_Byte_Access_reg[2]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[1]),
        .O(\EX_Op3_reg[0] [2]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[2]_i_1 
       (.I0(EX_SWAP_Instr_reg_0),
        .I1(GPR_Op3[2]),
        .I2(WB_Doublet_Access_reg_1),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [26]),
        .O(\EX_Op3_reg[0] [29]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[30]_i_1 
       (.I0(EX_SWAP_Instr_reg_28),
        .I1(GPR_Op3[30]),
        .I2(WB_Byte_Access_reg[1]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[0]),
        .O(\EX_Op3_reg[0] [1]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[31]_i_1 
       (.I0(EX_SWAP_Instr_reg_29),
        .I1(GPR_Op3[31]),
        .I2(WB_Byte_Access_reg[0]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [0]),
        .O(\EX_Op3_reg[0] [0]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[3]_i_1 
       (.I0(EX_SWAP_Instr_reg_1),
        .I1(GPR_Op3[3]),
        .I2(WB_Doublet_Access_reg_2),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [25]),
        .O(\EX_Op3_reg[0] [28]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[4]_i_1 
       (.I0(EX_SWAP_Instr_reg_2),
        .I1(GPR_Op3[4]),
        .I2(WB_Doublet_Access_reg_3),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [24]),
        .O(\EX_Op3_reg[0] [27]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[5]_i_1 
       (.I0(EX_SWAP_Instr_reg_3),
        .I1(GPR_Op3[5]),
        .I2(WB_Doublet_Access_reg_4),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [23]),
        .O(\EX_Op3_reg[0] [26]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[6]_i_1 
       (.I0(EX_SWAP_Instr_reg_4),
        .I1(GPR_Op3[6]),
        .I2(WB_Doublet_Access_reg_5),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [22]),
        .O(\EX_Op3_reg[0] [25]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[7]_i_1 
       (.I0(EX_SWAP_Instr_reg_5),
        .I1(GPR_Op3[7]),
        .I2(WB_Doublet_Access_reg_6),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [21]),
        .O(\EX_Op3_reg[0] [24]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[8]_i_1 
       (.I0(EX_SWAP_Instr_reg_6),
        .I1(GPR_Op3[8]),
        .I2(WB_Doublet_Access_reg_7),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [20]),
        .O(\EX_Op3_reg[0] [23]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[9]_i_1 
       (.I0(EX_SWAP_Instr_reg_7),
        .I1(GPR_Op3[9]),
        .I2(WB_Doublet_Access_reg_8),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(\Using_FPGA.Native_0 [19]),
        .O(\EX_Op3_reg[0] [22]));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_36),
        .Q(\ex_gpr_write_addr_reg[0] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_203
   (\ex_gpr_write_addr_reg[1] ,
    ex_mbar_is_sleep_reg,
    sync_reset,
    of_instr_ii_35,
    Clk,
    \Using_FPGA.Native_0 ,
    of_pause_reg,
    ex_mbar_is_sleep);
  output \ex_gpr_write_addr_reg[1] ;
  output ex_mbar_is_sleep_reg;
  input sync_reset;
  input of_instr_ii_35;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input of_pause_reg;
  input ex_mbar_is_sleep;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \ex_gpr_write_addr_reg[1] ;
  wire ex_mbar_is_sleep;
  wire ex_mbar_is_sleep_reg;
  wire of_instr_ii_35;
  wire of_pause_reg;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_35),
        .Q(\ex_gpr_write_addr_reg[1] ),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hEFE0)) 
    ex_mbar_is_sleep_cmb_inferred_i_1
       (.I0(\ex_gpr_write_addr_reg[1] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_pause_reg),
        .I3(ex_mbar_is_sleep),
        .O(ex_mbar_is_sleep_reg));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_205
   (\ex_gpr_write_addr_reg[2] ,
    ex_op1_cmp_eq_reg,
    ex_gpr_write111_out__0,
    sync_reset,
    of_instr_ii_34,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    ex_op1_cmp_eq1,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    of_pause_reg);
  output \ex_gpr_write_addr_reg[2] ;
  output ex_op1_cmp_eq_reg;
  output ex_gpr_write111_out__0;
  input sync_reset;
  input of_instr_ii_34;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input ex_op1_cmp_eq1;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input of_pause_reg;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire ex_gpr_write111_out__0;
  wire \ex_gpr_write_addr_reg[2] ;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_reg;
  wire of_instr_ii_34;
  wire of_pause_reg;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_34),
        .Q(\ex_gpr_write_addr_reg[2] ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    ex_gpr_write_i_3
       (.I0(\ex_gpr_write_addr_reg[2] ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(of_pause_reg),
        .O(ex_gpr_write111_out__0));
  LUT4 #(
    .INIT(16'hF9FF)) 
    ex_op1_cmp_eq_i_1
       (.I0(\ex_gpr_write_addr_reg[2] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(ex_op1_cmp_eq1),
        .O(ex_op1_cmp_eq_reg));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_207
   (\ex_gpr_write_addr_reg[3] ,
    sync_reset,
    of_instr_ii_33,
    Clk);
  output \ex_gpr_write_addr_reg[3] ;
  input sync_reset;
  input of_instr_ii_33;
  input Clk;

  wire Clk;
  wire \ex_gpr_write_addr_reg[3] ;
  wire of_instr_ii_33;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_33),
        .Q(\ex_gpr_write_addr_reg[3] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_209
   (Dbg_Clean_Stop_reg,
    ex_valid_jump_reg,
    ex_valid_reg,
    ex_valid_keep_reg,
    ex_jump_q_reg,
    use_Reg_Neg_S_reg,
    sync_reset,
    of_Valid_II,
    Clk,
    mem_exception_from_ex,
    mem_valid_instr,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    ex_jump_nodelay_reg,
    ex_jump,
    ex_valid_jump_reg_0,
    E,
    of_pause_reg,
    wb_exception,
    ex_valid,
    ex_valid_keep,
    ex_branch_with_delayslot,
    ex_jump_q,
    Q);
  output Dbg_Clean_Stop_reg;
  output ex_valid_jump_reg;
  output ex_valid_reg;
  output ex_valid_keep_reg;
  output ex_jump_q_reg;
  output use_Reg_Neg_S_reg;
  input sync_reset;
  input of_Valid_II;
  input Clk;
  input mem_exception_from_ex;
  input mem_valid_instr;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input ex_jump_nodelay_reg;
  input ex_jump;
  input ex_valid_jump_reg_0;
  input [0:0]E;
  input of_pause_reg;
  input wb_exception;
  input ex_valid;
  input ex_valid_keep;
  input ex_branch_with_delayslot;
  input ex_jump_q;
  input [2:0]Q;

  wire Clk;
  wire Dbg_Clean_Stop_reg;
  wire [0:0]E;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire [2:0]Q;
  wire ex_branch_with_delayslot;
  wire ex_jump;
  wire ex_jump_nodelay_reg;
  wire ex_jump_q;
  wire ex_jump_q_reg;
  wire ex_valid;
  wire ex_valid_jump_reg;
  wire ex_valid_jump_reg_0;
  wire ex_valid_keep;
  wire ex_valid_keep_reg;
  wire ex_valid_reg;
  wire mem_exception_from_ex;
  wire mem_valid_instr;
  wire of_Valid_II;
  wire of_next_ex_valid;
  wire of_pause_reg;
  wire sync_reset;
  wire use_Reg_Neg_S_reg;
  wire wb_exception;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_Valid_II),
        .Q(Dbg_Clean_Stop_reg),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'h0D)) 
    \Using_FPGA.Native_i_1__101 
       (.I0(ex_branch_with_delayslot),
        .I1(Dbg_Clean_Stop_reg),
        .I2(ex_jump_q),
        .O(ex_jump_q_reg));
  LUT5 #(
    .INIT(32'hAA2AAAAA)) 
    \Using_FPGA.Native_i_1__103 
       (.I0(Dbg_Clean_Stop_reg),
        .I1(wb_exception),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(use_Reg_Neg_S_reg));
  LUT6 #(
    .INIT(64'h000000000000CC0A)) 
    ex_valid_i_1
       (.I0(ex_valid),
        .I1(of_next_ex_valid),
        .I2(E),
        .I3(of_pause_reg),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_valid_reg));
  LUT6 #(
    .INIT(64'h000000000000CC0A)) 
    ex_valid_jump_i_1
       (.I0(ex_valid_jump_reg_0),
        .I1(of_next_ex_valid),
        .I2(E),
        .I3(of_pause_reg),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_valid_jump_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    ex_valid_keep_i_1
       (.I0(of_next_ex_valid),
        .I1(of_pause_reg),
        .I2(ex_valid_keep),
        .O(ex_valid_keep_reg));
  LUT6 #(
    .INIT(64'h0000002A002A002A)) 
    ex_valid_keep_i_2
       (.I0(Dbg_Clean_Stop_reg),
        .I1(mem_exception_from_ex),
        .I2(mem_valid_instr),
        .I3(\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .I4(ex_jump_nodelay_reg),
        .I5(ex_jump),
        .O(of_next_ex_valid));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_210
   (D,
    I0125_out,
    sync_reset,
    of_pc_ii_31,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I0125_out;
  input sync_reset;
  input of_pc_ii_31;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0125_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_31;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_31),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__130 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I0125_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_212
   (D,
    I085_out,
    sync_reset,
    of_pc_ii_21,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I085_out;
  input sync_reset;
  input of_pc_ii_21;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I085_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_21;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_21),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__140 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I085_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_214
   (D,
    I081_out,
    sync_reset,
    of_pc_ii_20,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I081_out;
  input sync_reset;
  input of_pc_ii_20;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I081_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_20;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_20),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__141 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I081_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_216
   (D,
    I077_out,
    sync_reset,
    of_pc_ii_19,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I077_out;
  input sync_reset;
  input of_pc_ii_19;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I077_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_19;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_19),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__142 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I077_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_218
   (D,
    I073_out,
    sync_reset,
    of_pc_ii_18,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I073_out;
  input sync_reset;
  input of_pc_ii_18;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I073_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_18;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_18),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__143 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I073_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_220
   (D,
    I069_out,
    sync_reset,
    of_pc_ii_17,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I069_out;
  input sync_reset;
  input of_pc_ii_17;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I069_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_17;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_17),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__144 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I069_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_222
   (D,
    I065_out,
    sync_reset,
    of_pc_ii_16,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I065_out;
  input sync_reset;
  input of_pc_ii_16;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I065_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_16;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_16),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__145 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I065_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_224
   (D,
    I061_out,
    sync_reset,
    of_pc_ii_15,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I061_out;
  input sync_reset;
  input of_pc_ii_15;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I061_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_15;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_15),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__146 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I061_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_226
   (D,
    I057_out,
    sync_reset,
    of_pc_ii_14,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I057_out;
  input sync_reset;
  input of_pc_ii_14;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I057_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_14;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_14),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__147 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I057_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_228
   (D,
    I053_out,
    sync_reset,
    of_pc_ii_13,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I053_out;
  input sync_reset;
  input of_pc_ii_13;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I053_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_13;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_13),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__148 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I053_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_230
   (D,
    I049_out,
    sync_reset,
    of_pc_ii_12,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I049_out;
  input sync_reset;
  input of_pc_ii_12;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I049_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_12;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_12),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__149 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I049_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_232
   (D,
    I0121_out,
    sync_reset,
    of_pc_ii_30,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I0121_out;
  input sync_reset;
  input of_pc_ii_30;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0121_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_30;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_30),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__131 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I0121_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_234
   (D,
    I045_out,
    sync_reset,
    of_pc_ii_11,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I045_out;
  input sync_reset;
  input of_pc_ii_11;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I045_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_11;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_11),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__150 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I045_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_236
   (D,
    I041_out,
    sync_reset,
    of_pc_ii_10,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I041_out;
  input sync_reset;
  input of_pc_ii_10;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I041_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_10;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_10),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__151 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I041_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_238
   (D,
    I037_out,
    sync_reset,
    of_pc_ii_9,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I037_out;
  input sync_reset;
  input of_pc_ii_9;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I037_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_9;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_9),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__152 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I037_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_240
   (D,
    I033_out,
    sync_reset,
    of_pc_ii_8,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I033_out;
  input sync_reset;
  input of_pc_ii_8;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I033_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_8;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_8),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__153 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I033_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_242
   (D,
    I029_out,
    sync_reset,
    of_pc_ii_7,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I029_out;
  input sync_reset;
  input of_pc_ii_7;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I029_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_7;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_7),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__154 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I029_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_244
   (D,
    I025_out,
    sync_reset,
    of_pc_ii_6,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I025_out;
  input sync_reset;
  input of_pc_ii_6;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I025_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_6;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_6),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__155 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I025_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_246
   (D,
    I021_out,
    sync_reset,
    of_pc_ii_5,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I021_out;
  input sync_reset;
  input of_pc_ii_5;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I021_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_5;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_5),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__156 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I021_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_248
   (D,
    I017_out,
    sync_reset,
    of_pc_ii_4,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I017_out;
  input sync_reset;
  input of_pc_ii_4;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I017_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_4;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_4),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__157 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I017_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_250
   (D,
    I013_out,
    sync_reset,
    of_pc_ii_3,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I013_out;
  input sync_reset;
  input of_pc_ii_3;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I013_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_3;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_3),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__158 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I013_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_252
   (D,
    I09_out,
    sync_reset,
    of_pc_ii_2,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I09_out;
  input sync_reset;
  input of_pc_ii_2;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I09_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_2;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_2),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__159 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I09_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_254
   (D,
    I0117_out,
    sync_reset,
    of_pc_ii_29,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I0117_out;
  input sync_reset;
  input of_pc_ii_29;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0117_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_29;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_29),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__132 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I0117_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_256
   (D,
    I05_out,
    sync_reset,
    of_pc_ii_1,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I05_out;
  input sync_reset;
  input of_pc_ii_1;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I05_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_1;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_1),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__160 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I05_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_258
   (D,
    I0,
    sync_reset,
    of_pc_ii_0,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I0;
  input sync_reset;
  input of_pc_ii_0;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_0;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_0),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__161 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_260
   (D,
    I0113_out,
    sync_reset,
    of_pc_ii_28,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I0113_out;
  input sync_reset;
  input of_pc_ii_28;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0113_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_28;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_28),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__133 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I0113_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_262
   (D,
    I0109_out,
    sync_reset,
    of_pc_ii_27,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I0109_out;
  input sync_reset;
  input of_pc_ii_27;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0109_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_27;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_27),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__134 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I0109_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_264
   (D,
    I0105_out,
    sync_reset,
    of_pc_ii_26,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I0105_out;
  input sync_reset;
  input of_pc_ii_26;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0105_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_26;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_26),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__135 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I0105_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_266
   (D,
    I0101_out,
    sync_reset,
    of_pc_ii_25,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I0101_out;
  input sync_reset;
  input of_pc_ii_25;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0101_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_25;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_25),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__136 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I0101_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_268
   (D,
    I097_out,
    sync_reset,
    of_pc_ii_24,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I097_out;
  input sync_reset;
  input of_pc_ii_24;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I097_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_24;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_24),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__137 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I097_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_270
   (D,
    I093_out,
    sync_reset,
    of_pc_ii_23,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I093_out;
  input sync_reset;
  input of_pc_ii_23;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I093_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_23;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_23),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__138 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I093_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_272
   (D,
    I089_out,
    sync_reset,
    of_pc_ii_22,
    Clk,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    Q);
  output [0:0]D;
  output I089_out;
  input sync_reset;
  input of_pc_ii_22;
  input Clk;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I089_out;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]if_sel_input;
  wire of_pc_ii_22;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_22),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__139 
       (.I0(if_sel_input),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(D),
        .I3(Q),
        .O(I089_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_305
   (mem_MSR,
    MEM_Fwd,
    \wb_MSR_i_reg[28] ,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk,
    mem_sel_msr,
    mem_ex_result,
    wb_piperun,
    \wb_MSR_i_reg[28]_0 );
  output [0:0]mem_MSR;
  output [0:0]MEM_Fwd;
  output \wb_MSR_i_reg[28] ;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input mem_sel_msr;
  input [0:0]mem_ex_result;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[28]_0 ;

  wire Clk;
  wire [0:0]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]mem_MSR;
  wire [0:0]mem_ex_result;
  wire mem_sel_msr;
  wire sync_reset;
  wire \wb_MSR_i_reg[28] ;
  wire [0:0]\wb_MSR_i_reg[28]_0 ;
  wire wb_piperun;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(mem_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[28]_i_1 
       (.I0(mem_MSR),
        .I1(mem_sel_msr),
        .I2(mem_ex_result),
        .O(MEM_Fwd));
  LUT3 #(
    .INIT(8'hB8)) 
    \wb_MSR_i[28]_i_1 
       (.I0(mem_MSR),
        .I1(wb_piperun),
        .I2(\wb_MSR_i_reg[28]_0 ),
        .O(\wb_MSR_i_reg[28] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_306
   (\wb_MSR_i_reg[29] ,
    MEM_Fwd,
    \wb_MSR_i_reg[29]_0 ,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk,
    mem_sel_msr,
    mem_ex_result,
    wb_piperun,
    \wb_MSR_i_reg[29]_1 );
  output \wb_MSR_i_reg[29] ;
  output [1:0]MEM_Fwd;
  output \wb_MSR_i_reg[29]_0 ;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input mem_sel_msr;
  input [1:0]mem_ex_result;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[29]_1 ;

  wire Clk;
  wire [1:0]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire [1:0]mem_ex_result;
  wire mem_sel_msr;
  wire sync_reset;
  wire \wb_MSR_i_reg[29] ;
  wire \wb_MSR_i_reg[29]_0 ;
  wire [0:0]\wb_MSR_i_reg[29]_1 ;
  wire wb_piperun;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(\wb_MSR_i_reg[29] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[0]_i_2 
       (.I0(\wb_MSR_i_reg[29] ),
        .I1(mem_sel_msr),
        .I2(mem_ex_result[1]),
        .O(MEM_Fwd[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[29]_i_1 
       (.I0(\wb_MSR_i_reg[29] ),
        .I1(mem_sel_msr),
        .I2(mem_ex_result[0]),
        .O(MEM_Fwd[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \wb_MSR_i[29]_i_1 
       (.I0(\wb_MSR_i_reg[29] ),
        .I1(wb_piperun),
        .I2(\wb_MSR_i_reg[29]_1 ),
        .O(\wb_MSR_i_reg[29]_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_307
   (mem_MSR,
    MEM_Fwd,
    \wb_MSR_i_reg[30] ,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk,
    mem_sel_msr,
    mem_ex_result,
    wb_MSR_Clear_IE,
    wb_piperun,
    \wb_MSR_i_reg[30]_0 );
  output [0:0]mem_MSR;
  output [0:0]MEM_Fwd;
  output \wb_MSR_i_reg[30] ;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input mem_sel_msr;
  input [0:0]mem_ex_result;
  input wb_MSR_Clear_IE;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[30]_0 ;

  wire Clk;
  wire [0:0]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]mem_MSR;
  wire [0:0]mem_ex_result;
  wire mem_sel_msr;
  wire sync_reset;
  wire wb_MSR_Clear_IE;
  wire \wb_MSR_i_reg[30] ;
  wire [0:0]\wb_MSR_i_reg[30]_0 ;
  wire wb_piperun;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(mem_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[30]_i_1 
       (.I0(mem_MSR),
        .I1(mem_sel_msr),
        .I2(mem_ex_result),
        .O(MEM_Fwd));
  LUT4 #(
    .INIT(16'h2F20)) 
    \wb_MSR_i[30]_i_1 
       (.I0(mem_MSR),
        .I1(wb_MSR_Clear_IE),
        .I2(wb_piperun),
        .I3(\wb_MSR_i_reg[30]_0 ),
        .O(\wb_MSR_i_reg[30] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_308
   (ex_MSR,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk);
  output [0:0]ex_MSR;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]ex_MSR;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_MSR),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_309
   (of_MSR,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk);
  output [0:0]of_MSR;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]of_MSR;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(of_MSR),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_310
   (ex_MSR,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk);
  output [0:0]ex_MSR;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]ex_MSR;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_MSR),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_311
   (ex_MSR,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk);
  output [0:0]ex_MSR;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]ex_MSR;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_MSR),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module ublaze_sopc_microblaze_0_0__MB_FDR_312
   (of_MSR,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk);
  output [0:0]of_MSR;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]of_MSR;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(of_MSR),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDS" *) 
module ublaze_sopc_microblaze_0_0__MB_FDS
   (\Using_FPGA.Native_0 ,
    I041_out,
    I045_out,
    I049_out,
    I053_out,
    I057_out,
    I061_out,
    I065_out,
    I069_out,
    I073_out,
    I077_out,
    I081_out,
    I085_out,
    I0129_out,
    I0133_out,
    I0137_out,
    I0141_out,
    I0145_out,
    I0149_out,
    I0153_out,
    I0157_out,
    I0161_out,
    I0165_out,
    I0169_out,
    I0125_out,
    I0121_out,
    I0117_out,
    I0113_out,
    I0109_out,
    I0105_out,
    I0101_out,
    I097_out,
    I093_out,
    I089_out,
    I037_out,
    I033_out,
    I029_out,
    I025_out,
    I021_out,
    I017_out,
    I013_out,
    I09_out,
    I05_out,
    I0_1,
    sync_reset,
    sel_input_i_0,
    Clk,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    of_predecode,
    in,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 );
  output \Using_FPGA.Native_0 ;
  output I041_out;
  output I045_out;
  output I049_out;
  output I053_out;
  output I057_out;
  output I061_out;
  output I065_out;
  output I069_out;
  output I073_out;
  output I077_out;
  output I081_out;
  output I085_out;
  output I0129_out;
  output I0133_out;
  output I0137_out;
  output I0141_out;
  output I0145_out;
  output I0149_out;
  output I0153_out;
  output I0157_out;
  output I0161_out;
  output I0165_out;
  output I0169_out;
  output I0125_out;
  output I0121_out;
  output I0117_out;
  output I0113_out;
  output I0109_out;
  output I0105_out;
  output I0101_out;
  output I097_out;
  output I093_out;
  output I089_out;
  output I037_out;
  output I033_out;
  output I029_out;
  output I025_out;
  output I021_out;
  output I017_out;
  output I013_out;
  output I09_out;
  output I05_out;
  output I0_1;
  input sync_reset;
  input sel_input_i_0;
  input Clk;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:10]of_predecode;
  input [31:0]in;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input [16:0]\Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;

  wire Clk;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I0129_out;
  wire I0133_out;
  wire I0137_out;
  wire I013_out;
  wire I0141_out;
  wire I0145_out;
  wire I0149_out;
  wire I0153_out;
  wire I0157_out;
  wire I0161_out;
  wire I0165_out;
  wire I0169_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I041_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire I0_1;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire [16:0]\Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire [31:0]in;
  wire [0:10]of_predecode;
  wire sel_input_i_0;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDS" *) 
  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_i_0),
        .Q(\Using_FPGA.Native_0 ),
        .S(sync_reset));
  LUT6 #(
    .INIT(64'hF870707070707070)) 
    \Using_FPGA.Native_i_1__107 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[0]),
        .I3(in[31]),
        .I4(in[30]),
        .I5(in[28]),
        .O(I041_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__108 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(in[10]),
        .O(I045_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__109 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(in[11]),
        .O(I049_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__110 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_3 ),
        .I3(in[12]),
        .O(I053_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__111 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_4 ),
        .I3(in[13]),
        .O(I057_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__112 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [0]),
        .I3(in[14]),
        .O(I061_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__113 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [1]),
        .I3(in[15]),
        .O(I065_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__114 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [2]),
        .I3(in[16]),
        .O(I069_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__115 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [3]),
        .I3(in[17]),
        .O(I073_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__116 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [4]),
        .I3(in[18]),
        .O(I077_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__117 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [5]),
        .I3(in[19]),
        .O(I081_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__118 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [6]),
        .I3(in[20]),
        .O(I085_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__119 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_6 ),
        .I3(in[21]),
        .O(I0129_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__120 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_7 ),
        .I3(in[22]),
        .O(I0133_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__121 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_8 ),
        .I3(in[23]),
        .O(I0137_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__122 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_9 ),
        .I3(in[24]),
        .O(I0141_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__123 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_10 ),
        .I3(in[25]),
        .O(I0145_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__124 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_11 ),
        .I3(in[26]),
        .O(I0149_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__125 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_12 ),
        .I3(in[27]),
        .O(I0153_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__126 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_13 ),
        .I3(in[28]),
        .O(I0157_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__127 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_14 ),
        .I3(in[29]),
        .O(I0161_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__128 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_15 ),
        .I3(in[30]),
        .O(I0165_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__129 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_16 ),
        .I3(in[31]),
        .O(I0169_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__162 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [16]),
        .I3(in[9]),
        .O(I0125_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__163 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [15]),
        .I3(in[8]),
        .O(I0121_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__164 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [14]),
        .I3(in[7]),
        .O(I0117_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__165 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [13]),
        .I3(in[6]),
        .O(I0113_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__166 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [12]),
        .I3(in[5]),
        .O(I0109_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__167 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [11]),
        .I3(in[4]),
        .O(I0105_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__168 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [10]),
        .I3(in[3]),
        .O(I0101_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__169 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [9]),
        .I3(in[2]),
        .O(I097_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__170 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [8]),
        .I3(in[1]),
        .O(I093_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__171 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\Using_FPGA.Native_5 [7]),
        .I3(in[0]),
        .O(I089_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__172 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[1]),
        .I3(in[9]),
        .O(I037_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__173 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[2]),
        .I3(in[8]),
        .O(I033_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__174 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[3]),
        .I3(in[7]),
        .O(I029_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__175 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[4]),
        .I3(in[6]),
        .O(I025_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__176 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[5]),
        .I3(in[5]),
        .O(I021_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__177 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[6]),
        .I3(in[4]),
        .O(I017_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__178 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[7]),
        .I3(in[3]),
        .O(I013_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__179 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[8]),
        .I3(in[2]),
        .O(I09_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__180 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[9]),
        .I3(in[1]),
        .O(I05_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__181 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(of_predecode[10]),
        .I3(in[0]),
        .O(I0_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT4
   (S,
    Q,
    \EX_ALU_Op_reg[0] ,
    EX_CMP_Op_reg,
    alu_AddSub_1);
  output S;
  input [0:0]Q;
  input [0:0]\EX_ALU_Op_reg[0] ;
  input EX_CMP_Op_reg;
  input alu_AddSub_1;

  wire EX_CMP_Op_reg;
  wire [0:0]Q;
  wire S;
  wire alu_AddSub_1;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(EX_CMP_Op_reg),
        .I2(alu_AddSub_1),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6
   (sel_input_iii_3,
    if_sel_input,
    addr,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    of_pause_reg,
    I5);
  output sel_input_iii_3;
  input [0:0]if_sel_input;
  input [0:0]addr;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input of_pause_reg;
  input I5;

  wire I5;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]addr;
  wire [0:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_iii_3;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT5 #(
    .INIT(32'h0000C0AC)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input),
        .I1(addr),
        .I2(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I3(of_pause_reg),
        .I4(I5),
        .O(sel_input_iii_3));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_118
   (sel_input_iii_2,
    if_sel_input,
    addr,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    of_pause_reg,
    I5);
  output sel_input_iii_2;
  input [1:0]if_sel_input;
  input [0:0]addr;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input of_pause_reg;
  input I5;

  wire I5;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]addr;
  wire [1:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_iii_2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input[0]),
        .I1(if_sel_input[1]),
        .I2(addr),
        .I3(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I4(of_pause_reg),
        .I5(I5),
        .O(sel_input_iii_2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_120
   (sel_input_iii_1,
    \Using_FPGA.Native_0 ,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    of_pause_reg,
    I5);
  output sel_input_iii_1;
  input \Using_FPGA.Native_0 ;
  input [1:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input of_pause_reg;
  input I5;

  wire I5;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Using_FPGA.Native_0 ;
  wire [1:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_iii_1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(if_sel_input[0]),
        .I2(if_sel_input[1]),
        .I3(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I4(of_pause_reg),
        .I5(I5),
        .O(sel_input_iii_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_122
   (sel_input_iii_0,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    of_pause_reg,
    I5);
  output sel_input_iii_0;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input of_pause_reg;
  input I5;

  wire I5;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_iii_0;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(if_sel_input),
        .I3(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I4(of_pause_reg),
        .I5(I5),
        .O(sel_input_iii_0));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[9] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[9] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[9] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD688 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[9] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_526
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[8] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[8] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[8] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD687 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[8] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_528
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[7] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[7] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[7] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD686 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[7] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_530
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[6] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[6] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[6] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD685 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[6] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_532
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[5] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[5] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[5] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD684 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[5] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_534
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[4] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[4] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[4] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD683 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[4] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_536
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[3] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[3] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[3] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD682 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[3] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_538
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[31] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[31] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[31] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD681 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[31] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_540
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[30] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[30] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[30] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD680 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[30] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_542
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[2] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[2] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[2] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD679 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[2] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_544
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[29] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[29] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[29] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD678 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[29] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_546
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[28] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[28] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[28] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD677 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[28] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_548
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[27] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[27] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[27] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD676 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[27] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_550
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[26] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[26] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[26] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD675 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[26] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_552
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[25] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[25] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[25] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD674 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[25] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_554
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[24] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[24] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[24] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD673 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[24] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_556
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[23] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[23] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[23] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD672 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[23] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_558
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[22] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[22] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[22] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD671 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[22] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_560
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[21] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[21] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[21] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD670 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[21] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_562
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[20] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[20] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[20] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD669 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[20] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_564
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[1] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[1] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[1] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD668 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[1] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_566
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[19] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[19] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[19] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD667 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[19] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_568
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[18] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[18] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[18] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD666 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[18] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_570
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[17] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[17] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[17] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD665 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[17] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_572
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[16] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[16] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[16] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD664 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[16] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_574
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[15] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[15] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[15] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD663 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[15] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_576
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[14] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[14] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[14] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD662 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[14] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_578
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[13] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[13] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[13] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD661 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[13] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_580
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[12] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[12] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[12] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD660 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[12] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_582
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[11] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[11] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[11] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD659 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[11] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2_584
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[10] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[10] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[10] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_UNIQ_BASE_ \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[10] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized1
   (muxcy_di,
    muxcy_sel);
  output muxcy_di;
  output muxcy_sel;

  wire ONE;
  wire ZERO;

  assign muxcy_di = ZERO;
  assign muxcy_sel = ONE;
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND_1
       (.G(ZERO));
  (* OPT_MODIFIED = "PROPCONST" *) 
  VCC VCC_1
       (.P(ONE));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3
   (Y,
    I139_out,
    in,
    Instr,
    LOCKSTEP_Master_Out,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] );
  output [1:0]Y;
  output I139_out;
  output [0:0]in;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input [1:0]\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] ;

  wire I139_out;
  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [1:0]Y;
  wire [0:0]in;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD736 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
  LUT5 #(
    .INIT(32'hE2222222)) 
    \Using_FPGA.Native_i_2__61 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Y[1]),
        .I3(\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] [1]),
        .I4(\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] [0]),
        .O(I139_out));
  LUT3 #(
    .INIT(8'h80)) 
    \ibuffer_reg[3][32]_srl4_i_1 
       (.I0(Y[1]),
        .I1(\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] [1]),
        .I2(\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] [0]),
        .O(in));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_10
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD745 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_11
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD746 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_12
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD747 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_13
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD748 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_14
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD749 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_15
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD750 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_16
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD751 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_2
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD737 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_3
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD738 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_4
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD739 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_5
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD740 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_6
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD741 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_7
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD742 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_8
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD743 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_9
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD744 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5
   (wb_PC_II_31,
    addr_AddSub_31,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[0] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_31;
  output addr_AddSub_31;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[0] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire addr_AddSub_31;
  wire [0:0]\mem_pc_i_reg[0] ;
  wire wb_PC_II_31;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD704 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[0] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_31),
        .O6(addr_AddSub_31));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_315
   (wb_PC_II_21,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[10] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_21;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[10] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[10] ;
  wire wb_PC_II_21;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD705 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[10] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_21),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_318
   (wb_PC_II_20,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[11] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_20;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[11] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[11] ;
  wire wb_PC_II_20;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD706 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[11] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_20),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_321
   (wb_PC_II_19,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[12] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_19;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[12] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[12] ;
  wire wb_PC_II_19;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD707 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[12] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_19),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_324
   (wb_PC_II_18,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[13] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_18;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[13] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[13] ;
  wire wb_PC_II_18;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD708 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[13] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_18),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_327
   (wb_PC_II_17,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[14] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_17;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[14] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[14] ;
  wire wb_PC_II_17;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD709 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[14] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_17),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_330
   (wb_PC_II_16,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[15] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_16;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[15] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[15] ;
  wire wb_PC_II_16;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD710 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[15] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_16),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_333
   (wb_PC_II_15,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[16] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_15;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[16] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[16] ;
  wire wb_PC_II_15;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD711 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[16] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_15),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_336
   (wb_PC_II_14,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[17] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_14;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[17] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[17] ;
  wire wb_PC_II_14;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD712 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[17] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_14),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_339
   (wb_PC_II_13,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[18] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_13;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[18] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[18] ;
  wire wb_PC_II_13;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD713 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[18] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_13),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_342
   (wb_PC_II_12,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[19] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_12;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[19] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[19] ;
  wire wb_PC_II_12;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD714 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[19] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_12),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_345
   (wb_PC_II_30,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[1] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_30;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[1] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[1] ;
  wire wb_PC_II_30;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD715 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[1] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_30),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_348
   (wb_PC_II_11,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[20] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_11;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[20] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[20] ;
  wire wb_PC_II_11;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD716 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[20] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_11),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_351
   (wb_PC_II_10,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[21] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_10;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[21] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[21] ;
  wire wb_PC_II_10;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD717 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[21] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_10),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_354
   (wb_PC_II_9,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[22] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_9;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[22] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[22] ;
  wire wb_PC_II_9;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD718 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[22] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_9),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_357
   (wb_PC_II_8,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[23] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_8;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[23] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[23] ;
  wire wb_PC_II_8;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD719 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[23] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_8),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_360
   (wb_PC_II_7,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[24] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_7;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[24] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[24] ;
  wire wb_PC_II_7;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD720 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[24] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_7),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_363
   (wb_PC_II_6,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[25] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_6;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[25] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[25] ;
  wire wb_PC_II_6;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD721 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[25] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_6),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_366
   (wb_PC_II_5,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[26] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_5;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[26] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[26] ;
  wire wb_PC_II_5;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD722 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[26] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_5),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_369
   (wb_PC_II_4,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[27] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_4;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[27] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[27] ;
  wire wb_PC_II_4;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD723 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[27] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_4),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_372
   (wb_PC_II_3,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[28] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_3;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[28] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[28] ;
  wire wb_PC_II_3;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD724 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[28] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_3),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_375
   (wb_PC_II_2,
    S,
    DI,
    I1_0,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[29] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_2;
  output S;
  input DI;
  input I1_0;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[29] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire I1_0;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[29] ;
  wire wb_PC_II_2;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h69696969FF00AAAA" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD725 \Using_FPGA.Native 
       (.I0(DI),
        .I1(I1_0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[29] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_2),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_378
   (wb_PC_II_29,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[2] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_29;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[2] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[2] ;
  wire wb_PC_II_29;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD726 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[2] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_29),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_381
   (wb_PC_II_1,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[30] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_1;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[30] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[30] ;
  wire wb_PC_II_1;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD727 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[30] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_1),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_384
   (wb_PC_II_0,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[31] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_0;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[31] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire DI;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire [0:0]\mem_pc_i_reg[31] ;
  wire wb_PC_II_0;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD728 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[31] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_0),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_387
   (wb_PC_II_28,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[3] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_28;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[3] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[3] ;
  wire wb_PC_II_28;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD729 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[3] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_28),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_390
   (wb_PC_II_27,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[4] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_27;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[4] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[4] ;
  wire wb_PC_II_27;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD730 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[4] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_27),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_393
   (wb_PC_II_26,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[5] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_26;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[5] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[5] ;
  wire wb_PC_II_26;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD731 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[5] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_26),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_396
   (wb_PC_II_25,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[6] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_25;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[6] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[6] ;
  wire wb_PC_II_25;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD732 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[6] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_25),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_399
   (wb_PC_II_24,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[7] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_24;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[7] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[7] ;
  wire wb_PC_II_24;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD733 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[7] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_24),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_402
   (wb_PC_II_23,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[8] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_23;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[8] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[8] ;
  wire wb_PC_II_23;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD734 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[8] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_23),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_405
   (wb_PC_II_22,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[9] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg );
  output wb_PC_II_22;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[9] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;

  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[9] ;
  wire wb_PC_II_22;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD735 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[9] ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(1'b1),
        .O5(wb_PC_II_22),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10
   (of_read_ex_write_op1_conflict_part2,
    I0,
    of_predecode,
    \ex_gpr_write_addr_reg[4] ,
    ex_gpr_write_reg,
    ex_valid);
  output of_read_ex_write_op1_conflict_part2;
  input I0;
  input [1:0]of_predecode;
  input \ex_gpr_write_addr_reg[4] ;
  input ex_gpr_write_reg;
  input ex_valid;

  wire I0;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_gpr_write_reg;
  wire ex_valid;
  wire [1:0]of_predecode;
  wire of_read_ex_write_op1_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(of_predecode[1]),
        .I2(\ex_gpr_write_addr_reg[4] ),
        .I3(of_predecode[0]),
        .I4(ex_gpr_write_reg),
        .I5(ex_valid),
        .O(of_read_ex_write_op1_conflict_part2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_80
   (of_read_ex_write_op2_conflict_part2,
    I0,
    of_predecode,
    \ex_gpr_write_addr_reg[4] ,
    ex_gpr_write_reg,
    ex_valid);
  output of_read_ex_write_op2_conflict_part2;
  input I0;
  input [1:0]of_predecode;
  input \ex_gpr_write_addr_reg[4] ;
  input ex_gpr_write_reg;
  input ex_valid;

  wire I0;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_gpr_write_reg;
  wire ex_valid;
  wire [1:0]of_predecode;
  wire of_read_ex_write_op2_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(of_predecode[1]),
        .I2(\ex_gpr_write_addr_reg[4] ),
        .I3(of_predecode[0]),
        .I4(ex_gpr_write_reg),
        .I5(ex_valid),
        .O(of_read_ex_write_op2_conflict_part2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_82
   (of_read_ex_write_op3_conflict_part2,
    I0,
    \Using_FPGA.Native_0 ,
    \ex_gpr_write_addr_reg[4] ,
    \Using_FPGA.Native_1 ,
    ex_gpr_write_reg,
    ex_valid);
  output of_read_ex_write_op3_conflict_part2;
  input I0;
  input \Using_FPGA.Native_0 ;
  input \ex_gpr_write_addr_reg[4] ;
  input \Using_FPGA.Native_1 ;
  input ex_gpr_write_reg;
  input ex_valid;

  wire I0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_gpr_write_reg;
  wire ex_valid;
  wire of_read_ex_write_op3_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\ex_gpr_write_addr_reg[4] ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(ex_gpr_write_reg),
        .I5(ex_valid),
        .O(of_read_ex_write_op3_conflict_part2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_84
   (use_Reg_Neg_S_reg,
    Q,
    of_predecode,
    mem_gpr_write,
    mem_valid_instr,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op1_conflict_part1);
  output use_Reg_Neg_S_reg;
  input [1:0]Q;
  input [1:0]of_predecode;
  input mem_gpr_write;
  input mem_valid_instr;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op1_conflict_part1;

  wire [1:0]Q;
  wire mem_gpr_write;
  wire mem_is_multi_or_load_instr;
  wire mem_valid_instr;
  wire [1:0]of_predecode;
  wire of_read_mem_write_op1_conflict_part1;
  wire of_read_mem_write_op1_conflict_part2;
  wire use_Reg_Neg_S_reg;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(of_predecode[1]),
        .I2(Q[0]),
        .I3(of_predecode[0]),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op1_conflict_part2));
  LUT3 #(
    .INIT(8'h7F)) 
    \Using_FPGA.Native_i_1__58 
       (.I0(mem_is_multi_or_load_instr),
        .I1(of_read_mem_write_op1_conflict_part2),
        .I2(of_read_mem_write_op1_conflict_part1),
        .O(use_Reg_Neg_S_reg));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_86
   (of_read_mem_write_op2_conflict_part2,
    Q,
    of_predecode,
    mem_gpr_write,
    mem_valid_instr);
  output of_read_mem_write_op2_conflict_part2;
  input [1:0]Q;
  input [1:0]of_predecode;
  input mem_gpr_write;
  input mem_valid_instr;

  wire [1:0]Q;
  wire mem_gpr_write;
  wire mem_valid_instr;
  wire [1:0]of_predecode;
  wire of_read_mem_write_op2_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(of_predecode[1]),
        .I2(Q[0]),
        .I3(of_predecode[0]),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op2_conflict_part2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized10_88
   (use_Reg_Neg_S_reg,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    mem_gpr_write,
    mem_valid_instr,
    mem_is_multi_or_load_instr,
    of_predecode,
    of_read_mem_write_op3_conflict_part1);
  output use_Reg_Neg_S_reg;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input mem_gpr_write;
  input mem_valid_instr;
  input mem_is_multi_or_load_instr;
  input [0:0]of_predecode;
  input of_read_mem_write_op3_conflict_part1;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire mem_gpr_write;
  wire mem_is_multi_or_load_instr;
  wire mem_valid_instr;
  wire [0:0]of_predecode;
  wire of_read_mem_write_op3_conflict_part1;
  wire of_read_mem_write_op3_conflict_part2;
  wire use_Reg_Neg_S_reg;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op3_conflict_part2));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \Using_FPGA.Native_i_1__56 
       (.I0(of_read_mem_write_op3_conflict_part2),
        .I1(mem_is_multi_or_load_instr),
        .I2(of_predecode),
        .I3(of_read_mem_write_op3_conflict_part1),
        .O(use_Reg_Neg_S_reg));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized12
   (alu_AddSub_1,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[0] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output alu_AddSub_1;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[0] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[0] ;
  wire [0:0]Q;
  wire alu_AddSub_1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[0] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O(alu_AddSub_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized2
   (sel_input_delayslot,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    of_pause_reg,
    I5);
  output sel_input_delayslot;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [0:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input of_pause_reg;
  input I5;

  wire I5;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_delayslot;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h0000FFFFCCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(if_sel_input),
        .I3(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I4(of_pause_reg),
        .I5(I5),
        .O(sel_input_delayslot));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized4
   (sel_input_i_0,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    of_pause_reg,
    I4_0,
    I5);
  output sel_input_i_0;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input of_pause_reg;
  input I4_0;
  input I5;

  wire I4_0;
  wire I5;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pause_reg;
  wire sel_input_i_0;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFF00FFFFAE0AAE0A)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I3(of_pause_reg),
        .I4(I4_0),
        .I5(I5),
        .O(sel_input_i_0));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized6
   (of_Valid_II,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    of_pause_reg,
    I4_0,
    I5);
  output of_Valid_II;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input of_pause_reg;
  input I4_0;
  input I5;

  wire I4_0;
  wire I5;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_Valid_II;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00FF000051F551F5)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I3(of_pause_reg),
        .I4(I4_0),
        .I5(I5),
        .O(of_Valid_II));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8
   (A,
    D,
    of_predecode,
    ex_is_multi_or_load_instr,
    of_read_ex_write_op1_conflict_part2);
  output A;
  input [2:0]D;
  input [2:0]of_predecode;
  input ex_is_multi_or_load_instr;
  input of_read_ex_write_op1_conflict_part2;

  wire A;
  wire [2:0]D;
  wire O;
  wire ex_is_multi_or_load_instr;
  wire [2:0]of_predecode;
  wire of_read_ex_write_op1_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(of_predecode[2]),
        .I2(D[1]),
        .I3(of_predecode[1]),
        .I4(D[0]),
        .I5(of_predecode[0]),
        .O(O));
  LUT3 #(
    .INIT(8'h7F)) 
    \Using_FPGA.Native_i_1__59 
       (.I0(ex_is_multi_or_load_instr),
        .I1(O),
        .I2(of_read_ex_write_op1_conflict_part2),
        .O(A));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_79
   (of_read_ex_write_op2_conflict_part1,
    D,
    of_predecode);
  output of_read_ex_write_op2_conflict_part1;
  input [2:0]D;
  input [2:0]of_predecode;

  wire [2:0]D;
  wire [2:0]of_predecode;
  wire of_read_ex_write_op2_conflict_part1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(of_predecode[2]),
        .I2(D[1]),
        .I3(of_predecode[1]),
        .I4(D[0]),
        .I5(of_predecode[0]),
        .O(of_read_ex_write_op2_conflict_part1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_81
   (use_Reg_Neg_S_reg,
    D,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    ex_is_multi_or_load_instr,
    of_predecode,
    of_read_ex_write_op3_conflict_part2);
  output use_Reg_Neg_S_reg;
  input [2:0]D;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input ex_is_multi_or_load_instr;
  input [0:0]of_predecode;
  input of_read_ex_write_op3_conflict_part2;

  wire [2:0]D;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_is_multi_or_load_instr;
  wire [0:0]of_predecode;
  wire of_read_ex_write_op3_conflict_part1;
  wire of_read_ex_write_op3_conflict_part2;
  wire use_Reg_Neg_S_reg;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(\Using_FPGA.Native_0 [1]),
        .I2(D[1]),
        .I3(\Using_FPGA.Native_0 [0]),
        .I4(D[0]),
        .I5(\Using_FPGA.Native_1 ),
        .O(of_read_ex_write_op3_conflict_part1));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \Using_FPGA.Native_i_1__57 
       (.I0(of_read_ex_write_op3_conflict_part1),
        .I1(ex_is_multi_or_load_instr),
        .I2(of_predecode),
        .I3(of_read_ex_write_op3_conflict_part2),
        .O(use_Reg_Neg_S_reg));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_83
   (of_read_mem_write_op1_conflict_part1,
    Q,
    of_predecode);
  output of_read_mem_write_op1_conflict_part1;
  input [2:0]Q;
  input [2:0]of_predecode;

  wire [2:0]Q;
  wire [2:0]of_predecode;
  wire of_read_mem_write_op1_conflict_part1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(of_predecode[2]),
        .I2(Q[1]),
        .I3(of_predecode[1]),
        .I4(Q[0]),
        .I5(of_predecode[0]),
        .O(of_read_mem_write_op1_conflict_part1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_85
   (of_read_mem_write_op2_conflict_part1,
    Q,
    of_predecode);
  output of_read_mem_write_op2_conflict_part1;
  input [2:0]Q;
  input [2:0]of_predecode;

  wire [2:0]Q;
  wire [2:0]of_predecode;
  wire of_read_mem_write_op2_conflict_part1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(of_predecode[2]),
        .I2(Q[1]),
        .I3(of_predecode[1]),
        .I4(Q[0]),
        .I5(of_predecode[0]),
        .O(of_read_mem_write_op2_conflict_part1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized8_87
   (of_read_mem_write_op3_conflict_part1,
    Q,
    D,
    \Using_FPGA.Native_0 );
  output of_read_mem_write_op3_conflict_part1;
  input [2:0]Q;
  input [1:0]D;
  input \Using_FPGA.Native_0 ;

  wire [1:0]D;
  wire [2:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_read_mem_write_op3_conflict_part1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(D[1]),
        .I2(Q[1]),
        .I3(D[0]),
        .I4(Q[0]),
        .I5(\Using_FPGA.Native_0 ),
        .O(of_read_mem_write_op3_conflict_part1));
endmodule

(* ORIG_REF_NAME = "MB_MULT_AND" *) 
module ublaze_sopc_microblaze_0_0__MB_MULT_AND
   (DI,
    Q,
    \EX_ALU_Op_reg[0] );
  output DI;
  input [0:0]Q;
  input [0:0]\EX_ALU_Op_reg[0] ;

  wire DI;
  wire [0:0]\EX_ALU_Op_reg[0] ;
  wire [0:0]Q;

  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] ),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY
   (mem_databus_ready,
    mem_access_completed_reg,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output mem_databus_ready;
  input mem_access_completed_reg;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire mem_access_completed_reg;
  wire [1:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\^lopt_4 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [1:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b1}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,mem_access_completed_reg}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_100
   (jump_carry5,
    jump_carry4,
    lopt,
    lopt_1,
    lopt_2);
  output jump_carry5;
  input jump_carry4;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire jump_carry5;

  assign jump_carry5 = lopt;
  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_101
   (ex_jump_q_reg,
    I5,
    ex_jump_hold_reg,
    ex_delayslot_Instr0,
    keep_jump_taken_with_ds_reg,
    mem_jump_taken0,
    \Instr_Addr[0] ,
    if_missed_fetch_reg,
    ex_jump_q_reg_0,
    jump_carry5,
    wb_exception,
    Q,
    ex_jump_hold,
    E,
    sync_reset,
    keep_jump_taken_with_ds,
    ex_branch_with_delayslot,
    of_pause_reg,
    ex_mbar_stall_no_sleep_1,
    ex_first_cycle,
    ex_Take_Intr_or_Exc_reg,
    ex_mbar_decode,
    ex_mbar_sleep,
    ex_databus_addr,
    \if_pc_reg[30] ,
    \EX_Op2_reg[0] ,
    O,
    \if_pc_reg[28] ,
    \if_pc_reg[27] ,
    \if_pc_reg[26] ,
    \if_pc_reg[25] ,
    \if_pc_reg[24] ,
    \if_pc_reg[23] ,
    \if_pc_reg[22] ,
    \if_pc_reg[21] ,
    \if_pc_reg[20] ,
    \if_pc_reg[19] ,
    \if_pc_reg[18] ,
    \if_pc_reg[17] ,
    \if_pc_reg[16] ,
    \if_pc_reg[15] ,
    \if_pc_reg[14] ,
    \if_pc_reg[13] ,
    \if_pc_reg[12] ,
    \if_pc_reg[11] ,
    \if_pc_reg[10] ,
    \if_pc_reg[9] ,
    \if_pc_reg[8] ,
    \if_pc_reg[7] ,
    \if_pc_reg[6] ,
    \if_pc_reg[5] ,
    \if_pc_reg[4] ,
    \if_pc_reg[3] ,
    \if_pc_reg[2] ,
    \if_pc_reg[1] ,
    O56_out,
    if_missed_fetch,
    if_fetch_in_progress_reg,
    IB_Ready,
    LOCKSTEP_Master_Out,
    ex_jump_q);
  output ex_jump_q_reg;
  output I5;
  output ex_jump_hold_reg;
  output ex_delayslot_Instr0;
  output keep_jump_taken_with_ds_reg;
  output mem_jump_taken0;
  output [31:0]\Instr_Addr[0] ;
  output if_missed_fetch_reg;
  output ex_jump_q_reg_0;
  input jump_carry5;
  input wb_exception;
  input [2:0]Q;
  input ex_jump_hold;
  input [0:0]E;
  input sync_reset;
  input keep_jump_taken_with_ds;
  input ex_branch_with_delayslot;
  input of_pause_reg;
  input ex_mbar_stall_no_sleep_1;
  input ex_first_cycle;
  input ex_Take_Intr_or_Exc_reg;
  input ex_mbar_decode;
  input ex_mbar_sleep;
  input [1:0]ex_databus_addr;
  input [1:0]\if_pc_reg[30] ;
  input [29:0]\EX_Op2_reg[0] ;
  input O;
  input \if_pc_reg[28] ;
  input \if_pc_reg[27] ;
  input \if_pc_reg[26] ;
  input \if_pc_reg[25] ;
  input \if_pc_reg[24] ;
  input \if_pc_reg[23] ;
  input \if_pc_reg[22] ;
  input \if_pc_reg[21] ;
  input \if_pc_reg[20] ;
  input \if_pc_reg[19] ;
  input \if_pc_reg[18] ;
  input \if_pc_reg[17] ;
  input \if_pc_reg[16] ;
  input \if_pc_reg[15] ;
  input \if_pc_reg[14] ;
  input \if_pc_reg[13] ;
  input \if_pc_reg[12] ;
  input \if_pc_reg[11] ;
  input \if_pc_reg[10] ;
  input \if_pc_reg[9] ;
  input \if_pc_reg[8] ;
  input \if_pc_reg[7] ;
  input \if_pc_reg[6] ;
  input \if_pc_reg[5] ;
  input \if_pc_reg[4] ;
  input \if_pc_reg[3] ;
  input \if_pc_reg[2] ;
  input \if_pc_reg[1] ;
  input O56_out;
  input if_missed_fetch;
  input [0:0]if_fetch_in_progress_reg;
  input IB_Ready;
  input [0:0]LOCKSTEP_Master_Out;
  input ex_jump_q;

  wire [0:0]E;
  wire [29:0]\EX_Op2_reg[0] ;
  wire I5;
  wire IB_Ready;
  wire [31:0]\Instr_Addr[0] ;
  wire [0:0]LOCKSTEP_Master_Out;
  wire O;
  wire O56_out;
  wire [2:0]Q;
  wire \Using_FPGA.Native_i_1__44_n_0 ;
  wire ex_Take_Intr_or_Exc_reg;
  wire ex_branch_with_delayslot;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr0;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_jump_hold_reg;
  wire ex_jump_q;
  wire ex_jump_q_reg;
  wire ex_jump_q_reg_0;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire [0:0]if_fetch_in_progress_reg;
  wire if_missed_fetch;
  wire if_missed_fetch_reg;
  wire \if_pc_reg[10] ;
  wire \if_pc_reg[11] ;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[13] ;
  wire \if_pc_reg[14] ;
  wire \if_pc_reg[15] ;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[17] ;
  wire \if_pc_reg[18] ;
  wire \if_pc_reg[19] ;
  wire \if_pc_reg[1] ;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[21] ;
  wire \if_pc_reg[22] ;
  wire \if_pc_reg[23] ;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[25] ;
  wire \if_pc_reg[26] ;
  wire \if_pc_reg[27] ;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[2] ;
  wire [1:0]\if_pc_reg[30] ;
  wire \if_pc_reg[3] ;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[5] ;
  wire \if_pc_reg[6] ;
  wire \if_pc_reg[7] ;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[9] ;
  wire jump_carry5;
  wire keep_jump_taken_with_ds;
  wire keep_jump_taken_with_ds_reg;
  wire of_pause_reg;
  wire sync_reset;
  wire wb_exception;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[0]_INST_0 
       (.I0(\EX_Op2_reg[0] [29]),
        .I1(ex_jump_q_reg),
        .I2(O56_out),
        .O(\Instr_Addr[0] [31]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[10]_INST_0 
       (.I0(\EX_Op2_reg[0] [19]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[10] ),
        .O(\Instr_Addr[0] [21]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[11]_INST_0 
       (.I0(\EX_Op2_reg[0] [18]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[11] ),
        .O(\Instr_Addr[0] [20]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[12]_INST_0 
       (.I0(\EX_Op2_reg[0] [17]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[12] ),
        .O(\Instr_Addr[0] [19]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[13]_INST_0 
       (.I0(\EX_Op2_reg[0] [16]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[13] ),
        .O(\Instr_Addr[0] [18]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[14]_INST_0 
       (.I0(\EX_Op2_reg[0] [15]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[14] ),
        .O(\Instr_Addr[0] [17]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[15]_INST_0 
       (.I0(\EX_Op2_reg[0] [14]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[15] ),
        .O(\Instr_Addr[0] [16]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[16]_INST_0 
       (.I0(\EX_Op2_reg[0] [13]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[16] ),
        .O(\Instr_Addr[0] [15]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[17]_INST_0 
       (.I0(\EX_Op2_reg[0] [12]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[17] ),
        .O(\Instr_Addr[0] [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[18]_INST_0 
       (.I0(\EX_Op2_reg[0] [11]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[18] ),
        .O(\Instr_Addr[0] [13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[19]_INST_0 
       (.I0(\EX_Op2_reg[0] [10]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[19] ),
        .O(\Instr_Addr[0] [12]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[1]_INST_0 
       (.I0(\EX_Op2_reg[0] [28]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[1] ),
        .O(\Instr_Addr[0] [30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[20]_INST_0 
       (.I0(\EX_Op2_reg[0] [9]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[20] ),
        .O(\Instr_Addr[0] [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[21]_INST_0 
       (.I0(\EX_Op2_reg[0] [8]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[21] ),
        .O(\Instr_Addr[0] [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[22]_INST_0 
       (.I0(\EX_Op2_reg[0] [7]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[22] ),
        .O(\Instr_Addr[0] [9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[23]_INST_0 
       (.I0(\EX_Op2_reg[0] [6]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[23] ),
        .O(\Instr_Addr[0] [8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[24]_INST_0 
       (.I0(\EX_Op2_reg[0] [5]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[24] ),
        .O(\Instr_Addr[0] [7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[25]_INST_0 
       (.I0(\EX_Op2_reg[0] [4]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[25] ),
        .O(\Instr_Addr[0] [6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[26]_INST_0 
       (.I0(\EX_Op2_reg[0] [3]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[26] ),
        .O(\Instr_Addr[0] [5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[27]_INST_0 
       (.I0(\EX_Op2_reg[0] [2]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[27] ),
        .O(\Instr_Addr[0] [4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[28]_INST_0 
       (.I0(\EX_Op2_reg[0] [1]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[28] ),
        .O(\Instr_Addr[0] [3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[29]_INST_0 
       (.I0(\EX_Op2_reg[0] [0]),
        .I1(ex_jump_q_reg),
        .I2(O),
        .O(\Instr_Addr[0] [2]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[2]_INST_0 
       (.I0(\EX_Op2_reg[0] [27]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[2] ),
        .O(\Instr_Addr[0] [29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[30]_INST_0 
       (.I0(ex_databus_addr[1]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[30] [1]),
        .O(\Instr_Addr[0] [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[31]_INST_0 
       (.I0(ex_databus_addr[0]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[30] [0]),
        .O(\Instr_Addr[0] [0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[3]_INST_0 
       (.I0(\EX_Op2_reg[0] [26]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[3] ),
        .O(\Instr_Addr[0] [28]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[4]_INST_0 
       (.I0(\EX_Op2_reg[0] [25]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[4] ),
        .O(\Instr_Addr[0] [27]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[5]_INST_0 
       (.I0(\EX_Op2_reg[0] [24]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[5] ),
        .O(\Instr_Addr[0] [26]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[6]_INST_0 
       (.I0(\EX_Op2_reg[0] [23]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[6] ),
        .O(\Instr_Addr[0] [25]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[7]_INST_0 
       (.I0(\EX_Op2_reg[0] [22]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[7] ),
        .O(\Instr_Addr[0] [24]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[8]_INST_0 
       (.I0(\EX_Op2_reg[0] [21]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[8] ),
        .O(\Instr_Addr[0] [23]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[9]_INST_0 
       (.I0(\EX_Op2_reg[0] [20]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[9] ),
        .O(\Instr_Addr[0] [22]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(jump_carry5),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:1],ex_jump_q_reg}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:1],\Using_FPGA.Native_i_1__44_n_0 }));
  LUT6 #(
    .INIT(64'h00000000FFABFFFF)) 
    \Using_FPGA.Native_i_1__44 
       (.I0(ex_jump_hold),
        .I1(ex_mbar_stall_no_sleep_1),
        .I2(ex_first_cycle),
        .I3(ex_Take_Intr_or_Exc_reg),
        .I4(ex_mbar_decode),
        .I5(ex_mbar_sleep),
        .O(\Using_FPGA.Native_i_1__44_n_0 ));
  LUT5 #(
    .INIT(32'hAAEAAAAA)) 
    \Using_FPGA.Native_i_2 
       (.I0(ex_jump_q_reg),
        .I1(wb_exception),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(I5));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    ex_delayslot_Instr_i_1
       (.I0(keep_jump_taken_with_ds),
        .I1(ex_jump_q_reg),
        .I2(ex_branch_with_delayslot),
        .O(ex_delayslot_Instr0));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'h000E)) 
    ex_jump_hold_i_1
       (.I0(ex_jump_hold),
        .I1(ex_jump_q_reg),
        .I2(E),
        .I3(sync_reset),
        .O(ex_jump_hold_reg));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    ex_jump_q_i_1
       (.I0(ex_jump_q),
        .I1(ex_jump_q_reg),
        .I2(E),
        .O(ex_jump_q_reg_0));
  LUT6 #(
    .INIT(64'h000000000000020E)) 
    if_missed_fetch_i_1
       (.I0(ex_jump_q_reg),
        .I1(if_missed_fetch),
        .I2(if_fetch_in_progress_reg),
        .I3(IB_Ready),
        .I4(sync_reset),
        .I5(LOCKSTEP_Master_Out),
        .O(if_missed_fetch_reg));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h000000EA)) 
    keep_jump_taken_with_ds_i_1
       (.I0(keep_jump_taken_with_ds),
        .I1(ex_branch_with_delayslot),
        .I2(ex_jump_q_reg),
        .I3(sync_reset),
        .I4(of_pause_reg),
        .O(keep_jump_taken_with_ds_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_102
   (CI,
    if_fetch_for_timing_optimization1,
    if_pc_incr_carry1,
    lopt,
    lopt_1);
  output CI;
  input if_fetch_for_timing_optimization1;
  input if_pc_incr_carry1;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_103
   (if_pc_incr_carry0,
    if_missed_fetch,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output if_pc_incr_carry0;
  input if_missed_fetch;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire if_missed_fetch;
  wire if_valid;
  wire lopt_10;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_10;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_10,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [2:0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,if_valid}));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__45 
       (.I0(if_missed_fetch),
        .O(if_valid));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_104
   (if_pc_incr_carry1,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    if_pc_incr_carry0,
    lopt,
    lopt_1);
  output if_pc_incr_carry1;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input if_pc_incr_carry0;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_105
   (of_PipeRun_carry_2,
    ex_is_multi_or_load_instr_reg,
    of_PipeRun_carry_3,
    lopt,
    lopt_1);
  output of_PipeRun_carry_2;
  input ex_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_3;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire of_PipeRun_carry_2;

  assign lopt_1 = \<const0> ;
  assign of_PipeRun_carry_2 = lopt;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_106
   (of_PipeRun_carry_3,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_4,
    lopt,
    lopt_1);
  output of_PipeRun_carry_3;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_4;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_107
   (of_PipeRun_carry_4,
    ex_is_multi_or_load_instr_reg,
    of_PipeRun_carry_5,
    lopt,
    lopt_1);
  output of_PipeRun_carry_4;
  input ex_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_5;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_108
   (of_PipeRun_carry_5,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_6,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_5;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_6;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire mem_is_multi_or_load_instr_reg;
  wire of_PipeRun_carry_6;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_6),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,mem_is_multi_or_load_instr_reg}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_109
   (of_PipeRun_carry_6,
    A,
    of_PipeRun_carry_7,
    lopt,
    lopt_1);
  output of_PipeRun_carry_6;
  input A;
  input of_PipeRun_carry_7;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire of_PipeRun_carry_6;

  assign lopt_1 = \<const0> ;
  assign of_PipeRun_carry_6 = lopt;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_110
   (of_PipeRun_carry_7,
    \Using_FPGA.Native_0 ,
    E,
    lopt,
    lopt_1);
  output of_PipeRun_carry_7;
  input \Using_FPGA.Native_0 ;
  input [0:0]E;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_111
   (\Using_FPGA.Native_0 ,
    of_set_MSR_IE_hold_reg,
    \mem_pc_i_reg[0] ,
    \Using_FPGA.Native_1 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    mem_gpr_write_reg,
    mem_gpr_write_dbg_reg,
    of_PipeRun_carry_9,
    of_set_MSR_IE_hold_reg_0,
    p_193_in,
    \ex_gpr_write_addr_reg[4] ,
    of_pause_reg,
    sync_reset,
    Q,
    wb_exception,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    \wb_exception_kind_i_reg[28] ,
    ex_MSR_cmb2_out,
    ex_MSR,
    mem_exception_from_ex_reg,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    p_44_out,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ,
    ex_gpr_write_reg,
    mem_gpr_write,
    ex_gpr_write_dbg,
    mem_gpr_write_dbg,
    lopt,
    lopt_1,
    lopt_2);
  output \Using_FPGA.Native_0 ;
  output of_set_MSR_IE_hold_reg;
  output [0:0]\mem_pc_i_reg[0] ;
  output \Using_FPGA.Native_1 ;
  output \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  output mem_gpr_write_reg;
  output mem_gpr_write_dbg_reg;
  input of_PipeRun_carry_9;
  input of_set_MSR_IE_hold_reg_0;
  input p_193_in;
  input \ex_gpr_write_addr_reg[4] ;
  input of_pause_reg;
  input sync_reset;
  input [2:0]Q;
  input wb_exception;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input \wb_exception_kind_i_reg[28] ;
  input [0:0]ex_MSR_cmb2_out;
  input [0:0]ex_MSR;
  input mem_exception_from_ex_reg;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  input p_44_out;
  input [0:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  input ex_gpr_write_reg;
  input mem_gpr_write;
  input ex_gpr_write_dbg;
  input mem_gpr_write_dbg;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire [0:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire [2:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]ex_MSR;
  wire [0:0]ex_MSR_cmb2_out;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_reg;
  wire mem_exception_from_ex_reg;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_gpr_write_dbg_reg;
  wire mem_gpr_write_reg;
  wire [0:0]\mem_pc_i_reg[0] ;
  wire of_pause_reg;
  wire of_set_MSR_IE_hold_reg;
  wire of_set_MSR_IE_hold_reg_0;
  wire p_193_in;
  wire p_44_out;
  wire sync_reset;
  wire wb_exception;
  wire \wb_exception_kind_i_reg[28] ;

  assign \Using_FPGA.Native_0  = lopt;
  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'hFFFFDF55FFFF0000)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(mem_exception_from_ex_reg),
        .I2(\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .I3(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ),
        .I4(p_44_out),
        .I5(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ));
  LUT4 #(
    .INIT(16'h4540)) 
    \Using_FPGA.Native_i_1__92 
       (.I0(\wb_exception_kind_i_reg[28] ),
        .I1(ex_MSR_cmb2_out),
        .I2(\Using_FPGA.Native_0 ),
        .I3(ex_MSR),
        .O(\Using_FPGA.Native_1 ));
  VCC VCC
       (.P(\<const1> ));
  (* \PinAttr:I2:HOLD_DETOUR  = "180" *) 
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    mem_gpr_write_dbg_i_1
       (.I0(ex_gpr_write_dbg),
        .I1(\Using_FPGA.Native_0 ),
        .I2(mem_gpr_write_dbg),
        .O(mem_gpr_write_dbg_reg));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    mem_gpr_write_i_1
       (.I0(ex_gpr_write_reg),
        .I1(\Using_FPGA.Native_0 ),
        .I2(mem_gpr_write),
        .O(mem_gpr_write_reg));
  LUT6 #(
    .INIT(64'h0000DFFF00000000)) 
    \mem_pc_i[0]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(wb_exception),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I5(\Using_FPGA.Native_0 ),
        .O(\mem_pc_i_reg[0] ));
  LUT6 #(
    .INIT(64'h000000000000ECCC)) 
    of_set_MSR_IE_hold_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_set_MSR_IE_hold_reg_0),
        .I2(p_193_in),
        .I3(\ex_gpr_write_addr_reg[4] ),
        .I4(of_pause_reg),
        .I5(sync_reset),
        .O(of_set_MSR_IE_hold_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_112
   (of_PipeRun_carry_9,
    EX_MBAR_Stall__2,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_10,
    ex_mbar_sleep,
    ex_mbar_decode,
    ex_Take_Intr_or_Exc_reg,
    ex_first_cycle,
    ex_mbar_stall_no_sleep_1,
    ex_jump_hold,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_9;
  output EX_MBAR_Stall__2;
  input \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_10;
  input ex_mbar_sleep;
  input ex_mbar_decode;
  input ex_Take_Intr_or_Exc_reg;
  input ex_first_cycle;
  input ex_mbar_stall_no_sleep_1;
  input ex_jump_hold;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire EX_MBAR_Stall__2;
  wire \Using_FPGA.Native_0 ;
  wire ex_Take_Intr_or_Exc_reg;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire of_PipeRun_carry_10;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt = \^lopt_1 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_10),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2],\^lopt_1 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,\Using_FPGA.Native_0 }));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEAEAEAA)) 
    \Using_FPGA.Native_i_2__84 
       (.I0(ex_mbar_sleep),
        .I1(ex_mbar_decode),
        .I2(ex_Take_Intr_or_Exc_reg),
        .I3(ex_first_cycle),
        .I4(ex_mbar_stall_no_sleep_1),
        .I5(ex_jump_hold),
        .O(EX_MBAR_Stall__2));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_113
   (of_PipeRun_carry_10,
    E,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_10;
  input [0:0]E;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire of_PipeRun_carry_10;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  assign of_PipeRun_carry_10 = lopt;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_114
   (use_Reg_Neg_S_reg,
    ex_jump_nodelay_reg,
    ex_Take_Intr_or_Exc_reg,
    of_Take_Interrupt_hold_reg,
    in0,
    ex_Write_ICache_i_reg,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_1,
    ex_jump_nodelay_reg_0,
    of_Take_Interrupt,
    of_branch_with_delayslot118_out,
    ex_jump,
    if_missed_fetch_reg,
    ex_Take_Intr_or_Exc_reg_0,
    sync_reset,
    of_Take_Interrupt_hold,
    E,
    ex_write_dcache_instr,
    ex_Write_ICache_i,
    of_pause,
    \wb_exception_kind_i_reg[28] ,
    ex_MSR_cmb2_out,
    of_MSR,
    lopt,
    lopt_1,
    lopt_2);
  output use_Reg_Neg_S_reg;
  output ex_jump_nodelay_reg;
  output ex_Take_Intr_or_Exc_reg;
  output of_Take_Interrupt_hold_reg;
  output in0;
  output ex_Write_ICache_i_reg;
  output \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_1;
  input ex_jump_nodelay_reg_0;
  input of_Take_Interrupt;
  input of_branch_with_delayslot118_out;
  input ex_jump;
  input if_missed_fetch_reg;
  input ex_Take_Intr_or_Exc_reg_0;
  input sync_reset;
  input of_Take_Interrupt_hold;
  input [0:0]E;
  input ex_write_dcache_instr;
  input ex_Write_ICache_i;
  input of_pause;
  input \wb_exception_kind_i_reg[28] ;
  input [0:0]ex_MSR_cmb2_out;
  input [0:0]of_MSR;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire [0:0]E;
  wire ONE;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]ex_MSR_cmb2_out;
  wire ex_Take_Intr_or_Exc_reg;
  wire ex_Take_Intr_or_Exc_reg_0;
  wire ex_jump;
  wire ex_jump_nodelay_reg;
  wire ex_jump_nodelay_reg_0;
  wire ex_write_dcache_instr;
  wire if_missed_fetch_reg;
  wire in0;
  wire [0:0]of_MSR;
  wire of_Take_Interrupt;
  wire of_Take_Interrupt_hold;
  wire of_Take_Interrupt_hold_reg;
  wire of_branch_with_delayslot118_out;
  wire sync_reset;
  wire use_Reg_Neg_S_reg;
  wire \wb_exception_kind_i_reg[28] ;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = ONE;
  assign use_Reg_Neg_S_reg = lopt;
  GND GND
       (.G(\<const0> ));
  LUT4 #(
    .INIT(16'h4540)) 
    \Using_FPGA.Native_i_1__93 
       (.I0(\wb_exception_kind_i_reg[28] ),
        .I1(ex_MSR_cmb2_out),
        .I2(use_Reg_Neg_S_reg),
        .I3(of_MSR),
        .O(\Using_FPGA.Native_0 ));
  (* OPT_MODIFIED = "PROPCONST" *) 
  VCC VCC
       (.P(ONE));
  LUT5 #(
    .INIT(32'h0000A0AC)) 
    ex_Take_Intr_or_Exc_i_1
       (.I0(of_Take_Interrupt),
        .I1(ex_Take_Intr_or_Exc_reg_0),
        .I2(use_Reg_Neg_S_reg),
        .I3(ex_jump),
        .I4(sync_reset),
        .O(ex_Take_Intr_or_Exc_reg));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h10)) 
    ex_Write_DCache_decode_cmb_inferred_i_1
       (.I0(use_Reg_Neg_S_reg),
        .I1(E),
        .I2(ex_write_dcache_instr),
        .O(in0));
  LUT6 #(
    .INIT(64'h00000000CADACAFA)) 
    ex_jump_nodelay_i_1
       (.I0(ex_jump_nodelay_reg_0),
        .I1(of_Take_Interrupt),
        .I2(use_Reg_Neg_S_reg),
        .I3(of_branch_with_delayslot118_out),
        .I4(ex_jump),
        .I5(if_missed_fetch_reg),
        .O(ex_jump_nodelay_reg));
  LUT4 #(
    .INIT(16'h000E)) 
    of_Take_Interrupt_hold_i_1
       (.I0(of_Take_Interrupt_hold),
        .I1(of_Take_Interrupt),
        .I2(use_Reg_Neg_S_reg),
        .I3(sync_reset),
        .O(of_Take_Interrupt_hold_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_115
   (of_PipeRun_carry_1,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_2,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_1;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_2;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire lopt_3;
  wire mem_is_multi_or_load_instr_reg;
  wire of_PipeRun_carry_2;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign lopt = \^lopt_1 ;
  assign lopt_3 = lopt_2;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_2),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:2],\^lopt_1 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:2],\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:2],lopt_3,mem_is_multi_or_load_instr_reg}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_303
   (ex_pre_alu_carry,
    muxcy_sel,
    muxcy_di,
    ex_MSR,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output ex_pre_alu_carry;
  input muxcy_sel;
  input muxcy_di;
  input [0:0]ex_MSR;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire [0:0]ex_MSR;
  wire lopt_10;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire muxcy_di;
  wire muxcy_sel;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_10;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(ex_MSR),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,muxcy_di}),
        .O({lopt_10,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [2:0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,muxcy_sel}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_304
   (ex_alu_carryin,
    ex_pre_alu_carry,
    lopt,
    lopt_1,
    lopt_2);
  output ex_alu_carryin;
  input ex_pre_alu_carry;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_313
   (CI,
    \wb_exception_kind_i_reg[28] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output CI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [0:0]\wb_exception_kind_i_reg[28] ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,\wb_exception_kind_i_reg[28] }));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_32
   (carry_7,
    SRL16_Sel_7,
    Q,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output carry_7;
  input SRL16_Sel_7;
  input [0:0]Q;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire [0:0]Q;
  wire SRL16_Sel_7;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(Q),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,SRL16_Sel_7}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_33
   (carry_6,
    SRL16_Sel_6,
    carry_7,
    lopt,
    lopt_1);
  output carry_6;
  input SRL16_Sel_6;
  input carry_7;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_35
   (carry_5,
    SRL16_Sel_5,
    carry_6,
    lopt,
    lopt_1);
  output carry_5;
  input SRL16_Sel_5;
  input carry_6;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_37
   (carry_4,
    SRL16_Sel_4,
    carry_5,
    lopt,
    lopt_1);
  output carry_4;
  input SRL16_Sel_4;
  input carry_5;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire carry_4;

  assign carry_4 = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_39
   (carry_3,
    SRL16_Sel_3,
    carry_4,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output carry_3;
  input SRL16_Sel_3;
  input carry_4;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire SRL16_Sel_3;
  wire carry_4;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(carry_4),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,SRL16_Sel_3}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_408
   (zero_CI_0,
    ex_op1_cmp_equal,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6);
  output zero_CI_0;
  input ex_op1_cmp_equal;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  output lopt_5;
  input lopt_6;

  wire ex_op1_cmp_equal;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire lopt_7;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign lopt_5 = \^lopt_6 ;
  assign lopt_7 = lopt_6;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_6 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_2 ,\^lopt_2 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_7,\^lopt_5 ,\^lopt_3 ,ex_op1_cmp_equal}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_41
   (carry_2,
    SRL16_Sel_2,
    carry_3,
    lopt,
    lopt_1);
  output carry_2;
  input SRL16_Sel_2;
  input carry_3;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_411
   (zero_CI_3,
    \Zero_Detecting[2].nibble_Zero_reg ,
    ex_op1_cmp_equal_n,
    zero_CI_2,
    lopt);
  output zero_CI_3;
  input \Zero_Detecting[2].nibble_Zero_reg ;
  input ex_op1_cmp_equal_n;
  input zero_CI_2;
  input lopt;

  wire zero_CI_3;

  assign zero_CI_3 = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_412
   (zero_CI_4,
    \Zero_Detecting[3].nibble_Zero_reg ,
    ex_op1_cmp_equal_n,
    zero_CI_3,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6);
  output zero_CI_4;
  input \Zero_Detecting[3].nibble_Zero_reg ;
  input ex_op1_cmp_equal_n;
  input zero_CI_3;
  output lopt;
  input lopt_1;
  output lopt_2;
  input lopt_3;
  output lopt_4;
  input lopt_5;
  input lopt_6;

  wire \Zero_Detecting[3].nibble_Zero_reg ;
  wire ex_op1_cmp_equal_n;
  wire \^lopt_2 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire lopt_7;
  wire zero_CI_3;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_4  = lopt_3;
  assign \^lopt_6  = lopt_5;
  assign lopt_4 = \^lopt_5 ;
  assign lopt_7 = lopt_6;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(zero_CI_3),
        .CO({\^lopt_5 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_6 ,ex_op1_cmp_equal_n,ex_op1_cmp_equal_n,ex_op1_cmp_equal_n}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_7,\^lopt_4 ,\^lopt_2 ,\Zero_Detecting[3].nibble_Zero_reg }));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_43
   (carry_1,
    SRL16_Sel_1,
    carry_2,
    lopt,
    lopt_1);
  output carry_1;
  input SRL16_Sel_1;
  input carry_2;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_45
   (carry_0,
    SRL16_Sel_0,
    carry_1,
    lopt,
    lopt_1);
  output carry_0;
  input SRL16_Sel_0;
  input carry_1;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire carry_0;

  assign carry_0 = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_47
   (Hit,
    p_44_out,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    carry_0,
    \Performance_Debug_Control.dbg_stop_i_reg ,
    Q,
    \Using_FPGA.Native_0 ,
    \Performance_Debug_Control.normal_stop_i_reg ,
    of_pause_reg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    force_stop_i,
    single_Step_N,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    \Using_FPGA.Native_1 ,
    ex_Exception_Taken,
    mem_Exception_Taken);
  output Hit;
  output p_44_out;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  input carry_0;
  input \Performance_Debug_Control.dbg_stop_i_reg ;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Performance_Debug_Control.normal_stop_i_reg ;
  input of_pause_reg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input force_stop_i;
  input single_Step_N;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  input \Using_FPGA.Native_1 ;
  input ex_Exception_Taken;
  input mem_Exception_Taken;

  wire Hit;
  wire \Performance_Debug_Control.dbg_stop_i_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire \Performance_Debug_Control.normal_stop_i_reg ;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire carry_0;
  wire ex_Exception_Taken;
  wire force_stop_i;
  wire mem_Exception_Taken;
  wire of_pause_reg;
  wire p_44_out;
  wire single_Step_N;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFEA00000000)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 
       (.I0(\Performance_Debug_Control.dbg_stop_i_reg ),
        .I1(Q),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Performance_Debug_Control.normal_stop_i_reg ),
        .I4(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0 ),
        .I5(of_pause_reg),
        .O(p_44_out));
  LUT3 #(
    .INIT(8'hF4)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5 
       (.I0(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I1(Hit),
        .I2(force_stop_i),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55555555CCCC0CCC)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_i_1 
       (.I0(single_Step_N),
        .I1(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(ex_Exception_Taken),
        .I4(mem_Exception_Taken),
        .I5(p_44_out),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(carry_0),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:1],Hit}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:1],1'b1}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:1],1'b1}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_94
   (mem_wait_on_ready_N,
    mem_databus_ready,
    mem_load_store_access,
    mem_Write_DCache,
    mem_valid_instr,
    lopt,
    lopt_1,
    lopt_2);
  output mem_wait_on_ready_N;
  input mem_databus_ready;
  input mem_load_store_access;
  input mem_Write_DCache;
  input mem_valid_instr;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const1> ;
  wire \Using_FPGA.Native_i_1__99_n_0 ;
  wire mem_Write_DCache;
  wire mem_load_store_access;
  wire mem_valid_instr;

  assign lopt_1 = \<const1> ;
  assign lopt_2 = \Using_FPGA.Native_i_1__99_n_0 ;
  LUT3 #(
    .INIT(8'hE0)) 
    \Using_FPGA.Native_i_1__99 
       (.I0(mem_load_store_access),
        .I1(mem_Write_DCache),
        .I2(mem_valid_instr),
        .O(\Using_FPGA.Native_i_1__99_n_0 ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_95
   (\wb_instr_reg[31] ,
    mem_valid_reg,
    wb_valid_reg,
    wb_gpr_write_dbg0,
    wb_gpr_write_i0,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    mem_wait_on_ready_N,
    mem_valid_instr,
    mem_exception_from_ex,
    ex_valid_reg,
    \Using_FPGA.Native_3 ,
    flush_pipe,
    wb_valid_reg_0,
    wb_piperun,
    sync_reset,
    wb_exception,
    mem_gpr_write_dbg,
    mem_gpr_write,
    \wb_exception_kind_i_reg[28] ,
    ex_MSR,
    mem_MSR,
    lopt,
    lopt_1,
    lopt_2);
  output \wb_instr_reg[31] ;
  output mem_valid_reg;
  output wb_valid_reg;
  output wb_gpr_write_dbg0;
  output wb_gpr_write_i0;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  input mem_wait_on_ready_N;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input ex_valid_reg;
  input [0:0]\Using_FPGA.Native_3 ;
  input flush_pipe;
  input wb_valid_reg_0;
  input wb_piperun;
  input sync_reset;
  input wb_exception;
  input mem_gpr_write_dbg;
  input mem_gpr_write;
  input \wb_exception_kind_i_reg[28] ;
  input [2:0]ex_MSR;
  input [2:0]mem_MSR;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire [2:0]ex_MSR;
  wire ex_valid_reg;
  wire flush_pipe;
  wire [2:0]mem_MSR;
  wire mem_exception_from_ex;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire sync_reset;
  wire wb_exception;
  wire \wb_exception_kind_i_reg[28] ;
  wire wb_gpr_write_dbg0;
  wire wb_gpr_write_i0;
  wire \wb_instr_reg[31] ;
  wire wb_piperun;
  wire wb_valid_reg;
  wire wb_valid_reg_0;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  assign \wb_instr_reg[31]  = lopt;
  GND GND
       (.G(\<const0> ));
  LUT4 #(
    .INIT(16'h4540)) 
    \Using_FPGA.Native_i_1__51 
       (.I0(\wb_exception_kind_i_reg[28] ),
        .I1(ex_MSR[0]),
        .I2(\wb_instr_reg[31] ),
        .I3(mem_MSR[0]),
        .O(\Using_FPGA.Native_0 ));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Using_FPGA.Native_i_1__54 
       (.I0(\wb_exception_kind_i_reg[28] ),
        .I1(ex_MSR[1]),
        .I2(\wb_instr_reg[31] ),
        .I3(mem_MSR[1]),
        .O(\Using_FPGA.Native_1 ));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Using_FPGA.Native_i_1__55 
       (.I0(\wb_exception_kind_i_reg[28] ),
        .I1(ex_MSR[2]),
        .I2(\wb_instr_reg[31] ),
        .I3(mem_MSR[2]),
        .O(\Using_FPGA.Native_2 ));
  VCC VCC
       (.P(\<const1> ));
  LUT6 #(
    .INIT(64'h00000000707000AA)) 
    mem_valid_i_1
       (.I0(mem_valid_instr),
        .I1(mem_exception_from_ex),
        .I2(ex_valid_reg),
        .I3(\wb_instr_reg[31] ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(flush_pipe),
        .O(mem_valid_reg));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    wb_gpr_write_dbg_i_1
       (.I0(sync_reset),
        .I1(wb_exception),
        .I2(\wb_instr_reg[31] ),
        .I3(mem_gpr_write_dbg),
        .O(wb_gpr_write_dbg0));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    wb_gpr_write_i_i_1
       (.I0(sync_reset),
        .I1(wb_exception),
        .I2(\wb_instr_reg[31] ),
        .I3(mem_gpr_write),
        .O(wb_gpr_write_i0));
  LUT5 #(
    .INIT(32'h0000CC0A)) 
    wb_valid_i_1
       (.I0(wb_valid_reg_0),
        .I1(mem_valid_instr),
        .I2(wb_piperun),
        .I3(\wb_instr_reg[31] ),
        .I4(sync_reset),
        .O(wb_valid_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_96
   (jump_carry1,
    S,
    DI,
    ex_op1_zero,
    lopt);
  output jump_carry1;
  input S;
  input DI;
  input ex_op1_zero;
  input lopt;

  wire jump_carry1;

  assign jump_carry1 = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_97
   (jump_carry2,
    jump_carry1,
    ex_Take_Intr_or_Exc_reg,
    force_Val2_N,
    out,
    force2,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output jump_carry2;
  input jump_carry1;
  input ex_Take_Intr_or_Exc_reg;
  input force_Val2_N;
  input out;
  input force2;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire \Using_FPGA.Native_i_2__20_n_0 ;
  wire ex_Take_Intr_or_Exc_reg;
  wire force2;
  wire force_Val2_N;
  wire force_jump2;
  wire jump_carry1;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire out;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt = \^lopt_1 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(jump_carry1),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2],\^lopt_1 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native_i_2__20_n_0 }),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,force_jump2}));
  LUT3 #(
    .INIT(8'h08)) 
    \Using_FPGA.Native_i_1__53 
       (.I0(force2),
        .I1(out),
        .I2(ex_Take_Intr_or_Exc_reg),
        .O(force_jump2));
  LUT3 #(
    .INIT(8'hBA)) 
    \Using_FPGA.Native_i_2__20 
       (.I0(ex_Take_Intr_or_Exc_reg),
        .I1(force_Val2_N),
        .I2(out),
        .O(\Using_FPGA.Native_i_2__20_n_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_98
   (ex_jump_wanted,
    \Using_FPGA.Native_0 ,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    jump_carry2,
    of_valid,
    ex_branch_with_delayslot,
    EX_MBAR_Stall__2,
    lopt,
    lopt_1);
  output ex_jump_wanted;
  output \Using_FPGA.Native_0 ;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input jump_carry2;
  input of_valid;
  input ex_branch_with_delayslot;
  input EX_MBAR_Stall__2;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire EX_MBAR_Stall__2;
  wire \Using_FPGA.Native_0 ;
  wire ex_branch_with_delayslot;
  wire \^ex_jump_wanted ;
  wire of_valid;

  assign \^ex_jump_wanted  = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT4 #(
    .INIT(16'h55DF)) 
    \Using_FPGA.Native_i_1__102 
       (.I0(\^ex_jump_wanted ),
        .I1(of_valid),
        .I2(ex_branch_with_delayslot),
        .I3(EX_MBAR_Stall__2),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_99
   (jump_carry4,
    ex_branch_with_delayslot_reg,
    ex_jump_wanted,
    lopt,
    lopt_1);
  output jump_carry4;
  input ex_branch_with_delayslot_reg;
  input ex_jump_wanted;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY
   (O56_out,
    Q,
    LO);
  output O56_out;
  input [0:0]Q;
  input LO;

  wire LO;
  wire O56_out;
  wire [0:0]Q;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I2_CARRY4 
       (.CI(LO),
        .CO(\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI(\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED [3:0]),
        .O({\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED [3:1],O56_out}),
        .S({\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED [3:1],Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_274
   (LO,
    \if_pc_reg[10] ,
    Q,
    \if_pc_reg[11] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[10] ;
  input [0:0]Q;
  input \if_pc_reg[11] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[10] ;

  assign \if_pc_reg[10]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_275
   (LO,
    \if_pc_reg[11] ,
    Q,
    \if_pc_reg[12] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[11] ;
  input [0:0]Q;
  input \if_pc_reg[12] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[11] ;

  assign \if_pc_reg[11]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_276
   (LO,
    \if_pc_reg[12] ,
    Q,
    \if_pc_reg[13] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[12] ;
  input [0:0]Q;
  input \if_pc_reg[13] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[13] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[13] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[12] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_277
   (LO,
    \if_pc_reg[13] ,
    Q,
    \if_pc_reg[14] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[13] ;
  input [0:0]Q;
  input \if_pc_reg[14] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[13] ;

  assign LO = lopt;
  assign \if_pc_reg[13]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_278
   (LO,
    \if_pc_reg[14] ,
    Q,
    \if_pc_reg[15] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[14] ;
  input [0:0]Q;
  input \if_pc_reg[15] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[14] ;

  assign \if_pc_reg[14]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_279
   (LO,
    \if_pc_reg[15] ,
    Q,
    \if_pc_reg[16] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[15] ;
  input [0:0]Q;
  input \if_pc_reg[16] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[15] ;

  assign \if_pc_reg[15]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_280
   (LO,
    \if_pc_reg[16] ,
    Q,
    \if_pc_reg[17] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[16] ;
  input [0:0]Q;
  input \if_pc_reg[17] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[17] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[17] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[16] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_281
   (LO,
    \if_pc_reg[17] ,
    Q,
    \if_pc_reg[18] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[17] ;
  input [0:0]Q;
  input \if_pc_reg[18] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[17] ;

  assign LO = lopt;
  assign \if_pc_reg[17]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_282
   (LO,
    \if_pc_reg[18] ,
    Q,
    \if_pc_reg[19] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[18] ;
  input [0:0]Q;
  input \if_pc_reg[19] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[18] ;

  assign \if_pc_reg[18]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_283
   (LO,
    \if_pc_reg[19] ,
    Q,
    \if_pc_reg[20] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[19] ;
  input [0:0]Q;
  input \if_pc_reg[20] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[19] ;

  assign \if_pc_reg[19]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_284
   (LO,
    \if_pc_reg[1] ,
    Q,
    \if_pc_reg[2] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[1] ;
  input [0:0]Q;
  input \if_pc_reg[2] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[1] ;

  assign LO = lopt;
  assign \if_pc_reg[1]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_285
   (LO,
    \if_pc_reg[20] ,
    Q,
    \if_pc_reg[21] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[20] ;
  input [0:0]Q;
  input \if_pc_reg[21] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[21] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[21] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[20] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_286
   (LO,
    \if_pc_reg[21] ,
    Q,
    \if_pc_reg[22] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[21] ;
  input [0:0]Q;
  input \if_pc_reg[22] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[21] ;

  assign LO = lopt;
  assign \if_pc_reg[21]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_287
   (LO,
    \if_pc_reg[22] ,
    Q,
    \if_pc_reg[23] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[22] ;
  input [0:0]Q;
  input \if_pc_reg[23] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[22] ;

  assign \if_pc_reg[22]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_288
   (LO,
    \if_pc_reg[23] ,
    Q,
    \if_pc_reg[24] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[23] ;
  input [0:0]Q;
  input \if_pc_reg[24] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[23] ;

  assign \if_pc_reg[23]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_289
   (LO,
    \if_pc_reg[24] ,
    Q,
    \if_pc_reg[25] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[24] ;
  input [0:0]Q;
  input \if_pc_reg[25] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[25] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[25] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[24] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_290
   (LO,
    \if_pc_reg[25] ,
    Q,
    \if_pc_reg[26] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[25] ;
  input [0:0]Q;
  input \if_pc_reg[26] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[25] ;

  assign LO = lopt;
  assign \if_pc_reg[25]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_291
   (LO,
    \if_pc_reg[26] ,
    Q,
    \if_pc_reg[27] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[26] ;
  input [0:0]Q;
  input \if_pc_reg[27] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[26] ;

  assign \if_pc_reg[26]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_292
   (LO,
    \if_pc_reg[27] ,
    Q,
    \if_pc_reg[28] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[27] ;
  input [0:0]Q;
  input \if_pc_reg[28] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[27] ;

  assign \if_pc_reg[27]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_293
   (LO,
    \if_pc_reg[28] ,
    Q,
    \if_pc_reg[29] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[28] ;
  input [0:0]Q;
  input \if_pc_reg[29] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[29] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[29] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[28] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_294
   (LO,
    O,
    Q,
    CI,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output O;
  input [0:0]Q;
  input CI;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire O;

  assign LO = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_295
   (LO,
    \if_pc_reg[2] ,
    Q,
    \if_pc_reg[3] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[2] ;
  input [0:0]Q;
  input \if_pc_reg[3] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[2] ;

  assign \if_pc_reg[2]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_296
   (LO,
    \if_pc_reg[3] ,
    Q,
    \if_pc_reg[4] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[3] ;
  input [0:0]Q;
  input \if_pc_reg[4] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[3] ;

  assign \if_pc_reg[3]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_297
   (LO,
    \if_pc_reg[4] ,
    Q,
    \if_pc_reg[5] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[4] ;
  input [0:0]Q;
  input \if_pc_reg[5] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[5] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[5] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[4] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_298
   (LO,
    \if_pc_reg[5] ,
    Q,
    \if_pc_reg[6] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[5] ;
  input [0:0]Q;
  input \if_pc_reg[6] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[5] ;

  assign LO = lopt;
  assign \if_pc_reg[5]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_299
   (LO,
    \if_pc_reg[6] ,
    Q,
    \if_pc_reg[7] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[6] ;
  input [0:0]Q;
  input \if_pc_reg[7] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[6] ;

  assign \if_pc_reg[6]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_300
   (LO,
    \if_pc_reg[7] ,
    Q,
    \if_pc_reg[8] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[7] ;
  input [0:0]Q;
  input \if_pc_reg[8] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[7] ;

  assign \if_pc_reg[7]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_301
   (LO,
    \if_pc_reg[8] ,
    Q,
    \if_pc_reg[9] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[8] ;
  input [0:0]Q;
  input \if_pc_reg[9] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[9] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[9] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[8] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_302
   (LO,
    \if_pc_reg[9] ,
    Q,
    CI,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[9] ;
  input [0:0]Q;
  input CI;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[9] ;

  assign LO = lopt;
  assign \if_pc_reg[9]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_314
   (\LOCKSTEP_Out_reg[3007] ,
    addr_AddSub_31,
    LO);
  output [0:0]\LOCKSTEP_Out_reg[3007] ;
  input addr_AddSub_31;
  input LO;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3007] ;
  wire addr_AddSub_31;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I2_CARRY4 
       (.CI(LO),
        .CO(\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI(\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED [3:0]),
        .O({\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED [3:1],\LOCKSTEP_Out_reg[3007] }),
        .S({\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED [3:1],addr_AddSub_31}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_316
   (LO,
    \LOCKSTEP_Out_reg[3017] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3017] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3017] ;

  assign \LOCKSTEP_Out_reg[3017]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_319
   (LO,
    \LOCKSTEP_Out_reg[3018] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3018] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3018] ;

  assign \LOCKSTEP_Out_reg[3018]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_322
   (LO,
    \LOCKSTEP_Out_reg[3019] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3019] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\LOCKSTEP_Out_reg[3019] ;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\LOCKSTEP_Out_reg[3019] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_325
   (LO,
    \LOCKSTEP_Out_reg[3020] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3020] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3020] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3020]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_328
   (LO,
    \LOCKSTEP_Out_reg[3021] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3021] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3021] ;

  assign \LOCKSTEP_Out_reg[3021]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_331
   (LO,
    \LOCKSTEP_Out_reg[3022] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3022] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3022] ;

  assign \LOCKSTEP_Out_reg[3022]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_334
   (\data_rd_reg_reg[16] ,
    \LOCKSTEP_Out_reg[3023] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output [0:0]\data_rd_reg_reg[16] ;
  output [0:0]\LOCKSTEP_Out_reg[3023] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3023] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire [0:0]\data_rd_reg_reg[16] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire read_register_MSR_1_reg;
  wire wb_byte_access;
  wire [16:16]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[16]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_byte_access),
        .I3(wb_read_msb_doublet_sel_reg),
        .I4(Q),
        .O(\LOCKSTEP_Out_reg[3023] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,wb_excep_return_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[16]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3023] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[16] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_337
   (\data_rd_reg_reg[17] ,
    \LOCKSTEP_Out_reg[3024] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[17] ;
  output [0:0]\LOCKSTEP_Out_reg[3024] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3024] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[17] ;
  wire read_register_MSR_1_reg;
  wire wb_byte_access;
  wire [17:17]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;

  assign LO = lopt;
  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[17]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_byte_access),
        .I3(wb_read_msb_doublet_sel_reg),
        .I4(Q),
        .O(\LOCKSTEP_Out_reg[3024] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[17]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3024] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[17] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_340
   (\data_rd_reg_reg[18] ,
    \LOCKSTEP_Out_reg[3025] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[18] ;
  output [0:0]\LOCKSTEP_Out_reg[3025] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3025] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[18] ;
  wire read_register_MSR_1_reg;
  wire wb_byte_access;
  wire [18:18]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[18]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_byte_access),
        .I3(wb_read_msb_doublet_sel_reg),
        .I4(Q),
        .O(\LOCKSTEP_Out_reg[3025] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[18]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3025] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[18] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_343
   (\data_rd_reg_reg[19] ,
    \LOCKSTEP_Out_reg[3026] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[19] ;
  output [0:0]\LOCKSTEP_Out_reg[3026] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3026] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[19] ;
  wire read_register_MSR_1_reg;
  wire wb_byte_access;
  wire [19:19]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[19]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_byte_access),
        .I3(wb_read_msb_doublet_sel_reg),
        .I4(Q),
        .O(\LOCKSTEP_Out_reg[3026] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[19]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3026] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[19] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_346
   (LO,
    \LOCKSTEP_Out_reg[3008] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3008] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3008] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3008]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_349
   (\data_rd_reg_reg[20] ,
    \LOCKSTEP_Out_reg[3027] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output [0:0]\data_rd_reg_reg[20] ;
  output [0:0]\LOCKSTEP_Out_reg[3027] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3027] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire [0:0]\data_rd_reg_reg[20] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire read_register_MSR_1_reg;
  wire wb_byte_access;
  wire [20:20]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[20]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_byte_access),
        .I3(wb_read_msb_doublet_sel_reg),
        .I4(Q),
        .O(\LOCKSTEP_Out_reg[3027] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,wb_excep_return_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[20]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3027] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[20] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_352
   (\data_rd_reg_reg[21] ,
    \LOCKSTEP_Out_reg[3028] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[21] ;
  output [0:0]\LOCKSTEP_Out_reg[3028] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3028] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[21] ;
  wire read_register_MSR_1_reg;
  wire wb_byte_access;
  wire [21:21]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;

  assign LO = lopt;
  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[21]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_byte_access),
        .I3(wb_read_msb_doublet_sel_reg),
        .I4(Q),
        .O(\LOCKSTEP_Out_reg[3028] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[21]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3028] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[21] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_355
   (\data_rd_reg_reg[22] ,
    \LOCKSTEP_Out_reg[3029] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[22] ;
  output [0:0]\LOCKSTEP_Out_reg[3029] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3029] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[22] ;
  wire read_register_MSR_1_reg;
  wire wb_byte_access;
  wire [22:22]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[22]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_byte_access),
        .I3(wb_read_msb_doublet_sel_reg),
        .I4(Q),
        .O(\LOCKSTEP_Out_reg[3029] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[22]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3029] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[22] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_358
   (\data_rd_reg_reg[23] ,
    \LOCKSTEP_Out_reg[3030] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[23] ;
  output [0:0]\LOCKSTEP_Out_reg[3030] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3030] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[23] ;
  wire read_register_MSR_1_reg;
  wire wb_byte_access;
  wire [23:23]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[23]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_byte_access),
        .I3(wb_read_msb_doublet_sel_reg),
        .I4(Q),
        .O(\LOCKSTEP_Out_reg[3030] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[23]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3030] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[23] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_361
   (\data_rd_reg_reg[24] ,
    \LOCKSTEP_Out_reg[3031] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_databus_steered_read_data,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output [0:0]\data_rd_reg_reg[24] ;
  output [0:0]\LOCKSTEP_Out_reg[3031] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]wb_databus_steered_read_data;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3031] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire [0:0]\data_rd_reg_reg[24] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire read_register_MSR_1_reg;
  wire [0:0]wb_databus_steered_read_data;
  wire [24:24]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  LUT4 #(
    .INIT(16'hBBB8)) 
    \Trace_New_Reg_Value[24]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_databus_steered_read_data),
        .I3(Q),
        .O(\LOCKSTEP_Out_reg[3031] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,wb_excep_return_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[24]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3031] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[24] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_364
   (\data_rd_reg_reg[25] ,
    \LOCKSTEP_Out_reg[3032] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_databus_steered_read_data,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[25] ;
  output [0:0]\LOCKSTEP_Out_reg[3032] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]wb_databus_steered_read_data;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3032] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[25] ;
  wire read_register_MSR_1_reg;
  wire [0:0]wb_databus_steered_read_data;
  wire [25:25]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;

  assign LO = lopt;
  assign wb_excep_return_addr = lopt_1;
  LUT4 #(
    .INIT(16'hBBB8)) 
    \Trace_New_Reg_Value[25]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_databus_steered_read_data),
        .I3(Q),
        .O(\LOCKSTEP_Out_reg[3032] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[25]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3032] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[25] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_367
   (\data_rd_reg_reg[26] ,
    \LOCKSTEP_Out_reg[3033] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_databus_steered_read_data,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[26] ;
  output [0:0]\LOCKSTEP_Out_reg[3033] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]wb_databus_steered_read_data;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3033] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[26] ;
  wire read_register_MSR_1_reg;
  wire [0:0]wb_databus_steered_read_data;
  wire [26:26]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;

  assign wb_excep_return_addr = lopt_1;
  LUT4 #(
    .INIT(16'hBBB8)) 
    \Trace_New_Reg_Value[26]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_databus_steered_read_data),
        .I3(Q),
        .O(\LOCKSTEP_Out_reg[3033] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[26]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3033] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[26] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_370
   (\data_rd_reg_reg[27] ,
    \LOCKSTEP_Out_reg[3034] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_databus_steered_read_data,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[27] ;
  output [0:0]\LOCKSTEP_Out_reg[3034] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]wb_databus_steered_read_data;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3034] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[27] ;
  wire read_register_MSR_1_reg;
  wire [0:0]wb_databus_steered_read_data;
  wire [27:27]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;

  assign wb_excep_return_addr = lopt_1;
  LUT4 #(
    .INIT(16'hBBB8)) 
    \Trace_New_Reg_Value[27]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_databus_steered_read_data),
        .I3(Q),
        .O(\LOCKSTEP_Out_reg[3034] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[27]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3034] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[27] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_373
   (\data_rd_reg_reg[28] ,
    \LOCKSTEP_Out_reg[3035] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    \wb_MSR_i_reg[28] ,
    read_register_MSR_1_reg,
    DI,
    \wb_exception_kind_i_reg[31] ,
    wb_databus_steered_read_data,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output [0:0]\data_rd_reg_reg[28] ;
  output [0:0]\LOCKSTEP_Out_reg[3035] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input [0:0]\wb_MSR_i_reg[28] ;
  input read_register_MSR_1_reg;
  input DI;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]wb_databus_steered_read_data;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3035] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire [0:0]\data_rd_reg_reg[28] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire read_register_MSR_1_reg;
  wire [0:0]\wb_MSR_i_reg[28] ;
  wire [0:0]wb_databus_steered_read_data;
  wire [28:28]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  LUT4 #(
    .INIT(16'hBBB8)) 
    \Trace_New_Reg_Value[28]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_databus_steered_read_data),
        .I3(Q),
        .O(\LOCKSTEP_Out_reg[3035] ));
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,wb_excep_return_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[28]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3035] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(\wb_MSR_i_reg[28] ),
        .I4(read_register_MSR_1_reg),
        .I5(DI),
        .O(\data_rd_reg_reg[28] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_376
   (\data_rd_reg_reg[29] ,
    \LOCKSTEP_Out_reg[3036] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    \wb_MSR_i_reg[29] ,
    read_register_MSR_1_reg,
    DI,
    \wb_exception_kind_i_reg[31] ,
    wb_databus_steered_read_data,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[29] ;
  output [0:0]\LOCKSTEP_Out_reg[3036] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input [0:0]\wb_MSR_i_reg[29] ;
  input read_register_MSR_1_reg;
  input DI;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]wb_databus_steered_read_data;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3036] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[29] ;
  wire read_register_MSR_1_reg;
  wire [0:0]\wb_MSR_i_reg[29] ;
  wire [0:0]wb_databus_steered_read_data;
  wire [29:29]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;

  assign LO = lopt;
  assign wb_excep_return_addr = lopt_1;
  LUT4 #(
    .INIT(16'hBBB8)) 
    \Trace_New_Reg_Value[29]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_databus_steered_read_data),
        .I3(Q),
        .O(\LOCKSTEP_Out_reg[3036] ));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[29]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3036] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(\wb_MSR_i_reg[29] ),
        .I4(read_register_MSR_1_reg),
        .I5(DI),
        .O(\data_rd_reg_reg[29] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_379
   (LO,
    \LOCKSTEP_Out_reg[3009] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3009] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3009] ;

  assign \LOCKSTEP_Out_reg[3009]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_382
   (\data_rd_reg_reg[30] ,
    \LOCKSTEP_Out_reg[3037] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    \wb_MSR_i_reg[30] ,
    read_register_MSR_1_reg,
    DI,
    \wb_exception_kind_i_reg[31] ,
    wb_databus_steered_read_data,
    Q,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[30] ;
  output [0:0]\LOCKSTEP_Out_reg[3037] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input [0:0]\wb_MSR_i_reg[30] ;
  input read_register_MSR_1_reg;
  input DI;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]wb_databus_steered_read_data;
  input [0:0]Q;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3037] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[30] ;
  wire read_register_MSR_1_reg;
  wire [0:0]\wb_MSR_i_reg[30] ;
  wire [0:0]wb_databus_steered_read_data;
  wire [30:30]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;

  assign wb_excep_return_addr = lopt_1;
  LUT4 #(
    .INIT(16'hBBB8)) 
    \Trace_New_Reg_Value[30]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_databus_steered_read_data),
        .I3(Q),
        .O(\LOCKSTEP_Out_reg[3037] ));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[30]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3037] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(\wb_MSR_i_reg[30] ),
        .I4(read_register_MSR_1_reg),
        .I5(DI),
        .O(\data_rd_reg_reg[30] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_385
   (\data_rd_reg_reg[31] ,
    \LOCKSTEP_Out_reg[3038] ,
    LO,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    DI,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_databus_steered_read_data,
    Q,
    S,
    CI,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[31] ;
  output [0:0]\LOCKSTEP_Out_reg[3038] ;
  output LO;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input DI;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]wb_databus_steered_read_data;
  input [0:0]Q;
  input S;
  input CI;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3038] ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[31] ;
  wire read_register_MSR_1_reg;
  wire [0:0]wb_databus_steered_read_data;
  wire [31:31]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;

  assign wb_excep_return_addr = lopt_1;
  LUT4 #(
    .INIT(16'hBBB8)) 
    \Trace_New_Reg_Value[31]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(wb_databus_steered_read_data),
        .I3(Q),
        .O(\LOCKSTEP_Out_reg[3038] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[31]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3038] ),
        .I1(wb_gpr_wr_dbg),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I3(DI),
        .I4(read_register_MSR_1_reg),
        .O(\data_rd_reg_reg[31] ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_388
   (LO,
    \LOCKSTEP_Out_reg[3010] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3010] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3010] ;

  assign \LOCKSTEP_Out_reg[3010]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_391
   (LO,
    \LOCKSTEP_Out_reg[3011] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3011] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\LOCKSTEP_Out_reg[3011] ;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\LOCKSTEP_Out_reg[3011] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_394
   (LO,
    \LOCKSTEP_Out_reg[3012] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3012] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3012] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3012]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_397
   (LO,
    \LOCKSTEP_Out_reg[3013] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3013] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3013] ;

  assign \LOCKSTEP_Out_reg[3013]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_400
   (LO,
    \LOCKSTEP_Out_reg[3014] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3014] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3014] ;

  assign \LOCKSTEP_Out_reg[3014]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_403
   (LO,
    \LOCKSTEP_Out_reg[3015] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3015] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\LOCKSTEP_Out_reg[3015] ;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\LOCKSTEP_Out_reg[3015] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_406
   (LO,
    \LOCKSTEP_Out_reg[3016] ,
    S,
    \Using_FPGA.Native ,
    CI,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3016] ;
  input S;
  input \Using_FPGA.Native ;
  input CI;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3016] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3016]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_525
   (EX_CarryOut,
    \Data_Addr[9] ,
    S,
    DI,
    EX_CarryIn,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[9] ;
  input S;
  input DI;
  input EX_CarryIn;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[9] ;

  assign \Data_Addr[9]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_527
   (EX_CarryOut,
    \Data_Addr[8] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[8] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[8] ;

  assign \Data_Addr[8]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_529
   (EX_CarryOut,
    \Data_Addr[7] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[7] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[7] ;
  wire EX_CarryOut;

  assign \Data_Addr[7]  = lopt_1;
  assign EX_CarryOut = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_531
   (EX_CarryOut,
    \Data_Addr[6] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[6] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\Data_Addr[6] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Data_Addr[6] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_533
   (EX_CarryOut,
    \Data_Addr[5] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[5] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[5] ;

  assign \Data_Addr[5]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_535
   (EX_CarryOut,
    \Data_Addr[4] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[4] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[4] ;

  assign \Data_Addr[4]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_537
   (EX_CarryOut,
    \Data_Addr[3] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[3] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[3] ;
  wire EX_CarryOut;

  assign \Data_Addr[3]  = lopt_1;
  assign EX_CarryOut = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_539
   (EX_CarryOut,
    ex_databus_addr,
    S,
    DI,
    EX_CarryIn,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input S;
  input DI;
  input EX_CarryIn;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]ex_databus_addr;

  assign EX_CarryOut = lopt;
  assign ex_databus_addr = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_541
   (EX_CarryOut,
    ex_databus_addr,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire S;
  wire [0:0]ex_databus_addr;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,ex_databus_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_543
   (EX_CarryOut,
    \Data_Addr[2] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10);
  output EX_CarryOut;
  output [0:0]\Data_Addr[2] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;

  wire DI;
  wire [0:0]\Data_Addr[2] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire lopt_11;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;
  wire [2:2]\NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = lopt_11;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_11,\NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED [2],\^lopt_10 ,\Data_Addr[2] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_545
   (EX_CarryOut,
    \Data_Addr[29] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[29] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[29] ;

  assign \Data_Addr[29]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_547
   (EX_CarryOut,
    \Data_Addr[28] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[28] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[28] ;

  assign \Data_Addr[28]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_549
   (EX_CarryOut,
    \Data_Addr[27] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[27] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[27] ;
  wire EX_CarryOut;

  assign \Data_Addr[27]  = lopt_1;
  assign EX_CarryOut = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_551
   (EX_CarryOut,
    \Data_Addr[26] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[26] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\Data_Addr[26] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Data_Addr[26] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_553
   (EX_CarryOut,
    \Data_Addr[25] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[25] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[25] ;

  assign \Data_Addr[25]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_555
   (EX_CarryOut,
    \Data_Addr[24] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[24] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[24] ;

  assign \Data_Addr[24]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_557
   (EX_CarryOut,
    \Data_Addr[23] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[23] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[23] ;
  wire EX_CarryOut;

  assign \Data_Addr[23]  = lopt_1;
  assign EX_CarryOut = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_559
   (EX_CarryOut,
    \Data_Addr[22] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[22] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\Data_Addr[22] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Data_Addr[22] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_561
   (EX_CarryOut,
    \Data_Addr[21] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[21] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[21] ;

  assign \Data_Addr[21]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_563
   (EX_CarryOut,
    \Data_Addr[20] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[20] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[20] ;

  assign \Data_Addr[20]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_565
   (EX_CarryOut,
    \Data_Addr[1] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[1] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[1] ;

  assign \Data_Addr[1]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_567
   (EX_CarryOut,
    \Data_Addr[19] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[19] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[19] ;
  wire EX_CarryOut;

  assign \Data_Addr[19]  = lopt_1;
  assign EX_CarryOut = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_569
   (EX_CarryOut,
    \Data_Addr[18] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[18] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\Data_Addr[18] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Data_Addr[18] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_571
   (EX_CarryOut,
    \Data_Addr[17] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[17] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[17] ;

  assign \Data_Addr[17]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_573
   (EX_CarryOut,
    \Data_Addr[16] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[16] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[16] ;

  assign \Data_Addr[16]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_575
   (EX_CarryOut,
    \Data_Addr[15] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[15] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[15] ;
  wire EX_CarryOut;

  assign \Data_Addr[15]  = lopt_1;
  assign EX_CarryOut = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_577
   (EX_CarryOut,
    \Data_Addr[14] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[14] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\Data_Addr[14] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Data_Addr[14] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_579
   (EX_CarryOut,
    \Data_Addr[13] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[13] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[13] ;

  assign \Data_Addr[13]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_581
   (EX_CarryOut,
    \Data_Addr[12] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[12] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[12] ;

  assign \Data_Addr[12]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_583
   (EX_CarryOut,
    \Data_Addr[11] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\Data_Addr[11] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[11] ;
  wire EX_CarryOut;

  assign \Data_Addr[11]  = lopt_1;
  assign EX_CarryOut = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_585
   (EX_CarryOut,
    \Data_Addr[10] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\Data_Addr[10] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\Data_Addr[10] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* OPT_MODIFIED = "SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Data_Addr[10] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_586
   (\Using_FPGA.Native ,
    \Data_Addr[0] ,
    S,
    DI,
    CI,
    lopt,
    lopt_1);
  output \Using_FPGA.Native ;
  output [0:0]\Data_Addr[0] ;
  input S;
  input DI;
  input CI;
  input lopt;
  input lopt_1;

  wire [0:0]\Data_Addr[0] ;
  wire \Using_FPGA.Native ;

  assign \Data_Addr[0]  = lopt_1;
  assign \Using_FPGA.Native  = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7
   (sel_input_i_1,
    I4_0,
    sel_input_iii_0,
    sel_input_delayslot,
    ex_branch_with_delayslot_i,
    wb_exception,
    Q);
  output sel_input_i_1;
  output I4_0;
  input sel_input_iii_0;
  input sel_input_delayslot;
  input ex_branch_with_delayslot_i;
  input wb_exception;
  input [2:0]Q;

  wire I4_0;
  wire [2:0]Q;
  wire ex_branch_with_delayslot_i;
  wire sel_input_delayslot;
  wire sel_input_i_1;
  wire sel_input_iii_0;
  wire wb_exception;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(sel_input_iii_0),
        .I1(sel_input_delayslot),
        .O(sel_input_i_1),
        .S(I4_0));
  LUT5 #(
    .INIT(32'hAA2AAAAA)) 
    \Using_FPGA.Native_i_1__0 
       (.I0(ex_branch_with_delayslot_i),
        .I1(wb_exception),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(I4_0));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_124
   (of_instr_ii_42,
    of_pause_reg,
    I0169_out,
    I1167_out);
  output of_instr_ii_42;
  input of_pause_reg;
  input I0169_out;
  input I1167_out;

  wire I0169_out;
  wire I1167_out;
  wire of_instr_ii_42;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0169_out),
        .I1(I1167_out),
        .O(of_instr_ii_42),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_126
   (of_instr_ii_32,
    of_pause_reg,
    I0129_out,
    I1127_out);
  output of_instr_ii_32;
  input of_pause_reg;
  input I0129_out;
  input I1127_out;

  wire I0129_out;
  wire I1127_out;
  wire of_instr_ii_32;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0129_out),
        .I1(I1127_out),
        .O(of_instr_ii_32),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_128
   (of_instr_ii_31,
    of_pause_reg,
    I0125_out,
    I1123_out);
  output of_instr_ii_31;
  input of_pause_reg;
  input I0125_out;
  input I1123_out;

  wire I0125_out;
  wire I1123_out;
  wire of_instr_ii_31;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0125_out),
        .I1(I1123_out),
        .O(of_instr_ii_31),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_130
   (of_instr_ii_30,
    of_pause_reg,
    I0121_out,
    I1119_out);
  output of_instr_ii_30;
  input of_pause_reg;
  input I0121_out;
  input I1119_out;

  wire I0121_out;
  wire I1119_out;
  wire of_instr_ii_30;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0121_out),
        .I1(I1119_out),
        .O(of_instr_ii_30),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_132
   (of_instr_ii_29,
    of_pause_reg,
    I0117_out,
    I1115_out);
  output of_instr_ii_29;
  input of_pause_reg;
  input I0117_out;
  input I1115_out;

  wire I0117_out;
  wire I1115_out;
  wire of_instr_ii_29;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0117_out),
        .I1(I1115_out),
        .O(of_instr_ii_29),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_134
   (of_instr_ii_28,
    of_pause_reg,
    I0113_out,
    I1111_out);
  output of_instr_ii_28;
  input of_pause_reg;
  input I0113_out;
  input I1111_out;

  wire I0113_out;
  wire I1111_out;
  wire of_instr_ii_28;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0113_out),
        .I1(I1111_out),
        .O(of_instr_ii_28),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_136
   (of_instr_ii_27,
    of_pause_reg,
    I0109_out,
    I1107_out);
  output of_instr_ii_27;
  input of_pause_reg;
  input I0109_out;
  input I1107_out;

  wire I0109_out;
  wire I1107_out;
  wire of_instr_ii_27;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0109_out),
        .I1(I1107_out),
        .O(of_instr_ii_27),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_138
   (of_instr_ii_26,
    of_pause_reg,
    I0105_out,
    I1103_out);
  output of_instr_ii_26;
  input of_pause_reg;
  input I0105_out;
  input I1103_out;

  wire I0105_out;
  wire I1103_out;
  wire of_instr_ii_26;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0105_out),
        .I1(I1103_out),
        .O(of_instr_ii_26),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_140
   (of_instr_ii_25,
    of_pause_reg,
    I0101_out,
    I199_out);
  output of_instr_ii_25;
  input of_pause_reg;
  input I0101_out;
  input I199_out;

  wire I0101_out;
  wire I199_out;
  wire of_instr_ii_25;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0101_out),
        .I1(I199_out),
        .O(of_instr_ii_25),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_142
   (of_instr_ii_24,
    of_pause_reg,
    I097_out,
    I195_out);
  output of_instr_ii_24;
  input of_pause_reg;
  input I097_out;
  input I195_out;

  wire I097_out;
  wire I195_out;
  wire of_instr_ii_24;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I097_out),
        .I1(I195_out),
        .O(of_instr_ii_24),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_144
   (of_instr_ii_23,
    of_pause_reg,
    I093_out,
    I191_out);
  output of_instr_ii_23;
  input of_pause_reg;
  input I093_out;
  input I191_out;

  wire I093_out;
  wire I191_out;
  wire of_instr_ii_23;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I093_out),
        .I1(I191_out),
        .O(of_instr_ii_23),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_146
   (of_instr_ii_41,
    of_pause_reg,
    I0165_out,
    I1163_out);
  output of_instr_ii_41;
  input of_pause_reg;
  input I0165_out;
  input I1163_out;

  wire I0165_out;
  wire I1163_out;
  wire of_instr_ii_41;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0165_out),
        .I1(I1163_out),
        .O(of_instr_ii_41),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_148
   (of_instr_ii_22,
    of_pause_reg,
    I089_out,
    I187_out);
  output of_instr_ii_22;
  input of_pause_reg;
  input I089_out;
  input I187_out;

  wire I089_out;
  wire I187_out;
  wire of_instr_ii_22;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I089_out),
        .I1(I187_out),
        .O(of_instr_ii_22),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_150
   (of_instr_ii_21,
    of_pause_reg,
    I085_out,
    I183_out);
  output of_instr_ii_21;
  input of_pause_reg;
  input I085_out;
  input I183_out;

  wire I085_out;
  wire I183_out;
  wire of_instr_ii_21;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I085_out),
        .I1(I183_out),
        .O(of_instr_ii_21),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_152
   (of_instr_ii_20,
    of_pause_reg,
    I081_out,
    I179_out);
  output of_instr_ii_20;
  input of_pause_reg;
  input I081_out;
  input I179_out;

  wire I081_out;
  wire I179_out;
  wire of_instr_ii_20;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I081_out),
        .I1(I179_out),
        .O(of_instr_ii_20),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_154
   (of_instr_ii_19,
    of_pause_reg,
    I077_out,
    I175_out);
  output of_instr_ii_19;
  input of_pause_reg;
  input I077_out;
  input I175_out;

  wire I077_out;
  wire I175_out;
  wire of_instr_ii_19;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I077_out),
        .I1(I175_out),
        .O(of_instr_ii_19),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_156
   (of_instr_ii_18,
    of_pause_reg,
    I073_out,
    I171_out);
  output of_instr_ii_18;
  input of_pause_reg;
  input I073_out;
  input I171_out;

  wire I073_out;
  wire I171_out;
  wire of_instr_ii_18;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I073_out),
        .I1(I171_out),
        .O(of_instr_ii_18),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_158
   (of_instr_ii_17,
    of_pause_reg,
    I069_out,
    I167_out);
  output of_instr_ii_17;
  input of_pause_reg;
  input I069_out;
  input I167_out;

  wire I069_out;
  wire I167_out;
  wire of_instr_ii_17;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I069_out),
        .I1(I167_out),
        .O(of_instr_ii_17),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_160
   (of_instr_ii_16,
    of_pause_reg,
    I065_out,
    I163_out);
  output of_instr_ii_16;
  input of_pause_reg;
  input I065_out;
  input I163_out;

  wire I065_out;
  wire I163_out;
  wire of_instr_ii_16;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I065_out),
        .I1(I163_out),
        .O(of_instr_ii_16),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_162
   (of_instr_ii_15,
    of_pause_reg,
    I061_out,
    I159_out);
  output of_instr_ii_15;
  input of_pause_reg;
  input I061_out;
  input I159_out;

  wire I061_out;
  wire I159_out;
  wire of_instr_ii_15;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I061_out),
        .I1(I159_out),
        .O(of_instr_ii_15),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_164
   (of_instr_ii_14,
    of_pause_reg,
    I057_out,
    I155_out);
  output of_instr_ii_14;
  input of_pause_reg;
  input I057_out;
  input I155_out;

  wire I057_out;
  wire I155_out;
  wire of_instr_ii_14;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I057_out),
        .I1(I155_out),
        .O(of_instr_ii_14),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_166
   (of_instr_ii_13,
    of_pause_reg,
    I053_out,
    I151_out);
  output of_instr_ii_13;
  input of_pause_reg;
  input I053_out;
  input I151_out;

  wire I053_out;
  wire I151_out;
  wire of_instr_ii_13;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I053_out),
        .I1(I151_out),
        .O(of_instr_ii_13),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_168
   (of_instr_ii_40,
    of_pause_reg,
    I0161_out,
    I1159_out);
  output of_instr_ii_40;
  input of_pause_reg;
  input I0161_out;
  input I1159_out;

  wire I0161_out;
  wire I1159_out;
  wire of_instr_ii_40;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0161_out),
        .I1(I1159_out),
        .O(of_instr_ii_40),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_170
   (of_instr_ii_12,
    of_pause_reg,
    I049_out,
    I147_out);
  output of_instr_ii_12;
  input of_pause_reg;
  input I049_out;
  input I147_out;

  wire I049_out;
  wire I147_out;
  wire of_instr_ii_12;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I049_out),
        .I1(I147_out),
        .O(of_instr_ii_12),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_172
   (of_instr_ii_11,
    of_pause_reg,
    I045_out,
    I143_out);
  output of_instr_ii_11;
  input of_pause_reg;
  input I045_out;
  input I143_out;

  wire I045_out;
  wire I143_out;
  wire of_instr_ii_11;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I045_out),
        .I1(I143_out),
        .O(of_instr_ii_11),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_174
   (of_instr_ii_10,
    of_pause_reg,
    I041_out,
    I139_out);
  output of_instr_ii_10;
  input of_pause_reg;
  input I041_out;
  input I139_out;

  wire I041_out;
  wire I139_out;
  wire of_instr_ii_10;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I041_out),
        .I1(I139_out),
        .O(of_instr_ii_10),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_176
   (of_instr_ii_9,
    of_pause_reg,
    I037_out,
    I135_out);
  output of_instr_ii_9;
  input of_pause_reg;
  input I037_out;
  input I135_out;

  wire I037_out;
  wire I135_out;
  wire of_instr_ii_9;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I037_out),
        .I1(I135_out),
        .O(of_instr_ii_9),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_178
   (of_instr_ii_8,
    of_pause_reg,
    I033_out,
    I131_out);
  output of_instr_ii_8;
  input of_pause_reg;
  input I033_out;
  input I131_out;

  wire I033_out;
  wire I131_out;
  wire of_instr_ii_8;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I033_out),
        .I1(I131_out),
        .O(of_instr_ii_8),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_180
   (of_instr_ii_7,
    of_pause_reg,
    I029_out,
    I127_out);
  output of_instr_ii_7;
  input of_pause_reg;
  input I029_out;
  input I127_out;

  wire I029_out;
  wire I127_out;
  wire of_instr_ii_7;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I029_out),
        .I1(I127_out),
        .O(of_instr_ii_7),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_182
   (of_instr_ii_6,
    of_pause_reg,
    I025_out,
    I123_out);
  output of_instr_ii_6;
  input of_pause_reg;
  input I025_out;
  input I123_out;

  wire I025_out;
  wire I123_out;
  wire of_instr_ii_6;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I025_out),
        .I1(I123_out),
        .O(of_instr_ii_6),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_184
   (of_instr_ii_5,
    of_pause_reg,
    I021_out,
    I119_out);
  output of_instr_ii_5;
  input of_pause_reg;
  input I021_out;
  input I119_out;

  wire I021_out;
  wire I119_out;
  wire of_instr_ii_5;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I021_out),
        .I1(I119_out),
        .O(of_instr_ii_5),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_186
   (of_instr_ii_4,
    of_pause_reg,
    I017_out,
    I115_out);
  output of_instr_ii_4;
  input of_pause_reg;
  input I017_out;
  input I115_out;

  wire I017_out;
  wire I115_out;
  wire of_instr_ii_4;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I017_out),
        .I1(I115_out),
        .O(of_instr_ii_4),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_188
   (of_instr_ii_3,
    of_pause_reg,
    I013_out,
    I111_out);
  output of_instr_ii_3;
  input of_pause_reg;
  input I013_out;
  input I111_out;

  wire I013_out;
  wire I111_out;
  wire of_instr_ii_3;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I013_out),
        .I1(I111_out),
        .O(of_instr_ii_3),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_190
   (of_instr_ii_39,
    of_pause_reg,
    I0157_out,
    I1155_out);
  output of_instr_ii_39;
  input of_pause_reg;
  input I0157_out;
  input I1155_out;

  wire I0157_out;
  wire I1155_out;
  wire of_instr_ii_39;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0157_out),
        .I1(I1155_out),
        .O(of_instr_ii_39),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_192
   (of_instr_ii_2,
    of_pause_reg,
    I09_out,
    I17_out);
  output of_instr_ii_2;
  input of_pause_reg;
  input I09_out;
  input I17_out;

  wire I09_out;
  wire I17_out;
  wire of_instr_ii_2;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I09_out),
        .I1(I17_out),
        .O(of_instr_ii_2),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_194
   (of_instr_ii_1,
    of_pause_reg,
    I05_out,
    I13_out);
  output of_instr_ii_1;
  input of_pause_reg;
  input I05_out;
  input I13_out;

  wire I05_out;
  wire I13_out;
  wire of_instr_ii_1;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I05_out),
        .I1(I13_out),
        .O(of_instr_ii_1),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_196
   (of_instr_ii_0,
    \Using_FPGA.Native_0 ,
    of_pause_reg,
    I0_1,
    I1,
    IReady,
    \wb_exception_kind_i_reg[28] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    if_missed_fetch);
  output of_instr_ii_0;
  output \Using_FPGA.Native_0 ;
  input of_pause_reg;
  input I0_1;
  input I1;
  input IReady;
  input \wb_exception_kind_i_reg[28] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]\Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input if_missed_fetch;

  wire I0_1;
  wire I1;
  wire IReady;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]\Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire \Using_FPGA.Native_0 ;
  wire if_missed_fetch;
  wire of_instr_ii_0;
  wire of_pause_reg;
  wire \wb_exception_kind_i_reg[28] ;

  LUT5 #(
    .INIT(32'h0000FF02)) 
    \PC_Buffer_reg[3][31]_srl4_i_1 
       (.I0(IReady),
        .I1(\wb_exception_kind_i_reg[28] ),
        .I2(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .I3(\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .I4(if_missed_fetch),
        .O(\Using_FPGA.Native_0 ));
  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0_1),
        .I1(I1),
        .O(of_instr_ii_0),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_198
   (of_instr_ii_38,
    of_pause_reg,
    I0153_out,
    I1151_out);
  output of_instr_ii_38;
  input of_pause_reg;
  input I0153_out;
  input I1151_out;

  wire I0153_out;
  wire I1151_out;
  wire of_instr_ii_38;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0153_out),
        .I1(I1151_out),
        .O(of_instr_ii_38),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_200
   (of_instr_ii_37,
    of_pause_reg,
    I0149_out,
    I1147_out);
  output of_instr_ii_37;
  input of_pause_reg;
  input I0149_out;
  input I1147_out;

  wire I0149_out;
  wire I1147_out;
  wire of_instr_ii_37;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0149_out),
        .I1(I1147_out),
        .O(of_instr_ii_37),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_202
   (of_instr_ii_36,
    of_pause_reg,
    I0145_out,
    I1143_out);
  output of_instr_ii_36;
  input of_pause_reg;
  input I0145_out;
  input I1143_out;

  wire I0145_out;
  wire I1143_out;
  wire of_instr_ii_36;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0145_out),
        .I1(I1143_out),
        .O(of_instr_ii_36),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_204
   (of_instr_ii_35,
    of_pause_reg,
    I0141_out,
    I1139_out);
  output of_instr_ii_35;
  input of_pause_reg;
  input I0141_out;
  input I1139_out;

  wire I0141_out;
  wire I1139_out;
  wire of_instr_ii_35;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0141_out),
        .I1(I1139_out),
        .O(of_instr_ii_35),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_206
   (of_instr_ii_34,
    of_pause_reg,
    I0137_out,
    I1135_out);
  output of_instr_ii_34;
  input of_pause_reg;
  input I0137_out;
  input I1135_out;

  wire I0137_out;
  wire I1135_out;
  wire of_instr_ii_34;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0137_out),
        .I1(I1135_out),
        .O(of_instr_ii_34),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_208
   (of_instr_ii_33,
    of_pause_reg,
    I0133_out,
    I1131_out);
  output of_instr_ii_33;
  input of_pause_reg;
  input I0133_out;
  input I1131_out;

  wire I0133_out;
  wire I1131_out;
  wire of_instr_ii_33;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0133_out),
        .I1(I1131_out),
        .O(of_instr_ii_33),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_211
   (of_pc_ii_31,
    of_pause_reg,
    I0125_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_31;
  input of_pause_reg;
  input I0125_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I0125_out;
  wire I1123_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_31;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0125_out),
        .I1(I1123_out),
        .O(of_pc_ii_31),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__60 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I1123_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_213
   (of_pc_ii_21,
    of_pause_reg,
    I085_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_21;
  input of_pause_reg;
  input I085_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I085_out;
  wire I183_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_21;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I085_out),
        .I1(I183_out),
        .O(of_pc_ii_21),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__50 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I183_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_215
   (of_pc_ii_20,
    of_pause_reg,
    I081_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_20;
  input of_pause_reg;
  input I081_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I081_out;
  wire I179_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_20;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I081_out),
        .I1(I179_out),
        .O(of_pc_ii_20),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__49 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I179_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_217
   (of_pc_ii_19,
    of_pause_reg,
    I077_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_19;
  input of_pause_reg;
  input I077_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I077_out;
  wire I175_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_19;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I077_out),
        .I1(I175_out),
        .O(of_pc_ii_19),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__48 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I175_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_219
   (of_pc_ii_18,
    of_pause_reg,
    I073_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_18;
  input of_pause_reg;
  input I073_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I073_out;
  wire I171_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_18;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I073_out),
        .I1(I171_out),
        .O(of_pc_ii_18),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__47 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I171_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_221
   (of_pc_ii_17,
    of_pause_reg,
    I069_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_17;
  input of_pause_reg;
  input I069_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I069_out;
  wire I167_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_17;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I069_out),
        .I1(I167_out),
        .O(of_pc_ii_17),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__46 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I167_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_223
   (of_pc_ii_16,
    of_pause_reg,
    I065_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_16;
  input of_pause_reg;
  input I065_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I065_out;
  wire I163_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_16;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I065_out),
        .I1(I163_out),
        .O(of_pc_ii_16),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__45 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I163_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_225
   (of_pc_ii_15,
    of_pause_reg,
    I061_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_15;
  input of_pause_reg;
  input I061_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I061_out;
  wire I159_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_15;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I061_out),
        .I1(I159_out),
        .O(of_pc_ii_15),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__44 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I159_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_227
   (of_pc_ii_14,
    of_pause_reg,
    I057_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_14;
  input of_pause_reg;
  input I057_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I057_out;
  wire I155_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_14;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I057_out),
        .I1(I155_out),
        .O(of_pc_ii_14),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__43 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I155_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_229
   (of_pc_ii_13,
    of_pause_reg,
    I053_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_13;
  input of_pause_reg;
  input I053_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I053_out;
  wire I151_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_13;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I053_out),
        .I1(I151_out),
        .O(of_pc_ii_13),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__42 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I151_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_231
   (of_pc_ii_12,
    of_pause_reg,
    I049_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_12;
  input of_pause_reg;
  input I049_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I049_out;
  wire I147_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_12;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I049_out),
        .I1(I147_out),
        .O(of_pc_ii_12),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__41 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I147_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_233
   (of_pc_ii_30,
    of_pause_reg,
    I0121_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_30;
  input of_pause_reg;
  input I0121_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I0121_out;
  wire I1119_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_30;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0121_out),
        .I1(I1119_out),
        .O(of_pc_ii_30),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__59 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I1119_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_235
   (of_pc_ii_11,
    of_pause_reg,
    I045_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_11;
  input of_pause_reg;
  input I045_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I045_out;
  wire I143_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_11;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I045_out),
        .I1(I143_out),
        .O(of_pc_ii_11),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__40 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I143_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_237
   (of_pc_ii_10,
    of_pause_reg,
    I041_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_10;
  input of_pause_reg;
  input I041_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I041_out;
  wire I139_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_10;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I041_out),
        .I1(I139_out),
        .O(of_pc_ii_10),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__39 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I139_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_239
   (of_pc_ii_9,
    of_pause_reg,
    I037_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_9;
  input of_pause_reg;
  input I037_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I037_out;
  wire I135_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_9;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I037_out),
        .I1(I135_out),
        .O(of_pc_ii_9),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__38 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I135_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_241
   (of_pc_ii_8,
    of_pause_reg,
    I033_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_8;
  input of_pause_reg;
  input I033_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I033_out;
  wire I131_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_8;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I033_out),
        .I1(I131_out),
        .O(of_pc_ii_8),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__37 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I131_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_243
   (of_pc_ii_7,
    of_pause_reg,
    I029_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_7;
  input of_pause_reg;
  input I029_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I029_out;
  wire I127_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_7;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I029_out),
        .I1(I127_out),
        .O(of_pc_ii_7),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__36 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I127_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_245
   (of_pc_ii_6,
    of_pause_reg,
    I025_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_6;
  input of_pause_reg;
  input I025_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I025_out;
  wire I123_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_6;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I025_out),
        .I1(I123_out),
        .O(of_pc_ii_6),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__35 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I123_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_247
   (of_pc_ii_5,
    of_pause_reg,
    I021_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_5;
  input of_pause_reg;
  input I021_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I021_out;
  wire I119_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_5;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I021_out),
        .I1(I119_out),
        .O(of_pc_ii_5),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__34 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I119_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_249
   (of_pc_ii_4,
    of_pause_reg,
    I017_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_4;
  input of_pause_reg;
  input I017_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I017_out;
  wire I115_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_4;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I017_out),
        .I1(I115_out),
        .O(of_pc_ii_4),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__33 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I115_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_251
   (of_pc_ii_3,
    of_pause_reg,
    I013_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_3;
  input of_pause_reg;
  input I013_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I013_out;
  wire I111_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_3;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I013_out),
        .I1(I111_out),
        .O(of_pc_ii_3),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__32 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I111_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_253
   (of_pc_ii_2,
    of_pause_reg,
    I09_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_2;
  input of_pause_reg;
  input I09_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I09_out;
  wire I17_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_2;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I09_out),
        .I1(I17_out),
        .O(of_pc_ii_2),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__31 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I17_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_255
   (of_pc_ii_29,
    of_pause_reg,
    I0117_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_29;
  input of_pause_reg;
  input I0117_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I0117_out;
  wire I1115_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_29;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0117_out),
        .I1(I1115_out),
        .O(of_pc_ii_29),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__58 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I1115_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_257
   (of_pc_ii_1,
    of_pause_reg,
    I05_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_1;
  input of_pause_reg;
  input I05_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I05_out;
  wire I13_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_1;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I05_out),
        .I1(I13_out),
        .O(of_pc_ii_1),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__30 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I13_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_259
   (of_pc_ii_0,
    of_pause_reg,
    I0,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_0;
  input of_pause_reg;
  input I0;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I0;
  wire I1;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_0;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0),
        .I1(I1),
        .O(of_pc_ii_0),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__29 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I1));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_261
   (of_pc_ii_28,
    of_pause_reg,
    I0113_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_28;
  input of_pause_reg;
  input I0113_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I0113_out;
  wire I1111_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_28;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0113_out),
        .I1(I1111_out),
        .O(of_pc_ii_28),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__57 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I1111_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_263
   (of_pc_ii_27,
    of_pause_reg,
    I0109_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_27;
  input of_pause_reg;
  input I0109_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I0109_out;
  wire I1107_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_27;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0109_out),
        .I1(I1107_out),
        .O(of_pc_ii_27),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__56 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I1107_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_265
   (of_pc_ii_26,
    of_pause_reg,
    I0105_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_26;
  input of_pause_reg;
  input I0105_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I0105_out;
  wire I1103_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_26;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0105_out),
        .I1(I1103_out),
        .O(of_pc_ii_26),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__55 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I1103_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_267
   (of_pc_ii_25,
    of_pause_reg,
    I0101_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_25;
  input of_pause_reg;
  input I0101_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I0101_out;
  wire I199_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_25;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0101_out),
        .I1(I199_out),
        .O(of_pc_ii_25),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__54 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I199_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_269
   (of_pc_ii_24,
    of_pause_reg,
    I097_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_24;
  input of_pause_reg;
  input I097_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I097_out;
  wire I195_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_24;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I097_out),
        .I1(I195_out),
        .O(of_pc_ii_24),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__53 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I195_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_271
   (of_pc_ii_23,
    of_pause_reg,
    I093_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_23;
  input of_pause_reg;
  input I093_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I093_out;
  wire I191_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_23;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I093_out),
        .I1(I191_out),
        .O(of_pc_ii_23),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__52 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I191_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_273
   (of_pc_ii_22,
    of_pause_reg,
    I089_out,
    out,
    \Using_FPGA.Native_0 ,
    Q);
  output of_pc_ii_22;
  input of_pause_reg;
  input I089_out;
  input [0:0]out;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire I089_out;
  wire I187_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_22;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I089_out),
        .I1(I187_out),
        .O(of_pc_ii_22),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__51 
       (.I0(out),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q),
        .O(I187_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_430
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    ex_sel_alu_i_reg,
    I1,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]ex_sel_alu_i_reg;
  input I1;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire I1;
  wire [1:0]Q;
  wire [0:0]ex_sel_alu_i_reg;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(ex_sel_alu_i_reg),
        .I1(I1),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_4__0 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_431
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__109 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_432
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__108 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_433
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__107 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_434
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__106 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_435
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__105 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_436
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__104 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_437
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__103 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_438
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__102 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_439
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__101 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_440
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__100 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_441
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__118 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_442
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__99 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_443
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__98 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_444
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__97 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_445
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__96 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_446
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__95 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_447
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__94 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_448
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__93 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_449
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__92 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_450
   (D,
    swap_result,
    of_op1_sel_spr,
    EX_SWAP_Instr_reg,
    \Using_FPGA.Native_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]EX_SWAP_Instr_reg;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]EX_SWAP_Instr_reg;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(EX_SWAP_Instr_reg),
        .I1(\Using_FPGA.Native_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__91 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_451
   (D,
    swap_result,
    of_op1_sel_spr,
    EX_SWAP_Instr_reg,
    \Using_FPGA.Native_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]EX_SWAP_Instr_reg;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]EX_SWAP_Instr_reg;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(EX_SWAP_Instr_reg),
        .I1(\Using_FPGA.Native_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__90 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_452
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__117 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_453
   (D,
    swap_result,
    of_op1_sel_spr,
    EX_SWAP_Instr_reg,
    \Using_FPGA.Native_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]EX_SWAP_Instr_reg;
  input \Using_FPGA.Native_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]EX_SWAP_Instr_reg;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(EX_SWAP_Instr_reg),
        .I1(\Using_FPGA.Native_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__89 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_454
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__88 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_455
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__116 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_456
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__115 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_457
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__114 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_458
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__113 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_459
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__112 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_460
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__111 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module ublaze_sopc_microblaze_0_0__MB_MUXF7_461
   (D,
    swap_result,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__110 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_UNIQ_BASE_ \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_415
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD689 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_416
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD690 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_417
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD691 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_418
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD692 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_419
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD693 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_420
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD694 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_421
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD695 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_422
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD696 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_423
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD697 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_424
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD698 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_425
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD699 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_426
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD700 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_427
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD701 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_428
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD702 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module ublaze_sopc_microblaze_0_0__MB_RAM32M_429
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire [1:0]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD703 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(ADDRD),
        .DIA(WB_Fwd),
        .DIB(WB_Fwd),
        .DIC(WB_Fwd),
        .DID(WB_Fwd),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRL16E
   (Q_0,
    Q,
    Dbg_Clk);
  output Q_0;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q_0;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h001B),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q_0));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized3
   (Q6_out,
    Q,
    Dbg_Clk);
  output Q6_out;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q6_out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'hFFFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q6_out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized3_21
   (Q2_out,
    Q,
    Dbg_Clk);
  output Q2_out;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q2_out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'hFFFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q2_out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized5
   (Dbg_TDO,
    Q,
    Dbg_Clk,
    \Serial_Dbg_Intf.shift_count_reg[5] ,
    Q6_out,
    Q11_in,
    Q_0);
  output Dbg_TDO;
  input [6:0]Q;
  input Dbg_Clk;
  input \Serial_Dbg_Intf.shift_count_reg[5] ;
  input Q6_out;
  input Q11_in;
  input Q_0;

  wire Dbg_Clk;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_24_n_0;
  wire [6:0]Q;
  wire Q5_out;
  wire Q6_out;
  wire Q_0;
  wire \Serial_Dbg_Intf.shift_count_reg[5] ;

  MUXF7 Dbg_TDO_INST_0_i_13
       (.I0(Dbg_TDO_INST_0_i_24_n_0),
        .I1(\Serial_Dbg_Intf.shift_count_reg[5] ),
        .O(Dbg_TDO),
        .S(Q[6]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'hA0CFA0C0)) 
    Dbg_TDO_INST_0_i_24
       (.I0(Q5_out),
        .I1(Q6_out),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(Q_0),
        .O(Dbg_TDO_INST_0_i_24_n_0));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h3FFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q5_out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized5_22
   (Dbg_TDO,
    Q,
    Dbg_Clk,
    Q2_out,
    Q3_out,
    Q4_out);
  output Dbg_TDO;
  input [5:0]Q;
  input Dbg_Clk;
  input Q2_out;
  input Q3_out;
  input Q4_out;

  wire Dbg_Clk;
  wire Dbg_TDO;
  wire [5:0]Q;
  wire Q1_out;
  wire Q2_out;

  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'hA0C0)) 
    Dbg_TDO_INST_0_i_25
       (.I0(Q1_out),
        .I1(Q2_out),
        .I2(Q[5]),
        .I3(Q[4]),
        .O(Dbg_TDO));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h3FFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q1_out));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized7
   (Q2_in,
    Q,
    Dbg_Clk);
  output Q2_in;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q2_in;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_3/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0064),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q2_in));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRL16E__parameterized9
   (Dbg_TDO,
    Q,
    Dbg_Clk,
    Data_Read_Reg_En,
    TDO_Data_Reg__31,
    \Serial_Dbg_Intf.shift_count_reg[6] ,
    Config_Reg_En,
    TDO_Instr_Reg__0,
    Instr_Insert_Reg_En,
    tdo_config_word1_0,
    Q0_in,
    Q2_in,
    Q3_in,
    Q0_out,
    Status_Reg_En,
    TDO_Status_Reg__17);
  output Dbg_TDO;
  input [7:0]Q;
  input Dbg_Clk;
  input Data_Read_Reg_En;
  input TDO_Data_Reg__31;
  input \Serial_Dbg_Intf.shift_count_reg[6] ;
  input Config_Reg_En;
  input TDO_Instr_Reg__0;
  input Instr_Insert_Reg_En;
  input tdo_config_word1_0;
  input Q0_in;
  input Q2_in;
  input Q3_in;
  input Q0_out;
  input Status_Reg_En;
  input TDO_Status_Reg__17;

  wire Config_Reg_En;
  wire Data_Read_Reg_En;
  wire Dbg_Clk;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_12_n_0;
  wire Dbg_TDO_INST_0_i_23_n_0;
  wire Dbg_TDO_INST_0_i_2_n_0;
  wire Dbg_TDO_INST_0_i_5_n_0;
  wire Instr_Insert_Reg_En;
  wire [7:0]Q;
  wire Q1_in;
  wire Q2_in;
  wire \Serial_Dbg_Intf.shift_count_reg[6] ;
  wire Status_Reg_En;
  wire TDO_Data_Reg__31;
  wire TDO_Instr_Reg__0;
  wire TDO_Status_Reg__17;

  LUT3 #(
    .INIT(8'hE4)) 
    Dbg_TDO_INST_0
       (.I0(Status_Reg_En),
        .I1(Dbg_TDO_INST_0_i_2_n_0),
        .I2(TDO_Status_Reg__17),
        .O(Dbg_TDO));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h2)) 
    Dbg_TDO_INST_0_i_12
       (.I0(Dbg_TDO_INST_0_i_23_n_0),
        .I1(Q[6]),
        .O(Dbg_TDO_INST_0_i_12_n_0));
  MUXF7 Dbg_TDO_INST_0_i_2
       (.I0(Dbg_TDO_INST_0_i_5_n_0),
        .I1(TDO_Data_Reg__31),
        .O(Dbg_TDO_INST_0_i_2_n_0),
        .S(Data_Read_Reg_En));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'hA0C0)) 
    Dbg_TDO_INST_0_i_23
       (.I0(Q1_in),
        .I1(Q2_in),
        .I2(Q[5]),
        .I3(Q[4]),
        .O(Dbg_TDO_INST_0_i_23_n_0));
  LUT6 #(
    .INIT(64'hB8FFB800B800B800)) 
    Dbg_TDO_INST_0_i_5
       (.I0(Dbg_TDO_INST_0_i_12_n_0),
        .I1(Q[7]),
        .I2(\Serial_Dbg_Intf.shift_count_reg[6] ),
        .I3(Config_Reg_En),
        .I4(TDO_Instr_Reg__0),
        .I5(Instr_Insert_Reg_En),
        .O(Dbg_TDO_INST_0_i_5_n_0));
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_4/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h2400),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q1_in));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRLC16E
   (SRL16_Sel_7,
    which_pc__0,
    SRL16_MC15_7,
    Address,
    Dbg_Clk,
    Dbg_Reg_En);
  output SRL16_Sel_7;
  output which_pc__0;
  input SRL16_MC15_7;
  input [3:0]Address;
  input Dbg_Clk;
  input [0:7]Dbg_Reg_En;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire SRL16_MC15_7;
  wire SRL16_Sel_7;
  wire \Use_unisim.MB_SRL16CE_I1_i_2_n_0 ;
  wire \Use_unisim.MB_SRL16CE_I1_i_3_n_0 ;
  wire which_pc__0;

  (* OPT_MODIFIED = "RETARGET" *) 
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* box_type = "PRIMITIVE" *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_7),
        .Q(SRL16_Sel_7));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \Use_unisim.MB_SRL16CE_I1_i_1 
       (.I0(Dbg_Reg_En[2]),
        .I1(Dbg_Reg_En[7]),
        .I2(\Use_unisim.MB_SRL16CE_I1_i_2_n_0 ),
        .I3(Dbg_Reg_En[6]),
        .I4(Dbg_Reg_En[3]),
        .I5(\Use_unisim.MB_SRL16CE_I1_i_3_n_0 ),
        .O(which_pc__0));
  LUT2 #(
    .INIT(4'hE)) 
    \Use_unisim.MB_SRL16CE_I1_i_2 
       (.I0(Dbg_Reg_En[1]),
        .I1(Dbg_Reg_En[0]),
        .O(\Use_unisim.MB_SRL16CE_I1_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \Use_unisim.MB_SRL16CE_I1_i_3 
       (.I0(Dbg_Reg_En[4]),
        .I1(Dbg_Reg_En[5]),
        .O(\Use_unisim.MB_SRL16CE_I1_i_3_n_0 ));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRLC16E_34
   (SRL16_Sel_6,
    SRL16_MC15_7,
    which_pc__0,
    SRL16_MC15_6,
    Address,
    Dbg_Clk);
  output SRL16_Sel_6;
  output SRL16_MC15_7;
  input which_pc__0;
  input SRL16_MC15_6;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_6;
  wire SRL16_MC15_7;
  wire SRL16_Sel_6;
  wire which_pc__0;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_6),
        .Q(SRL16_Sel_6),
        .Q15(SRL16_MC15_7));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRLC16E_36
   (SRL16_Sel_5,
    SRL16_MC15_6,
    which_pc__0,
    SRL16_MC15_5,
    Address,
    Dbg_Clk);
  output SRL16_Sel_5;
  output SRL16_MC15_6;
  input which_pc__0;
  input SRL16_MC15_5;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_5;
  wire SRL16_MC15_6;
  wire SRL16_Sel_5;
  wire which_pc__0;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_5),
        .Q(SRL16_Sel_5),
        .Q15(SRL16_MC15_6));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRLC16E_38
   (SRL16_Sel_4,
    SRL16_MC15_5,
    which_pc__0,
    SRL16_MC15_4,
    Address,
    Dbg_Clk);
  output SRL16_Sel_4;
  output SRL16_MC15_5;
  input which_pc__0;
  input SRL16_MC15_4;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_4;
  wire SRL16_MC15_5;
  wire SRL16_Sel_4;
  wire which_pc__0;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_4),
        .Q(SRL16_Sel_4),
        .Q15(SRL16_MC15_5));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRLC16E_40
   (SRL16_Sel_3,
    SRL16_MC15_4,
    which_pc__0,
    SRL16_MC15_3,
    Address,
    Dbg_Clk);
  output SRL16_Sel_3;
  output SRL16_MC15_4;
  input which_pc__0;
  input SRL16_MC15_3;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_3;
  wire SRL16_MC15_4;
  wire SRL16_Sel_3;
  wire which_pc__0;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_3),
        .Q(SRL16_Sel_3),
        .Q15(SRL16_MC15_4));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRLC16E_42
   (SRL16_Sel_2,
    SRL16_MC15_3,
    which_pc__0,
    SRL16_MC15_2,
    Address,
    Dbg_Clk);
  output SRL16_Sel_2;
  output SRL16_MC15_3;
  input which_pc__0;
  input SRL16_MC15_2;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_2;
  wire SRL16_MC15_3;
  wire SRL16_Sel_2;
  wire which_pc__0;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_2),
        .Q(SRL16_Sel_2),
        .Q15(SRL16_MC15_3));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRLC16E_44
   (SRL16_Sel_1,
    SRL16_MC15_2,
    which_pc__0,
    SRL16_MC15_1,
    Address,
    Dbg_Clk);
  output SRL16_Sel_1;
  output SRL16_MC15_2;
  input which_pc__0;
  input SRL16_MC15_1;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_1;
  wire SRL16_MC15_2;
  wire SRL16_Sel_1;
  wire which_pc__0;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_1),
        .Q(SRL16_Sel_1),
        .Q15(SRL16_MC15_2));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module ublaze_sopc_microblaze_0_0__MB_SRLC16E_46
   (SRL16_Sel_0,
    SRL16_MC15_1,
    which_pc__0,
    Dbg_TDI,
    Address,
    Dbg_Clk);
  output SRL16_Sel_0;
  output SRL16_MC15_1;
  input which_pc__0;
  input Dbg_TDI;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire Dbg_TDI;
  wire SRL16_MC15_1;
  wire SRL16_Sel_0;
  wire which_pc__0;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(Dbg_TDI),
        .Q(SRL16_Sel_0),
        .Q15(SRL16_MC15_1));
endmodule

(* C_ADDR_TAG_BITS = "17" *) (* C_ALLOW_DCACHE_WR = "1" *) (* C_ALLOW_ICACHE_WR = "1" *) 
(* C_AREA_OPTIMIZED = "0" *) (* C_ASYNC_INTERRUPT = "1" *) (* C_ASYNC_WAKEUP = "3" *) 
(* C_AVOID_PRIMITIVES = "0" *) (* C_BASE_VECTORS = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_BRANCH_TARGET_CACHE_SIZE = "0" *) 
(* C_CACHE_BYTE_SIZE = "8192" *) (* C_DADDR_SIZE = "32" *) (* C_DATA_SIZE = "32" *) 
(* C_DCACHE_ADDR_TAG = "17" *) (* C_DCACHE_ALWAYS_USED = "0" *) (* C_DCACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_DCACHE_BYTE_SIZE = "8192" *) (* C_DCACHE_DATA_WIDTH = "0" *) (* C_DCACHE_FORCE_TAG_LUTRAM = "0" *) 
(* C_DCACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) (* C_DCACHE_LINE_LEN = "4" *) (* C_DCACHE_USE_WRITEBACK = "0" *) 
(* C_DCACHE_VICTIMS = "0" *) (* C_DEBUG_COUNTER_WIDTH = "32" *) (* C_DEBUG_ENABLED = "1" *) 
(* C_DEBUG_EVENT_COUNTERS = "5" *) (* C_DEBUG_EXTERNAL_TRACE = "0" *) (* C_DEBUG_INTERFACE = "0" *) 
(* C_DEBUG_LATENCY_COUNTERS = "1" *) (* C_DEBUG_PROFILE_SIZE = "0" *) (* C_DEBUG_TRACE_ASYNC_RESET = "0" *) 
(* C_DEBUG_TRACE_SIZE = "8192" *) (* C_DIV_ZERO_EXCEPTION = "0" *) (* C_DYNAMIC_BUS_SIZING = "0" *) 
(* C_D_AXI = "1" *) (* C_D_LMB = "1" *) (* C_ECC_USE_CE_EXCEPTION = "0" *) 
(* C_EDGE_IS_POSITIVE = "1" *) (* C_ENDIANNESS = "1" *) (* C_FAMILY = "artix7" *) 
(* C_FAULT_TOLERANT = "0" *) (* C_FPU_EXCEPTION = "0" *) (* C_FREQ = "50000000" *) 
(* C_FSL_EXCEPTION = "0" *) (* C_FSL_LINKS = "0" *) (* C_IADDR_SIZE = "32" *) 
(* C_ICACHE_ALWAYS_USED = "0" *) (* C_ICACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_ICACHE_DATA_WIDTH = "0" *) 
(* C_ICACHE_FORCE_TAG_LUTRAM = "0" *) (* C_ICACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) (* C_ICACHE_LINE_LEN = "4" *) 
(* C_ICACHE_STREAMS = "0" *) (* C_ICACHE_VICTIMS = "0" *) (* C_ILL_OPCODE_EXCEPTION = "0" *) 
(* C_IMPRECISE_EXCEPTIONS = "0" *) (* C_INSTANCE = "ublaze_sopc_microblaze_0_0" *) (* C_INSTR_SIZE = "32" *) 
(* C_INTERCONNECT = "2" *) (* C_INTERRUPT_IS_EDGE = "0" *) (* C_I_AXI = "0" *) 
(* C_I_LMB = "1" *) (* C_LOCKSTEP_MASTER = "0" *) (* C_LOCKSTEP_SLAVE = "0" *) 
(* C_M0_AXIS_DATA_WIDTH = "32" *) (* C_M10_AXIS_DATA_WIDTH = "32" *) (* C_M11_AXIS_DATA_WIDTH = "32" *) 
(* C_M12_AXIS_DATA_WIDTH = "32" *) (* C_M13_AXIS_DATA_WIDTH = "32" *) (* C_M14_AXIS_DATA_WIDTH = "32" *) 
(* C_M15_AXIS_DATA_WIDTH = "32" *) (* C_M1_AXIS_DATA_WIDTH = "32" *) (* C_M2_AXIS_DATA_WIDTH = "32" *) 
(* C_M3_AXIS_DATA_WIDTH = "32" *) (* C_M4_AXIS_DATA_WIDTH = "32" *) (* C_M5_AXIS_DATA_WIDTH = "32" *) 
(* C_M6_AXIS_DATA_WIDTH = "32" *) (* C_M7_AXIS_DATA_WIDTH = "32" *) (* C_M8_AXIS_DATA_WIDTH = "32" *) 
(* C_M9_AXIS_DATA_WIDTH = "32" *) (* C_MMU_DTLB_SIZE = "4" *) (* C_MMU_ITLB_SIZE = "2" *) 
(* C_MMU_PRIVILEGED_INSTR = "0" *) (* C_MMU_TLB_ACCESS = "3" *) (* C_MMU_ZONES = "16" *) 
(* C_M_AXI_DC_ADDR_WIDTH = "32" *) (* C_M_AXI_DC_ARUSER_WIDTH = "5" *) (* C_M_AXI_DC_AWUSER_WIDTH = "5" *) 
(* C_M_AXI_DC_BUSER_WIDTH = "1" *) (* C_M_AXI_DC_DATA_WIDTH = "32" *) (* C_M_AXI_DC_EXCLUSIVE_ACCESS = "0" *) 
(* C_M_AXI_DC_RUSER_WIDTH = "1" *) (* C_M_AXI_DC_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_DC_USER_VALUE = "31" *) 
(* C_M_AXI_DC_WUSER_WIDTH = "1" *) (* C_M_AXI_DP_ADDR_WIDTH = "32" *) (* C_M_AXI_DP_DATA_WIDTH = "32" *) 
(* C_M_AXI_DP_EXCLUSIVE_ACCESS = "0" *) (* C_M_AXI_DP_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_D_BUS_EXCEPTION = "0" *) 
(* C_M_AXI_IC_ADDR_WIDTH = "32" *) (* C_M_AXI_IC_ARUSER_WIDTH = "5" *) (* C_M_AXI_IC_AWUSER_WIDTH = "5" *) 
(* C_M_AXI_IC_BUSER_WIDTH = "1" *) (* C_M_AXI_IC_DATA_WIDTH = "32" *) (* C_M_AXI_IC_RUSER_WIDTH = "1" *) 
(* C_M_AXI_IC_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_IC_USER_VALUE = "31" *) (* C_M_AXI_IC_WUSER_WIDTH = "1" *) 
(* C_M_AXI_IP_ADDR_WIDTH = "32" *) (* C_M_AXI_IP_DATA_WIDTH = "32" *) (* C_M_AXI_IP_THREAD_ID_WIDTH = "1" *) 
(* C_M_AXI_I_BUS_EXCEPTION = "0" *) (* C_NUMBER_OF_PC_BRK = "1" *) (* C_NUMBER_OF_RD_ADDR_BRK = "0" *) 
(* C_NUMBER_OF_WR_ADDR_BRK = "0" *) (* C_NUM_SYNC_FF_CLK = "2" *) (* C_NUM_SYNC_FF_CLK_DEBUG = "2" *) 
(* C_NUM_SYNC_FF_CLK_IRQ = "1" *) (* C_NUM_SYNC_FF_DBG_CLK = "1" *) (* C_NUM_SYNC_FF_DBG_TRACE_CLK = "2" *) 
(* C_OPCODE_0x0_ILLEGAL = "0" *) (* C_OPTIMIZATION = "0" *) (* C_PC_WIDTH = "32" *) 
(* C_PIADDR_SIZE = "32" *) (* C_PVR = "0" *) (* C_PVR_USER1 = "8'b00000000" *) 
(* C_PVR_USER2 = "0" *) (* C_RESET_MSR = "0" *) (* C_S0_AXIS_DATA_WIDTH = "32" *) 
(* C_S10_AXIS_DATA_WIDTH = "32" *) (* C_S11_AXIS_DATA_WIDTH = "32" *) (* C_S12_AXIS_DATA_WIDTH = "32" *) 
(* C_S13_AXIS_DATA_WIDTH = "32" *) (* C_S14_AXIS_DATA_WIDTH = "32" *) (* C_S15_AXIS_DATA_WIDTH = "32" *) 
(* C_S1_AXIS_DATA_WIDTH = "32" *) (* C_S2_AXIS_DATA_WIDTH = "32" *) (* C_S3_AXIS_DATA_WIDTH = "32" *) 
(* C_S4_AXIS_DATA_WIDTH = "32" *) (* C_S5_AXIS_DATA_WIDTH = "32" *) (* C_S6_AXIS_DATA_WIDTH = "32" *) 
(* C_S7_AXIS_DATA_WIDTH = "32" *) (* C_S8_AXIS_DATA_WIDTH = "32" *) (* C_S9_AXIS_DATA_WIDTH = "32" *) 
(* C_SCO = "0" *) (* C_UNALIGNED_EXCEPTIONS = "0" *) (* C_USE_BARREL = "0" *) 
(* C_USE_BRANCH_TARGET_CACHE = "0" *) (* C_USE_CONFIG_RESET = "0" *) (* C_USE_DCACHE = "0" *) 
(* C_USE_DIV = "0" *) (* C_USE_EXTENDED_FSL_INSTR = "0" *) (* C_USE_EXT_BRK = "0" *) 
(* C_USE_EXT_NM_BRK = "0" *) (* C_USE_FPU = "0" *) (* C_USE_HW_MUL = "0" *) 
(* C_USE_ICACHE = "0" *) (* C_USE_INTERRUPT = "1" *) (* C_USE_MMU = "0" *) 
(* C_USE_MSR_INSTR = "0" *) (* C_USE_NON_SECURE = "0" *) (* C_USE_PCMP_INSTR = "0" *) 
(* C_USE_REORDER_INSTR = "1" *) (* C_USE_STACK_PROTECTION = "0" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* ORIG_REF_NAME = "MicroBlaze" *) 
module ublaze_sopc_microblaze_0_0__MicroBlaze
   (RAM_To,
    RAM_From,
    Clk,
    Reset,
    Mb_Reset,
    Config_Reset,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    Reset_Mode,
    Non_Secure,
    Interrupt,
    Interrupt_Address,
    Interrupt_Ack,
    Ext_BRK,
    Ext_NM_BRK,
    Pause,
    Pause_Ack,
    Dbg_Continue,
    Dbg_Stop,
    Dbg_Intr,
    MB_Halted,
    MB_Error,
    Wakeup,
    Sleep,
    Hibernate,
    Suspend,
    Dbg_Wakeup,
    LOCKSTEP_Slave_In,
    LOCKSTEP_Master_Out,
    LOCKSTEP_Out,
    Instr_Addr,
    Instr,
    IFetch,
    I_AS,
    IReady,
    IWAIT,
    ICE,
    IUE,
    M_AXI_IP_AWID,
    M_AXI_IP_AWADDR,
    M_AXI_IP_AWLEN,
    M_AXI_IP_AWSIZE,
    M_AXI_IP_AWBURST,
    M_AXI_IP_AWLOCK,
    M_AXI_IP_AWCACHE,
    M_AXI_IP_AWPROT,
    M_AXI_IP_AWQOS,
    M_AXI_IP_AWVALID,
    M_AXI_IP_AWREADY,
    M_AXI_IP_WDATA,
    M_AXI_IP_WSTRB,
    M_AXI_IP_WLAST,
    M_AXI_IP_WVALID,
    M_AXI_IP_WREADY,
    M_AXI_IP_BID,
    M_AXI_IP_BRESP,
    M_AXI_IP_BVALID,
    M_AXI_IP_BREADY,
    M_AXI_IP_ARID,
    M_AXI_IP_ARADDR,
    M_AXI_IP_ARLEN,
    M_AXI_IP_ARSIZE,
    M_AXI_IP_ARBURST,
    M_AXI_IP_ARLOCK,
    M_AXI_IP_ARCACHE,
    M_AXI_IP_ARPROT,
    M_AXI_IP_ARQOS,
    M_AXI_IP_ARVALID,
    M_AXI_IP_ARREADY,
    M_AXI_IP_RID,
    M_AXI_IP_RDATA,
    M_AXI_IP_RRESP,
    M_AXI_IP_RLAST,
    M_AXI_IP_RVALID,
    M_AXI_IP_RREADY,
    Data_Addr,
    Data_Read,
    Data_Write,
    D_AS,
    Read_Strobe,
    Write_Strobe,
    DReady,
    DWait,
    DCE,
    DUE,
    Byte_Enable,
    M_AXI_DP_AWID,
    M_AXI_DP_AWADDR,
    M_AXI_DP_AWLEN,
    M_AXI_DP_AWSIZE,
    M_AXI_DP_AWBURST,
    M_AXI_DP_AWLOCK,
    M_AXI_DP_AWCACHE,
    M_AXI_DP_AWPROT,
    M_AXI_DP_AWQOS,
    M_AXI_DP_AWVALID,
    M_AXI_DP_AWREADY,
    M_AXI_DP_WDATA,
    M_AXI_DP_WSTRB,
    M_AXI_DP_WLAST,
    M_AXI_DP_WVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_BID,
    M_AXI_DP_BRESP,
    M_AXI_DP_BVALID,
    M_AXI_DP_BREADY,
    M_AXI_DP_ARID,
    M_AXI_DP_ARADDR,
    M_AXI_DP_ARLEN,
    M_AXI_DP_ARSIZE,
    M_AXI_DP_ARBURST,
    M_AXI_DP_ARLOCK,
    M_AXI_DP_ARCACHE,
    M_AXI_DP_ARPROT,
    M_AXI_DP_ARQOS,
    M_AXI_DP_ARVALID,
    M_AXI_DP_ARREADY,
    M_AXI_DP_RID,
    M_AXI_DP_RDATA,
    M_AXI_DP_RRESP,
    M_AXI_DP_RLAST,
    M_AXI_DP_RVALID,
    M_AXI_DP_RREADY,
    Dbg_Disable,
    Dbg_Clk,
    Dbg_TDI,
    Dbg_TDO,
    Dbg_Reg_En,
    Dbg_Shift,
    Dbg_Capture,
    Dbg_Update,
    Debug_Rst,
    Dbg_Trig_In,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Dbg_Trig_Ack_Out,
    Dbg_Trace_Clk,
    Dbg_Trace_Data,
    Dbg_Trace_Ready,
    Dbg_Trace_Valid,
    Dbg_AWADDR,
    Dbg_AWVALID,
    Dbg_AWREADY,
    Dbg_WDATA,
    Dbg_WVALID,
    Dbg_WREADY,
    Dbg_BRESP,
    Dbg_BVALID,
    Dbg_BREADY,
    Dbg_ARADDR,
    Dbg_ARVALID,
    Dbg_ARREADY,
    Dbg_RDATA,
    Dbg_RRESP,
    Dbg_RVALID,
    Dbg_RREADY,
    DEBUG_ACLK,
    DEBUG_ARESETN,
    Trace_Instruction,
    Trace_Valid_Instr,
    Trace_PC,
    Trace_Reg_Write,
    Trace_Reg_Addr,
    Trace_MSR_Reg,
    Trace_PID_Reg,
    Trace_New_Reg_Value,
    Trace_Exception_Taken,
    Trace_Exception_Kind,
    Trace_Jump_Taken,
    Trace_Delay_Slot,
    Trace_Data_Address,
    Trace_Data_Write_Value,
    Trace_Data_Byte_Enable,
    Trace_Data_Access,
    Trace_Data_Read,
    Trace_Data_Write,
    Trace_DCache_Req,
    Trace_DCache_Hit,
    Trace_DCache_Rdy,
    Trace_DCache_Read,
    Trace_ICache_Req,
    Trace_ICache_Hit,
    Trace_ICache_Rdy,
    Trace_OF_PipeRun,
    Trace_EX_PipeRun,
    Trace_MEM_PipeRun,
    Trace_MB_Halted,
    Trace_Jump_Hit,
    M0_AXIS_TLAST,
    M0_AXIS_TDATA,
    M0_AXIS_TVALID,
    M0_AXIS_TREADY,
    M1_AXIS_TLAST,
    M1_AXIS_TDATA,
    M1_AXIS_TVALID,
    M1_AXIS_TREADY,
    M2_AXIS_TLAST,
    M2_AXIS_TDATA,
    M2_AXIS_TVALID,
    M2_AXIS_TREADY,
    M3_AXIS_TLAST,
    M3_AXIS_TDATA,
    M3_AXIS_TVALID,
    M3_AXIS_TREADY,
    M4_AXIS_TLAST,
    M4_AXIS_TDATA,
    M4_AXIS_TVALID,
    M4_AXIS_TREADY,
    M5_AXIS_TLAST,
    M5_AXIS_TDATA,
    M5_AXIS_TVALID,
    M5_AXIS_TREADY,
    M6_AXIS_TLAST,
    M6_AXIS_TDATA,
    M6_AXIS_TVALID,
    M6_AXIS_TREADY,
    M7_AXIS_TLAST,
    M7_AXIS_TDATA,
    M7_AXIS_TVALID,
    M7_AXIS_TREADY,
    M8_AXIS_TLAST,
    M8_AXIS_TDATA,
    M8_AXIS_TVALID,
    M8_AXIS_TREADY,
    M9_AXIS_TLAST,
    M9_AXIS_TDATA,
    M9_AXIS_TVALID,
    M9_AXIS_TREADY,
    M10_AXIS_TLAST,
    M10_AXIS_TDATA,
    M10_AXIS_TVALID,
    M10_AXIS_TREADY,
    M11_AXIS_TLAST,
    M11_AXIS_TDATA,
    M11_AXIS_TVALID,
    M11_AXIS_TREADY,
    M12_AXIS_TLAST,
    M12_AXIS_TDATA,
    M12_AXIS_TVALID,
    M12_AXIS_TREADY,
    M13_AXIS_TLAST,
    M13_AXIS_TDATA,
    M13_AXIS_TVALID,
    M13_AXIS_TREADY,
    M14_AXIS_TLAST,
    M14_AXIS_TDATA,
    M14_AXIS_TVALID,
    M14_AXIS_TREADY,
    M15_AXIS_TLAST,
    M15_AXIS_TDATA,
    M15_AXIS_TVALID,
    M15_AXIS_TREADY,
    S0_AXIS_TLAST,
    S0_AXIS_TDATA,
    S0_AXIS_TVALID,
    S0_AXIS_TREADY,
    S1_AXIS_TLAST,
    S1_AXIS_TDATA,
    S1_AXIS_TVALID,
    S1_AXIS_TREADY,
    S2_AXIS_TLAST,
    S2_AXIS_TDATA,
    S2_AXIS_TVALID,
    S2_AXIS_TREADY,
    S3_AXIS_TLAST,
    S3_AXIS_TDATA,
    S3_AXIS_TVALID,
    S3_AXIS_TREADY,
    S4_AXIS_TLAST,
    S4_AXIS_TDATA,
    S4_AXIS_TVALID,
    S4_AXIS_TREADY,
    S5_AXIS_TLAST,
    S5_AXIS_TDATA,
    S5_AXIS_TVALID,
    S5_AXIS_TREADY,
    S6_AXIS_TLAST,
    S6_AXIS_TDATA,
    S6_AXIS_TVALID,
    S6_AXIS_TREADY,
    S7_AXIS_TLAST,
    S7_AXIS_TDATA,
    S7_AXIS_TVALID,
    S7_AXIS_TREADY,
    S8_AXIS_TLAST,
    S8_AXIS_TDATA,
    S8_AXIS_TVALID,
    S8_AXIS_TREADY,
    S9_AXIS_TLAST,
    S9_AXIS_TDATA,
    S9_AXIS_TVALID,
    S9_AXIS_TREADY,
    S10_AXIS_TLAST,
    S10_AXIS_TDATA,
    S10_AXIS_TVALID,
    S10_AXIS_TREADY,
    S11_AXIS_TLAST,
    S11_AXIS_TDATA,
    S11_AXIS_TVALID,
    S11_AXIS_TREADY,
    S12_AXIS_TLAST,
    S12_AXIS_TDATA,
    S12_AXIS_TVALID,
    S12_AXIS_TREADY,
    S13_AXIS_TLAST,
    S13_AXIS_TDATA,
    S13_AXIS_TVALID,
    S13_AXIS_TREADY,
    S14_AXIS_TLAST,
    S14_AXIS_TDATA,
    S14_AXIS_TVALID,
    S14_AXIS_TREADY,
    S15_AXIS_TLAST,
    S15_AXIS_TDATA,
    S15_AXIS_TVALID,
    S15_AXIS_TREADY,
    M_AXI_IC_AWID,
    M_AXI_IC_AWADDR,
    M_AXI_IC_AWLEN,
    M_AXI_IC_AWSIZE,
    M_AXI_IC_AWBURST,
    M_AXI_IC_AWLOCK,
    M_AXI_IC_AWCACHE,
    M_AXI_IC_AWPROT,
    M_AXI_IC_AWQOS,
    M_AXI_IC_AWVALID,
    M_AXI_IC_AWREADY,
    M_AXI_IC_AWUSER,
    M_AXI_IC_AWDOMAIN,
    M_AXI_IC_AWSNOOP,
    M_AXI_IC_AWBAR,
    M_AXI_IC_WDATA,
    M_AXI_IC_WSTRB,
    M_AXI_IC_WLAST,
    M_AXI_IC_WVALID,
    M_AXI_IC_WREADY,
    M_AXI_IC_WUSER,
    M_AXI_IC_BID,
    M_AXI_IC_BRESP,
    M_AXI_IC_BVALID,
    M_AXI_IC_BREADY,
    M_AXI_IC_BUSER,
    M_AXI_IC_WACK,
    M_AXI_IC_ARID,
    M_AXI_IC_ARADDR,
    M_AXI_IC_ARLEN,
    M_AXI_IC_ARSIZE,
    M_AXI_IC_ARBURST,
    M_AXI_IC_ARLOCK,
    M_AXI_IC_ARCACHE,
    M_AXI_IC_ARPROT,
    M_AXI_IC_ARQOS,
    M_AXI_IC_ARVALID,
    M_AXI_IC_ARREADY,
    M_AXI_IC_ARUSER,
    M_AXI_IC_ARDOMAIN,
    M_AXI_IC_ARSNOOP,
    M_AXI_IC_ARBAR,
    M_AXI_IC_RID,
    M_AXI_IC_RDATA,
    M_AXI_IC_RRESP,
    M_AXI_IC_RLAST,
    M_AXI_IC_RVALID,
    M_AXI_IC_RREADY,
    M_AXI_IC_RUSER,
    M_AXI_IC_RACK,
    M_AXI_IC_ACVALID,
    M_AXI_IC_ACADDR,
    M_AXI_IC_ACSNOOP,
    M_AXI_IC_ACPROT,
    M_AXI_IC_ACREADY,
    M_AXI_IC_CRVALID,
    M_AXI_IC_CRRESP,
    M_AXI_IC_CRREADY,
    M_AXI_IC_CDVALID,
    M_AXI_IC_CDDATA,
    M_AXI_IC_CDLAST,
    M_AXI_IC_CDREADY,
    M_AXI_DC_AWID,
    M_AXI_DC_AWADDR,
    M_AXI_DC_AWLEN,
    M_AXI_DC_AWSIZE,
    M_AXI_DC_AWBURST,
    M_AXI_DC_AWLOCK,
    M_AXI_DC_AWCACHE,
    M_AXI_DC_AWPROT,
    M_AXI_DC_AWQOS,
    M_AXI_DC_AWVALID,
    M_AXI_DC_AWREADY,
    M_AXI_DC_AWUSER,
    M_AXI_DC_AWDOMAIN,
    M_AXI_DC_AWSNOOP,
    M_AXI_DC_AWBAR,
    M_AXI_DC_WDATA,
    M_AXI_DC_WSTRB,
    M_AXI_DC_WLAST,
    M_AXI_DC_WVALID,
    M_AXI_DC_WREADY,
    M_AXI_DC_WUSER,
    M_AXI_DC_BRESP,
    M_AXI_DC_BID,
    M_AXI_DC_BVALID,
    M_AXI_DC_BREADY,
    M_AXI_DC_BUSER,
    M_AXI_DC_WACK,
    M_AXI_DC_ARID,
    M_AXI_DC_ARADDR,
    M_AXI_DC_ARLEN,
    M_AXI_DC_ARSIZE,
    M_AXI_DC_ARBURST,
    M_AXI_DC_ARLOCK,
    M_AXI_DC_ARCACHE,
    M_AXI_DC_ARPROT,
    M_AXI_DC_ARQOS,
    M_AXI_DC_ARVALID,
    M_AXI_DC_ARREADY,
    M_AXI_DC_ARUSER,
    M_AXI_DC_ARDOMAIN,
    M_AXI_DC_ARSNOOP,
    M_AXI_DC_ARBAR,
    M_AXI_DC_RID,
    M_AXI_DC_RDATA,
    M_AXI_DC_RRESP,
    M_AXI_DC_RLAST,
    M_AXI_DC_RVALID,
    M_AXI_DC_RREADY,
    M_AXI_DC_RUSER,
    M_AXI_DC_RACK,
    M_AXI_DC_ACVALID,
    M_AXI_DC_ACADDR,
    M_AXI_DC_ACSNOOP,
    M_AXI_DC_ACPROT,
    M_AXI_DC_ACREADY,
    M_AXI_DC_CRVALID,
    M_AXI_DC_CRRESP,
    M_AXI_DC_CRREADY,
    M_AXI_DC_CDVALID,
    M_AXI_DC_CDDATA,
    M_AXI_DC_CDLAST,
    M_AXI_DC_CDREADY);
  input [255:0]RAM_To;
  output [255:0]RAM_From;
  input Clk;
  input Reset;
  input Mb_Reset;
  input Config_Reset;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input [0:1]Reset_Mode;
  input [0:3]Non_Secure;
  input Interrupt;
  input [0:31]Interrupt_Address;
  output [0:1]Interrupt_Ack;
  input Ext_BRK;
  input Ext_NM_BRK;
  input Pause;
  output Pause_Ack;
  output Dbg_Continue;
  input Dbg_Stop;
  output Dbg_Intr;
  output MB_Halted;
  output MB_Error;
  input [0:1]Wakeup;
  output Sleep;
  output Hibernate;
  output Suspend;
  output Dbg_Wakeup;
  input [0:4095]LOCKSTEP_Slave_In;
  output [0:4095]LOCKSTEP_Master_Out;
  output [0:4095]LOCKSTEP_Out;
  output [0:31]Instr_Addr;
  input [0:31]Instr;
  output IFetch;
  output I_AS;
  input IReady;
  input IWAIT;
  input ICE;
  input IUE;
  output [0:0]M_AXI_IP_AWID;
  output [31:0]M_AXI_IP_AWADDR;
  output [7:0]M_AXI_IP_AWLEN;
  output [2:0]M_AXI_IP_AWSIZE;
  output [1:0]M_AXI_IP_AWBURST;
  output M_AXI_IP_AWLOCK;
  output [3:0]M_AXI_IP_AWCACHE;
  output [2:0]M_AXI_IP_AWPROT;
  output [3:0]M_AXI_IP_AWQOS;
  output M_AXI_IP_AWVALID;
  input M_AXI_IP_AWREADY;
  output [31:0]M_AXI_IP_WDATA;
  output [3:0]M_AXI_IP_WSTRB;
  output M_AXI_IP_WLAST;
  output M_AXI_IP_WVALID;
  input M_AXI_IP_WREADY;
  input [0:0]M_AXI_IP_BID;
  input [1:0]M_AXI_IP_BRESP;
  input M_AXI_IP_BVALID;
  output M_AXI_IP_BREADY;
  output [0:0]M_AXI_IP_ARID;
  output [31:0]M_AXI_IP_ARADDR;
  output [7:0]M_AXI_IP_ARLEN;
  output [2:0]M_AXI_IP_ARSIZE;
  output [1:0]M_AXI_IP_ARBURST;
  output M_AXI_IP_ARLOCK;
  output [3:0]M_AXI_IP_ARCACHE;
  output [2:0]M_AXI_IP_ARPROT;
  output [3:0]M_AXI_IP_ARQOS;
  output M_AXI_IP_ARVALID;
  input M_AXI_IP_ARREADY;
  input [0:0]M_AXI_IP_RID;
  input [31:0]M_AXI_IP_RDATA;
  input [1:0]M_AXI_IP_RRESP;
  input M_AXI_IP_RLAST;
  input M_AXI_IP_RVALID;
  output M_AXI_IP_RREADY;
  output [0:31]Data_Addr;
  input [0:31]Data_Read;
  output [0:31]Data_Write;
  output D_AS;
  output Read_Strobe;
  output Write_Strobe;
  input DReady;
  input DWait;
  input DCE;
  input DUE;
  output [0:3]Byte_Enable;
  output [0:0]M_AXI_DP_AWID;
  output [31:0]M_AXI_DP_AWADDR;
  output [7:0]M_AXI_DP_AWLEN;
  output [2:0]M_AXI_DP_AWSIZE;
  output [1:0]M_AXI_DP_AWBURST;
  output M_AXI_DP_AWLOCK;
  output [3:0]M_AXI_DP_AWCACHE;
  output [2:0]M_AXI_DP_AWPROT;
  output [3:0]M_AXI_DP_AWQOS;
  output M_AXI_DP_AWVALID;
  input M_AXI_DP_AWREADY;
  output [31:0]M_AXI_DP_WDATA;
  output [3:0]M_AXI_DP_WSTRB;
  output M_AXI_DP_WLAST;
  output M_AXI_DP_WVALID;
  input M_AXI_DP_WREADY;
  input [0:0]M_AXI_DP_BID;
  input [1:0]M_AXI_DP_BRESP;
  input M_AXI_DP_BVALID;
  output M_AXI_DP_BREADY;
  output [0:0]M_AXI_DP_ARID;
  output [31:0]M_AXI_DP_ARADDR;
  output [7:0]M_AXI_DP_ARLEN;
  output [2:0]M_AXI_DP_ARSIZE;
  output [1:0]M_AXI_DP_ARBURST;
  output M_AXI_DP_ARLOCK;
  output [3:0]M_AXI_DP_ARCACHE;
  output [2:0]M_AXI_DP_ARPROT;
  output [3:0]M_AXI_DP_ARQOS;
  output M_AXI_DP_ARVALID;
  input M_AXI_DP_ARREADY;
  input [0:0]M_AXI_DP_RID;
  input [31:0]M_AXI_DP_RDATA;
  input [1:0]M_AXI_DP_RRESP;
  input M_AXI_DP_RLAST;
  input M_AXI_DP_RVALID;
  output M_AXI_DP_RREADY;
  input Dbg_Disable;
  input Dbg_Clk;
  input Dbg_TDI;
  output Dbg_TDO;
  input [0:7]Dbg_Reg_En;
  input Dbg_Shift;
  input Dbg_Capture;
  input Dbg_Update;
  input Debug_Rst;
  output [0:7]Dbg_Trig_In;
  input [0:7]Dbg_Trig_Ack_In;
  input [0:7]Dbg_Trig_Out;
  output [0:7]Dbg_Trig_Ack_Out;
  input Dbg_Trace_Clk;
  output [0:35]Dbg_Trace_Data;
  input Dbg_Trace_Ready;
  output Dbg_Trace_Valid;
  input [14:2]Dbg_AWADDR;
  input Dbg_AWVALID;
  output Dbg_AWREADY;
  input [31:0]Dbg_WDATA;
  input Dbg_WVALID;
  output Dbg_WREADY;
  output [1:0]Dbg_BRESP;
  output Dbg_BVALID;
  input Dbg_BREADY;
  input [14:2]Dbg_ARADDR;
  input Dbg_ARVALID;
  output Dbg_ARREADY;
  output [31:0]Dbg_RDATA;
  output [1:0]Dbg_RRESP;
  output Dbg_RVALID;
  input Dbg_RREADY;
  input DEBUG_ACLK;
  input DEBUG_ARESETN;
  (* mark_debug = "false" *) output [0:31]Trace_Instruction;
  (* mark_debug = "false" *) output Trace_Valid_Instr;
  (* mark_debug = "false" *) output [0:31]Trace_PC;
  (* mark_debug = "false" *) output Trace_Reg_Write;
  (* mark_debug = "false" *) output [0:4]Trace_Reg_Addr;
  (* mark_debug = "false" *) output [0:14]Trace_MSR_Reg;
  (* mark_debug = "false" *) output [0:7]Trace_PID_Reg;
  (* mark_debug = "false" *) output [0:31]Trace_New_Reg_Value;
  (* mark_debug = "false" *) output Trace_Exception_Taken;
  (* mark_debug = "false" *) output [0:4]Trace_Exception_Kind;
  (* mark_debug = "false" *) output Trace_Jump_Taken;
  (* mark_debug = "false" *) output Trace_Delay_Slot;
  (* mark_debug = "false" *) output [0:31]Trace_Data_Address;
  (* mark_debug = "false" *) output [0:31]Trace_Data_Write_Value;
  (* mark_debug = "false" *) output [0:3]Trace_Data_Byte_Enable;
  (* mark_debug = "false" *) output Trace_Data_Access;
  (* mark_debug = "false" *) output Trace_Data_Read;
  (* mark_debug = "false" *) output Trace_Data_Write;
  (* mark_debug = "false" *) output Trace_DCache_Req;
  (* mark_debug = "false" *) output Trace_DCache_Hit;
  (* mark_debug = "false" *) output Trace_DCache_Rdy;
  (* mark_debug = "false" *) output Trace_DCache_Read;
  (* mark_debug = "false" *) output Trace_ICache_Req;
  (* mark_debug = "false" *) output Trace_ICache_Hit;
  (* mark_debug = "false" *) output Trace_ICache_Rdy;
  (* mark_debug = "false" *) output Trace_OF_PipeRun;
  (* mark_debug = "false" *) output Trace_EX_PipeRun;
  (* mark_debug = "false" *) output Trace_MEM_PipeRun;
  (* mark_debug = "false" *) output Trace_MB_Halted;
  (* mark_debug = "false" *) output Trace_Jump_Hit;
  output M0_AXIS_TLAST;
  output [31:0]M0_AXIS_TDATA;
  output M0_AXIS_TVALID;
  input M0_AXIS_TREADY;
  output M1_AXIS_TLAST;
  output [31:0]M1_AXIS_TDATA;
  output M1_AXIS_TVALID;
  input M1_AXIS_TREADY;
  output M2_AXIS_TLAST;
  output [31:0]M2_AXIS_TDATA;
  output M2_AXIS_TVALID;
  input M2_AXIS_TREADY;
  output M3_AXIS_TLAST;
  output [31:0]M3_AXIS_TDATA;
  output M3_AXIS_TVALID;
  input M3_AXIS_TREADY;
  output M4_AXIS_TLAST;
  output [31:0]M4_AXIS_TDATA;
  output M4_AXIS_TVALID;
  input M4_AXIS_TREADY;
  output M5_AXIS_TLAST;
  output [31:0]M5_AXIS_TDATA;
  output M5_AXIS_TVALID;
  input M5_AXIS_TREADY;
  output M6_AXIS_TLAST;
  output [31:0]M6_AXIS_TDATA;
  output M6_AXIS_TVALID;
  input M6_AXIS_TREADY;
  output M7_AXIS_TLAST;
  output [31:0]M7_AXIS_TDATA;
  output M7_AXIS_TVALID;
  input M7_AXIS_TREADY;
  output M8_AXIS_TLAST;
  output [31:0]M8_AXIS_TDATA;
  output M8_AXIS_TVALID;
  input M8_AXIS_TREADY;
  output M9_AXIS_TLAST;
  output [31:0]M9_AXIS_TDATA;
  output M9_AXIS_TVALID;
  input M9_AXIS_TREADY;
  output M10_AXIS_TLAST;
  output [31:0]M10_AXIS_TDATA;
  output M10_AXIS_TVALID;
  input M10_AXIS_TREADY;
  output M11_AXIS_TLAST;
  output [31:0]M11_AXIS_TDATA;
  output M11_AXIS_TVALID;
  input M11_AXIS_TREADY;
  output M12_AXIS_TLAST;
  output [31:0]M12_AXIS_TDATA;
  output M12_AXIS_TVALID;
  input M12_AXIS_TREADY;
  output M13_AXIS_TLAST;
  output [31:0]M13_AXIS_TDATA;
  output M13_AXIS_TVALID;
  input M13_AXIS_TREADY;
  output M14_AXIS_TLAST;
  output [31:0]M14_AXIS_TDATA;
  output M14_AXIS_TVALID;
  input M14_AXIS_TREADY;
  output M15_AXIS_TLAST;
  output [31:0]M15_AXIS_TDATA;
  output M15_AXIS_TVALID;
  input M15_AXIS_TREADY;
  input S0_AXIS_TLAST;
  input [31:0]S0_AXIS_TDATA;
  input S0_AXIS_TVALID;
  output S0_AXIS_TREADY;
  input S1_AXIS_TLAST;
  input [31:0]S1_AXIS_TDATA;
  input S1_AXIS_TVALID;
  output S1_AXIS_TREADY;
  input S2_AXIS_TLAST;
  input [31:0]S2_AXIS_TDATA;
  input S2_AXIS_TVALID;
  output S2_AXIS_TREADY;
  input S3_AXIS_TLAST;
  input [31:0]S3_AXIS_TDATA;
  input S3_AXIS_TVALID;
  output S3_AXIS_TREADY;
  input S4_AXIS_TLAST;
  input [31:0]S4_AXIS_TDATA;
  input S4_AXIS_TVALID;
  output S4_AXIS_TREADY;
  input S5_AXIS_TLAST;
  input [31:0]S5_AXIS_TDATA;
  input S5_AXIS_TVALID;
  output S5_AXIS_TREADY;
  input S6_AXIS_TLAST;
  input [31:0]S6_AXIS_TDATA;
  input S6_AXIS_TVALID;
  output S6_AXIS_TREADY;
  input S7_AXIS_TLAST;
  input [31:0]S7_AXIS_TDATA;
  input S7_AXIS_TVALID;
  output S7_AXIS_TREADY;
  input S8_AXIS_TLAST;
  input [31:0]S8_AXIS_TDATA;
  input S8_AXIS_TVALID;
  output S8_AXIS_TREADY;
  input S9_AXIS_TLAST;
  input [31:0]S9_AXIS_TDATA;
  input S9_AXIS_TVALID;
  output S9_AXIS_TREADY;
  input S10_AXIS_TLAST;
  input [31:0]S10_AXIS_TDATA;
  input S10_AXIS_TVALID;
  output S10_AXIS_TREADY;
  input S11_AXIS_TLAST;
  input [31:0]S11_AXIS_TDATA;
  input S11_AXIS_TVALID;
  output S11_AXIS_TREADY;
  input S12_AXIS_TLAST;
  input [31:0]S12_AXIS_TDATA;
  input S12_AXIS_TVALID;
  output S12_AXIS_TREADY;
  input S13_AXIS_TLAST;
  input [31:0]S13_AXIS_TDATA;
  input S13_AXIS_TVALID;
  output S13_AXIS_TREADY;
  input S14_AXIS_TLAST;
  input [31:0]S14_AXIS_TDATA;
  input S14_AXIS_TVALID;
  output S14_AXIS_TREADY;
  input S15_AXIS_TLAST;
  input [31:0]S15_AXIS_TDATA;
  input S15_AXIS_TVALID;
  output S15_AXIS_TREADY;
  output [0:0]M_AXI_IC_AWID;
  output [31:0]M_AXI_IC_AWADDR;
  output [7:0]M_AXI_IC_AWLEN;
  output [2:0]M_AXI_IC_AWSIZE;
  output [1:0]M_AXI_IC_AWBURST;
  output M_AXI_IC_AWLOCK;
  output [3:0]M_AXI_IC_AWCACHE;
  output [2:0]M_AXI_IC_AWPROT;
  output [3:0]M_AXI_IC_AWQOS;
  output M_AXI_IC_AWVALID;
  input M_AXI_IC_AWREADY;
  output [4:0]M_AXI_IC_AWUSER;
  output [1:0]M_AXI_IC_AWDOMAIN;
  output [2:0]M_AXI_IC_AWSNOOP;
  output [1:0]M_AXI_IC_AWBAR;
  output [31:0]M_AXI_IC_WDATA;
  output [3:0]M_AXI_IC_WSTRB;
  output M_AXI_IC_WLAST;
  output M_AXI_IC_WVALID;
  input M_AXI_IC_WREADY;
  output [0:0]M_AXI_IC_WUSER;
  input [0:0]M_AXI_IC_BID;
  input [1:0]M_AXI_IC_BRESP;
  input M_AXI_IC_BVALID;
  output M_AXI_IC_BREADY;
  input [0:0]M_AXI_IC_BUSER;
  output M_AXI_IC_WACK;
  output [0:0]M_AXI_IC_ARID;
  output [31:0]M_AXI_IC_ARADDR;
  output [7:0]M_AXI_IC_ARLEN;
  output [2:0]M_AXI_IC_ARSIZE;
  output [1:0]M_AXI_IC_ARBURST;
  output M_AXI_IC_ARLOCK;
  output [3:0]M_AXI_IC_ARCACHE;
  output [2:0]M_AXI_IC_ARPROT;
  output [3:0]M_AXI_IC_ARQOS;
  output M_AXI_IC_ARVALID;
  input M_AXI_IC_ARREADY;
  output [4:0]M_AXI_IC_ARUSER;
  output [1:0]M_AXI_IC_ARDOMAIN;
  output [3:0]M_AXI_IC_ARSNOOP;
  output [1:0]M_AXI_IC_ARBAR;
  input [0:0]M_AXI_IC_RID;
  input [31:0]M_AXI_IC_RDATA;
  input [1:0]M_AXI_IC_RRESP;
  input M_AXI_IC_RLAST;
  input M_AXI_IC_RVALID;
  output M_AXI_IC_RREADY;
  input [0:0]M_AXI_IC_RUSER;
  output M_AXI_IC_RACK;
  input M_AXI_IC_ACVALID;
  input [31:0]M_AXI_IC_ACADDR;
  input [3:0]M_AXI_IC_ACSNOOP;
  input [2:0]M_AXI_IC_ACPROT;
  output M_AXI_IC_ACREADY;
  output M_AXI_IC_CRVALID;
  output [4:0]M_AXI_IC_CRRESP;
  input M_AXI_IC_CRREADY;
  output M_AXI_IC_CDVALID;
  output [31:0]M_AXI_IC_CDDATA;
  output M_AXI_IC_CDLAST;
  input M_AXI_IC_CDREADY;
  output [0:0]M_AXI_DC_AWID;
  output [31:0]M_AXI_DC_AWADDR;
  output [7:0]M_AXI_DC_AWLEN;
  output [2:0]M_AXI_DC_AWSIZE;
  output [1:0]M_AXI_DC_AWBURST;
  output M_AXI_DC_AWLOCK;
  output [3:0]M_AXI_DC_AWCACHE;
  output [2:0]M_AXI_DC_AWPROT;
  output [3:0]M_AXI_DC_AWQOS;
  output M_AXI_DC_AWVALID;
  input M_AXI_DC_AWREADY;
  output [4:0]M_AXI_DC_AWUSER;
  output [1:0]M_AXI_DC_AWDOMAIN;
  output [2:0]M_AXI_DC_AWSNOOP;
  output [1:0]M_AXI_DC_AWBAR;
  output [31:0]M_AXI_DC_WDATA;
  output [3:0]M_AXI_DC_WSTRB;
  output M_AXI_DC_WLAST;
  output M_AXI_DC_WVALID;
  input M_AXI_DC_WREADY;
  output [0:0]M_AXI_DC_WUSER;
  input [1:0]M_AXI_DC_BRESP;
  input [0:0]M_AXI_DC_BID;
  input M_AXI_DC_BVALID;
  output M_AXI_DC_BREADY;
  input [0:0]M_AXI_DC_BUSER;
  output M_AXI_DC_WACK;
  output [0:0]M_AXI_DC_ARID;
  output [31:0]M_AXI_DC_ARADDR;
  output [7:0]M_AXI_DC_ARLEN;
  output [2:0]M_AXI_DC_ARSIZE;
  output [1:0]M_AXI_DC_ARBURST;
  output M_AXI_DC_ARLOCK;
  output [3:0]M_AXI_DC_ARCACHE;
  output [2:0]M_AXI_DC_ARPROT;
  output [3:0]M_AXI_DC_ARQOS;
  output M_AXI_DC_ARVALID;
  input M_AXI_DC_ARREADY;
  output [4:0]M_AXI_DC_ARUSER;
  output [1:0]M_AXI_DC_ARDOMAIN;
  output [3:0]M_AXI_DC_ARSNOOP;
  output [1:0]M_AXI_DC_ARBAR;
  input [0:0]M_AXI_DC_RID;
  input [31:0]M_AXI_DC_RDATA;
  input [1:0]M_AXI_DC_RRESP;
  input M_AXI_DC_RLAST;
  input M_AXI_DC_RVALID;
  output M_AXI_DC_RREADY;
  input [0:0]M_AXI_DC_RUSER;
  output M_AXI_DC_RACK;
  input M_AXI_DC_ACVALID;
  input [31:0]M_AXI_DC_ACADDR;
  input [3:0]M_AXI_DC_ACSNOOP;
  input [2:0]M_AXI_DC_ACPROT;
  output M_AXI_DC_ACREADY;
  output M_AXI_DC_CRVALID;
  output [4:0]M_AXI_DC_CRRESP;
  input M_AXI_DC_CRREADY;
  output M_AXI_DC_CDVALID;
  output [31:0]M_AXI_DC_CDDATA;
  output M_AXI_DC_CDLAST;
  input M_AXI_DC_CDREADY;

  wire [0:3]Byte_Enable;
  wire Clk;
  wire Config_Reg_En;
  wire DReady;
  wire D_AS;
  wire [0:31]Data_Addr;
  wire [0:31]Data_Read;
  wire Data_Read_Reg_En;
  wire [0:31]Data_Write;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_11_n_0;
  wire Dbg_TDO_INST_0_i_26_n_0;
  wire [0:7]Dbg_Trig_Out;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire I_AS;
  wire [0:31]Instr;
  wire [0:31]Instr_Addr;
  wire Interrupt;
  wire [31:0]M_AXI_DP_ARADDR;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_ARVALID;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_AWVALID;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire [31:0]M_AXI_DP_WDATA;
  wire M_AXI_DP_WREADY;
  wire M_AXI_DP_WVALID;
  wire MicroBlaze_Core_I_n_412;
  wire \Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ;
  wire Reset;
  wire [0:1]Wakeup;
  wire Write_Strobe;
  wire NLW_MicroBlaze_Core_I_DWait_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Dbg_Stop_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Hibernate_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Mb_Reset_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Pause_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Pause_Ack_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Scan_En_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Scan_Reset_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Sleep_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Suspend_UNCONNECTED;
  wire \NLW_MicroBlaze_Core_I_Using_FPGA.Native_UNCONNECTED ;
  wire NLW_MicroBlaze_Core_I_use_Reg_Neg_S_reg_UNCONNECTED;
  wire \NLW_MicroBlaze_Core_I_wb_instr_reg[31]_UNCONNECTED ;
  wire [359:0]NLW_MicroBlaze_Core_I_D_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_In_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_Out_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_In_UNCONNECTED;
  wire [1:1]NLW_MicroBlaze_Core_I_Dbg_Trig_Out_UNCONNECTED;
  wire [40:0]NLW_MicroBlaze_Core_I_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [0:1]NLW_MicroBlaze_Core_I_Reset_Mode_UNCONNECTED;

  LUT5 #(
    .INIT(32'h00000040)) 
    Dbg_TDO_INST_0_i_1
       (.I0(MicroBlaze_Core_I_n_412),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[7]),
        .I3(Dbg_Reg_En[4]),
        .I4(Dbg_Reg_En[5]),
        .O(\Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Dbg_TDO_INST_0_i_11
       (.I0(Dbg_Reg_En[7]),
        .I1(Dbg_Reg_En[4]),
        .I2(Dbg_Reg_En[0]),
        .I3(Dbg_Reg_En[2]),
        .O(Dbg_TDO_INST_0_i_11_n_0));
  LUT5 #(
    .INIT(32'h00004000)) 
    Dbg_TDO_INST_0_i_14
       (.I0(Dbg_Reg_En[1]),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[5]),
        .I3(Dbg_Reg_En[7]),
        .I4(Dbg_TDO_INST_0_i_26_n_0),
        .O(Config_Reg_En));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Dbg_TDO_INST_0_i_26
       (.I0(Dbg_Reg_En[3]),
        .I1(Dbg_Reg_En[4]),
        .I2(Dbg_Reg_En[0]),
        .I3(Dbg_Reg_En[2]),
        .O(Dbg_TDO_INST_0_i_26_n_0));
  LUT5 #(
    .INIT(32'h00001000)) 
    Dbg_TDO_INST_0_i_4
       (.I0(Dbg_Reg_En[1]),
        .I1(Dbg_Reg_En[3]),
        .I2(Dbg_Reg_En[5]),
        .I3(Dbg_Reg_En[6]),
        .I4(Dbg_TDO_INST_0_i_11_n_0),
        .O(Data_Read_Reg_En));
  ublaze_sopc_microblaze_0_0__MicroBlaze_Core MicroBlaze_Core_I
       (.Clk(Clk),
        .Config_Reg_En(Config_Reg_En),
        .D({NLW_MicroBlaze_Core_I_D_UNCONNECTED[359:358],I_AS,NLW_MicroBlaze_Core_I_D_UNCONNECTED[356:340],Instr_Addr[17],Instr_Addr[18],Instr_Addr[19],Instr_Addr[20],Instr_Addr[21],Instr_Addr[22],Instr_Addr[23],Instr_Addr[24],Instr_Addr[25],Instr_Addr[26],Instr_Addr[27],Instr_Addr[28],Instr_Addr[29],NLW_MicroBlaze_Core_I_D_UNCONNECTED[326:324],Data_Addr[1],NLW_MicroBlaze_Core_I_D_UNCONNECTED[322:308],Data_Addr[17],Data_Addr[18],Data_Addr[19],Data_Addr[20],Data_Addr[21],Data_Addr[22],Data_Addr[23],Data_Addr[24],Data_Addr[25],Data_Addr[26],Data_Addr[27],Data_Addr[28],Data_Addr[29],NLW_MicroBlaze_Core_I_D_UNCONNECTED[294:293],Data_Write[0],Data_Write[1],Data_Write[2],Data_Write[3],Data_Write[4],Data_Write[5],Data_Write[6],Data_Write[7],Data_Write[8],Data_Write[9],Data_Write[10],Data_Write[11],Data_Write[12],Data_Write[13],Data_Write[14],Data_Write[15],Data_Write[16],Data_Write[17],Data_Write[18],Data_Write[19],Data_Write[20],Data_Write[21],Data_Write[22],Data_Write[23],Data_Write[24],Data_Write[25],Data_Write[26],Data_Write[27],Data_Write[28],Data_Write[29],Data_Write[30],Data_Write[31],D_AS,NLW_MicroBlaze_Core_I_D_UNCONNECTED[259],Write_Strobe,Byte_Enable[0],Byte_Enable[1],Byte_Enable[2],Byte_Enable[3],M_AXI_DP_ARADDR,M_AXI_DP_AWVALID,M_AXI_DP_WDATA,NLW_MicroBlaze_Core_I_D_UNCONNECTED[188:185],M_AXI_DP_WVALID,M_AXI_DP_ARVALID,NLW_MicroBlaze_Core_I_D_UNCONNECTED[182:0]}),
        .DReady(DReady),
        .DWait(NLW_MicroBlaze_Core_I_DWait_UNCONNECTED),
        .Data_Read(Data_Read),
        .Data_Read_Reg_En(Data_Read_Reg_En),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(NLW_MicroBlaze_Core_I_Dbg_Stop_UNCONNECTED),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_In_UNCONNECTED[1:0]),
        .Dbg_Trig_Ack_Out(NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_Out_UNCONNECTED[1:0]),
        .Dbg_Trig_In(NLW_MicroBlaze_Core_I_Dbg_Trig_In_UNCONNECTED[1:0]),
        .Dbg_Trig_Out({NLW_MicroBlaze_Core_I_Dbg_Trig_Out_UNCONNECTED[1],Dbg_Trig_Out[1]}),
        .Dbg_Update(Dbg_Update),
        .Debug_Rst(Debug_Rst),
        .Hibernate(NLW_MicroBlaze_Core_I_Hibernate_UNCONNECTED),
        .IReady(IReady),
        .Instr(Instr),
        .Interrupt(Interrupt),
        .LOCKSTEP_Master_Out(NLW_MicroBlaze_Core_I_LOCKSTEP_Master_Out_UNCONNECTED[40:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .Mb_Reset(NLW_MicroBlaze_Core_I_Mb_Reset_UNCONNECTED),
        .Pause(NLW_MicroBlaze_Core_I_Pause_UNCONNECTED),
        .Pause_Ack(NLW_MicroBlaze_Core_I_Pause_Ack_UNCONNECTED),
        .Reset(Reset),
        .Reset_Mode(NLW_MicroBlaze_Core_I_Reset_Mode_UNCONNECTED[0:1]),
        .Scan_En(NLW_MicroBlaze_Core_I_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_MicroBlaze_Core_I_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_MicroBlaze_Core_I_Scan_Reset_Sel_UNCONNECTED),
        .\Serial_Dbg_Intf.control_reg_reg[8] (MicroBlaze_Core_I_n_412),
        .Sleep(NLW_MicroBlaze_Core_I_Sleep_UNCONNECTED),
        .Status_Reg_En(\Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ),
        .Suspend(NLW_MicroBlaze_Core_I_Suspend_UNCONNECTED),
        .\Using_FPGA.Native (\NLW_MicroBlaze_Core_I_Using_FPGA.Native_UNCONNECTED ),
        .Wakeup(Wakeup),
        .use_Reg_Neg_S_reg(NLW_MicroBlaze_Core_I_use_Reg_Neg_S_reg_UNCONNECTED),
        .\wb_instr_reg[31] (\NLW_MicroBlaze_Core_I_wb_instr_reg[31]_UNCONNECTED ));
endmodule

(* ORIG_REF_NAME = "MicroBlaze_Core" *) 
module ublaze_sopc_microblaze_0_0__MicroBlaze_Core
   (use_Reg_Neg_S_reg,
    \wb_instr_reg[31] ,
    \Using_FPGA.Native ,
    Pause_Ack,
    D,
    Sleep,
    LOCKSTEP_Master_Out,
    Hibernate,
    Suspend,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    Dbg_TDO,
    Clk,
    Dbg_Clk,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Pause,
    Dbg_Update,
    Dbg_Stop,
    Dbg_Capture,
    Reset,
    Mb_Reset,
    Debug_Rst,
    Interrupt,
    M_AXI_DP_BVALID,
    M_AXI_DP_RVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    M_AXI_DP_ARREADY,
    Reset_Mode,
    Data_Read_Reg_En,
    Config_Reg_En,
    IReady,
    Dbg_Shift,
    DReady,
    DWait,
    Dbg_Reg_En,
    Status_Reg_En,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    Instr,
    Dbg_TDI,
    M_AXI_DP_RDATA,
    Data_Read,
    Wakeup);
  output use_Reg_Neg_S_reg;
  output \wb_instr_reg[31] ;
  output \Using_FPGA.Native ;
  output Pause_Ack;
  output [359:0]D;
  output Sleep;
  output [40:0]LOCKSTEP_Master_Out;
  output Hibernate;
  output Suspend;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output \Serial_Dbg_Intf.control_reg_reg[8] ;
  output Dbg_TDO;
  input Clk;
  input Dbg_Clk;
  input [1:0]Dbg_Trig_Ack_In;
  input [1:0]Dbg_Trig_Out;
  input Pause;
  input Dbg_Update;
  input Dbg_Stop;
  input Dbg_Capture;
  input Reset;
  input Mb_Reset;
  input Debug_Rst;
  input Interrupt;
  input M_AXI_DP_BVALID;
  input M_AXI_DP_RVALID;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input M_AXI_DP_ARREADY;
  input [0:1]Reset_Mode;
  input Data_Read_Reg_En;
  input Config_Reg_En;
  input IReady;
  input Dbg_Shift;
  input DReady;
  input DWait;
  input [0:7]Dbg_Reg_En;
  input Status_Reg_En;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input [0:31]Instr;
  input Dbg_TDI;
  input [31:0]M_AXI_DP_RDATA;
  input [0:31]Data_Read;
  input [0:1]Wakeup;

  wire Clk;
  wire Config_Reg_En;
  wire [359:0]D;
  wire DReady;
  wire [0:31]Data_Read;
  wire Data_Read_Reg_En;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire [1:0]Dbg_Trig_Out;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire [0:31]Instr;
  wire Interrupt;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire Reset;
  wire \Serial_Dbg_Intf.control_reg_reg[8] ;
  wire Status_Reg_En;
  wire Synced;
  wire [0:1]Wakeup;
  wire external_interrupt;
  wire reset_temp__0;
  wire sync_reset;
  wire [0:1]wakeup_i;
  wire \NLW_Performance.Core_DWait_UNCONNECTED ;
  wire \NLW_Performance.Core_Dbg_Stop_UNCONNECTED ;
  wire \NLW_Performance.Core_Hibernate_UNCONNECTED ;
  wire \NLW_Performance.Core_Pause_UNCONNECTED ;
  wire \NLW_Performance.Core_Pause_Ack_UNCONNECTED ;
  wire \NLW_Performance.Core_Scan_En_UNCONNECTED ;
  wire \NLW_Performance.Core_Scan_Reset_UNCONNECTED ;
  wire \NLW_Performance.Core_Scan_Reset_Sel_UNCONNECTED ;
  wire \NLW_Performance.Core_Sleep_UNCONNECTED ;
  wire \NLW_Performance.Core_Suspend_UNCONNECTED ;
  wire [359:0]\NLW_Performance.Core_D_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_In_UNCONNECTED ;
  wire [1:1]\NLW_Performance.Core_Dbg_Trig_Out_UNCONNECTED ;
  wire [0:0]\NLW_Performance.Core_E_UNCONNECTED ;
  wire [40:0]\NLW_Performance.Core_LOCKSTEP_Master_Out_UNCONNECTED ;
  wire [0:1]\NLW_Performance.Core_Reset_Mode_UNCONNECTED ;
  wire [0:0]\NLW_Performance.Core_Using_FPGA.Native_UNCONNECTED ;
  wire [0:0]\NLW_Performance.Core_wb_instr_reg[31]_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MicroBlaze_GTi \Performance.Core 
       (.Clk(Clk),
        .Config_Reg_En(Config_Reg_En),
        .D({\NLW_Performance.Core_D_UNCONNECTED [359:358],D[357],\NLW_Performance.Core_D_UNCONNECTED [356:340],D[339:327],\NLW_Performance.Core_D_UNCONNECTED [326:324],D[323],\NLW_Performance.Core_D_UNCONNECTED [322:308],D[307:295],\NLW_Performance.Core_D_UNCONNECTED [294:293],D[292:260],\NLW_Performance.Core_D_UNCONNECTED [259],D[258:189],\NLW_Performance.Core_D_UNCONNECTED [188:185],D[184:183],\NLW_Performance.Core_D_UNCONNECTED [182:0]}),
        .DReady(DReady),
        .DWait(\NLW_Performance.Core_DWait_UNCONNECTED ),
        .Data_Read(Data_Read),
        .Data_Read_Reg_En(Data_Read_Reg_En),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(\NLW_Performance.Core_Dbg_Stop_UNCONNECTED ),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(\NLW_Performance.Core_Dbg_Trig_Ack_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Ack_Out(\NLW_Performance.Core_Dbg_Trig_Ack_Out_UNCONNECTED [1:0]),
        .Dbg_Trig_In(\NLW_Performance.Core_Dbg_Trig_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Out({\NLW_Performance.Core_Dbg_Trig_Out_UNCONNECTED [1],Dbg_Trig_Out[0]}),
        .Dbg_Update(Dbg_Update),
        .E(\NLW_Performance.Core_E_UNCONNECTED [0]),
        .Hibernate(\NLW_Performance.Core_Hibernate_UNCONNECTED ),
        .IReady(IReady),
        .Instr(Instr),
        .LOCKSTEP_Master_Out(\NLW_Performance.Core_LOCKSTEP_Master_Out_UNCONNECTED [40:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .Pause(\NLW_Performance.Core_Pause_UNCONNECTED ),
        .Pause_Ack(\NLW_Performance.Core_Pause_Ack_UNCONNECTED ),
        .Reset_Mode(\NLW_Performance.Core_Reset_Mode_UNCONNECTED [0:1]),
        .Scan_En(\NLW_Performance.Core_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Performance.Core_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Performance.Core_Scan_Reset_Sel_UNCONNECTED ),
        .\Serial_Dbg_Intf.control_reg_reg[8] (\Serial_Dbg_Intf.control_reg_reg[8] ),
        .Sleep(\NLW_Performance.Core_Sleep_UNCONNECTED ),
        .Status_Reg_En(Status_Reg_En),
        .Suspend(\NLW_Performance.Core_Suspend_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Performance.Core_Using_FPGA.Native_UNCONNECTED [0]),
        .external_interrupt(external_interrupt),
        .sync_reset(sync_reset),
        .wakeup_i(wakeup_i),
        .\wb_instr_reg[31] (\NLW_Performance.Core_wb_instr_reg[31]_UNCONNECTED [0]));
  ublaze_sopc_microblaze_0_0__mb_sync_bit Reset_DFF
       (.Clk(Clk),
        .out(Synced),
        .reset_temp__0(reset_temp__0));
  FDRE #(
    .INIT(1'b1)) 
    \Use_Async_Reset.sync_reset_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(Synced),
        .Q(sync_reset),
        .R(1'b0));
  ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized1 \Using_Async_Interrupt.Interrupt_DFF 
       (.Clk(Clk),
        .Interrupt(Interrupt),
        .external_interrupt(external_interrupt));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_0 \Using_Async_Wakeup_0.Wakeup_DFF 
       (.Clk(Clk),
        .SR(sync_reset),
        .Wakeup(Wakeup[0]),
        .out(wakeup_i[0]));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_1 \Using_Async_Wakeup_1.Wakeup_DFF 
       (.Clk(Clk),
        .SR(sync_reset),
        .Wakeup(Wakeup[1]),
        .out(wakeup_i[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'hE)) 
    reset_temp
       (.I0(Reset),
        .I1(Debug_Rst),
        .O(reset_temp__0));
endmodule

(* ORIG_REF_NAME = "MicroBlaze_GTi" *) 
module ublaze_sopc_microblaze_0_0__MicroBlaze_GTi
   (E,
    \wb_instr_reg[31] ,
    \Using_FPGA.Native ,
    Pause_Ack,
    D,
    Sleep,
    LOCKSTEP_Master_Out,
    Hibernate,
    Suspend,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    Dbg_TDO,
    sync_reset,
    Clk,
    Dbg_Clk,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Pause,
    Dbg_Update,
    Dbg_Stop,
    Dbg_Capture,
    external_interrupt,
    M_AXI_DP_BVALID,
    M_AXI_DP_RVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    M_AXI_DP_ARREADY,
    Reset_Mode,
    Data_Read_Reg_En,
    Config_Reg_En,
    IReady,
    Dbg_Shift,
    DReady,
    DWait,
    Dbg_Reg_En,
    wakeup_i,
    Status_Reg_En,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    Instr,
    Dbg_TDI,
    M_AXI_DP_RDATA,
    Data_Read);
  output [0:0]E;
  output [0:0]\wb_instr_reg[31] ;
  output [0:0]\Using_FPGA.Native ;
  output Pause_Ack;
  output [359:0]D;
  output Sleep;
  output [40:0]LOCKSTEP_Master_Out;
  output Hibernate;
  output Suspend;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output \Serial_Dbg_Intf.control_reg_reg[8] ;
  output Dbg_TDO;
  input sync_reset;
  input Clk;
  input Dbg_Clk;
  input [1:0]Dbg_Trig_Ack_In;
  input [1:0]Dbg_Trig_Out;
  input Pause;
  input Dbg_Update;
  input Dbg_Stop;
  input Dbg_Capture;
  input external_interrupt;
  input M_AXI_DP_BVALID;
  input M_AXI_DP_RVALID;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input M_AXI_DP_ARREADY;
  input [0:1]Reset_Mode;
  input Data_Read_Reg_En;
  input Config_Reg_En;
  input IReady;
  input Dbg_Shift;
  input DReady;
  input DWait;
  input [0:7]Dbg_Reg_En;
  input [0:1]wakeup_i;
  input Status_Reg_En;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input [0:31]Instr;
  input Dbg_TDI;
  input [31:0]M_AXI_DP_RDATA;
  input [0:31]Data_Read;

  wire [0:0]\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ;
  wire [0:1]\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel ;
  wire \Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ;
  wire Clk;
  wire Config_Reg_En;
  wire [359:0]\^D ;
  wire DReady;
  wire Data_Flow_I_n_213;
  wire Data_Flow_I_n_214;
  wire Data_Flow_I_n_215;
  wire Data_Flow_I_n_216;
  wire Data_Flow_I_n_217;
  wire Data_Flow_I_n_218;
  wire Data_Flow_I_n_219;
  wire Data_Flow_I_n_220;
  wire Data_Flow_I_n_221;
  wire Data_Flow_I_n_222;
  wire Data_Flow_I_n_223;
  wire Data_Flow_I_n_224;
  wire Data_Flow_I_n_225;
  wire Data_Flow_I_n_226;
  wire Data_Flow_I_n_227;
  wire Data_Flow_I_n_228;
  wire Data_Flow_I_n_229;
  wire Data_Flow_I_n_33;
  wire \Data_Flow_Logic_I/R ;
  wire \Data_Flow_Logic_I/WB_MEM_Result0 ;
  wire [0:31]Data_Read;
  wire Data_Read_Reg_En;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire [1:0]Dbg_Trig_Out;
  wire Dbg_Update;
  wire Decode_I_n_258;
  wire Decode_I_n_326;
  wire Decode_I_n_327;
  wire Decode_I_n_331;
  wire Decode_I_n_332;
  wire Decode_I_n_366;
  wire Decode_I_n_367;
  wire Decode_I_n_368;
  wire Decode_I_n_369;
  wire Decode_I_n_370;
  wire Decode_I_n_371;
  wire Decode_I_n_372;
  wire Decode_I_n_373;
  wire Decode_I_n_374;
  wire Decode_I_n_375;
  wire Decode_I_n_376;
  wire Decode_I_n_377;
  wire Decode_I_n_378;
  wire Decode_I_n_379;
  wire Decode_I_n_380;
  wire Decode_I_n_381;
  wire Decode_I_n_382;
  wire Decode_I_n_383;
  wire Decode_I_n_384;
  wire Decode_I_n_385;
  wire Decode_I_n_386;
  wire Decode_I_n_387;
  wire Decode_I_n_388;
  wire Decode_I_n_389;
  wire Decode_I_n_390;
  wire Decode_I_n_391;
  wire Decode_I_n_392;
  wire Decode_I_n_393;
  wire Decode_I_n_394;
  wire Decode_I_n_395;
  wire Decode_I_n_396;
  wire Decode_I_n_397;
  wire Decode_I_n_398;
  wire Decode_I_n_399;
  wire Decode_I_n_400;
  wire Decode_I_n_401;
  wire Decode_I_n_402;
  wire Decode_I_n_403;
  wire Decode_I_n_404;
  wire Decode_I_n_405;
  wire Decode_I_n_406;
  wire Decode_I_n_407;
  wire Decode_I_n_408;
  wire Decode_I_n_409;
  wire Decode_I_n_410;
  wire Decode_I_n_411;
  wire Decode_I_n_412;
  wire Decode_I_n_415;
  wire Decode_I_n_416;
  wire Decode_I_n_417;
  wire Decode_I_n_418;
  wire Decode_I_n_419;
  wire Decode_I_n_420;
  wire Decode_I_n_423;
  wire Decode_I_n_426;
  wire Decode_I_n_427;
  wire Decode_I_n_430;
  wire Decode_I_n_431;
  wire Decode_I_n_432;
  wire Decode_I_n_433;
  wire Decode_I_n_434;
  wire Decode_I_n_435;
  wire Decode_I_n_436;
  wire Decode_I_n_437;
  wire Decode_I_n_438;
  wire Decode_I_n_439;
  wire Decode_I_n_440;
  wire Decode_I_n_441;
  wire Decode_I_n_442;
  wire Decode_I_n_443;
  wire Decode_I_n_444;
  wire Decode_I_n_445;
  wire Decode_I_n_446;
  wire Decode_I_n_447;
  wire Decode_I_n_448;
  wire Decode_I_n_449;
  wire Decode_I_n_450;
  wire Decode_I_n_451;
  wire Decode_I_n_452;
  wire Decode_I_n_453;
  wire Decode_I_n_454;
  wire Decode_I_n_455;
  wire Decode_I_n_456;
  wire Decode_I_n_457;
  wire Decode_I_n_458;
  wire Decode_I_n_459;
  wire Decode_I_n_460;
  wire Decode_I_n_461;
  wire Decode_I_n_462;
  wire Decode_I_n_463;
  wire Decode_I_n_464;
  wire Decode_I_n_465;
  wire Decode_I_n_466;
  wire [0:0]\^E ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:31]EX_Fwd;
  wire IB_Ready;
  wire IReady;
  wire [0:31]Instr;
  wire [40:0]\^LOCKSTEP_Master_Out ;
  wire [0:30]MEM_Fwd;
  wire [0:31]MEM_PC;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire \Operand_Select_I/I0 ;
  wire \Operand_Select_I/I1 ;
  wire [0:15]\Operand_Select_I/imm_reg ;
  wire [0:31]\Operand_Select_I/of_op2 ;
  wire [0:31]\Operand_Select_I/of_op3 ;
  wire \PreFetch_Buffer_I1/I139_out ;
  wire [0:0]\PreFetch_Buffer_I1/if_predecode ;
  wire \PreFetch_Buffer_I1/p_1_in49_in ;
  wire SRI;
  wire \Serial_Dbg_Intf.control_reg_reg[8] ;
  wire \Shift_Logic_Module_I/I4 ;
  wire \^Sleep ;
  wire Sleep_Out;
  wire Status_Reg_En;
  wire \Use_DBUS.DAXI_Interface_I1_n_13 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_14 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_15 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_16 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_17 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_18 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_19 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_20 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_21 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_22 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_23 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_24 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_25 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_26 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_27 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_28 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_29 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_30 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_31 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_32 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_33 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_34 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_35 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_36 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_37 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_40 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_41 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_49 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_50 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_52 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_54 ;
  wire [0:0]\^Using_FPGA.Native ;
  wire active_access;
  wire active_access_d1;
  wire dbg_clean_stop;
  wire dbg_stop_i;
  wire ex_Exception_Taken;
  wire ex_Interrupt_i;
  wire [28:30]ex_MSR;
  wire ex_Take_Intr_or_Exc;
  wire ex_alu_carry;
  wire [0:1]ex_alu_op;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [30:31]ex_databus_addr;
  wire ex_doublet_access;
  wire ex_exception_no_load_store_mask;
  wire ex_move_to_MSR_instr;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire [0:31]ex_op1_i;
  wire ex_op1_neg;
  wire [0:31]ex_op3;
  wire ex_reverse_mem_access;
  wire [0:1]ex_sext_op;
  wire ex_swap_byte_instr;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire \exception_registers_I1/I1 ;
  wire external_interrupt;
  wire [0:31]gpr_op1;
  wire [0:31]gpr_op2;
  wire [0:31]gpr_op3;
  wire [0:31]ib_data;
  wire [3:3]if_sel_input;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire mem_Exception_Taken;
  wire [28:30]mem_MSR;
  wire mem_byte_access;
  wire mem_databus_access;
  wire mem_doublet_access;
  wire [1:31]mem_ex_result;
  wire mem_sel_msr;
  wire [28:30]of_MSR;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire [0:31]of_pc;
  wire of_write_imm_reg;
  wire p_1_out;
  wire p_44_out;
  wire p_4_out__0;
  wire [8:31]swap_result;
  wire [0:7]swap_result_reg;
  wire sync_reset;
  wire [0:1]wakeup_i;
  wire wb_Halted;
  wire wb_MSR_Clear_IE;
  wire wb_byte_access;
  wire [24:31]wb_databus_steered_read_data;
  wire [0:31]wb_dlmb_valid_read_data;
  wire [0:15]wb_excep_return_addr;
  wire wb_gpr_wr_dbg;
  wire [0:0]\^wb_instr_reg[31] ;
  wire [0:15]wb_mem_result;
  wire wb_pc_valid;
  wire wb_piperun;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire NLW_Data_Flow_I_DI_UNCONNECTED;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2930]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2931]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2932]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2933]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2934]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2935]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2936]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2937]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2938]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2939]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2940]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2941]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2942]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2943]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2944]_UNCONNECTED ;
  wire NLW_Data_Flow_I_ex_op1_zero_UNCONNECTED;
  wire [61:16]\NLW_Data_Flow_I_Data_Addr[0]_UNCONNECTED ;
  wire NLW_Decode_I_DWait_UNCONNECTED;
  wire NLW_Decode_I_Hibernate_UNCONNECTED;
  wire NLW_Decode_I_Pause_UNCONNECTED;
  wire NLW_Decode_I_Pause_Ack_UNCONNECTED;
  wire NLW_Decode_I_Sleep_Decode_UNCONNECTED;
  wire NLW_Decode_I_Suspend_UNCONNECTED;
  wire NLW_Decode_I_ex_op1_zero_UNCONNECTED;
  wire NLW_Decode_I_lopt_3_UNCONNECTED;
  wire NLW_Decode_I_mem_databus_read_UNCONNECTED;
  wire NLW_Decode_I_mem_databus_ready_UNCONNECTED;
  wire NLW_Decode_I_mem_databus_write_UNCONNECTED;
  wire NLW_Decode_I_of_pause_UNCONNECTED;
  wire [1:0]NLW_Decode_I_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [0:1]NLW_Decode_I_Reset_Mode_UNCONNECTED;
  wire [161:1]NLW_Decode_I_mb_halted_1_reg_UNCONNECTED;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Stop_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Pause_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_En_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_Sel_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Sleep_Decode_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_of_pause_UNCONNECTED ;
  wire [3:3]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_D_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_In_UNCONNECTED ;
  wire [1:1]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Out_UNCONNECTED ;
  wire [34:33]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_LOCKSTEP_Master_Out_UNCONNECTED ;
  wire [0:1]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Reset_Mode_UNCONNECTED ;
  wire NLW_mem_databus_ready_sel_carry_or_lopt_UNCONNECTED;
  wire NLW_mem_databus_ready_sel_carry_or_mem_databus_ready_UNCONNECTED;

  assign D[357] = \^D [357];
  assign D[339:327] = \^D [339:327];
  assign D[323] = \^D [323];
  assign D[307:295] = \^D [307:295];
  assign D[292:260] = \^D [292:260];
  assign D[258:189] = \^D [258:189];
  assign D[184:183] = \^D [184:183];
  ublaze_sopc_microblaze_0_0__Data_Flow_gti Data_Flow_I
       (.ADDRD(\^D [116:112]),
        .Clk(Clk),
        .D({\Operand_Select_I/I0 ,Decode_I_n_366,Decode_I_n_367,Decode_I_n_368,Decode_I_n_369,Decode_I_n_370,Decode_I_n_371,Decode_I_n_372,Decode_I_n_373,Decode_I_n_374,Decode_I_n_375,Decode_I_n_376,Decode_I_n_377,Decode_I_n_378,Decode_I_n_379,Decode_I_n_380,Decode_I_n_381,Decode_I_n_382,Decode_I_n_383,Decode_I_n_384,Decode_I_n_385,Decode_I_n_386,Decode_I_n_387,Decode_I_n_388,Decode_I_n_389,Decode_I_n_390,Decode_I_n_391,Decode_I_n_392,Decode_I_n_393,Decode_I_n_394,Decode_I_n_395,Decode_I_n_396}),
        .DI(NLW_Data_Flow_I_DI_UNCONNECTED),
        .\Data_Addr[0] ({\^D [324:295],\NLW_Data_Flow_I_Data_Addr[0]_UNCONNECTED [61:60],\^D [257:254],\^D [220:189],\NLW_Data_Flow_I_Data_Addr[0]_UNCONNECTED [23:20],\^D [149],\NLW_Data_Flow_I_Data_Addr[0]_UNCONNECTED [18:16],\^D [92:77]}),
        .E(of_write_imm_reg),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .EX_Fwd(EX_Fwd),
        .\EX_Op2_reg[0] ({\Operand_Select_I/imm_reg [0],\Operand_Select_I/imm_reg [1],\Operand_Select_I/imm_reg [2],\Operand_Select_I/imm_reg [3],\Operand_Select_I/imm_reg [4],\Operand_Select_I/imm_reg [5],\Operand_Select_I/imm_reg [6],\Operand_Select_I/imm_reg [7],\Operand_Select_I/imm_reg [8],\Operand_Select_I/imm_reg [9],\Operand_Select_I/imm_reg [10],\Operand_Select_I/imm_reg [11],\Operand_Select_I/imm_reg [12],\Operand_Select_I/imm_reg [13],\Operand_Select_I/imm_reg [14],\Operand_Select_I/imm_reg [15]}),
        .\EX_Sext_Op_reg[0] ({ex_sext_op[0],ex_sext_op[1]}),
        .GPR_Op1(gpr_op1),
        .GPR_Op2(gpr_op2),
        .GPR_Op3(gpr_op3),
        .I1(\Operand_Select_I/I1 ),
        .I1_0(\exception_registers_I1/I1 ),
        .LO(ex_alu_carry),
        .\LOCKSTEP_Out_reg[2915] (\^D [148]),
        .\LOCKSTEP_Out_reg[2916] (\^D [147]),
        .\LOCKSTEP_Out_reg[2917] (\^D [146]),
        .\LOCKSTEP_Out_reg[2918] (\^D [145]),
        .\LOCKSTEP_Out_reg[2919] (\^D [144]),
        .\LOCKSTEP_Out_reg[2920] (\^D [143]),
        .\LOCKSTEP_Out_reg[2921] (\^D [142]),
        .\LOCKSTEP_Out_reg[2922] (\^D [141]),
        .\LOCKSTEP_Out_reg[2923] (\^D [140]),
        .\LOCKSTEP_Out_reg[2924] (\^D [139]),
        .\LOCKSTEP_Out_reg[2925] (\^D [138]),
        .\LOCKSTEP_Out_reg[2926] (\^D [137]),
        .\LOCKSTEP_Out_reg[2927] (\^D [136]),
        .\LOCKSTEP_Out_reg[2928] (\^D [135]),
        .\LOCKSTEP_Out_reg[2929] (\^D [134]),
        .\LOCKSTEP_Out_reg[2930] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2930]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2931] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2931]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2932] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2932]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2933] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2933]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2934] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2934]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2935] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2935]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2936] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2936]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2937] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2937]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2938] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2938]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2939] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2939]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2940] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2940]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2941] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2941]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2942] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2942]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2943] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2943]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2944] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2944]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3007] ({wb_excep_return_addr[0],wb_excep_return_addr[1],wb_excep_return_addr[2],wb_excep_return_addr[3],wb_excep_return_addr[4],wb_excep_return_addr[5],wb_excep_return_addr[6],wb_excep_return_addr[7],wb_excep_return_addr[8],wb_excep_return_addr[9],wb_excep_return_addr[10],wb_excep_return_addr[11],wb_excep_return_addr[12],wb_excep_return_addr[13],wb_excep_return_addr[14],wb_excep_return_addr[15]}),
        .\LOCKSTEP_Out_reg[3007]_0 ({wb_mem_result[0],wb_mem_result[1],wb_mem_result[2],wb_mem_result[3],wb_mem_result[4],wb_mem_result[5],wb_mem_result[6],wb_mem_result[7],wb_mem_result[8],wb_mem_result[9],wb_mem_result[10],wb_mem_result[11],wb_mem_result[12],wb_mem_result[13],wb_mem_result[14],wb_mem_result[15]}),
        .\LOCKSTEP_Out_reg[3031] ({\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [0],\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [1]}),
        .\MEM_DataBus_Write_Data_reg[24] ({ex_op3[0],ex_op3[1],ex_op3[2],ex_op3[3],ex_op3[4],ex_op3[5],ex_op3[6],ex_op3[7],ex_op3[8],ex_op3[9],ex_op3[10],ex_op3[11],ex_op3[12],ex_op3[13],ex_op3[14],ex_op3[15],ex_op3[16],ex_op3[17],ex_op3[18],ex_op3[19],ex_op3[20],ex_op3[21],ex_op3[22],ex_op3[23],ex_op3[24],ex_op3[25],ex_op3[26],ex_op3[27],ex_op3[28],ex_op3[29],ex_op3[30],ex_op3[31]}),
        .MEM_Fwd({MEM_Fwd[0],MEM_Fwd[28],MEM_Fwd[29],MEM_Fwd[30]}),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (Decode_I_n_434),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_40 ),
        .Q({ex_alu_op[0],ex_alu_op[1]}),
        .R(\Data_Flow_Logic_I/R ),
        .SR(\Data_Flow_Logic_I/WB_MEM_Result0 ),
        .\Using_FPGA.Native ({ex_op1_i[0],ex_op1_i[1],ex_op1_i[2],ex_op1_i[3],ex_op1_i[4],ex_op1_i[5],ex_op1_i[6],ex_op1_i[7],ex_op1_i[8],ex_op1_i[9],ex_op1_i[10],ex_op1_i[11],ex_op1_i[12],ex_op1_i[13],ex_op1_i[14],ex_op1_i[15],ex_op1_i[16],ex_op1_i[17],ex_op1_i[18],ex_op1_i[19],ex_op1_i[20],ex_op1_i[21],ex_op1_i[22],ex_op1_i[23],ex_op1_i[24],ex_op1_i[25],ex_op1_i[26],ex_op1_i[27],ex_op1_i[28],ex_op1_i[29],ex_op1_i[30],ex_op1_i[31]}),
        .\Using_FPGA.Native_0 (Data_Flow_I_n_33),
        .\Using_FPGA.Native_1 (ex_op1_neg),
        .\Using_FPGA.Native_10 (Decode_I_n_456),
        .\Using_FPGA.Native_11 (Decode_I_n_455),
        .\Using_FPGA.Native_12 (Decode_I_n_454),
        .\Using_FPGA.Native_13 (Decode_I_n_453),
        .\Using_FPGA.Native_14 (Decode_I_n_452),
        .\Using_FPGA.Native_15 (Decode_I_n_451),
        .\Using_FPGA.Native_16 (Decode_I_n_450),
        .\Using_FPGA.Native_17 (Decode_I_n_449),
        .\Using_FPGA.Native_18 (Decode_I_n_448),
        .\Using_FPGA.Native_19 (Decode_I_n_447),
        .\Using_FPGA.Native_2 (Data_Flow_I_n_213),
        .\Using_FPGA.Native_20 (Decode_I_n_446),
        .\Using_FPGA.Native_21 (Decode_I_n_445),
        .\Using_FPGA.Native_22 (Decode_I_n_444),
        .\Using_FPGA.Native_23 (Decode_I_n_443),
        .\Using_FPGA.Native_24 (Decode_I_n_442),
        .\Using_FPGA.Native_25 (Decode_I_n_441),
        .\Using_FPGA.Native_26 (Decode_I_n_440),
        .\Using_FPGA.Native_27 (Decode_I_n_439),
        .\Using_FPGA.Native_28 (Decode_I_n_438),
        .\Using_FPGA.Native_29 (Decode_I_n_437),
        .\Using_FPGA.Native_3 (Decode_I_n_463),
        .\Using_FPGA.Native_30 (Decode_I_n_466),
        .\Using_FPGA.Native_31 (Decode_I_n_465),
        .\Using_FPGA.Native_32 (Decode_I_n_464),
        .\Using_FPGA.Native_33 (Decode_I_n_436),
        .\Using_FPGA.Native_34 (\^Using_FPGA.Native ),
        .\Using_FPGA.Native_35 (Decode_I_n_427),
        .\Using_FPGA.Native_36 (Decode_I_n_426),
        .\Using_FPGA.Native_37 (Decode_I_n_415),
        .\Using_FPGA.Native_38 (Decode_I_n_332),
        .\Using_FPGA.Native_39 (Decode_I_n_331),
        .\Using_FPGA.Native_4 (Decode_I_n_462),
        .\Using_FPGA.Native_40 (Decode_I_n_327),
        .\Using_FPGA.Native_41 (Decode_I_n_431),
        .\Using_FPGA.Native_42 (Decode_I_n_432),
        .\Using_FPGA.Native_43 (\^D [292:261]),
        .\Using_FPGA.Native_5 (Decode_I_n_461),
        .\Using_FPGA.Native_6 (Decode_I_n_460),
        .\Using_FPGA.Native_7 (Decode_I_n_459),
        .\Using_FPGA.Native_8 (Decode_I_n_458),
        .\Using_FPGA.Native_9 (Decode_I_n_457),
        .WB_Doublet_Access_reg(\^D [108]),
        .WB_Doublet_Access_reg_0(\^D [107]),
        .WB_Doublet_Access_reg_1(\^D [106]),
        .WB_Doublet_Access_reg_10(\^D [97]),
        .WB_Doublet_Access_reg_11(\^D [96]),
        .WB_Doublet_Access_reg_12(\^D [95]),
        .WB_Doublet_Access_reg_13(\^D [94]),
        .WB_Doublet_Access_reg_14(\^D [93]),
        .WB_Doublet_Access_reg_2(\^D [105]),
        .WB_Doublet_Access_reg_3(\^D [104]),
        .WB_Doublet_Access_reg_4(\^D [103]),
        .WB_Doublet_Access_reg_5(\^D [102]),
        .WB_Doublet_Access_reg_6(\^D [101]),
        .WB_Doublet_Access_reg_7(\^D [100]),
        .WB_Doublet_Access_reg_8(\^D [99]),
        .WB_Doublet_Access_reg_9(\^D [98]),
        .WB_GPR_Wr(\^D [117]),
        .\WB_MEM_Result_reg[1] ({mem_ex_result[1],mem_ex_result[2],mem_ex_result[3],mem_ex_result[4],mem_ex_result[5],mem_ex_result[6],mem_ex_result[7],mem_ex_result[8],mem_ex_result[9],mem_ex_result[10],mem_ex_result[11],mem_ex_result[12],mem_ex_result[13],mem_ex_result[14],mem_ex_result[15],mem_ex_result[16],mem_ex_result[17],mem_ex_result[18],mem_ex_result[19],mem_ex_result[20],mem_ex_result[21],mem_ex_result[22],mem_ex_result[23],mem_ex_result[24],mem_ex_result[25],mem_ex_result[26],mem_ex_result[27],mem_ex_result[31]}),
        .\data_rd_reg_reg[16] ({Data_Flow_I_n_214,Data_Flow_I_n_215,Data_Flow_I_n_216,Data_Flow_I_n_217,Data_Flow_I_n_218,Data_Flow_I_n_219,Data_Flow_I_n_220,Data_Flow_I_n_221,Data_Flow_I_n_222,Data_Flow_I_n_223,Data_Flow_I_n_224,Data_Flow_I_n_225,Data_Flow_I_n_226,Data_Flow_I_n_227,Data_Flow_I_n_228,Data_Flow_I_n_229}),
        .ex_MSR({ex_MSR[28],ex_MSR[29],ex_MSR[30]}),
        .ex_Take_Intr_or_Exc_reg(Decode_I_n_326),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_databus_addr({ex_databus_addr[30],ex_databus_addr[31]}),
        .ex_doublet_access(ex_doublet_access),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Data_Flow_I_ex_op1_zero_UNCONNECTED),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_sel_alu_i_reg({\Operand_Select_I/of_op2 [0],\Operand_Select_I/of_op2 [1],\Operand_Select_I/of_op2 [2],\Operand_Select_I/of_op2 [3],\Operand_Select_I/of_op2 [4],\Operand_Select_I/of_op2 [5],\Operand_Select_I/of_op2 [6],\Operand_Select_I/of_op2 [7],\Operand_Select_I/of_op2 [8],\Operand_Select_I/of_op2 [9],\Operand_Select_I/of_op2 [10],\Operand_Select_I/of_op2 [11],\Operand_Select_I/of_op2 [12],\Operand_Select_I/of_op2 [13],\Operand_Select_I/of_op2 [14],\Operand_Select_I/of_op2 [15],\Operand_Select_I/of_op2 [16],\Operand_Select_I/of_op2 [17],\Operand_Select_I/of_op2 [18],\Operand_Select_I/of_op2 [19],\Operand_Select_I/of_op2 [20],\Operand_Select_I/of_op2 [21],\Operand_Select_I/of_op2 [22],\Operand_Select_I/of_op2 [23],\Operand_Select_I/of_op2 [24],\Operand_Select_I/of_op2 [25],\Operand_Select_I/of_op2 [26],\Operand_Select_I/of_op2 [27],\Operand_Select_I/of_op2 [28],\Operand_Select_I/of_op2 [29],\Operand_Select_I/of_op2 [30],\Operand_Select_I/of_op2 [31]}),
        .ex_sel_alu_i_reg_0({\Operand_Select_I/of_op3 [0],\Operand_Select_I/of_op3 [1],\Operand_Select_I/of_op3 [2],\Operand_Select_I/of_op3 [3],\Operand_Select_I/of_op3 [4],\Operand_Select_I/of_op3 [5],\Operand_Select_I/of_op3 [6],\Operand_Select_I/of_op3 [7],\Operand_Select_I/of_op3 [8],\Operand_Select_I/of_op3 [9],\Operand_Select_I/of_op3 [10],\Operand_Select_I/of_op3 [11],\Operand_Select_I/of_op3 [12],\Operand_Select_I/of_op3 [13],\Operand_Select_I/of_op3 [14],\Operand_Select_I/of_op3 [15],\Operand_Select_I/of_op3 [16],\Operand_Select_I/of_op3 [17],\Operand_Select_I/of_op3 [18],\Operand_Select_I/of_op3 [19],\Operand_Select_I/of_op3 [20],\Operand_Select_I/of_op3 [21],\Operand_Select_I/of_op3 [22],\Operand_Select_I/of_op3 [23],\Operand_Select_I/of_op3 [24],\Operand_Select_I/of_op3 [25],\Operand_Select_I/of_op3 [26],\Operand_Select_I/of_op3 [27],\Operand_Select_I/of_op3 [28],\Operand_Select_I/of_op3 [29],\Operand_Select_I/of_op3 [30],\Operand_Select_I/of_op3 [31]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(ex_use_carry),
        .in0(Decode_I_n_430),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_MSR({mem_MSR[28],mem_MSR[29],mem_MSR[30]}),
        .mem_byte_access(mem_byte_access),
        .mem_doublet_access(mem_doublet_access),
        .mem_load_store_access_reg(\^wb_instr_reg[31] ),
        .\mem_pc_i_reg[0] ({MEM_PC[0],MEM_PC[1],MEM_PC[2],MEM_PC[3],MEM_PC[4],MEM_PC[5],MEM_PC[6],MEM_PC[7],MEM_PC[8],MEM_PC[9],MEM_PC[10],MEM_PC[11],MEM_PC[12],MEM_PC[13],MEM_PC[14],MEM_PC[15],MEM_PC[16],MEM_PC[17],MEM_PC[18],MEM_PC[19],MEM_PC[20],MEM_PC[21],MEM_PC[22],MEM_PC[23],MEM_PC[24],MEM_PC[25],MEM_PC[26],MEM_PC[27],MEM_PC[28],MEM_PC[29],MEM_PC[30],MEM_PC[31]}),
        .mem_sel_msr(mem_sel_msr),
        .of_MSR({of_MSR[28],of_MSR[30]}),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg(\^E ),
        .out(\Shift_Logic_Module_I/I4 ),
        .read_register_MSR_1_reg(\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .swap_result({swap_result[8],swap_result[9],swap_result[10],swap_result[11],swap_result[12],swap_result[13],swap_result[14],swap_result[15],swap_result[16],swap_result[17],swap_result[18],swap_result[19],swap_result[20],swap_result[21],swap_result[22],swap_result[23],swap_result[24],swap_result[25],swap_result[26],swap_result[27],swap_result[28],swap_result[29],swap_result[30],swap_result[31]}),
        .swap_result_reg(swap_result_reg),
        .sync_reset(sync_reset),
        .wb_MSR_Clear_IE(wb_MSR_Clear_IE),
        .wb_byte_access(wb_byte_access),
        .wb_databus_steered_read_data({wb_databus_steered_read_data[24],wb_databus_steered_read_data[25],wb_databus_steered_read_data[26],wb_databus_steered_read_data[27],wb_databus_steered_read_data[28],wb_databus_steered_read_data[29],wb_databus_steered_read_data[30],wb_databus_steered_read_data[31]}),
        .\wb_exception_kind_i_reg[28] (\^D [75]),
        .\wb_exception_kind_i_reg[31] (\^D [76]),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_piperun(wb_piperun),
        .wb_read_lsb_1_sel(\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ),
        .wb_read_msb_doublet_sel(\Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ),
        .wb_read_msb_doublet_sel_reg(\Use_DBUS.DAXI_Interface_I1_n_13 ),
        .wb_read_msb_doublet_sel_reg_0(\Use_DBUS.DAXI_Interface_I1_n_15 ),
        .wb_read_msb_doublet_sel_reg_1(\Use_DBUS.DAXI_Interface_I1_n_17 ),
        .wb_read_msb_doublet_sel_reg_2(\Use_DBUS.DAXI_Interface_I1_n_19 ),
        .wb_read_msb_doublet_sel_reg_3(\Use_DBUS.DAXI_Interface_I1_n_20 ),
        .wb_read_msb_doublet_sel_reg_4(\Use_DBUS.DAXI_Interface_I1_n_18 ),
        .wb_read_msb_doublet_sel_reg_5(\Use_DBUS.DAXI_Interface_I1_n_16 ),
        .wb_read_msb_doublet_sel_reg_6(\Use_DBUS.DAXI_Interface_I1_n_14 ));
  ublaze_sopc_microblaze_0_0__Decode_gti Decode_I
       (.Clk(Clk),
        .D({of_pc[0],of_pc[1],of_pc[2],of_pc[3],of_pc[4],of_pc[5],of_pc[6],of_pc[7],of_pc[8],of_pc[9],of_pc[10],of_pc[11],of_pc[12],of_pc[13],of_pc[14],of_pc[15],of_pc[16],of_pc[17],of_pc[18],of_pc[19],of_pc[20],of_pc[21],of_pc[22],of_pc[23],of_pc[24],of_pc[25],of_pc[26],of_pc[27],of_pc[28],of_pc[29],of_pc[30],of_pc[31]}),
        .DReady(DReady),
        .DWait(NLW_Decode_I_DWait_UNCONNECTED),
        .E(of_write_imm_reg),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .\EX_Branch_CMP_Op1_reg[0] ({\Operand_Select_I/I0 ,Decode_I_n_366,Decode_I_n_367,Decode_I_n_368,Decode_I_n_369,Decode_I_n_370,Decode_I_n_371,Decode_I_n_372,Decode_I_n_373,Decode_I_n_374,Decode_I_n_375,Decode_I_n_376,Decode_I_n_377,Decode_I_n_378,Decode_I_n_379,Decode_I_n_380,Decode_I_n_381,Decode_I_n_382,Decode_I_n_383,Decode_I_n_384,Decode_I_n_385,Decode_I_n_386,Decode_I_n_387,Decode_I_n_388,Decode_I_n_389,Decode_I_n_390,Decode_I_n_391,Decode_I_n_392,Decode_I_n_393,Decode_I_n_394,Decode_I_n_395,Decode_I_n_396}),
        .\EX_Branch_CMP_Op1_reg[0]_0 (ex_op1_neg),
        .EX_Enable_ALU(EX_Enable_ALU),
        .EX_Fwd(EX_Fwd),
        .\EX_Op1_reg[0] ({ex_op1_i[0],ex_op1_i[1],ex_op1_i[2],ex_op1_i[3],ex_op1_i[4],ex_op1_i[5],ex_op1_i[6],ex_op1_i[7],ex_op1_i[8],ex_op1_i[9],ex_op1_i[10],ex_op1_i[11],ex_op1_i[12],ex_op1_i[13],ex_op1_i[14],ex_op1_i[15],ex_op1_i[16],ex_op1_i[17],ex_op1_i[18],ex_op1_i[19],ex_op1_i[20],ex_op1_i[21],ex_op1_i[22],ex_op1_i[23],ex_op1_i[24],ex_op1_i[25],ex_op1_i[26],ex_op1_i[27],ex_op1_i[28],ex_op1_i[29],ex_op1_i[30],ex_op1_i[31]}),
        .\EX_Op1_reg[10] (Decode_I_n_454),
        .\EX_Op1_reg[11] (Decode_I_n_453),
        .\EX_Op1_reg[12] (Decode_I_n_452),
        .\EX_Op1_reg[13] (Decode_I_n_451),
        .\EX_Op1_reg[14] (Decode_I_n_450),
        .\EX_Op1_reg[15] (Decode_I_n_449),
        .\EX_Op1_reg[16] (Decode_I_n_448),
        .\EX_Op1_reg[17] (Decode_I_n_447),
        .\EX_Op1_reg[18] (Decode_I_n_446),
        .\EX_Op1_reg[19] (Decode_I_n_445),
        .\EX_Op1_reg[1] (Decode_I_n_463),
        .\EX_Op1_reg[20] (Decode_I_n_444),
        .\EX_Op1_reg[21] (Decode_I_n_443),
        .\EX_Op1_reg[22] (Decode_I_n_442),
        .\EX_Op1_reg[23] (Decode_I_n_441),
        .\EX_Op1_reg[24] (Decode_I_n_440),
        .\EX_Op1_reg[24]_0 (Data_Flow_I_n_33),
        .\EX_Op1_reg[25] (Decode_I_n_439),
        .\EX_Op1_reg[26] (Decode_I_n_438),
        .\EX_Op1_reg[27] (Decode_I_n_437),
        .\EX_Op1_reg[28] (Decode_I_n_466),
        .\EX_Op1_reg[29] (Decode_I_n_465),
        .\EX_Op1_reg[29]_0 (Data_Flow_I_n_213),
        .\EX_Op1_reg[2] (Decode_I_n_462),
        .\EX_Op1_reg[30] (Decode_I_n_464),
        .\EX_Op1_reg[31] (Decode_I_n_436),
        .\EX_Op1_reg[3] (Decode_I_n_461),
        .\EX_Op1_reg[4] (Decode_I_n_460),
        .\EX_Op1_reg[5] (Decode_I_n_459),
        .\EX_Op1_reg[6] (Decode_I_n_458),
        .\EX_Op1_reg[7] (Decode_I_n_457),
        .\EX_Op1_reg[8] (Decode_I_n_456),
        .\EX_Op1_reg[9] (Decode_I_n_455),
        .\EX_Op2_reg[0] ({\Operand_Select_I/of_op2 [0],\Operand_Select_I/of_op2 [1],\Operand_Select_I/of_op2 [2],\Operand_Select_I/of_op2 [3],\Operand_Select_I/of_op2 [4],\Operand_Select_I/of_op2 [5],\Operand_Select_I/of_op2 [6],\Operand_Select_I/of_op2 [7],\Operand_Select_I/of_op2 [8],\Operand_Select_I/of_op2 [9],\Operand_Select_I/of_op2 [10],\Operand_Select_I/of_op2 [11],\Operand_Select_I/of_op2 [12],\Operand_Select_I/of_op2 [13],\Operand_Select_I/of_op2 [14],\Operand_Select_I/of_op2 [15],\Operand_Select_I/of_op2 [16],\Operand_Select_I/of_op2 [17],\Operand_Select_I/of_op2 [18],\Operand_Select_I/of_op2 [19],\Operand_Select_I/of_op2 [20],\Operand_Select_I/of_op2 [21],\Operand_Select_I/of_op2 [22],\Operand_Select_I/of_op2 [23],\Operand_Select_I/of_op2 [24],\Operand_Select_I/of_op2 [25],\Operand_Select_I/of_op2 [26],\Operand_Select_I/of_op2 [27],\Operand_Select_I/of_op2 [28],\Operand_Select_I/of_op2 [29],\Operand_Select_I/of_op2 [30],\Operand_Select_I/of_op2 [31]}),
        .\EX_Op2_reg[0]_0 ({\^D [324:295],\^D [149],\^D [92:77]}),
        .\EX_Op3_reg[0] ({\Operand_Select_I/of_op3 [0],\Operand_Select_I/of_op3 [1],\Operand_Select_I/of_op3 [2],\Operand_Select_I/of_op3 [3],\Operand_Select_I/of_op3 [4],\Operand_Select_I/of_op3 [5],\Operand_Select_I/of_op3 [6],\Operand_Select_I/of_op3 [7],\Operand_Select_I/of_op3 [8],\Operand_Select_I/of_op3 [9],\Operand_Select_I/of_op3 [10],\Operand_Select_I/of_op3 [11],\Operand_Select_I/of_op3 [12],\Operand_Select_I/of_op3 [13],\Operand_Select_I/of_op3 [14],\Operand_Select_I/of_op3 [15],\Operand_Select_I/of_op3 [16],\Operand_Select_I/of_op3 [17],\Operand_Select_I/of_op3 [18],\Operand_Select_I/of_op3 [19],\Operand_Select_I/of_op3 [20],\Operand_Select_I/of_op3 [21],\Operand_Select_I/of_op3 [22],\Operand_Select_I/of_op3 [23],\Operand_Select_I/of_op3 [24],\Operand_Select_I/of_op3 [25],\Operand_Select_I/of_op3 [26],\Operand_Select_I/of_op3 [27],\Operand_Select_I/of_op3 [28],\Operand_Select_I/of_op3 [29],\Operand_Select_I/of_op3 [30],\Operand_Select_I/of_op3 [31]}),
        .\EX_Op3_reg[0]_0 ({ex_op3[0],ex_op3[1],ex_op3[2],ex_op3[3],ex_op3[4],ex_op3[5],ex_op3[6],ex_op3[7],ex_op3[8],ex_op3[9],ex_op3[10],ex_op3[11],ex_op3[12],ex_op3[13],ex_op3[14],ex_op3[15],ex_op3[16],ex_op3[17],ex_op3[18],ex_op3[19],ex_op3[20],ex_op3[21],ex_op3[22],ex_op3[23],ex_op3[24],ex_op3[25],ex_op3[26],ex_op3[27],ex_op3[28],ex_op3[29],ex_op3[30],ex_op3[31]}),
        .GPR_Op1(gpr_op1),
        .GPR_Op2(gpr_op2),
        .GPR_Op3(gpr_op3),
        .Hibernate(NLW_Decode_I_Hibernate_UNCONNECTED),
        .I1(\exception_registers_I1/I1 ),
        .I139_out(\PreFetch_Buffer_I1/I139_out ),
        .I1_0(\Operand_Select_I/I1 ),
        .IB_Ready(IB_Ready),
        .IReady(IReady),
        .LO(ex_alu_carry),
        .LOCKSTEP_Master_Out(NLW_Decode_I_LOCKSTEP_Master_Out_UNCONNECTED[1:0]),
        .\MEM_DataBus_Addr_reg[9]_0 ({ex_alu_op[0],ex_alu_op[1]}),
        .MEM_Fwd({MEM_Fwd[0],MEM_Fwd[28],MEM_Fwd[29],MEM_Fwd[30]}),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_ARVALID_i_reg(Decode_I_n_419),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_AWVALID_i_reg(Decode_I_n_418),
        .M_AXI_DP_AWVALID_i_reg_0({\^D [221],\^D [184:183],\^D [148:134]}),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .M_AXI_DP_WVALID_i_reg(Decode_I_n_417),
        .Pause(NLW_Decode_I_Pause_UNCONNECTED),
        .Pause_Ack(NLW_Decode_I_Pause_Ack_UNCONNECTED),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ),
        .\Performance_Debug_Control.dbg_state_nohalt_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_50 ),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_52 ),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (Decode_I_n_420),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_40 ),
        .\Performance_Debug_Control.ex_brki_hit_reg (Decode_I_n_423),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (Decode_I_n_433),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (Decode_I_n_435),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_49 ),
        .Q(\Use_Debug_Logic.Master_Core.Debug_Perf_n_54 ),
        .R(\Data_Flow_Logic_I/R ),
        .Reset_Mode(NLW_Decode_I_Reset_Mode_UNCONNECTED[0:1]),
        .SR(\Data_Flow_Logic_I/WB_MEM_Result0 ),
        .SRI(SRI),
        .\Serial_Dbg_Intf.force_stop_cmd_i_reg ({\^LOCKSTEP_Master_Out [40:38],\^LOCKSTEP_Master_Out [36],\^LOCKSTEP_Master_Out [32]}),
        .Sleep(\^Sleep ),
        .Sleep_Decode(NLW_Decode_I_Sleep_Decode_UNCONNECTED),
        .Sleep_Out(Sleep_Out),
        .Suspend(NLW_Decode_I_Suspend_UNCONNECTED),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[16] (\Use_DBUS.DAXI_Interface_I1_n_28 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[17] (\Use_DBUS.DAXI_Interface_I1_n_27 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[18] (\Use_DBUS.DAXI_Interface_I1_n_26 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[19] (\Use_DBUS.DAXI_Interface_I1_n_25 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[20] (\Use_DBUS.DAXI_Interface_I1_n_24 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[21] (\Use_DBUS.DAXI_Interface_I1_n_23 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[22] (\Use_DBUS.DAXI_Interface_I1_n_22 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[23] (\Use_DBUS.DAXI_Interface_I1_n_21 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[24] (\Use_DBUS.DAXI_Interface_I1_n_36 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[25] (\Use_DBUS.DAXI_Interface_I1_n_35 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[26] (\Use_DBUS.DAXI_Interface_I1_n_34 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[27] (\Use_DBUS.DAXI_Interface_I1_n_33 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[28] (\Use_DBUS.DAXI_Interface_I1_n_32 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[29] (\Use_DBUS.DAXI_Interface_I1_n_31 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[30] (\Use_DBUS.DAXI_Interface_I1_n_30 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[31] (\Use_DBUS.DAXI_Interface_I1_n_29 ),
        .\Using_FPGA.Native (if_sel_input),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (Decode_I_n_327),
        .\Using_FPGA.Native_10 (Decode_I_n_434),
        .\Using_FPGA.Native_11 (\PreFetch_Buffer_I1/p_1_in49_in ),
        .\Using_FPGA.Native_12 ({MEM_PC[0],MEM_PC[1],MEM_PC[2],MEM_PC[3],MEM_PC[4],MEM_PC[5],MEM_PC[6],MEM_PC[7],MEM_PC[8],MEM_PC[9],MEM_PC[10],MEM_PC[11],MEM_PC[12],MEM_PC[13],MEM_PC[14],MEM_PC[15],MEM_PC[16],MEM_PC[17],MEM_PC[18],MEM_PC[19],MEM_PC[20],MEM_PC[21],MEM_PC[22],MEM_PC[23],MEM_PC[24],MEM_PC[25],MEM_PC[26],MEM_PC[27],MEM_PC[28],MEM_PC[29],MEM_PC[30],MEM_PC[31]}),
        .\Using_FPGA.Native_13 ({mem_ex_result[1],mem_ex_result[2],mem_ex_result[3],mem_ex_result[4],mem_ex_result[5],mem_ex_result[6],mem_ex_result[7],mem_ex_result[8],mem_ex_result[9],mem_ex_result[10],mem_ex_result[11],mem_ex_result[12],mem_ex_result[13],mem_ex_result[14],mem_ex_result[15],mem_ex_result[16],mem_ex_result[17],mem_ex_result[18],mem_ex_result[19],mem_ex_result[20],mem_ex_result[21],mem_ex_result[22],mem_ex_result[23],mem_ex_result[24],mem_ex_result[25],mem_ex_result[26],mem_ex_result[27],mem_ex_result[31]}),
        .\Using_FPGA.Native_14 ({wb_excep_return_addr[0],wb_excep_return_addr[1],wb_excep_return_addr[2],wb_excep_return_addr[3],wb_excep_return_addr[4],wb_excep_return_addr[5],wb_excep_return_addr[6],wb_excep_return_addr[7],wb_excep_return_addr[8],wb_excep_return_addr[9],wb_excep_return_addr[10],wb_excep_return_addr[11],wb_excep_return_addr[12],wb_excep_return_addr[13],wb_excep_return_addr[14],wb_excep_return_addr[15]}),
        .\Using_FPGA.Native_2 (Decode_I_n_331),
        .\Using_FPGA.Native_3 (Decode_I_n_332),
        .\Using_FPGA.Native_4 (Decode_I_n_415),
        .\Using_FPGA.Native_5 (Decode_I_n_426),
        .\Using_FPGA.Native_6 (Decode_I_n_427),
        .\Using_FPGA.Native_7 ({ex_sext_op[0],ex_sext_op[1]}),
        .\Using_FPGA.Native_8 (Decode_I_n_431),
        .\Using_FPGA.Native_9 (Decode_I_n_432),
        .\WB_MEM_Result_reg[0] ({wb_mem_result[0],wb_mem_result[1],wb_mem_result[2],wb_mem_result[3],wb_mem_result[4],wb_mem_result[5],wb_mem_result[6],wb_mem_result[7],wb_mem_result[8],wb_mem_result[9],wb_mem_result[10],wb_mem_result[11],wb_mem_result[12],wb_mem_result[13],wb_mem_result[14],wb_mem_result[15]}),
        .Y(ib_data),
        .active_access(active_access),
        .active_access_d1(active_access_d1),
        .active_access_reg(Decode_I_n_416),
        .\data_rd_reg_reg[0] ({Decode_I_n_397,Decode_I_n_398,Decode_I_n_399,Decode_I_n_400,Decode_I_n_401,Decode_I_n_402,Decode_I_n_403,Decode_I_n_404,Decode_I_n_405,Decode_I_n_406,Decode_I_n_407,Decode_I_n_408,Decode_I_n_409,Decode_I_n_410,Decode_I_n_411,Decode_I_n_412}),
        .dbg_clean_stop(dbg_clean_stop),
        .dbg_halt_reset_mode_reg(\Use_Debug_Logic.Master_Core.Debug_Perf_n_41 ),
        .dbg_stop_i(dbg_stop_i),
        .ex_Exception_Taken(ex_Exception_Taken),
        .ex_Interrupt_i(ex_Interrupt_i),
        .ex_MSR({ex_MSR[28],ex_MSR[29],ex_MSR[30]}),
        .ex_Take_Intr_or_Exc(ex_Take_Intr_or_Exc),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_databus_addr({ex_databus_addr[30],ex_databus_addr[31]}),
        .ex_doublet_access(ex_doublet_access),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Decode_I_ex_op1_zero_UNCONNECTED),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(ex_use_carry),
        .external_interrupt(external_interrupt),
        .\imm_reg_reg[0] ({\Operand_Select_I/imm_reg [0],\Operand_Select_I/imm_reg [1],\Operand_Select_I/imm_reg [2],\Operand_Select_I/imm_reg [3],\Operand_Select_I/imm_reg [4],\Operand_Select_I/imm_reg [5],\Operand_Select_I/imm_reg [6],\Operand_Select_I/imm_reg [7],\Operand_Select_I/imm_reg [8],\Operand_Select_I/imm_reg [9],\Operand_Select_I/imm_reg [10],\Operand_Select_I/imm_reg [11],\Operand_Select_I/imm_reg [12],\Operand_Select_I/imm_reg [13],\Operand_Select_I/imm_reg [14],\Operand_Select_I/imm_reg [15]}),
        .in(\PreFetch_Buffer_I1/if_predecode ),
        .in0(Decode_I_n_430),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(NLW_Decode_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9),
        .mb_halted_1_reg({NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[161],\^D [358:357],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[158:142],\^D [339:327],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[128:127],\^D [292:261],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[94],\^D [258],\^D [253:222],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[60:28],\^D [117:112],\^D [108:93],\^D [76:75],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[3:1],\^D [71]}),
        .mem_Exception_Taken(mem_Exception_Taken),
        .mem_MSR({mem_MSR[28],mem_MSR[29],mem_MSR[30]}),
        .mem_Write_DCache_reg_0(Decode_I_n_326),
        .mem_byte_access(mem_byte_access),
        .mem_databus_access(mem_databus_access),
        .mem_databus_read(NLW_Decode_I_mem_databus_read_UNCONNECTED),
        .mem_databus_ready(NLW_Decode_I_mem_databus_ready_UNCONNECTED),
        .mem_databus_write(NLW_Decode_I_mem_databus_write_UNCONNECTED),
        .mem_doublet_access(mem_doublet_access),
        .mem_sel_msr(mem_sel_msr),
        .of_MSR({of_MSR[28],of_MSR[30]}),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause(NLW_Decode_I_of_pause_UNCONNECTED),
        .out(\Shift_Logic_Module_I/I4 ),
        .p_44_out(p_44_out),
        .p_4_out__0(p_4_out__0),
        .read_register_MSR_1_reg(\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .swap_result({swap_result[8],swap_result[9],swap_result[10],swap_result[11],swap_result[12],swap_result[13],swap_result[14],swap_result[15],swap_result[16],swap_result[17],swap_result[18],swap_result[19],swap_result[20],swap_result[21],swap_result[22],swap_result[23],swap_result[24],swap_result[25],swap_result[26],swap_result[27],swap_result[28],swap_result[29],swap_result[30],swap_result[31]}),
        .swap_result_reg(swap_result_reg),
        .sync_reset(sync_reset),
        .use_Reg_Neg_S_reg(\^E ),
        .wakeup_i(wakeup_i),
        .wb_Halted(wb_Halted),
        .wb_MSR_Clear_IE(wb_MSR_Clear_IE),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .\wb_instr_reg[31]_0 (\^wb_instr_reg[31] ),
        .wb_pc_valid(wb_pc_valid),
        .wb_piperun(wb_piperun),
        .wb_read_imm_reg(wb_read_imm_reg),
        .wb_read_imm_reg_1(wb_read_imm_reg_1),
        .wb_valid_reg_0(Decode_I_n_258));
  ublaze_sopc_microblaze_0_0__DAXI_interface \Use_DBUS.DAXI_Interface_I1 
       (.Clk(Clk),
        .D({\^D [221],\^D [184:183]}),
        .DReady(DReady),
        .\LOCKSTEP_Out_reg[3007] (\Use_DBUS.DAXI_Interface_I1_n_36 ),
        .\LOCKSTEP_Out_reg[3008] (\Use_DBUS.DAXI_Interface_I1_n_35 ),
        .\LOCKSTEP_Out_reg[3009] (\Use_DBUS.DAXI_Interface_I1_n_34 ),
        .\LOCKSTEP_Out_reg[3010] (\Use_DBUS.DAXI_Interface_I1_n_33 ),
        .\LOCKSTEP_Out_reg[3011] (\Use_DBUS.DAXI_Interface_I1_n_32 ),
        .\LOCKSTEP_Out_reg[3012] (\Use_DBUS.DAXI_Interface_I1_n_31 ),
        .\LOCKSTEP_Out_reg[3013] (\Use_DBUS.DAXI_Interface_I1_n_30 ),
        .\LOCKSTEP_Out_reg[3014] (\Use_DBUS.DAXI_Interface_I1_n_29 ),
        .\LOCKSTEP_Out_reg[3015] (\Use_DBUS.DAXI_Interface_I1_n_28 ),
        .\LOCKSTEP_Out_reg[3016] (\Use_DBUS.DAXI_Interface_I1_n_27 ),
        .\LOCKSTEP_Out_reg[3017] (\Use_DBUS.DAXI_Interface_I1_n_26 ),
        .\LOCKSTEP_Out_reg[3018] (\Use_DBUS.DAXI_Interface_I1_n_25 ),
        .\LOCKSTEP_Out_reg[3019] (\Use_DBUS.DAXI_Interface_I1_n_24 ),
        .\LOCKSTEP_Out_reg[3020] (\Use_DBUS.DAXI_Interface_I1_n_23 ),
        .\LOCKSTEP_Out_reg[3021] (\Use_DBUS.DAXI_Interface_I1_n_22 ),
        .\LOCKSTEP_Out_reg[3022] (\Use_DBUS.DAXI_Interface_I1_n_21 ),
        .\LOCKSTEP_Out_reg[3023] (\Use_DBUS.DAXI_Interface_I1_n_13 ),
        .\LOCKSTEP_Out_reg[3024] (\Use_DBUS.DAXI_Interface_I1_n_14 ),
        .\LOCKSTEP_Out_reg[3025] (\Use_DBUS.DAXI_Interface_I1_n_15 ),
        .\LOCKSTEP_Out_reg[3026] (\Use_DBUS.DAXI_Interface_I1_n_16 ),
        .\LOCKSTEP_Out_reg[3027] (\Use_DBUS.DAXI_Interface_I1_n_17 ),
        .\LOCKSTEP_Out_reg[3028] (\Use_DBUS.DAXI_Interface_I1_n_18 ),
        .\LOCKSTEP_Out_reg[3029] (\Use_DBUS.DAXI_Interface_I1_n_19 ),
        .\LOCKSTEP_Out_reg[3030] (\Use_DBUS.DAXI_Interface_I1_n_20 ),
        .MEM_DataBus_Write_reg(Decode_I_n_418),
        .MEM_DataBus_Write_reg_0(Decode_I_n_417),
        .MEM_DataBus_Write_reg_1(Decode_I_n_419),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .Q({wb_dlmb_valid_read_data[0],wb_dlmb_valid_read_data[1],wb_dlmb_valid_read_data[2],wb_dlmb_valid_read_data[3],wb_dlmb_valid_read_data[4],wb_dlmb_valid_read_data[5],wb_dlmb_valid_read_data[6],wb_dlmb_valid_read_data[7],wb_dlmb_valid_read_data[8],wb_dlmb_valid_read_data[9],wb_dlmb_valid_read_data[10],wb_dlmb_valid_read_data[11],wb_dlmb_valid_read_data[12],wb_dlmb_valid_read_data[13],wb_dlmb_valid_read_data[14],wb_dlmb_valid_read_data[15],wb_dlmb_valid_read_data[16],wb_dlmb_valid_read_data[17],wb_dlmb_valid_read_data[18],wb_dlmb_valid_read_data[19],wb_dlmb_valid_read_data[20],wb_dlmb_valid_read_data[21],wb_dlmb_valid_read_data[22],wb_dlmb_valid_read_data[23],wb_dlmb_valid_read_data[24],wb_dlmb_valid_read_data[25],wb_dlmb_valid_read_data[26],wb_dlmb_valid_read_data[27],wb_dlmb_valid_read_data[28],wb_dlmb_valid_read_data[29],wb_dlmb_valid_read_data[30],wb_dlmb_valid_read_data[31]}),
        .active_access(active_access),
        .active_access_d1(active_access_d1),
        .active_access_reg_0(Decode_I_n_416),
        .sync_reset(sync_reset),
        .wb_databus_steered_read_data({wb_databus_steered_read_data[24],wb_databus_steered_read_data[25],wb_databus_steered_read_data[26],wb_databus_steered_read_data[27],wb_databus_steered_read_data[28],wb_databus_steered_read_data[29],wb_databus_steered_read_data[30],wb_databus_steered_read_data[31]}),
        .\wb_instr_reg[31] (\Use_DBUS.DAXI_Interface_I1_n_37 ),
        .wb_read_lsb_1_sel(\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ),
        .\wb_read_lsb_sel_reg[0] ({\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [0],\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [1]}),
        .wb_read_msb_doublet_sel(\Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ));
  ublaze_sopc_microblaze_0_0__MB_AND2B1L \Use_DLMB.Using_Latch_AS_Logic.AND2B1L_I1 
       (.D(\^D [260]),
        .E(\^wb_instr_reg[31] ),
        .SRI(SRI));
  LUT2 #(
    .INIT(4'hB)) 
    \Use_DLMB.wb_dlmb_valid_read_data[0]_i_1 
       (.I0(sync_reset),
        .I1(DReady),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[0]),
        .Q(wb_dlmb_valid_read_data[0]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[10] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[10]),
        .Q(wb_dlmb_valid_read_data[10]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[11] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[11]),
        .Q(wb_dlmb_valid_read_data[11]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[12] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[12]),
        .Q(wb_dlmb_valid_read_data[12]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[13] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[13]),
        .Q(wb_dlmb_valid_read_data[13]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[14] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[14]),
        .Q(wb_dlmb_valid_read_data[14]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[15] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[15]),
        .Q(wb_dlmb_valid_read_data[15]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[16]),
        .Q(wb_dlmb_valid_read_data[16]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[17]),
        .Q(wb_dlmb_valid_read_data[17]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[18]),
        .Q(wb_dlmb_valid_read_data[18]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[19]),
        .Q(wb_dlmb_valid_read_data[19]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[1]),
        .Q(wb_dlmb_valid_read_data[1]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[20]),
        .Q(wb_dlmb_valid_read_data[20]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[21]),
        .Q(wb_dlmb_valid_read_data[21]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[22]),
        .Q(wb_dlmb_valid_read_data[22]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[23]),
        .Q(wb_dlmb_valid_read_data[23]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[24]),
        .Q(wb_dlmb_valid_read_data[24]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[25]),
        .Q(wb_dlmb_valid_read_data[25]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[26]),
        .Q(wb_dlmb_valid_read_data[26]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[27]),
        .Q(wb_dlmb_valid_read_data[27]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[28]),
        .Q(wb_dlmb_valid_read_data[28]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[29]),
        .Q(wb_dlmb_valid_read_data[29]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[2]),
        .Q(wb_dlmb_valid_read_data[2]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[30]),
        .Q(wb_dlmb_valid_read_data[30]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[31]),
        .Q(wb_dlmb_valid_read_data[31]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[3] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[3]),
        .Q(wb_dlmb_valid_read_data[3]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[4] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[4]),
        .Q(wb_dlmb_valid_read_data[4]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[5] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[5]),
        .Q(wb_dlmb_valid_read_data[5]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[6] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[6]),
        .Q(wb_dlmb_valid_read_data[6]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[7] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[7]),
        .Q(wb_dlmb_valid_read_data[7]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[8] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[8]),
        .Q(wb_dlmb_valid_read_data[8]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[9] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[9]),
        .Q(wb_dlmb_valid_read_data[9]),
        .R(p_1_out));
  ublaze_sopc_microblaze_0_0__Debug \Use_Debug_Logic.Master_Core.Debug_Perf 
       (.Address(of_pc),
        .Clk(Clk),
        .Config_Reg_En(Config_Reg_En),
        .D({\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_D_UNCONNECTED [3],\^D [358],\^D [76],\^D [71]}),
        .Data_Read_Reg_En(Data_Read_Reg_En),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Stop_UNCONNECTED ),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Ack_Out(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_Out_UNCONNECTED [1:0]),
        .Dbg_Trig_In(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Out({\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Out_UNCONNECTED [1],Dbg_Trig_Out[0]}),
        .Dbg_Update(Dbg_Update),
        .IB_Ready(IB_Ready),
        .IReady(IReady),
        .LOCKSTEP_Master_Out({\^LOCKSTEP_Master_Out [40:38],\^LOCKSTEP_Master_Out [36],\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_LOCKSTEP_Master_Out_UNCONNECTED [34:33],\^LOCKSTEP_Master_Out [32:0]}),
        .MEM_DataBus_Access_reg(mem_databus_access),
        .Pause(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Pause_UNCONNECTED ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ),
        .\Performance_Debug_Control.dbg_state_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_49 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 (Decode_I_n_433),
        .Q(\Use_Debug_Logic.Master_Core.Debug_Perf_n_54 ),
        .Reset_Mode(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Reset_Mode_UNCONNECTED [0:1]),
        .Scan_En(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_Sel_UNCONNECTED ),
        .\Serial_Dbg_Intf.control_reg_reg[8]_0 (\Serial_Dbg_Intf.control_reg_reg[8] ),
        .\Serial_Dbg_Intf.control_reg_reg[8]_1 (Decode_I_n_423),
        .\Single_Synchronize.use_async_reset.sync_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_40 ),
        .Sleep(\^Sleep ),
        .Sleep_Decode(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Sleep_Decode_UNCONNECTED ),
        .Sleep_Out(Sleep_Out),
        .Status_Reg_En(Status_Reg_En),
        .\Using_FPGA.Native (\Use_Debug_Logic.Master_Core.Debug_Perf_n_50 ),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (Decode_I_n_435),
        .command_reg_clear_reg_0(\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .dbg_clean_stop(dbg_clean_stop),
        .dbg_halt_reset_mode_reg_0(\Use_Debug_Logic.Master_Core.Debug_Perf_n_41 ),
        .dbg_halt_reset_mode_reg_1(Decode_I_n_420),
        .dbg_stop_i(dbg_stop_i),
        .ex_Exception_Taken(ex_Exception_Taken),
        .ex_Interrupt_i(ex_Interrupt_i),
        .ex_Take_Intr_or_Exc(ex_Take_Intr_or_Exc),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .\if_pc_reg[29] (\Use_Debug_Logic.Master_Core.Debug_Perf_n_52 ),
        .mem_Exception_Taken(mem_Exception_Taken),
        .mem_load_store_access_reg(\^wb_instr_reg[31] ),
        .of_pause(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_of_pause_UNCONNECTED ),
        .of_pause_reg(\^E ),
        .p_44_out(p_44_out),
        .p_4_out__0(p_4_out__0),
        .sync_reset(sync_reset),
        .wakeup_i(wakeup_i),
        .wb_Halted(wb_Halted),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_gpr_write_dbg_reg({Decode_I_n_397,Decode_I_n_398,Decode_I_n_399,Decode_I_n_400,Decode_I_n_401,Decode_I_n_402,Decode_I_n_403,Decode_I_n_404,Decode_I_n_405,Decode_I_n_406,Decode_I_n_407,Decode_I_n_408,Decode_I_n_409,Decode_I_n_410,Decode_I_n_411,Decode_I_n_412,Data_Flow_I_n_214,Data_Flow_I_n_215,Data_Flow_I_n_216,Data_Flow_I_n_217,Data_Flow_I_n_218,Data_Flow_I_n_219,Data_Flow_I_n_220,Data_Flow_I_n_221,Data_Flow_I_n_222,Data_Flow_I_n_223,Data_Flow_I_n_224,Data_Flow_I_n_225,Data_Flow_I_n_226,Data_Flow_I_n_227,Data_Flow_I_n_228,Data_Flow_I_n_229}),
        .wb_pc_valid(wb_pc_valid),
        .wb_read_imm_reg(wb_read_imm_reg),
        .wb_read_imm_reg_1(wb_read_imm_reg_1),
        .wb_valid_reg(Decode_I_n_258));
  ublaze_sopc_microblaze_0_0__instr_mux instr_mux_I
       (.I139_out(\PreFetch_Buffer_I1/I139_out ),
        .Instr(Instr),
        .LOCKSTEP_Master_Out({\^LOCKSTEP_Master_Out [38],\^LOCKSTEP_Master_Out [31:0]}),
        .\Using_FPGA.Native (\PreFetch_Buffer_I1/p_1_in49_in ),
        .\Using_FPGA.Native_0 (if_sel_input),
        .Y(ib_data),
        .in(\PreFetch_Buffer_I1/if_predecode ));
  ublaze_sopc_microblaze_0_0__carry_or mem_databus_ready_sel_carry_or
       (.lopt(NLW_mem_databus_ready_sel_carry_or_lopt_UNCONNECTED),
        .lopt_1(lopt_4),
        .lopt_2(lopt_5),
        .lopt_3(lopt_6),
        .lopt_4(lopt_7),
        .lopt_5(lopt_8),
        .lopt_6(lopt_9),
        .lopt_7(lopt_10),
        .lopt_8(lopt_11),
        .mem_access_completed_reg(\Use_DBUS.DAXI_Interface_I1_n_37 ),
        .mem_databus_ready(NLW_mem_databus_ready_sel_carry_or_mem_databus_ready_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "Operand_Select_gti" *) 
module ublaze_sopc_microblaze_0_0__Operand_Select_gti
   (\Using_FPGA.Native ,
    Q,
    \Data_Addr[30] ,
    \MEM_DataBus_Addr_reg[0] ,
    \mem_byte_selects_reg[0] ,
    S,
    in0,
    swap_result,
    swap_result_reg,
    \MEM_DataBus_Addr_reg[0]_0 ,
    \Zero_Detecting[0].nibble_Zero_reg ,
    \Using_FPGA.Native_0 ,
    \mem_byte_selects_reg[1] ,
    \EX_Op2_reg[0]_0 ,
    \MEM_DataBus_Write_Data_reg[24] ,
    of_op1_sel_spr,
    D,
    I1,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    \Using_FPGA.Native_31 ,
    ex_move_to_MSR_instr,
    ex_Take_Intr_or_Exc_reg,
    ex_MSR,
    ex_reverse_mem_access,
    ex_doublet_access,
    ex_byte_access,
    ex_cmp_op,
    \EX_Sext_Op_reg[0] ,
    ex_swap_byte_instr,
    sync_reset,
    E,
    of_imm_data,
    Clk,
    of_pause_reg,
    ex_sel_alu_i_reg,
    ex_sel_alu_i_reg_0);
  output \Using_FPGA.Native ;
  output [31:0]Q;
  output [5:0]\Data_Addr[30] ;
  output [31:0]\MEM_DataBus_Addr_reg[0] ;
  output \mem_byte_selects_reg[0] ;
  output S;
  output in0;
  output [23:0]swap_result;
  output [0:7]swap_result_reg;
  output \MEM_DataBus_Addr_reg[0]_0 ;
  output \Zero_Detecting[0].nibble_Zero_reg ;
  output [29:0]\Using_FPGA.Native_0 ;
  output [0:0]\mem_byte_selects_reg[1] ;
  output [15:0]\EX_Op2_reg[0]_0 ;
  output [31:0]\MEM_DataBus_Write_Data_reg[24] ;
  input of_op1_sel_spr;
  input [31:0]D;
  input I1;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input \Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input \Using_FPGA.Native_26 ;
  input \Using_FPGA.Native_27 ;
  input \Using_FPGA.Native_28 ;
  input \Using_FPGA.Native_29 ;
  input \Using_FPGA.Native_30 ;
  input \Using_FPGA.Native_31 ;
  input ex_move_to_MSR_instr;
  input ex_Take_Intr_or_Exc_reg;
  input [0:0]ex_MSR;
  input ex_reverse_mem_access;
  input ex_doublet_access;
  input ex_byte_access;
  input ex_cmp_op;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input ex_swap_byte_instr;
  input sync_reset;
  input [0:0]E;
  input [0:15]of_imm_data;
  input Clk;
  input of_pause_reg;
  input [31:0]ex_sel_alu_i_reg;
  input [31:0]ex_sel_alu_i_reg_0;

  wire Clk;
  wire [31:0]D;
  wire [5:0]\Data_Addr[30] ;
  wire [0:0]E;
  wire [15:0]\EX_Op2_reg[0]_0 ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire \Gen_Bit[31].MUXF7_I1_n_0 ;
  wire I1;
  wire [31:0]\MEM_DataBus_Addr_reg[0] ;
  wire \MEM_DataBus_Addr_reg[0]_0 ;
  wire [31:0]\MEM_DataBus_Write_Data_reg[24] ;
  wire O;
  wire O0_out;
  wire O10_out;
  wire O11_out;
  wire O12_out;
  wire O13_out;
  wire O14_out;
  wire O15_out;
  wire O16_out;
  wire O17_out;
  wire O18_out;
  wire O19_out;
  wire O1_out;
  wire O20_out;
  wire O21_out;
  wire O22_out;
  wire O23_out;
  wire O24_out;
  wire O25_out;
  wire O26_out;
  wire O27_out;
  wire O28_out;
  wire O29_out;
  wire O2_out;
  wire O3_out;
  wire O4_out;
  wire O5_out;
  wire O6_out;
  wire O7_out;
  wire O8_out;
  wire O9_out;
  wire [31:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire [29:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire [0:0]ex_MSR;
  wire ex_Take_Intr_or_Exc_reg;
  wire [30:31]ex_branch_cmp_op1;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire ex_doublet_access;
  wire ex_move_to_MSR_instr;
  wire ex_reverse_mem_access;
  wire [31:0]ex_sel_alu_i_reg;
  wire [31:0]ex_sel_alu_i_reg_0;
  wire ex_swap_byte_instr;
  wire in0;
  wire \mem_byte_selects_reg[0] ;
  wire [0:0]\mem_byte_selects_reg[1] ;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire of_pause_reg;
  wire [23:0]swap_result;
  wire [0:7]swap_result_reg;
  wire sync_reset;

  LUT6 #(
    .INIT(64'h0000969600FFFFFF)) 
    \Byte_Enable[0]_INST_0 
       (.I0(\MEM_DataBus_Addr_reg[0] [0]),
        .I1(Q[0]),
        .I2(ex_reverse_mem_access),
        .I3(ex_doublet_access),
        .I4(\mem_byte_selects_reg[0] ),
        .I5(ex_byte_access),
        .O(\Data_Addr[30] [3]));
  LUT5 #(
    .INIT(32'h956A6A95)) 
    \Byte_Enable[0]_INST_0_i_1 
       (.I0(ex_reverse_mem_access),
        .I1(\MEM_DataBus_Addr_reg[0] [0]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\MEM_DataBus_Addr_reg[0] [1]),
        .O(\mem_byte_selects_reg[0] ));
  LUT6 #(
    .INIT(64'h0000696900FFFFFF)) 
    \Byte_Enable[1]_INST_0 
       (.I0(\MEM_DataBus_Addr_reg[0] [0]),
        .I1(Q[0]),
        .I2(ex_reverse_mem_access),
        .I3(ex_doublet_access),
        .I4(\mem_byte_selects_reg[0] ),
        .I5(ex_byte_access),
        .O(\Data_Addr[30] [2]));
  LUT6 #(
    .INIT(64'h96FF000096FF00FF)) 
    \Byte_Enable[2]_INST_0 
       (.I0(\MEM_DataBus_Addr_reg[0] [0]),
        .I1(Q[0]),
        .I2(ex_reverse_mem_access),
        .I3(ex_byte_access),
        .I4(\mem_byte_selects_reg[0] ),
        .I5(ex_doublet_access),
        .O(\Data_Addr[30] [1]));
  LUT6 #(
    .INIT(64'h69FF000069FF00FF)) 
    \Byte_Enable[3]_INST_0 
       (.I0(\MEM_DataBus_Addr_reg[0] [0]),
        .I1(Q[0]),
        .I2(ex_reverse_mem_access),
        .I3(ex_byte_access),
        .I4(\mem_byte_selects_reg[0] ),
        .I5(ex_doublet_access),
        .O(\Data_Addr[30] [0]));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[31]),
        .Q(\Using_FPGA.Native_0 [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[21]),
        .Q(\Using_FPGA.Native_0 [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[20]),
        .Q(\Using_FPGA.Native_0 [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[19]),
        .Q(\Using_FPGA.Native_0 [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[18]),
        .Q(\Using_FPGA.Native_0 [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[17]),
        .Q(\Using_FPGA.Native_0 [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[16]),
        .Q(\Using_FPGA.Native_0 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[15]),
        .Q(\Using_FPGA.Native_0 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[14]),
        .Q(\Using_FPGA.Native_0 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[13]),
        .Q(\Using_FPGA.Native_0 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[12]),
        .Q(\Using_FPGA.Native_0 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[30]),
        .Q(\Using_FPGA.Native_0 [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[11]),
        .Q(\Using_FPGA.Native_0 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[10]),
        .Q(\Using_FPGA.Native_0 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[9]),
        .Q(\Using_FPGA.Native_0 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[8]),
        .Q(\Using_FPGA.Native_0 [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[7]),
        .Q(\Using_FPGA.Native_0 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[6]),
        .Q(\Using_FPGA.Native_0 [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[5]),
        .Q(\Using_FPGA.Native_0 [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[4]),
        .Q(\Using_FPGA.Native_0 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[3]),
        .Q(\Using_FPGA.Native_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[2]),
        .Q(\Using_FPGA.Native_0 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[29]),
        .Q(\Using_FPGA.Native_0 [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[1]),
        .Q(ex_branch_cmp_op1[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[0]),
        .Q(ex_branch_cmp_op1[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[28]),
        .Q(\Using_FPGA.Native_0 [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[27]),
        .Q(\Using_FPGA.Native_0 [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[26]),
        .Q(\Using_FPGA.Native_0 [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[25]),
        .Q(\Using_FPGA.Native_0 [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[24]),
        .Q(\Using_FPGA.Native_0 [22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[23]),
        .Q(\Using_FPGA.Native_0 [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[22]),
        .Q(\Using_FPGA.Native_0 [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O),
        .Q(Q[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O20_out),
        .Q(Q[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O19_out),
        .Q(Q[20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O18_out),
        .Q(Q[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O17_out),
        .Q(Q[18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O16_out),
        .Q(Q[17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O15_out),
        .Q(Q[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O14_out),
        .Q(Q[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O13_out),
        .Q(Q[14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O12_out),
        .Q(Q[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O11_out),
        .Q(Q[12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O29_out),
        .Q(Q[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O10_out),
        .Q(Q[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O9_out),
        .Q(Q[10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O8_out),
        .Q(Q[9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O7_out),
        .Q(Q[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O6_out),
        .Q(Q[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O5_out),
        .Q(Q[6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O4_out),
        .Q(Q[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O3_out),
        .Q(Q[4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O2_out),
        .Q(Q[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O1_out),
        .Q(Q[2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O28_out),
        .Q(Q[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O0_out),
        .Q(Q[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Gen_Bit[31].MUXF7_I1_n_0 ),
        .Q(Q[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O27_out),
        .Q(Q[28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O26_out),
        .Q(Q[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O25_out),
        .Q(Q[26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O24_out),
        .Q(Q[25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O23_out),
        .Q(Q[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O22_out),
        .Q(Q[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O21_out),
        .Q(Q[22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[31]),
        .Q(\MEM_DataBus_Addr_reg[0] [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[21]),
        .Q(\MEM_DataBus_Addr_reg[0] [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[20]),
        .Q(\MEM_DataBus_Addr_reg[0] [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[19]),
        .Q(\MEM_DataBus_Addr_reg[0] [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[18]),
        .Q(\MEM_DataBus_Addr_reg[0] [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[17]),
        .Q(\MEM_DataBus_Addr_reg[0] [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[16]),
        .Q(\MEM_DataBus_Addr_reg[0] [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[15]),
        .Q(\MEM_DataBus_Addr_reg[0] [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[14]),
        .Q(\MEM_DataBus_Addr_reg[0] [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[13]),
        .Q(\MEM_DataBus_Addr_reg[0] [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[12]),
        .Q(\MEM_DataBus_Addr_reg[0] [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[30]),
        .Q(\MEM_DataBus_Addr_reg[0] [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[11]),
        .Q(\MEM_DataBus_Addr_reg[0] [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[10]),
        .Q(\MEM_DataBus_Addr_reg[0] [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[9]),
        .Q(\MEM_DataBus_Addr_reg[0] [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[8]),
        .Q(\MEM_DataBus_Addr_reg[0] [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[7]),
        .Q(\MEM_DataBus_Addr_reg[0] [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[6]),
        .Q(\MEM_DataBus_Addr_reg[0] [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[5]),
        .Q(\MEM_DataBus_Addr_reg[0] [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[4]),
        .Q(\MEM_DataBus_Addr_reg[0] [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[3]),
        .Q(\MEM_DataBus_Addr_reg[0] [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[2]),
        .Q(\MEM_DataBus_Addr_reg[0] [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[29]),
        .Q(\MEM_DataBus_Addr_reg[0] [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[1]),
        .Q(\MEM_DataBus_Addr_reg[0] [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[0]),
        .Q(\MEM_DataBus_Addr_reg[0] [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[28]),
        .Q(\MEM_DataBus_Addr_reg[0] [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[27]),
        .Q(\MEM_DataBus_Addr_reg[0] [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[26]),
        .Q(\MEM_DataBus_Addr_reg[0] [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[25]),
        .Q(\MEM_DataBus_Addr_reg[0] [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[24]),
        .Q(\MEM_DataBus_Addr_reg[0] [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[23]),
        .Q(\MEM_DataBus_Addr_reg[0] [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[22]),
        .Q(\MEM_DataBus_Addr_reg[0] [22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[31]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[21]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[20]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[19]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[18]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[17]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[16]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[15]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[14]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[13]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[12]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[30]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[11]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[10]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[9]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[8]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[7]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[6]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[5]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[4]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[3]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[2]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[29]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[1]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[0]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[28]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[27]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[26]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[25]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[24]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[23]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg_0[22]),
        .Q(\MEM_DataBus_Write_Data_reg[24] [22]),
        .R(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_430 \Gen_Bit[0].MUXF7_I1 
       (.D(O),
        .I1(I1),
        .Q({Q[15],Q[7]}),
        .ex_sel_alu_i_reg(D[31]),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[0]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_431 \Gen_Bit[10].MUXF7_I1 
       (.D(O20_out),
        .Q({Q[13],Q[5]}),
        .\Using_FPGA.Native_0 (D[21]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_10 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[21]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_432 \Gen_Bit[11].MUXF7_I1 
       (.D(O19_out),
        .Q({Q[12],Q[4]}),
        .\Using_FPGA.Native_0 (D[20]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_11 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[20]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_433 \Gen_Bit[12].MUXF7_I1 
       (.D(O18_out),
        .Q({Q[11],Q[3]}),
        .\Using_FPGA.Native_0 (D[19]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_12 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[19]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_434 \Gen_Bit[13].MUXF7_I1 
       (.D(O17_out),
        .Q({Q[10],Q[2]}),
        .\Using_FPGA.Native_0 (D[18]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_13 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[18]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_435 \Gen_Bit[14].MUXF7_I1 
       (.D(O16_out),
        .Q({Q[9],Q[1]}),
        .\Using_FPGA.Native_0 (D[17]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_14 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[17]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_436 \Gen_Bit[15].MUXF7_I1 
       (.D(O15_out),
        .Q({Q[8],Q[0]}),
        .\Using_FPGA.Native_0 (D[16]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_15 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[16]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_437 \Gen_Bit[16].MUXF7_I1 
       (.D(O14_out),
        .Q({Q[31],Q[23]}),
        .\Using_FPGA.Native_0 (D[15]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_16 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[15]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_438 \Gen_Bit[17].MUXF7_I1 
       (.D(O13_out),
        .Q({Q[30],Q[22]}),
        .\Using_FPGA.Native_0 (D[14]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_17 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[14]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_439 \Gen_Bit[18].MUXF7_I1 
       (.D(O12_out),
        .Q({Q[29],Q[21]}),
        .\Using_FPGA.Native_0 (D[13]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_18 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[13]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_440 \Gen_Bit[19].MUXF7_I1 
       (.D(O11_out),
        .Q({Q[28],Q[20]}),
        .\Using_FPGA.Native_0 (D[12]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_19 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[12]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_441 \Gen_Bit[1].MUXF7_I1 
       (.D(O29_out),
        .Q({Q[14],Q[6]}),
        .\Using_FPGA.Native_0 (D[30]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[1]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_442 \Gen_Bit[20].MUXF7_I1 
       (.D(O10_out),
        .Q({Q[27],Q[19]}),
        .\Using_FPGA.Native_0 (D[11]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_20 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[11]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_443 \Gen_Bit[21].MUXF7_I1 
       (.D(O9_out),
        .Q({Q[26],Q[18]}),
        .\Using_FPGA.Native_0 (D[10]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_21 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[10]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_444 \Gen_Bit[22].MUXF7_I1 
       (.D(O8_out),
        .Q({Q[25],Q[17]}),
        .\Using_FPGA.Native_0 (D[9]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_22 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[9]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_445 \Gen_Bit[23].MUXF7_I1 
       (.D(O7_out),
        .Q({Q[24],Q[16]}),
        .\Using_FPGA.Native_0 (D[8]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_23 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[8]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_446 \Gen_Bit[24].MUXF7_I1 
       (.D(O6_out),
        .Q({Q[31],Q[23]}),
        .\Using_FPGA.Native_0 (D[7]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_24 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[7]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_447 \Gen_Bit[25].MUXF7_I1 
       (.D(O5_out),
        .Q({Q[30],Q[22]}),
        .\Using_FPGA.Native_0 (D[6]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_25 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[6]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_448 \Gen_Bit[26].MUXF7_I1 
       (.D(O4_out),
        .Q({Q[29],Q[21]}),
        .\Using_FPGA.Native_0 (D[5]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_26 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[5]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_449 \Gen_Bit[27].MUXF7_I1 
       (.D(O3_out),
        .Q({Q[28],Q[20]}),
        .\Using_FPGA.Native_0 (D[4]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_27 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[4]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_450 \Gen_Bit[28].MUXF7_I1 
       (.D(O2_out),
        .EX_SWAP_Instr_reg(D[3]),
        .Q({Q[27],Q[19]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_28 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[3]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_451 \Gen_Bit[29].MUXF7_I1 
       (.D(O1_out),
        .EX_SWAP_Instr_reg(D[2]),
        .Q({Q[26],Q[18]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_29 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[2]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_452 \Gen_Bit[2].MUXF7_I1 
       (.D(O28_out),
        .Q({Q[13],Q[5]}),
        .\Using_FPGA.Native_0 (D[29]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[2]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_453 \Gen_Bit[30].MUXF7_I1 
       (.D(O0_out),
        .EX_SWAP_Instr_reg(D[1]),
        .Q({Q[25],Q[17]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_30 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[1]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_454 \Gen_Bit[31].MUXF7_I1 
       (.D(\Gen_Bit[31].MUXF7_I1_n_0 ),
        .Q({Q[24],Q[16]}),
        .\Using_FPGA.Native_0 (D[0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[0]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_455 \Gen_Bit[3].MUXF7_I1 
       (.D(O27_out),
        .Q({Q[12],Q[4]}),
        .\Using_FPGA.Native_0 (D[28]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_3 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[3]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_456 \Gen_Bit[4].MUXF7_I1 
       (.D(O26_out),
        .Q({Q[11],Q[3]}),
        .\Using_FPGA.Native_0 (D[27]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_4 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[4]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_457 \Gen_Bit[5].MUXF7_I1 
       (.D(O25_out),
        .Q({Q[10],Q[2]}),
        .\Using_FPGA.Native_0 (D[26]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_5 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[5]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_458 \Gen_Bit[6].MUXF7_I1 
       (.D(O24_out),
        .Q({Q[9],Q[1]}),
        .\Using_FPGA.Native_0 (D[25]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_6 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[6]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_459 \Gen_Bit[7].MUXF7_I1 
       (.D(O23_out),
        .Q({Q[8],Q[0]}),
        .\Using_FPGA.Native_0 (D[24]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_7 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[7]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_460 \Gen_Bit[8].MUXF7_I1 
       (.D(O22_out),
        .Q({Q[15],Q[7]}),
        .\Using_FPGA.Native_0 (D[23]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_8 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[23]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_461 \Gen_Bit[9].MUXF7_I1 
       (.D(O21_out),
        .Q({Q[14],Q[6]}),
        .\Using_FPGA.Native_0 (D[22]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_9 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[22]));
  LUT3 #(
    .INIT(8'hD7)) 
    \Using_FPGA.Native_i_1__60 
       (.I0(ex_cmp_op),
        .I1(Q[31]),
        .I2(\MEM_DataBus_Addr_reg[0] [31]),
        .O(S));
  LUT3 #(
    .INIT(8'hD7)) 
    \Using_FPGA.Native_i_1__94 
       (.I0(ex_cmp_op),
        .I1(Q[31]),
        .I2(\MEM_DataBus_Addr_reg[0] [31]),
        .O(\MEM_DataBus_Addr_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__95 
       (.I0(ex_branch_cmp_op1[30]),
        .I1(ex_branch_cmp_op1[31]),
        .O(\Zero_Detecting[0].nibble_Zero_reg ));
  LUT4 #(
    .INIT(16'hBF80)) 
    \Using_FPGA.Native_i_4 
       (.I0(Q[2]),
        .I1(ex_move_to_MSR_instr),
        .I2(ex_Take_Intr_or_Exc_reg),
        .I3(ex_MSR),
        .O(\Using_FPGA.Native ));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[0] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[0]),
        .Q(\EX_Op2_reg[0]_0 [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[10] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[10]),
        .Q(\EX_Op2_reg[0]_0 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[11] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[11]),
        .Q(\EX_Op2_reg[0]_0 [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[12] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[12]),
        .Q(\EX_Op2_reg[0]_0 [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[13] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[13]),
        .Q(\EX_Op2_reg[0]_0 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[14] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[14]),
        .Q(\EX_Op2_reg[0]_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[15] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[15]),
        .Q(\EX_Op2_reg[0]_0 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[1] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[1]),
        .Q(\EX_Op2_reg[0]_0 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[2] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[2]),
        .Q(\EX_Op2_reg[0]_0 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[3] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[3]),
        .Q(\EX_Op2_reg[0]_0 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[4] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[4]),
        .Q(\EX_Op2_reg[0]_0 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[5] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[5]),
        .Q(\EX_Op2_reg[0]_0 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[6] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[6]),
        .Q(\EX_Op2_reg[0]_0 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[7] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[7]),
        .Q(\EX_Op2_reg[0]_0 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[8] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[8]),
        .Q(\EX_Op2_reg[0]_0 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[9] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[9]),
        .Q(\EX_Op2_reg[0]_0 [6]),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'h69)) 
    \mem_byte_selects[1]_i_1 
       (.I0(ex_reverse_mem_access),
        .I1(Q[0]),
        .I2(\MEM_DataBus_Addr_reg[0] [0]),
        .O(\mem_byte_selects_reg[1] ));
  LUT4 #(
    .INIT(16'h00E2)) 
    sign_0_15_inferred_i_1
       (.I0(Q[7]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[15]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .O(in0));
endmodule

(* ORIG_REF_NAME = "PC_Module_gti" *) 
module ublaze_sopc_microblaze_0_0__PC_Module_gti
   (D,
    O56_out,
    Q,
    O,
    \if_pc_reg[28]_0 ,
    \if_pc_reg[27]_0 ,
    \if_pc_reg[26]_0 ,
    \if_pc_reg[25]_0 ,
    \if_pc_reg[24]_0 ,
    \if_pc_reg[23]_0 ,
    \if_pc_reg[22]_0 ,
    \if_pc_reg[21]_0 ,
    \if_pc_reg[20]_0 ,
    \if_pc_reg[19]_0 ,
    \if_pc_reg[18]_0 ,
    \if_pc_reg[17]_0 ,
    \if_pc_reg[16]_0 ,
    \if_pc_reg[15]_0 ,
    \if_pc_reg[14]_0 ,
    \if_pc_reg[13]_0 ,
    \if_pc_reg[12]_0 ,
    \if_pc_reg[11]_0 ,
    \if_pc_reg[10]_0 ,
    \if_pc_reg[9]_0 ,
    \if_pc_reg[8]_0 ,
    \if_pc_reg[7]_0 ,
    \if_pc_reg[6]_0 ,
    \if_pc_reg[5]_0 ,
    \if_pc_reg[4]_0 ,
    \if_pc_reg[3]_0 ,
    \if_pc_reg[2]_0 ,
    \if_pc_reg[1]_0 ,
    \Using_FPGA.Native ,
    of_pause_reg,
    sync_reset,
    Clk,
    \Using_FPGA.Native_0 ,
    if_sel_input,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    CI,
    if_pre_buffer_addr,
    E,
    if_fetch_in_progress_reg,
    \if_pc_reg[0]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [31:0]D;
  output O56_out;
  output [1:0]Q;
  output O;
  output \if_pc_reg[28]_0 ;
  output \if_pc_reg[27]_0 ;
  output \if_pc_reg[26]_0 ;
  output \if_pc_reg[25]_0 ;
  output \if_pc_reg[24]_0 ;
  output \if_pc_reg[23]_0 ;
  output \if_pc_reg[22]_0 ;
  output \if_pc_reg[21]_0 ;
  output \if_pc_reg[20]_0 ;
  output \if_pc_reg[19]_0 ;
  output \if_pc_reg[18]_0 ;
  output \if_pc_reg[17]_0 ;
  output \if_pc_reg[16]_0 ;
  output \if_pc_reg[15]_0 ;
  output \if_pc_reg[14]_0 ;
  output \if_pc_reg[13]_0 ;
  output \if_pc_reg[12]_0 ;
  output \if_pc_reg[11]_0 ;
  output \if_pc_reg[10]_0 ;
  output \if_pc_reg[9]_0 ;
  output \if_pc_reg[8]_0 ;
  output \if_pc_reg[7]_0 ;
  output \if_pc_reg[6]_0 ;
  output \if_pc_reg[5]_0 ;
  output \if_pc_reg[4]_0 ;
  output \if_pc_reg[3]_0 ;
  output \if_pc_reg[2]_0 ;
  output \if_pc_reg[1]_0 ;
  output [31:0]\Using_FPGA.Native ;
  input of_pause_reg;
  input sync_reset;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input [1:0]if_sel_input;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input CI;
  input [0:0]if_pre_buffer_addr;
  input [0:0]E;
  input [0:0]if_fetch_in_progress_reg;
  input [31:0]\if_pc_reg[0]_0 ;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire Clk;
  wire [31:0]D;
  wire [0:0]E;
  wire I0;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I013_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I041_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire O;
  wire O56_out;
  wire \PC_Buffer_reg[3][31]_srl4_n_0 ;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [1:0]Q;
  wire S;
  wire S102_in;
  wire S107_in;
  wire S112_in;
  wire S117_in;
  wire S122_in;
  wire S127_in;
  wire S12_in;
  wire S132_in;
  wire S137_in;
  wire S142_in;
  wire S147_in;
  wire S152_in;
  wire S17_in;
  wire S22_in;
  wire S27_in;
  wire S32_in;
  wire S37_in;
  wire S42_in;
  wire S47_in;
  wire S52_in;
  wire S57_in;
  wire S62_in;
  wire S67_in;
  wire S72_in;
  wire S77_in;
  wire S82_in;
  wire S87_in;
  wire S92_in;
  wire S97_in;
  wire [31:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:31]ex_pc;
  wire [0:0]if_fetch_in_progress_reg;
  wire [29:1]if_pc_carry;
  wire [31:0]\if_pc_reg[0]_0 ;
  wire \if_pc_reg[10]_0 ;
  wire \if_pc_reg[11]_0 ;
  wire \if_pc_reg[12]_0 ;
  wire \if_pc_reg[13]_0 ;
  wire \if_pc_reg[14]_0 ;
  wire \if_pc_reg[15]_0 ;
  wire \if_pc_reg[16]_0 ;
  wire \if_pc_reg[17]_0 ;
  wire \if_pc_reg[18]_0 ;
  wire \if_pc_reg[19]_0 ;
  wire \if_pc_reg[1]_0 ;
  wire \if_pc_reg[20]_0 ;
  wire \if_pc_reg[21]_0 ;
  wire \if_pc_reg[22]_0 ;
  wire \if_pc_reg[23]_0 ;
  wire \if_pc_reg[24]_0 ;
  wire \if_pc_reg[25]_0 ;
  wire \if_pc_reg[26]_0 ;
  wire \if_pc_reg[27]_0 ;
  wire \if_pc_reg[28]_0 ;
  wire \if_pc_reg[2]_0 ;
  wire \if_pc_reg[3]_0 ;
  wire \if_pc_reg[4]_0 ;
  wire \if_pc_reg[5]_0 ;
  wire \if_pc_reg[6]_0 ;
  wire \if_pc_reg[7]_0 ;
  wire \if_pc_reg[8]_0 ;
  wire \if_pc_reg[9]_0 ;
  wire [0:0]if_pre_buffer_addr;
  wire [1:0]if_sel_input;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_13;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire \^lopt_2 ;
  wire lopt_20;
  wire lopt_22;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire lopt_31;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_36;
  wire lopt_37;
  wire lopt_38;
  wire lopt_4;
  wire lopt_40;
  wire lopt_42;
  wire lopt_43;
  wire lopt_44;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_49;
  wire lopt_51;
  wire lopt_52;
  wire lopt_53;
  wire lopt_54;
  wire lopt_55;
  wire lopt_56;
  wire lopt_58;
  wire lopt_6;
  wire lopt_60;
  wire lopt_61;
  wire lopt_62;
  wire lopt_63;
  wire lopt_64;
  wire lopt_65;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire of_pause_reg;
  wire of_pc_ii_0;
  wire of_pc_ii_1;
  wire of_pc_ii_10;
  wire of_pc_ii_11;
  wire of_pc_ii_12;
  wire of_pc_ii_13;
  wire of_pc_ii_14;
  wire of_pc_ii_15;
  wire of_pc_ii_16;
  wire of_pc_ii_17;
  wire of_pc_ii_18;
  wire of_pc_ii_19;
  wire of_pc_ii_2;
  wire of_pc_ii_20;
  wire of_pc_ii_21;
  wire of_pc_ii_22;
  wire of_pc_ii_23;
  wire of_pc_ii_24;
  wire of_pc_ii_25;
  wire of_pc_ii_26;
  wire of_pc_ii_27;
  wire of_pc_ii_28;
  wire of_pc_ii_29;
  wire of_pc_ii_3;
  wire of_pc_ii_30;
  wire of_pc_ii_31;
  wire of_pc_ii_4;
  wire of_pc_ii_5;
  wire of_pc_ii_6;
  wire of_pc_ii_7;
  wire of_pc_ii_8;
  wire of_pc_ii_9;
  wire p_1_in103_in;
  wire p_1_in108_in;
  wire p_1_in113_in;
  wire p_1_in118_in;
  wire p_1_in123_in;
  wire p_1_in128_in;
  wire p_1_in133_in;
  wire p_1_in138_in;
  wire p_1_in13_in;
  wire p_1_in143_in;
  wire p_1_in148_in;
  wire p_1_in153_in;
  wire p_1_in18_in;
  wire p_1_in23_in;
  wire p_1_in28_in;
  wire p_1_in33_in;
  wire p_1_in38_in;
  wire p_1_in43_in;
  wire p_1_in48_in;
  wire p_1_in53_in;
  wire p_1_in58_in;
  wire p_1_in63_in;
  wire p_1_in68_in;
  wire p_1_in73_in;
  wire p_1_in78_in;
  wire p_1_in83_in;
  wire p_1_in88_in;
  wire p_1_in8_in;
  wire p_1_in93_in;
  wire p_1_in98_in;
  wire p_2_in4_in;
  wire sync_reset;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_if_pc_reg[11]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_if_pc_reg[12]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_if_pc_reg[14]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_if_pc_reg[15]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_if_pc_reg[16]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_if_pc_reg[18]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_if_pc_reg[19]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_if_pc_reg[20]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_if_pc_reg[2]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_if_pc_reg[22]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_if_pc_reg[23]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_if_pc_reg[24]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_if_pc_reg[26]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_if_pc_reg[27]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_if_pc_reg[28]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_if_pc_reg[3]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_if_pc_reg[4]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_if_pc_reg[6]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_if_pc_reg[7]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_if_pc_reg[8]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_Q_UNCONNECTED ;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = S;
  ublaze_sopc_microblaze_0_0__MB_FDR_210 \Instruction_Prefetch_Mux[0].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[31]),
        .I0125_out(I0125_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S152_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_31(of_pc_ii_31),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_211 \Instruction_Prefetch_Mux[0].PC_Mux_MUXF7 
       (.I0125_out(I0125_out),
        .Q(S152_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_31(of_pc_ii_31),
        .out(p_1_in153_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_212 \Instruction_Prefetch_Mux[10].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[21]),
        .I085_out(I085_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S102_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_21(of_pc_ii_21),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_213 \Instruction_Prefetch_Mux[10].PC_Mux_MUXF7 
       (.I085_out(I085_out),
        .Q(S102_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_21(of_pc_ii_21),
        .out(p_1_in103_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_214 \Instruction_Prefetch_Mux[11].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[20]),
        .I081_out(I081_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S97_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_20(of_pc_ii_20),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_215 \Instruction_Prefetch_Mux[11].PC_Mux_MUXF7 
       (.I081_out(I081_out),
        .Q(S97_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_20(of_pc_ii_20),
        .out(p_1_in98_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_216 \Instruction_Prefetch_Mux[12].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[19]),
        .I077_out(I077_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S92_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_19(of_pc_ii_19),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_217 \Instruction_Prefetch_Mux[12].PC_Mux_MUXF7 
       (.I077_out(I077_out),
        .Q(S92_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_19(of_pc_ii_19),
        .out(p_1_in93_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_218 \Instruction_Prefetch_Mux[13].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[18]),
        .I073_out(I073_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S87_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_18(of_pc_ii_18),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_219 \Instruction_Prefetch_Mux[13].PC_Mux_MUXF7 
       (.I073_out(I073_out),
        .Q(S87_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_18(of_pc_ii_18),
        .out(p_1_in88_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_220 \Instruction_Prefetch_Mux[14].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[17]),
        .I069_out(I069_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S82_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_17(of_pc_ii_17),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_221 \Instruction_Prefetch_Mux[14].PC_Mux_MUXF7 
       (.I069_out(I069_out),
        .Q(S82_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_17(of_pc_ii_17),
        .out(p_1_in83_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_222 \Instruction_Prefetch_Mux[15].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[16]),
        .I065_out(I065_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S77_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_16(of_pc_ii_16),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_223 \Instruction_Prefetch_Mux[15].PC_Mux_MUXF7 
       (.I065_out(I065_out),
        .Q(S77_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_16(of_pc_ii_16),
        .out(p_1_in78_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_224 \Instruction_Prefetch_Mux[16].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[15]),
        .I061_out(I061_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S72_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_15(of_pc_ii_15),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_225 \Instruction_Prefetch_Mux[16].PC_Mux_MUXF7 
       (.I061_out(I061_out),
        .Q(S72_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_15(of_pc_ii_15),
        .out(p_1_in73_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_226 \Instruction_Prefetch_Mux[17].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[14]),
        .I057_out(I057_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S67_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_14(of_pc_ii_14),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_227 \Instruction_Prefetch_Mux[17].PC_Mux_MUXF7 
       (.I057_out(I057_out),
        .Q(S67_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_14(of_pc_ii_14),
        .out(p_1_in68_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_228 \Instruction_Prefetch_Mux[18].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[13]),
        .I053_out(I053_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S62_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_13(of_pc_ii_13),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_229 \Instruction_Prefetch_Mux[18].PC_Mux_MUXF7 
       (.I053_out(I053_out),
        .Q(S62_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_13(of_pc_ii_13),
        .out(p_1_in63_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_230 \Instruction_Prefetch_Mux[19].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[12]),
        .I049_out(I049_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S57_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_12(of_pc_ii_12),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_231 \Instruction_Prefetch_Mux[19].PC_Mux_MUXF7 
       (.I049_out(I049_out),
        .Q(S57_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_12(of_pc_ii_12),
        .out(p_1_in58_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_232 \Instruction_Prefetch_Mux[1].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[30]),
        .I0121_out(I0121_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S147_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_30(of_pc_ii_30),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_233 \Instruction_Prefetch_Mux[1].PC_Mux_MUXF7 
       (.I0121_out(I0121_out),
        .Q(S147_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_30(of_pc_ii_30),
        .out(p_1_in148_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_234 \Instruction_Prefetch_Mux[20].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[11]),
        .I045_out(I045_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S52_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_11(of_pc_ii_11),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_235 \Instruction_Prefetch_Mux[20].PC_Mux_MUXF7 
       (.I045_out(I045_out),
        .Q(S52_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_11(of_pc_ii_11),
        .out(p_1_in53_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_236 \Instruction_Prefetch_Mux[21].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[10]),
        .I041_out(I041_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S47_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_10(of_pc_ii_10),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_237 \Instruction_Prefetch_Mux[21].PC_Mux_MUXF7 
       (.I041_out(I041_out),
        .Q(S47_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_10(of_pc_ii_10),
        .out(p_1_in48_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_238 \Instruction_Prefetch_Mux[22].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[9]),
        .I037_out(I037_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S42_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_9(of_pc_ii_9),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_239 \Instruction_Prefetch_Mux[22].PC_Mux_MUXF7 
       (.I037_out(I037_out),
        .Q(S42_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_9(of_pc_ii_9),
        .out(p_1_in43_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_240 \Instruction_Prefetch_Mux[23].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[8]),
        .I033_out(I033_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S37_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_8(of_pc_ii_8),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_241 \Instruction_Prefetch_Mux[23].PC_Mux_MUXF7 
       (.I033_out(I033_out),
        .Q(S37_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_8(of_pc_ii_8),
        .out(p_1_in38_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_242 \Instruction_Prefetch_Mux[24].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[7]),
        .I029_out(I029_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S32_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_7(of_pc_ii_7),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_243 \Instruction_Prefetch_Mux[24].PC_Mux_MUXF7 
       (.I029_out(I029_out),
        .Q(S32_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_7(of_pc_ii_7),
        .out(p_1_in33_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_244 \Instruction_Prefetch_Mux[25].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[6]),
        .I025_out(I025_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S27_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_6(of_pc_ii_6),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_245 \Instruction_Prefetch_Mux[25].PC_Mux_MUXF7 
       (.I025_out(I025_out),
        .Q(S27_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_6(of_pc_ii_6),
        .out(p_1_in28_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_246 \Instruction_Prefetch_Mux[26].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[5]),
        .I021_out(I021_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S22_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_5(of_pc_ii_5),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_247 \Instruction_Prefetch_Mux[26].PC_Mux_MUXF7 
       (.I021_out(I021_out),
        .Q(S22_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_5(of_pc_ii_5),
        .out(p_1_in23_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_248 \Instruction_Prefetch_Mux[27].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[4]),
        .I017_out(I017_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S17_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_4(of_pc_ii_4),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_249 \Instruction_Prefetch_Mux[27].PC_Mux_MUXF7 
       (.I017_out(I017_out),
        .Q(S17_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_4(of_pc_ii_4),
        .out(p_1_in18_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_250 \Instruction_Prefetch_Mux[28].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[3]),
        .I013_out(I013_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S12_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_3(of_pc_ii_3),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_251 \Instruction_Prefetch_Mux[28].PC_Mux_MUXF7 
       (.I013_out(I013_out),
        .Q(S12_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_3(of_pc_ii_3),
        .out(p_1_in13_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_252 \Instruction_Prefetch_Mux[29].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[2]),
        .I09_out(I09_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_2(of_pc_ii_2),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_253 \Instruction_Prefetch_Mux[29].PC_Mux_MUXF7 
       (.I09_out(I09_out),
        .Q(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_2(of_pc_ii_2),
        .out(p_1_in8_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_254 \Instruction_Prefetch_Mux[2].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[29]),
        .I0117_out(I0117_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S142_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_29(of_pc_ii_29),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_255 \Instruction_Prefetch_Mux[2].PC_Mux_MUXF7 
       (.I0117_out(I0117_out),
        .Q(S142_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_29(of_pc_ii_29),
        .out(p_1_in143_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_256 \Instruction_Prefetch_Mux[30].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[1]),
        .I05_out(I05_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(Q[1]),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_1(of_pc_ii_1),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_257 \Instruction_Prefetch_Mux[30].PC_Mux_MUXF7 
       (.I05_out(I05_out),
        .Q(Q[1]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_1(of_pc_ii_1),
        .out(p_2_in4_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_258 \Instruction_Prefetch_Mux[31].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[0]),
        .I0(I0),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(Q[0]),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_0(of_pc_ii_0),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_259 \Instruction_Prefetch_Mux[31].PC_Mux_MUXF7 
       (.I0(I0),
        .Q(Q[0]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_0(of_pc_ii_0),
        .out(\PC_Buffer_reg[3][31]_srl4_n_0 ));
  ublaze_sopc_microblaze_0_0__MB_FDR_260 \Instruction_Prefetch_Mux[3].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[28]),
        .I0113_out(I0113_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S137_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_28(of_pc_ii_28),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_261 \Instruction_Prefetch_Mux[3].PC_Mux_MUXF7 
       (.I0113_out(I0113_out),
        .Q(S137_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_28(of_pc_ii_28),
        .out(p_1_in138_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_262 \Instruction_Prefetch_Mux[4].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[27]),
        .I0109_out(I0109_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S132_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_27(of_pc_ii_27),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_263 \Instruction_Prefetch_Mux[4].PC_Mux_MUXF7 
       (.I0109_out(I0109_out),
        .Q(S132_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_27(of_pc_ii_27),
        .out(p_1_in133_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_264 \Instruction_Prefetch_Mux[5].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[26]),
        .I0105_out(I0105_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S127_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_26(of_pc_ii_26),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_265 \Instruction_Prefetch_Mux[5].PC_Mux_MUXF7 
       (.I0105_out(I0105_out),
        .Q(S127_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_26(of_pc_ii_26),
        .out(p_1_in128_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_266 \Instruction_Prefetch_Mux[6].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[25]),
        .I0101_out(I0101_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S122_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_25(of_pc_ii_25),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_267 \Instruction_Prefetch_Mux[6].PC_Mux_MUXF7 
       (.I0101_out(I0101_out),
        .Q(S122_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_25(of_pc_ii_25),
        .out(p_1_in123_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_268 \Instruction_Prefetch_Mux[7].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[24]),
        .I097_out(I097_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S117_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_24(of_pc_ii_24),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_269 \Instruction_Prefetch_Mux[7].PC_Mux_MUXF7 
       (.I097_out(I097_out),
        .Q(S117_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_24(of_pc_ii_24),
        .out(p_1_in118_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_270 \Instruction_Prefetch_Mux[8].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[23]),
        .I093_out(I093_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S112_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_23(of_pc_ii_23),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_271 \Instruction_Prefetch_Mux[8].PC_Mux_MUXF7 
       (.I093_out(I093_out),
        .Q(S112_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_23(of_pc_ii_23),
        .out(p_1_in113_in));
  ublaze_sopc_microblaze_0_0__MB_FDR_272 \Instruction_Prefetch_Mux[9].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[22]),
        .I089_out(I089_out),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(S107_in),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_22(of_pc_ii_22),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_273 \Instruction_Prefetch_Mux[9].PC_Mux_MUXF7 
       (.I089_out(I089_out),
        .Q(S107_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_22(of_pc_ii_22),
        .out(p_1_in108_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][0]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][0]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S152_in),
        .Q(p_1_in153_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][10]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][10]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S102_in),
        .Q(p_1_in103_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][11]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][11]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S97_in),
        .Q(p_1_in98_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][12]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][12]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S92_in),
        .Q(p_1_in93_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][13]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][13]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S87_in),
        .Q(p_1_in88_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][14]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][14]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S82_in),
        .Q(p_1_in83_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][15]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][15]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S77_in),
        .Q(p_1_in78_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][16]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][16]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S72_in),
        .Q(p_1_in73_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][17]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][17]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S67_in),
        .Q(p_1_in68_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][18]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][18]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S62_in),
        .Q(p_1_in63_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][19]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][19]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S57_in),
        .Q(p_1_in58_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][1]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S147_in),
        .Q(p_1_in148_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][20]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][20]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S52_in),
        .Q(p_1_in53_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][21]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][21]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S47_in),
        .Q(p_1_in48_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][22]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][22]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S42_in),
        .Q(p_1_in43_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][23]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][23]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S37_in),
        .Q(p_1_in38_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][24]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][24]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S32_in),
        .Q(p_1_in33_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][25]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][25]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S27_in),
        .Q(p_1_in28_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][26]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][26]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S22_in),
        .Q(p_1_in23_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][27]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][27]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S17_in),
        .Q(p_1_in18_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][28]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][28]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S12_in),
        .Q(p_1_in13_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][29]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][29]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S),
        .Q(p_1_in8_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][2]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S142_in),
        .Q(p_1_in143_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][30]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][30]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(Q[1]),
        .Q(p_2_in4_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][31]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][31]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(Q[0]),
        .Q(\PC_Buffer_reg[3][31]_srl4_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][3]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][3]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S137_in),
        .Q(p_1_in138_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][4]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][4]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S132_in),
        .Q(p_1_in133_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][5]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][5]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S127_in),
        .Q(p_1_in128_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][6]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][6]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S122_in),
        .Q(p_1_in123_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][7]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][7]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S117_in),
        .Q(p_1_in118_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][8]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][8]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S112_in),
        .Q(p_1_in113_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][9]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][9]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .CLK(Clk),
        .D(S107_in),
        .Q(p_1_in108_in));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY \Using_FPGA.Incr_PC[0].MUXCY_XOR_I 
       (.LO(if_pc_carry[29]),
        .O56_out(O56_out),
        .Q(S152_in));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_274 \Using_FPGA.Incr_PC[10].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[10] (\if_pc_reg[10]_0 ),
        .\if_pc_reg[11] (\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_if_pc_reg[11]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_2(lopt_46));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_275 \Using_FPGA.Incr_PC[11].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[11] (\if_pc_reg[11]_0 ),
        .\if_pc_reg[12] (\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_if_pc_reg[12]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40),
        .lopt_2(lopt_45));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_276 \Using_FPGA.Incr_PC[12].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S92_in),
        .\if_pc_reg[12] (\if_pc_reg[12]_0 ),
        .\if_pc_reg[13] (if_pc_carry[17]),
        .lopt(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40),
        .lopt_10(lopt_46),
        .lopt_11(lopt_47),
        .lopt_2(S97_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_42),
        .lopt_5(S102_in),
        .lopt_6(lopt_43),
        .lopt_7(lopt_44),
        .lopt_8(S107_in),
        .lopt_9(lopt_45));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_277 \Using_FPGA.Incr_PC[13].MUXCY_XOR_I 
       (.LO(if_pc_carry[17]),
        .Q(\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[13] (\if_pc_reg[13]_0 ),
        .\if_pc_reg[14] (\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_if_pc_reg[14]_UNCONNECTED ),
        .lopt(lopt_34),
        .lopt_1(lopt_35),
        .lopt_2(lopt_38));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_278 \Using_FPGA.Incr_PC[14].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[14] (\if_pc_reg[14]_0 ),
        .\if_pc_reg[15] (\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_if_pc_reg[15]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_33),
        .lopt_2(lopt_37));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_279 \Using_FPGA.Incr_PC[15].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[15] (\if_pc_reg[15]_0 ),
        .\if_pc_reg[16] (\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_if_pc_reg[16]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_31),
        .lopt_2(lopt_36));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_280 \Using_FPGA.Incr_PC[16].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S72_in),
        .\if_pc_reg[16] (\if_pc_reg[16]_0 ),
        .\if_pc_reg[17] (if_pc_carry[13]),
        .lopt(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_31),
        .lopt_10(lopt_37),
        .lopt_11(lopt_38),
        .lopt_2(S77_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_33),
        .lopt_5(S82_in),
        .lopt_6(lopt_34),
        .lopt_7(lopt_35),
        .lopt_8(S87_in),
        .lopt_9(lopt_36));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_281 \Using_FPGA.Incr_PC[17].MUXCY_XOR_I 
       (.LO(if_pc_carry[13]),
        .Q(\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[17] (\if_pc_reg[17]_0 ),
        .\if_pc_reg[18] (\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_if_pc_reg[18]_UNCONNECTED ),
        .lopt(lopt_25),
        .lopt_1(lopt_26),
        .lopt_2(lopt_29));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_282 \Using_FPGA.Incr_PC[18].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[18] (\if_pc_reg[18]_0 ),
        .\if_pc_reg[19] (\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_if_pc_reg[19]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_24),
        .lopt_2(lopt_28));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_283 \Using_FPGA.Incr_PC[19].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[19] (\if_pc_reg[19]_0 ),
        .\if_pc_reg[20] (\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_if_pc_reg[20]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .lopt_2(lopt_27));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_284 \Using_FPGA.Incr_PC[1].MUXCY_XOR_I 
       (.LO(if_pc_carry[29]),
        .Q(\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[1] (\if_pc_reg[1]_0 ),
        .\if_pc_reg[2] (\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_if_pc_reg[2]_UNCONNECTED ),
        .lopt(lopt_61),
        .lopt_1(lopt_62),
        .lopt_2(lopt_65));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_285 \Using_FPGA.Incr_PC[20].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S52_in),
        .\if_pc_reg[20] (\if_pc_reg[20]_0 ),
        .\if_pc_reg[21] (if_pc_carry[9]),
        .lopt(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .lopt_10(lopt_28),
        .lopt_11(lopt_29),
        .lopt_2(S57_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_24),
        .lopt_5(S62_in),
        .lopt_6(lopt_25),
        .lopt_7(lopt_26),
        .lopt_8(S67_in),
        .lopt_9(lopt_27));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_286 \Using_FPGA.Incr_PC[21].MUXCY_XOR_I 
       (.LO(if_pc_carry[9]),
        .Q(\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[21] (\if_pc_reg[21]_0 ),
        .\if_pc_reg[22] (\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_if_pc_reg[22]_UNCONNECTED ),
        .lopt(lopt_16),
        .lopt_1(lopt_17),
        .lopt_2(lopt_20));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_287 \Using_FPGA.Incr_PC[22].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[22] (\if_pc_reg[22]_0 ),
        .\if_pc_reg[23] (\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_if_pc_reg[23]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_15),
        .lopt_2(lopt_19));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_288 \Using_FPGA.Incr_PC[23].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[23] (\if_pc_reg[23]_0 ),
        .\if_pc_reg[24] (\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_if_pc_reg[24]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_13),
        .lopt_2(lopt_18));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_289 \Using_FPGA.Incr_PC[24].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S32_in),
        .\if_pc_reg[24] (\if_pc_reg[24]_0 ),
        .\if_pc_reg[25] (if_pc_carry[5]),
        .lopt(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_13),
        .lopt_10(lopt_19),
        .lopt_11(lopt_20),
        .lopt_2(S37_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_15),
        .lopt_5(S42_in),
        .lopt_6(lopt_16),
        .lopt_7(lopt_17),
        .lopt_8(S47_in),
        .lopt_9(lopt_18));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_290 \Using_FPGA.Incr_PC[25].MUXCY_XOR_I 
       (.LO(if_pc_carry[5]),
        .Q(\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[25] (\if_pc_reg[25]_0 ),
        .\if_pc_reg[26] (\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_if_pc_reg[26]_UNCONNECTED ),
        .lopt(lopt_7),
        .lopt_1(lopt_8),
        .lopt_2(lopt_11));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_291 \Using_FPGA.Incr_PC[26].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[26] (\if_pc_reg[26]_0 ),
        .\if_pc_reg[27] (\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_if_pc_reg[27]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_2(lopt_10));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_292 \Using_FPGA.Incr_PC[27].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[27] (\if_pc_reg[27]_0 ),
        .\if_pc_reg[28] (\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_if_pc_reg[28]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4),
        .lopt_2(lopt_9));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_293 \Using_FPGA.Incr_PC[28].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S12_in),
        .\if_pc_reg[28] (\if_pc_reg[28]_0 ),
        .\if_pc_reg[29] (if_pc_carry[1]),
        .lopt(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(S17_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_6),
        .lopt_5(S22_in),
        .lopt_6(lopt_7),
        .lopt_7(lopt_8),
        .lopt_8(S27_in),
        .lopt_9(lopt_9));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_294 \Using_FPGA.Incr_PC[29].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(if_pc_carry[1]),
        .O(O),
        .Q(\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_295 \Using_FPGA.Incr_PC[2].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[2] (\if_pc_reg[2]_0 ),
        .\if_pc_reg[3] (\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_if_pc_reg[3]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_60),
        .lopt_2(lopt_64));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_296 \Using_FPGA.Incr_PC[3].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[3] (\if_pc_reg[3]_0 ),
        .\if_pc_reg[4] (\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_if_pc_reg[4]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_58),
        .lopt_2(lopt_63));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_297 \Using_FPGA.Incr_PC[4].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S132_in),
        .\if_pc_reg[4] (\if_pc_reg[4]_0 ),
        .\if_pc_reg[5] (if_pc_carry[25]),
        .lopt(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_58),
        .lopt_10(lopt_64),
        .lopt_11(lopt_65),
        .lopt_2(S137_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_60),
        .lopt_5(S142_in),
        .lopt_6(lopt_61),
        .lopt_7(lopt_62),
        .lopt_8(S147_in),
        .lopt_9(lopt_63));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_298 \Using_FPGA.Incr_PC[5].MUXCY_XOR_I 
       (.LO(if_pc_carry[25]),
        .Q(\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[5] (\if_pc_reg[5]_0 ),
        .\if_pc_reg[6] (\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_if_pc_reg[6]_UNCONNECTED ),
        .lopt(lopt_52),
        .lopt_1(lopt_53),
        .lopt_2(lopt_56));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_299 \Using_FPGA.Incr_PC[6].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[6] (\if_pc_reg[6]_0 ),
        .\if_pc_reg[7] (\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_if_pc_reg[7]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_51),
        .lopt_2(lopt_55));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_300 \Using_FPGA.Incr_PC[7].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[7] (\if_pc_reg[7]_0 ),
        .\if_pc_reg[8] (\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_if_pc_reg[8]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_49),
        .lopt_2(lopt_54));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_301 \Using_FPGA.Incr_PC[8].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S112_in),
        .\if_pc_reg[8] (\if_pc_reg[8]_0 ),
        .\if_pc_reg[9] (if_pc_carry[21]),
        .lopt(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_49),
        .lopt_10(lopt_55),
        .lopt_11(lopt_56),
        .lopt_2(S117_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_51),
        .lopt_5(S122_in),
        .lopt_6(lopt_52),
        .lopt_7(lopt_53),
        .lopt_8(S127_in),
        .lopt_9(lopt_54));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_302 \Using_FPGA.Incr_PC[9].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(if_pc_carry[21]),
        .Q(\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[9] (\if_pc_reg[9]_0 ),
        .lopt(lopt_43),
        .lopt_1(lopt_44),
        .lopt_2(lopt_47));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[31]),
        .Q(ex_pc[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[21]),
        .Q(ex_pc[10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[20]),
        .Q(ex_pc[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[19]),
        .Q(ex_pc[12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[18]),
        .Q(ex_pc[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[17]),
        .Q(ex_pc[14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[16]),
        .Q(ex_pc[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[15]),
        .Q(ex_pc[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[14]),
        .Q(ex_pc[17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[13]),
        .Q(ex_pc[18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[12]),
        .Q(ex_pc[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[30]),
        .Q(ex_pc[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[11]),
        .Q(ex_pc[20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[10]),
        .Q(ex_pc[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[9]),
        .Q(ex_pc[22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[8]),
        .Q(ex_pc[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[7]),
        .Q(ex_pc[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[6]),
        .Q(ex_pc[25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[5]),
        .Q(ex_pc[26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[4]),
        .Q(ex_pc[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[3]),
        .Q(ex_pc[28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[2]),
        .Q(ex_pc[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[29]),
        .Q(ex_pc[2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[1]),
        .Q(ex_pc[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[0]),
        .Q(ex_pc[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[28]),
        .Q(ex_pc[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[27]),
        .Q(ex_pc[4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[26]),
        .Q(ex_pc[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[25]),
        .Q(ex_pc[6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[24]),
        .Q(ex_pc[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[23]),
        .Q(ex_pc[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[22]),
        .Q(ex_pc[9]),
        .R(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[0] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [31]),
        .Q(S152_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[10] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [21]),
        .Q(S102_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[11] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [20]),
        .Q(S97_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[12] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [19]),
        .Q(S92_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[13] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [18]),
        .Q(S87_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[14] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [17]),
        .Q(S82_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[15] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [16]),
        .Q(S77_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[16] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [15]),
        .Q(S72_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[17] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [14]),
        .Q(S67_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[18] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [13]),
        .Q(S62_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[19] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [12]),
        .Q(S57_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[1] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [30]),
        .Q(S147_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[20] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [11]),
        .Q(S52_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[21] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [10]),
        .Q(S47_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[22] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [9]),
        .Q(S42_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[23] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [8]),
        .Q(S37_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[24] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [7]),
        .Q(S32_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[25] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [6]),
        .Q(S27_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[26] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [5]),
        .Q(S22_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[27] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [4]),
        .Q(S17_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[28] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [3]),
        .Q(S12_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[29] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [2]),
        .Q(S),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[2] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [29]),
        .Q(S142_in),
        .S(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \if_pc_reg[30] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [1]),
        .Q(Q[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \if_pc_reg[31] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [0]),
        .Q(Q[0]),
        .R(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[3] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [28]),
        .Q(S137_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[4] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [27]),
        .Q(S132_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[5] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [26]),
        .Q(S127_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[6] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [25]),
        .Q(S122_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[7] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [24]),
        .Q(S117_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[8] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [23]),
        .Q(S112_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[9] 
       (.C(Clk),
        .CE(if_fetch_in_progress_reg),
        .D(\if_pc_reg[0]_0 [22]),
        .Q(S107_in),
        .S(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[0] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[0]),
        .Q(\Using_FPGA.Native [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[10] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[10]),
        .Q(\Using_FPGA.Native [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[11] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[11]),
        .Q(\Using_FPGA.Native [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[12] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[12]),
        .Q(\Using_FPGA.Native [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[13] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[13]),
        .Q(\Using_FPGA.Native [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[14] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[14]),
        .Q(\Using_FPGA.Native [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[15] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[15]),
        .Q(\Using_FPGA.Native [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[16] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[16]),
        .Q(\Using_FPGA.Native [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[17] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[17]),
        .Q(\Using_FPGA.Native [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[18] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[18]),
        .Q(\Using_FPGA.Native [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[19] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[19]),
        .Q(\Using_FPGA.Native [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[1] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[1]),
        .Q(\Using_FPGA.Native [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[20] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[20]),
        .Q(\Using_FPGA.Native [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[21] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[21]),
        .Q(\Using_FPGA.Native [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[22] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[22]),
        .Q(\Using_FPGA.Native [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[23] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[23]),
        .Q(\Using_FPGA.Native [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[24] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[24]),
        .Q(\Using_FPGA.Native [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[25] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[25]),
        .Q(\Using_FPGA.Native [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[26] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[26]),
        .Q(\Using_FPGA.Native [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[27] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[27]),
        .Q(\Using_FPGA.Native [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[28] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[28]),
        .Q(\Using_FPGA.Native [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[29] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[29]),
        .Q(\Using_FPGA.Native [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[2] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[2]),
        .Q(\Using_FPGA.Native [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[30] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[30]),
        .Q(\Using_FPGA.Native [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[31] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[31]),
        .Q(\Using_FPGA.Native [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[3] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[3]),
        .Q(\Using_FPGA.Native [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[4] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[4]),
        .Q(\Using_FPGA.Native [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[5] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[5]),
        .Q(\Using_FPGA.Native [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[6] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[6]),
        .Q(\Using_FPGA.Native [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[7] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[7]),
        .Q(\Using_FPGA.Native [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[8] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[8]),
        .Q(\Using_FPGA.Native [23]),
        .R(sync_reset));
  (* \PinAttr:D:HOLD_DETOUR  = "189" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[9] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[9]),
        .Q(\Using_FPGA.Native [22]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "PreFetch_Buffer_gti" *) 
module ublaze_sopc_microblaze_0_0__PreFetch_Buffer_gti
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    of_valid,
    of_instr,
    D,
    \ex_gpr_write_addr_reg[2] ,
    \ex_gpr_write_addr_reg[3] ,
    \ex_gpr_write_addr_reg[4] ,
    \ex_instr_reg[11] ,
    of_predecode,
    of_branch_with_delayslot118_out,
    ex_gpr_write_reg,
    of_read_imm_reg_ii_reg,
    ex_is_div_instr_I_reg,
    if_pre_buffer_addr,
    \if_pc_reg[0] ,
    I_AS,
    IFetch,
    if_fetch_for_timing_optimization1,
    ex_op1_cmp_eq_reg,
    ex_op1_cmp_eq1,
    ex_op1_cmp_eq_n5_out,
    force_Val2_N_reg,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    \EX_Op2_reg[0] ,
    \EX_ALU_Op_reg[0] ,
    ex_enable_alu_i_reg,
    \imm_reg_reg[15] ,
    ex_move_to_MSR_instr113_out,
    of_Sel_SPR_MSR1,
    use_Reg_Neg_S_reg,
    use_Reg_Neg_S_reg_0,
    \EX_Op3_reg[0] ,
    \EX_Branch_CMP_Op1_reg[0] ,
    ex_sel_alu_i0,
    EX_SWAP_Instr_reg,
    ex_load_shift_carry0,
    ex_mbar_is_sleep_cmb,
    ex_mbar_decode_cmb,
    \Using_FPGA.Native_2 ,
    D233_out,
    p_2_in,
    \EX_Sext_Op_reg[0] ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    ex_enable_sext_shift_i0,
    if_fetch_in_progress_reg,
    ex_gpr_write_dbg_reg,
    EX_CMP_Op_reg,
    EX_Unsigned_Op_reg,
    EX_Use_Carry_reg,
    ex_load_alu_carry_reg,
    ex_valid_jump_reg,
    ex_valid_reg,
    ex_valid_keep_reg,
    \Using_FPGA.Native_5 ,
    ex_jump_q_reg,
    use_Reg_Neg_S_reg_1,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    ex_alu_sel_logic_i_reg,
    ex_atomic_Instruction_Pair0,
    Dbg_Clean_Stop0,
    \EX_Op1_reg[31] ,
    \EX_Op1_reg[27] ,
    \EX_Op1_reg[26] ,
    \EX_Op1_reg[25] ,
    \EX_Op1_reg[24] ,
    \EX_Op1_reg[23] ,
    \EX_Op1_reg[22] ,
    \EX_Op1_reg[21] ,
    \EX_Op1_reg[20] ,
    \EX_Op1_reg[19] ,
    \EX_Op1_reg[18] ,
    \EX_Op1_reg[17] ,
    \EX_Op1_reg[16] ,
    \EX_Op1_reg[15] ,
    \EX_Op1_reg[14] ,
    \EX_Op1_reg[13] ,
    \EX_Op1_reg[12] ,
    \EX_Op1_reg[11] ,
    \EX_Op1_reg[10] ,
    \EX_Op1_reg[9] ,
    \EX_Op1_reg[8] ,
    \EX_Op1_reg[7] ,
    \EX_Op1_reg[6] ,
    \EX_Op1_reg[5] ,
    \EX_Op1_reg[4] ,
    \EX_Op1_reg[3] ,
    \EX_Op1_reg[2] ,
    \EX_Op1_reg[1] ,
    \EX_Op1_reg[30] ,
    \EX_Op1_reg[29] ,
    \EX_Op1_reg[28] ,
    I1_0,
    of_Sel_SPR_MSR88_out,
    ex_is_multi_or_load_instr0,
    of_op1_sel_spr,
    ex_set_bip,
    \Using_FPGA.Native_8 ,
    of_pause_reg,
    I5,
    sync_reset,
    Clk,
    I139_out,
    \wb_exception_kind_i_reg[28] ,
    ex_gpr_write_reg_0,
    wb_exception,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    mem_exception_from_ex_reg,
    LOCKSTEP_Master_Out,
    EX_Is_Div_Instr,
    E,
    ex_jump,
    out,
    if_fetch_in_progress,
    IB_Ready,
    in0,
    Q,
    in,
    ex_sel_alu_i_reg,
    WB_Doublet_Access_reg,
    MEM_Fwd,
    EX_SWAP_Instr_reg_0,
    WB_Doublet_Access_reg_0,
    \Using_FPGA.Native_9 ,
    EX_SWAP_Instr_reg_1,
    WB_Doublet_Access_reg_1,
    EX_SWAP_Instr_reg_2,
    WB_Doublet_Access_reg_2,
    EX_SWAP_Instr_reg_3,
    WB_Doublet_Access_reg_3,
    EX_SWAP_Instr_reg_4,
    WB_Doublet_Access_reg_4,
    EX_SWAP_Instr_reg_5,
    WB_Doublet_Access_reg_5,
    EX_SWAP_Instr_reg_6,
    WB_Doublet_Access_reg_6,
    EX_SWAP_Instr_reg_7,
    WB_Doublet_Access_reg_7,
    EX_SWAP_Instr_reg_8,
    WB_Doublet_Access_reg_8,
    EX_SWAP_Instr_reg_9,
    WB_Doublet_Access_reg_9,
    EX_SWAP_Instr_reg_10,
    WB_Doublet_Access_reg_10,
    EX_SWAP_Instr_reg_11,
    WB_Doublet_Access_reg_11,
    EX_SWAP_Instr_reg_12,
    WB_Doublet_Access_reg_12,
    EX_SWAP_Instr_reg_13,
    WB_Doublet_Access_reg_13,
    EX_SWAP_Instr_reg_14,
    WB_Doublet_Access_reg_14,
    EX_SWAP_Instr_reg_15,
    WB_Byte_Access_reg,
    EX_SWAP_Instr_reg_16,
    EX_SWAP_Instr_reg_17,
    EX_SWAP_Instr_reg_18,
    EX_SWAP_Instr_reg_19,
    EX_SWAP_Instr_reg_20,
    EX_SWAP_Instr_reg_21,
    EX_SWAP_Instr_reg_22,
    EX_SWAP_Instr_reg_23,
    EX_SWAP_Instr_reg_24,
    EX_SWAP_Instr_reg_25,
    EX_SWAP_Instr_reg_26,
    EX_SWAP_Instr_reg_27,
    EX_SWAP_Instr_reg_28,
    EX_SWAP_Instr_reg_29,
    EX_SWAP_Instr_reg_30,
    of_Take_Interrupt,
    GPR_Op2,
    of_read_imm_reg_ii_reg_0,
    \imm_reg_reg[0] ,
    mem_exception_from_ex,
    mem_valid_instr,
    ex_jump_nodelay_reg,
    of_read_ex_write_op2_conflict_part2,
    ex_is_multi_or_load_instr,
    of_read_ex_write_op2_conflict_part1,
    of_read_mem_write_op2_conflict_part2,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op2_conflict_part1,
    GPR_Op3,
    \mem_gpr_write_addr_reg[0] ,
    mem_gpr_write,
    p_222_in,
    GPR_Op1,
    \wb_gpr_write_addr_reg[0] ,
    p_29_in,
    \ex_gpr_write_addr_reg[0] ,
    ex_valid,
    p_225_in,
    ex_mbar_is_sleep,
    ex_mbar_decode,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    wb_valid_reg,
    wb_gpr_write_i,
    wb_reset,
    \ex_gpr_write_addr_reg[4]_0 ,
    I4,
    I0,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    \Performance_Debug_Control.dbg_state_nohalt_reg ,
    of_read_imm_reg_ii,
    ex_gpr_write_dbg,
    ex_valid_jump_reg_0,
    ex_valid_keep,
    IReady,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    if_missed_fetch,
    ex_branch_with_delayslot,
    ex_jump_q,
    \Using_FPGA.Native_10 ,
    ex_MSR);
  output [1:0]\Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output of_valid;
  output [5:0]of_instr;
  output [1:0]D;
  output \ex_gpr_write_addr_reg[2] ;
  output \ex_gpr_write_addr_reg[3] ;
  output \ex_gpr_write_addr_reg[4] ;
  output [20:0]\ex_instr_reg[11] ;
  output [0:10]of_predecode;
  output of_branch_with_delayslot118_out;
  output ex_gpr_write_reg;
  output of_read_imm_reg_ii_reg;
  output ex_is_div_instr_I_reg;
  output [0:0]if_pre_buffer_addr;
  output [0:0]\if_pc_reg[0] ;
  output I_AS;
  output [0:0]IFetch;
  output if_fetch_for_timing_optimization1;
  output ex_op1_cmp_eq_reg;
  output ex_op1_cmp_eq1;
  output ex_op1_cmp_eq_n5_out;
  output force_Val2_N_reg;
  output use_Reg_Neg_DI1_out;
  output force_Val10_out;
  output use_Reg_Neg_S3_out;
  output force12_out;
  output [31:0]\EX_Op2_reg[0] ;
  output [1:0]\EX_ALU_Op_reg[0] ;
  output ex_enable_alu_i_reg;
  output [0:0]\imm_reg_reg[15] ;
  output ex_move_to_MSR_instr113_out;
  output of_Sel_SPR_MSR1;
  output use_Reg_Neg_S_reg;
  output use_Reg_Neg_S_reg_0;
  output [31:0]\EX_Op3_reg[0] ;
  output [31:0]\EX_Branch_CMP_Op1_reg[0] ;
  output ex_sel_alu_i0;
  output EX_SWAP_Instr_reg;
  output ex_load_shift_carry0;
  output ex_mbar_is_sleep_cmb;
  output ex_mbar_decode_cmb;
  output \Using_FPGA.Native_2 ;
  output D233_out;
  output p_2_in;
  output [1:0]\EX_Sext_Op_reg[0] ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Performance_Debug_Control.ex_brki_hit_reg ;
  output ex_enable_sext_shift_i0;
  output if_fetch_in_progress_reg;
  output ex_gpr_write_dbg_reg;
  output EX_CMP_Op_reg;
  output EX_Unsigned_Op_reg;
  output EX_Use_Carry_reg;
  output ex_load_alu_carry_reg;
  output ex_valid_jump_reg;
  output ex_valid_reg;
  output ex_valid_keep_reg;
  output \Using_FPGA.Native_5 ;
  output ex_jump_q_reg;
  output use_Reg_Neg_S_reg_1;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output ex_alu_sel_logic_i_reg;
  output ex_atomic_Instruction_Pair0;
  output Dbg_Clean_Stop0;
  output \EX_Op1_reg[31] ;
  output \EX_Op1_reg[27] ;
  output \EX_Op1_reg[26] ;
  output \EX_Op1_reg[25] ;
  output \EX_Op1_reg[24] ;
  output \EX_Op1_reg[23] ;
  output \EX_Op1_reg[22] ;
  output \EX_Op1_reg[21] ;
  output \EX_Op1_reg[20] ;
  output \EX_Op1_reg[19] ;
  output \EX_Op1_reg[18] ;
  output \EX_Op1_reg[17] ;
  output \EX_Op1_reg[16] ;
  output \EX_Op1_reg[15] ;
  output \EX_Op1_reg[14] ;
  output \EX_Op1_reg[13] ;
  output \EX_Op1_reg[12] ;
  output \EX_Op1_reg[11] ;
  output \EX_Op1_reg[10] ;
  output \EX_Op1_reg[9] ;
  output \EX_Op1_reg[8] ;
  output \EX_Op1_reg[7] ;
  output \EX_Op1_reg[6] ;
  output \EX_Op1_reg[5] ;
  output \EX_Op1_reg[4] ;
  output \EX_Op1_reg[3] ;
  output \EX_Op1_reg[2] ;
  output \EX_Op1_reg[1] ;
  output \EX_Op1_reg[30] ;
  output \EX_Op1_reg[29] ;
  output \EX_Op1_reg[28] ;
  output I1_0;
  output of_Sel_SPR_MSR88_out;
  output ex_is_multi_or_load_instr0;
  output of_op1_sel_spr;
  output ex_set_bip;
  output [0:0]\Using_FPGA.Native_8 ;
  input of_pause_reg;
  input I5;
  input sync_reset;
  input Clk;
  input I139_out;
  input \wb_exception_kind_i_reg[28] ;
  input ex_gpr_write_reg_0;
  input wb_exception;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input mem_exception_from_ex_reg;
  input [0:0]LOCKSTEP_Master_Out;
  input EX_Is_Div_Instr;
  input [0:0]E;
  input ex_jump;
  input out;
  input if_fetch_in_progress;
  input IB_Ready;
  input in0;
  input [2:0]Q;
  input [32:0]in;
  input ex_sel_alu_i_reg;
  input WB_Doublet_Access_reg;
  input [3:0]MEM_Fwd;
  input EX_SWAP_Instr_reg_0;
  input WB_Doublet_Access_reg_0;
  input [27:0]\Using_FPGA.Native_9 ;
  input EX_SWAP_Instr_reg_1;
  input WB_Doublet_Access_reg_1;
  input EX_SWAP_Instr_reg_2;
  input WB_Doublet_Access_reg_2;
  input EX_SWAP_Instr_reg_3;
  input WB_Doublet_Access_reg_3;
  input EX_SWAP_Instr_reg_4;
  input WB_Doublet_Access_reg_4;
  input EX_SWAP_Instr_reg_5;
  input WB_Doublet_Access_reg_5;
  input EX_SWAP_Instr_reg_6;
  input WB_Doublet_Access_reg_6;
  input EX_SWAP_Instr_reg_7;
  input WB_Doublet_Access_reg_7;
  input EX_SWAP_Instr_reg_8;
  input WB_Doublet_Access_reg_8;
  input EX_SWAP_Instr_reg_9;
  input WB_Doublet_Access_reg_9;
  input EX_SWAP_Instr_reg_10;
  input WB_Doublet_Access_reg_10;
  input EX_SWAP_Instr_reg_11;
  input WB_Doublet_Access_reg_11;
  input EX_SWAP_Instr_reg_12;
  input WB_Doublet_Access_reg_12;
  input EX_SWAP_Instr_reg_13;
  input WB_Doublet_Access_reg_13;
  input EX_SWAP_Instr_reg_14;
  input WB_Doublet_Access_reg_14;
  input EX_SWAP_Instr_reg_15;
  input [15:0]WB_Byte_Access_reg;
  input EX_SWAP_Instr_reg_16;
  input EX_SWAP_Instr_reg_17;
  input EX_SWAP_Instr_reg_18;
  input EX_SWAP_Instr_reg_19;
  input EX_SWAP_Instr_reg_20;
  input EX_SWAP_Instr_reg_21;
  input EX_SWAP_Instr_reg_22;
  input EX_SWAP_Instr_reg_23;
  input EX_SWAP_Instr_reg_24;
  input EX_SWAP_Instr_reg_25;
  input EX_SWAP_Instr_reg_26;
  input EX_SWAP_Instr_reg_27;
  input EX_SWAP_Instr_reg_28;
  input EX_SWAP_Instr_reg_29;
  input EX_SWAP_Instr_reg_30;
  input of_Take_Interrupt;
  input [0:31]GPR_Op2;
  input of_read_imm_reg_ii_reg_0;
  input [15:0]\imm_reg_reg[0] ;
  input mem_exception_from_ex;
  input mem_valid_instr;
  input ex_jump_nodelay_reg;
  input of_read_ex_write_op2_conflict_part2;
  input ex_is_multi_or_load_instr;
  input of_read_ex_write_op2_conflict_part1;
  input of_read_mem_write_op2_conflict_part2;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op2_conflict_part1;
  input [0:31]GPR_Op3;
  input [4:0]\mem_gpr_write_addr_reg[0] ;
  input mem_gpr_write;
  input p_222_in;
  input [0:31]GPR_Op1;
  input [4:0]\wb_gpr_write_addr_reg[0] ;
  input p_29_in;
  input [1:0]\ex_gpr_write_addr_reg[0] ;
  input ex_valid;
  input p_225_in;
  input ex_mbar_is_sleep;
  input ex_mbar_decode;
  input [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  input wb_valid_reg;
  input wb_gpr_write_i;
  input wb_reset;
  input \ex_gpr_write_addr_reg[4]_0 ;
  input I4;
  input I0;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input [0:0]\Performance_Debug_Control.dbg_state_nohalt_reg ;
  input of_read_imm_reg_ii;
  input ex_gpr_write_dbg;
  input ex_valid_jump_reg_0;
  input ex_valid_keep;
  input IReady;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input [0:0]\Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input if_missed_fetch;
  input ex_branch_with_delayslot;
  input ex_jump_q;
  input [31:0]\Using_FPGA.Native_10 ;
  input [2:0]ex_MSR;

  wire Clk;
  wire [1:0]D;
  wire D233_out;
  wire Dbg_Clean_Stop0;
  wire [0:0]E;
  wire EX_ALU_Op1__1;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire [31:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire EX_CMP_Op_reg;
  wire EX_Is_Div_Instr;
  wire \EX_Op1_reg[10] ;
  wire \EX_Op1_reg[11] ;
  wire \EX_Op1_reg[12] ;
  wire \EX_Op1_reg[13] ;
  wire \EX_Op1_reg[14] ;
  wire \EX_Op1_reg[15] ;
  wire \EX_Op1_reg[16] ;
  wire \EX_Op1_reg[17] ;
  wire \EX_Op1_reg[18] ;
  wire \EX_Op1_reg[19] ;
  wire \EX_Op1_reg[1] ;
  wire \EX_Op1_reg[20] ;
  wire \EX_Op1_reg[21] ;
  wire \EX_Op1_reg[22] ;
  wire \EX_Op1_reg[23] ;
  wire \EX_Op1_reg[24] ;
  wire \EX_Op1_reg[25] ;
  wire \EX_Op1_reg[26] ;
  wire \EX_Op1_reg[27] ;
  wire \EX_Op1_reg[28] ;
  wire \EX_Op1_reg[29] ;
  wire \EX_Op1_reg[2] ;
  wire \EX_Op1_reg[30] ;
  wire \EX_Op1_reg[31] ;
  wire \EX_Op1_reg[3] ;
  wire \EX_Op1_reg[4] ;
  wire \EX_Op1_reg[5] ;
  wire \EX_Op1_reg[6] ;
  wire \EX_Op1_reg[7] ;
  wire \EX_Op1_reg[8] ;
  wire \EX_Op1_reg[9] ;
  wire [31:0]\EX_Op2_reg[0] ;
  wire [31:0]\EX_Op3_reg[0] ;
  wire EX_SWAP_Instr_reg;
  wire EX_SWAP_Instr_reg_0;
  wire EX_SWAP_Instr_reg_1;
  wire EX_SWAP_Instr_reg_10;
  wire EX_SWAP_Instr_reg_11;
  wire EX_SWAP_Instr_reg_12;
  wire EX_SWAP_Instr_reg_13;
  wire EX_SWAP_Instr_reg_14;
  wire EX_SWAP_Instr_reg_15;
  wire EX_SWAP_Instr_reg_16;
  wire EX_SWAP_Instr_reg_17;
  wire EX_SWAP_Instr_reg_18;
  wire EX_SWAP_Instr_reg_19;
  wire EX_SWAP_Instr_reg_2;
  wire EX_SWAP_Instr_reg_20;
  wire EX_SWAP_Instr_reg_21;
  wire EX_SWAP_Instr_reg_22;
  wire EX_SWAP_Instr_reg_23;
  wire EX_SWAP_Instr_reg_24;
  wire EX_SWAP_Instr_reg_25;
  wire EX_SWAP_Instr_reg_26;
  wire EX_SWAP_Instr_reg_27;
  wire EX_SWAP_Instr_reg_28;
  wire EX_SWAP_Instr_reg_29;
  wire EX_SWAP_Instr_reg_3;
  wire EX_SWAP_Instr_reg_30;
  wire EX_SWAP_Instr_reg_4;
  wire EX_SWAP_Instr_reg_5;
  wire EX_SWAP_Instr_reg_6;
  wire EX_SWAP_Instr_reg_7;
  wire EX_SWAP_Instr_reg_8;
  wire EX_SWAP_Instr_reg_9;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire EX_Unsigned_Op_reg;
  wire EX_Use_Carry_reg;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire I0;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I0129_out;
  wire I0133_out;
  wire I0137_out;
  wire I013_out;
  wire I0141_out;
  wire I0145_out;
  wire I0149_out;
  wire I0153_out;
  wire I0157_out;
  wire I0161_out;
  wire I0165_out;
  wire I0169_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I041_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire I0_1;
  wire I1;
  wire I1103_out;
  wire I1107_out;
  wire I1111_out;
  wire I1115_out;
  wire I1119_out;
  wire I111_out;
  wire I1123_out;
  wire I1127_out;
  wire I1131_out;
  wire I1135_out;
  wire I1139_out;
  wire I1143_out;
  wire I1147_out;
  wire I1151_out;
  wire I1155_out;
  wire I1159_out;
  wire I115_out;
  wire I1163_out;
  wire I1167_out;
  wire I119_out;
  wire I123_out;
  wire I127_out;
  wire I131_out;
  wire I135_out;
  wire I139_out;
  wire I13_out;
  wire I143_out;
  wire I147_out;
  wire I151_out;
  wire I155_out;
  wire I159_out;
  wire I163_out;
  wire I167_out;
  wire I171_out;
  wire I175_out;
  wire I179_out;
  wire I17_out;
  wire I183_out;
  wire I187_out;
  wire I191_out;
  wire I195_out;
  wire I199_out;
  wire I1_0;
  wire I4;
  wire I4_0;
  wire I5;
  wire IB_Ready;
  wire [0:0]IFetch;
  wire IReady;
  wire I_AS;
  wire \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_10 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_11 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_12 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_13 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_14 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_15 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_16 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_17 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_18 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_19 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_20 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_21 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_22 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_23 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_24 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_25 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_26 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_27 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_28 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_29 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_30 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_31 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_32 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_33 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_34 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_35 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_36 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_6 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_7 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_8 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_9 ;
  wire \Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_4 ;
  wire \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_5 ;
  wire \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_6 ;
  wire \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_10 ;
  wire \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_11 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_4 ;
  wire [0:0]LOCKSTEP_Master_Out;
  wire [3:0]MEM_Fwd;
  wire OF_Op1_Sel_SPR_PC0__0;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]\Performance_Debug_Control.dbg_state_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performance_Debug_Control.ex_brki_hit_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire [2:0]Q;
  wire [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  wire [0:0]\Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire [1:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [31:0]\Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire [0:0]\Using_FPGA.Native_8 ;
  wire [27:0]\Using_FPGA.Native_9 ;
  wire [15:0]WB_Byte_Access_reg;
  wire WB_Doublet_Access_reg;
  wire WB_Doublet_Access_reg_0;
  wire WB_Doublet_Access_reg_1;
  wire WB_Doublet_Access_reg_10;
  wire WB_Doublet_Access_reg_11;
  wire WB_Doublet_Access_reg_12;
  wire WB_Doublet_Access_reg_13;
  wire WB_Doublet_Access_reg_14;
  wire WB_Doublet_Access_reg_2;
  wire WB_Doublet_Access_reg_3;
  wire WB_Doublet_Access_reg_4;
  wire WB_Doublet_Access_reg_5;
  wire WB_Doublet_Access_reg_6;
  wire WB_Doublet_Access_reg_7;
  wire WB_Doublet_Access_reg_8;
  wire WB_Doublet_Access_reg_9;
  wire [2:0]ex_MSR;
  wire ex_alu_sel_logic_i_reg;
  wire ex_atomic_Instruction_Pair0;
  wire ex_branch_with_delayslot;
  wire ex_branch_with_delayslot_i;
  wire ex_enable_alu_i_reg;
  wire ex_enable_sext_shift_i0;
  wire ex_gpr_write111_out__0;
  wire [1:0]\ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[2] ;
  wire \ex_gpr_write_addr_reg[3] ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire \ex_gpr_write_addr_reg[4]_0 ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_dbg_reg;
  wire ex_gpr_write_reg;
  wire ex_gpr_write_reg_0;
  wire [20:0]\ex_instr_reg[11] ;
  wire ex_is_div_instr_I_reg;
  wire ex_is_multi_or_load_instr;
  wire ex_is_multi_or_load_instr0;
  wire ex_jump;
  wire ex_jump_nodelay_reg;
  wire ex_jump_q;
  wire ex_jump_q_reg;
  wire ex_load_alu_carry_reg;
  wire ex_load_shift_carry0;
  wire ex_mbar_decode;
  wire ex_mbar_decode_cmb;
  wire ex_mbar_is_sleep;
  wire ex_mbar_is_sleep_cmb;
  wire ex_move_to_MSR_instr113_out;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_op1_cmp_eq_reg;
  wire ex_sel_alu_i0;
  wire ex_sel_alu_i_reg;
  wire ex_set_bip;
  wire ex_set_bip0__1;
  wire ex_valid;
  wire ex_valid_jump_reg;
  wire ex_valid_jump_reg_0;
  wire ex_valid_keep;
  wire ex_valid_keep_reg;
  wire ex_valid_reg;
  wire force12_out;
  wire force_Val10_out;
  wire force_Val2_N_reg;
  wire \ibuffer_reg[3][42]_srl4_n_0 ;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  wire if_fetch_in_progress_reg;
  wire if_missed_fetch;
  wire [0:0]\if_pc_reg[0] ;
  wire [0:0]if_pre_buffer_addr;
  wire [1:2]if_sel_input;
  wire [15:0]\imm_reg_reg[0] ;
  wire [0:0]\imm_reg_reg[15] ;
  wire [32:0]in;
  wire in0;
  wire mem_exception_from_ex;
  wire mem_exception_from_ex_reg;
  wire mem_gpr_write;
  wire [4:0]\mem_gpr_write_addr_reg[0] ;
  wire mem_is_multi_or_load_instr;
  wire mem_valid_instr;
  wire of_Imm180;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire of_Take_Interrupt;
  wire of_Valid_II;
  wire of_branch_with_delayslot118_out;
  wire [5:0]of_instr;
  wire of_instr_ii_0;
  wire of_instr_ii_1;
  wire of_instr_ii_10;
  wire of_instr_ii_11;
  wire of_instr_ii_12;
  wire of_instr_ii_13;
  wire of_instr_ii_14;
  wire of_instr_ii_15;
  wire of_instr_ii_16;
  wire of_instr_ii_17;
  wire of_instr_ii_18;
  wire of_instr_ii_19;
  wire of_instr_ii_2;
  wire of_instr_ii_20;
  wire of_instr_ii_21;
  wire of_instr_ii_22;
  wire of_instr_ii_23;
  wire of_instr_ii_24;
  wire of_instr_ii_25;
  wire of_instr_ii_26;
  wire of_instr_ii_27;
  wire of_instr_ii_28;
  wire of_instr_ii_29;
  wire of_instr_ii_3;
  wire of_instr_ii_30;
  wire of_instr_ii_31;
  wire of_instr_ii_32;
  wire of_instr_ii_33;
  wire of_instr_ii_34;
  wire of_instr_ii_35;
  wire of_instr_ii_36;
  wire of_instr_ii_37;
  wire of_instr_ii_38;
  wire of_instr_ii_39;
  wire of_instr_ii_4;
  wire of_instr_ii_40;
  wire of_instr_ii_41;
  wire of_instr_ii_42;
  wire of_instr_ii_5;
  wire of_instr_ii_6;
  wire of_instr_ii_7;
  wire of_instr_ii_8;
  wire of_instr_ii_9;
  wire of_op1_sel_spr;
  wire [4:4]of_op2_imm_addr;
  wire of_op2_sel_imm;
  wire of_pause_reg;
  wire [0:10]of_predecode;
  wire of_read_ex_write_op2_conflict_part1;
  wire of_read_ex_write_op2_conflict_part2;
  wire of_read_imm_reg_ii;
  wire of_read_imm_reg_ii_reg;
  wire of_read_imm_reg_ii_reg_0;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire of_valid;
  wire out;
  wire p_0_in31_in;
  wire p_1_in104_in;
  wire p_1_in109_in;
  wire p_1_in114_in;
  wire p_1_in119_in;
  wire p_1_in124_in;
  wire p_1_in129_in;
  wire p_1_in134_in;
  wire p_1_in139_in;
  wire p_1_in144_in;
  wire p_1_in149_in;
  wire p_1_in14_in;
  wire p_1_in154_in;
  wire p_1_in159_in;
  wire p_1_in164_in;
  wire p_1_in169_in;
  wire p_1_in174_in;
  wire p_1_in179_in;
  wire p_1_in184_in;
  wire p_1_in189_in;
  wire p_1_in194_in;
  wire p_1_in199_in;
  wire p_1_in19_in;
  wire p_1_in204_in;
  wire p_1_in209_in;
  wire p_1_in24_in;
  wire p_1_in26_in;
  wire p_1_in29_in;
  wire p_1_in34_in;
  wire p_1_in39_in;
  wire p_1_in44_in;
  wire p_1_in4_in;
  wire p_1_in54_in;
  wire p_1_in59_in;
  wire p_1_in64_in;
  wire p_1_in69_in;
  wire p_1_in74_in;
  wire p_1_in79_in;
  wire p_1_in84_in;
  wire p_1_in89_in;
  wire p_1_in94_in;
  wire p_1_in99_in;
  wire p_1_in9_in;
  wire p_222_in;
  wire p_225_in;
  wire p_28_in;
  wire p_29_in;
  wire p_2_in;
  wire sel_input_delayslot;
  wire sel_input_i_0;
  wire sel_input_i_1;
  wire sel_input_iii_0;
  wire sel_input_iii_1;
  wire sel_input_iii_2;
  wire sel_input_iii_3;
  wire sync_reset;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;
  wire use_Reg_Neg_S_reg;
  wire use_Reg_Neg_S_reg_0;
  wire use_Reg_Neg_S_reg_1;
  wire wb_exception;
  wire \wb_exception_kind_i_reg[28] ;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire wb_gpr_write_i;
  wire wb_reset;
  wire wb_valid_reg;

  ublaze_sopc_microblaze_0_0__MB_FDR_116 \Gen_Mux_Select_LUT6[1].Gen_Sel_DFF 
       (.Clk(Clk),
        .addr(\Using_FPGA.Native [1]),
        .sel_input_iii_3(sel_input_iii_3),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_LUT6 \Gen_Mux_Select_LUT6[1].Mux_Select_LUT6 
       (.I5(I5),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Using_FPGA.Native_1 ),
        .addr(\Using_FPGA.Native [1]),
        .if_sel_input(if_sel_input[1]),
        .of_pause_reg(of_pause_reg),
        .sel_input_iii_3(sel_input_iii_3));
  ublaze_sopc_microblaze_0_0__MB_FDR_117 \Gen_Mux_Select_LUT6[2].Gen_Sel_DFF 
       (.Clk(Clk),
        .IB_Ready(IB_Ready),
        .IFetch(IFetch),
        .I_AS(I_AS),
        .\Performance_Debug_Control.dbg_state_nohalt_reg (\Performance_Debug_Control.dbg_state_nohalt_reg ),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [1]),
        .addr(if_pre_buffer_addr),
        .ex_jump(ex_jump),
        .if_fetch_for_timing_optimization1(if_fetch_for_timing_optimization1),
        .if_fetch_in_progress(if_fetch_in_progress),
        .if_fetch_in_progress_reg(if_fetch_in_progress_reg),
        .\if_pc_reg[0] (\if_pc_reg[0] ),
        .if_sel_input(if_sel_input[1]),
        .in0(in0),
        .out(out),
        .sel_input_iii_2(sel_input_iii_2),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_LUT6_118 \Gen_Mux_Select_LUT6[2].Mux_Select_LUT6 
       (.I5(I5),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Using_FPGA.Native_1 ),
        .addr(\Using_FPGA.Native [1]),
        .if_sel_input({if_sel_input[1],if_sel_input[2]}),
        .of_pause_reg(of_pause_reg),
        .sel_input_iii_2(sel_input_iii_2));
  ublaze_sopc_microblaze_0_0__MB_FDR_119 \Gen_Mux_Select_LUT6[3].Gen_Sel_DFF 
       (.Clk(Clk),
        .if_sel_input(if_sel_input[2]),
        .sel_input_iii_1(sel_input_iii_1),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_LUT6_120 \Gen_Mux_Select_LUT6[3].Mux_Select_LUT6 
       (.I5(I5),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input({if_sel_input[1],if_sel_input[2]}),
        .of_pause_reg(of_pause_reg),
        .sel_input_iii_1(sel_input_iii_1));
  ublaze_sopc_microblaze_0_0__MB_FDR_121 \Gen_Mux_Select_LUT6[4].Gen_Sel_DFF 
       (.Clk(Clk),
        .I1(I1),
        .I1103_out(I1103_out),
        .I1107_out(I1107_out),
        .I1111_out(I1111_out),
        .I1115_out(I1115_out),
        .I1119_out(I1119_out),
        .I111_out(I111_out),
        .I1123_out(I1123_out),
        .I1127_out(I1127_out),
        .I1131_out(I1131_out),
        .I1135_out(I1135_out),
        .I1139_out(I1139_out),
        .I1143_out(I1143_out),
        .I1147_out(I1147_out),
        .I1151_out(I1151_out),
        .I1155_out(I1155_out),
        .I1159_out(I1159_out),
        .I115_out(I115_out),
        .I1163_out(I1163_out),
        .I1167_out(I1167_out),
        .I119_out(I119_out),
        .I123_out(I123_out),
        .I127_out(I127_out),
        .I131_out(I131_out),
        .I135_out(I135_out),
        .I13_out(I13_out),
        .I143_out(I143_out),
        .I147_out(I147_out),
        .I151_out(I151_out),
        .I155_out(I155_out),
        .I159_out(I159_out),
        .I163_out(I163_out),
        .I167_out(I167_out),
        .I171_out(I171_out),
        .I175_out(I175_out),
        .I179_out(I179_out),
        .I17_out(I17_out),
        .I183_out(I183_out),
        .I187_out(I187_out),
        .I191_out(I191_out),
        .I195_out(I195_out),
        .I199_out(I199_out),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .in({in[32:11],in[9:0]}),
        .out({p_1_in209_in,p_1_in204_in,p_1_in199_in,p_1_in194_in,p_1_in189_in,p_1_in184_in,p_1_in179_in,p_1_in174_in,p_1_in169_in,p_1_in164_in,p_1_in159_in,p_1_in154_in,p_1_in149_in,p_1_in144_in,p_1_in139_in,p_1_in134_in,p_1_in129_in,p_1_in124_in,p_1_in119_in,p_1_in114_in,p_1_in109_in,p_1_in104_in,p_1_in99_in,p_1_in94_in,p_1_in89_in,p_1_in84_in,p_1_in79_in,p_1_in74_in,p_1_in69_in,p_1_in64_in,p_1_in59_in,p_1_in54_in,p_1_in44_in,p_1_in39_in,p_1_in34_in,p_1_in29_in,p_1_in24_in,p_1_in19_in,p_1_in14_in,p_1_in9_in,p_1_in4_in,\ibuffer_reg[3][42]_srl4_n_0 }),
        .sel_input_i_1(sel_input_i_1),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_LUT6_122 \Gen_Mux_Select_LUT6[4].Mux_Select_LUT6 
       (.I5(I5),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[2]),
        .of_pause_reg(of_pause_reg),
        .sel_input_iii_0(sel_input_iii_0));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized2 \Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Mux_Select_Delayslot_LUT6 
       (.I5(I5),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[2]),
        .of_pause_reg(of_pause_reg),
        .sel_input_delayslot(sel_input_delayslot));
  ublaze_sopc_microblaze_0_0__MB_MUXF7 \Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Sel_Mux_MUXF7 
       (.I4_0(I4_0),
        .Q(Q),
        .ex_branch_with_delayslot_i(ex_branch_with_delayslot_i),
        .sel_input_delayslot(sel_input_delayslot),
        .sel_input_i_1(sel_input_i_1),
        .sel_input_iii_0(sel_input_iii_0),
        .wb_exception(wb_exception));
  ublaze_sopc_microblaze_0_0__MB_FDR_123 \Instruction_Prefetch_Mux[0].Gen_Instr_DFF 
       (.Clk(Clk),
        .E(E),
        .EX_ALU_Op1__1(EX_ALU_Op1__1),
        .EX_CMP_Op_reg(EX_CMP_Op_reg),
        .EX_Is_Div_Instr(EX_Is_Div_Instr),
        .EX_Unsigned_Op_reg(EX_Unsigned_Op_reg),
        .EX_Use_Carry_reg(EX_Use_Carry_reg),
        .OF_Op1_Sel_SPR_PC0__0(OF_Op1_Sel_SPR_PC0__0),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_2 (of_instr[4]),
        .\Using_FPGA.Native_3 (of_instr[0]),
        .\Using_FPGA.Native_4 (of_instr[2]),
        .\Using_FPGA.Native_5 (of_instr[1]),
        .\Using_FPGA.Native_6 (of_instr[3]),
        .\Using_FPGA.Native_7 (\ex_instr_reg[11] [0]),
        .\Using_FPGA.Native_8 (\ex_instr_reg[11] [1]),
        .ex_gpr_write_dbg_reg(\Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2 ),
        .ex_is_div_instr_I_reg(ex_is_div_instr_I_reg),
        .ex_jump(ex_jump),
        .ex_jump_nodelay_reg(ex_jump_nodelay_reg),
        .\ex_opcode_reg[0] (of_instr[5]),
        .of_instr_ii_42(of_instr_ii_42),
        .of_pause_reg(of_pause_reg),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_124 \Instruction_Prefetch_Mux[0].Instr_Mux_MUXF7 
       (.I0169_out(I0169_out),
        .I1167_out(I1167_out),
        .of_instr_ii_42(of_instr_ii_42),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_125 \Instruction_Prefetch_Mux[10].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3_reg[31] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ),
        .\EX_Op3_reg[31]_0 (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2 ),
        .\EX_Op3_reg[31]_1 (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3 ),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (\ex_gpr_write_addr_reg[2] ),
        .\Using_FPGA.Native_1 (\ex_gpr_write_addr_reg[3] ),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg[4] ),
        .\ex_gpr_write_addr_reg[4]_0 (\ex_gpr_write_addr_reg[4]_0 ),
        .\mem_gpr_write_addr_reg[2] (\mem_gpr_write_addr_reg[0] [2:0]),
        .of_instr_ii_32(of_instr_ii_32),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[2] (\wb_gpr_write_addr_reg[0] [2:0]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_126 \Instruction_Prefetch_Mux[10].Instr_Mux_MUXF7 
       (.I0129_out(I0129_out),
        .I1127_out(I1127_out),
        .of_instr_ii_32(of_instr_ii_32),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_127 \Instruction_Prefetch_Mux[11].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [18]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [19]),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_4 (\Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1 ),
        .\ex_instr_reg[11] (\ex_instr_reg[11] [20]),
        .ex_set_bip0__1(ex_set_bip0__1),
        .of_Imm180(of_Imm180),
        .of_instr_ii_31(of_instr_ii_31),
        .p_1_in26_in(p_1_in26_in),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_128 \Instruction_Prefetch_Mux[11].Instr_Mux_MUXF7 
       (.I0125_out(I0125_out),
        .I1123_out(I1123_out),
        .of_instr_ii_31(of_instr_ii_31),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_129 \Instruction_Prefetch_Mux[12].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_ALU_Op1__1(EX_ALU_Op1__1),
        .\EX_ALU_Op_reg[1] (\EX_ALU_Op_reg[0] [0]),
        .\Using_FPGA.Native_0 (of_instr[0]),
        .\Using_FPGA.Native_1 (of_instr[5]),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_5 ),
        .\Using_FPGA.Native_3 (of_instr[2]),
        .\Using_FPGA.Native_4 (of_instr[4]),
        .\Using_FPGA.Native_5 (of_instr[3]),
        .\Using_FPGA.Native_6 (\ex_instr_reg[11] [10]),
        .ex_enable_alu_i_reg(ex_enable_alu_i_reg),
        .\ex_instr_reg[12] (\ex_instr_reg[11] [19]),
        .of_Take_Interrupt(of_Take_Interrupt),
        .of_instr_ii_30(of_instr_ii_30),
        .p_28_in(p_28_in),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_130 \Instruction_Prefetch_Mux[12].Instr_Mux_MUXF7 
       (.I0121_out(I0121_out),
        .I1119_out(I1119_out),
        .of_instr_ii_30(of_instr_ii_30),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_131 \Instruction_Prefetch_Mux[13].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[13] (\ex_instr_reg[11] [18]),
        .of_instr_ii_29(of_instr_ii_29),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_132 \Instruction_Prefetch_Mux[13].Instr_Mux_MUXF7 
       (.I0117_out(I0117_out),
        .I1115_out(I1115_out),
        .of_instr_ii_29(of_instr_ii_29),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_133 \Instruction_Prefetch_Mux[14].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[14] (\ex_instr_reg[11] [17]),
        .of_instr_ii_28(of_instr_ii_28),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_134 \Instruction_Prefetch_Mux[14].Instr_Mux_MUXF7 
       (.I0113_out(I0113_out),
        .I1111_out(I1111_out),
        .of_instr_ii_28(of_instr_ii_28),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_135 \Instruction_Prefetch_Mux[15].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[15] (\ex_instr_reg[11] [16]),
        .of_instr_ii_27(of_instr_ii_27),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_136 \Instruction_Prefetch_Mux[15].Instr_Mux_MUXF7 
       (.I0109_out(I0109_out),
        .I1107_out(I1107_out),
        .of_instr_ii_27(of_instr_ii_27),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_137 \Instruction_Prefetch_Mux[16].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[16] (\ex_instr_reg[11] [15]),
        .of_instr_ii_26(of_instr_ii_26),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_138 \Instruction_Prefetch_Mux[16].Instr_Mux_MUXF7 
       (.I0105_out(I0105_out),
        .I1103_out(I1103_out),
        .of_instr_ii_26(of_instr_ii_26),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_139 \Instruction_Prefetch_Mux[17].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [13]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [15]),
        .\ex_instr_reg[17] (\ex_instr_reg[11] [14]),
        .of_instr_ii_25(of_instr_ii_25),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_140 \Instruction_Prefetch_Mux[17].Instr_Mux_MUXF7 
       (.I0101_out(I0101_out),
        .I199_out(I199_out),
        .of_instr_ii_25(of_instr_ii_25),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_141 \Instruction_Prefetch_Mux[18].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[18] (\ex_instr_reg[11] [13]),
        .of_instr_ii_24(of_instr_ii_24),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_142 \Instruction_Prefetch_Mux[18].Instr_Mux_MUXF7 
       (.I097_out(I097_out),
        .I195_out(I195_out),
        .of_instr_ii_24(of_instr_ii_24),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_143 \Instruction_Prefetch_Mux[19].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[19] (\ex_instr_reg[11] [12]),
        .of_instr_ii_23(of_instr_ii_23),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_144 \Instruction_Prefetch_Mux[19].Instr_Mux_MUXF7 
       (.I093_out(I093_out),
        .I191_out(I191_out),
        .of_instr_ii_23(of_instr_ii_23),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_145 \Instruction_Prefetch_Mux[1].Gen_Instr_DFF 
       (.Clk(Clk),
        .E(E),
        .EX_ALU_Op1__1(EX_ALU_Op1__1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] [1]),
        .\EX_Op2_reg[0] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_6 ),
        .\EX_Op2_reg[10] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_16 ),
        .\EX_Op2_reg[11] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_17 ),
        .\EX_Op2_reg[12] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_18 ),
        .\EX_Op2_reg[13] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_19 ),
        .\EX_Op2_reg[14] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_20 ),
        .\EX_Op2_reg[15] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_21 ),
        .\EX_Op2_reg[16] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_22 ),
        .\EX_Op2_reg[17] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_23 ),
        .\EX_Op2_reg[18] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_24 ),
        .\EX_Op2_reg[19] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_25 ),
        .\EX_Op2_reg[1] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_7 ),
        .\EX_Op2_reg[20] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_26 ),
        .\EX_Op2_reg[21] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_27 ),
        .\EX_Op2_reg[22] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_28 ),
        .\EX_Op2_reg[23] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_29 ),
        .\EX_Op2_reg[24] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_30 ),
        .\EX_Op2_reg[25] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_31 ),
        .\EX_Op2_reg[26] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_32 ),
        .\EX_Op2_reg[28] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_33 ),
        .\EX_Op2_reg[29] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_34 ),
        .\EX_Op2_reg[2] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_8 ),
        .\EX_Op2_reg[30] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_35 ),
        .\EX_Op2_reg[31] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_36 ),
        .\EX_Op2_reg[3] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_9 ),
        .\EX_Op2_reg[4] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_10 ),
        .\EX_Op2_reg[5] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_11 ),
        .\EX_Op2_reg[6] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_12 ),
        .\EX_Op2_reg[7] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_13 ),
        .\EX_Op2_reg[8] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_14 ),
        .\EX_Op2_reg[9] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_15 ),
        .GPR_Op2(GPR_Op2),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [4]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [15]),
        .\Using_FPGA.Native_10 (\ex_instr_reg[11] [6]),
        .\Using_FPGA.Native_11 (\ex_instr_reg[11] [5]),
        .\Using_FPGA.Native_12 (\ex_instr_reg[11] [3]),
        .\Using_FPGA.Native_13 (\ex_instr_reg[11] [2]),
        .\Using_FPGA.Native_14 (\ex_instr_reg[11] [1]),
        .\Using_FPGA.Native_15 (\ex_instr_reg[11] [0]),
        .\Using_FPGA.Native_16 (of_instr[5]),
        .\Using_FPGA.Native_17 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_5 ),
        .\Using_FPGA.Native_18 (of_instr[1]),
        .\Using_FPGA.Native_19 (of_instr[2]),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [14]),
        .\Using_FPGA.Native_20 (\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_10 ),
        .\Using_FPGA.Native_21 (\ex_instr_reg[11] [18]),
        .\Using_FPGA.Native_22 (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_4 ),
        .\Using_FPGA.Native_23 (\Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_24 (of_instr[0]),
        .\Using_FPGA.Native_25 (of_instr[3]),
        .\Using_FPGA.Native_3 (\ex_instr_reg[11] [13]),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [12]),
        .\Using_FPGA.Native_5 (\ex_instr_reg[11] [11]),
        .\Using_FPGA.Native_6 (\ex_instr_reg[11] [10]),
        .\Using_FPGA.Native_7 (\ex_instr_reg[11] [9]),
        .\Using_FPGA.Native_8 (\ex_instr_reg[11] [8]),
        .\Using_FPGA.Native_9 (\ex_instr_reg[11] [7]),
        .ex_alu_sel_logic_i_reg(ex_alu_sel_logic_i_reg),
        .ex_branch_with_delayslot_i(ex_branch_with_delayslot_i),
        .ex_branch_with_delayslot_i_reg(\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_1 ),
        .ex_branch_with_delayslot_reg(of_branch_with_delayslot118_out),
        .ex_enable_sext_shift_i0(ex_enable_sext_shift_i0),
        .ex_gpr_write111_out__0(ex_gpr_write111_out__0),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_dbg_reg(ex_gpr_write_dbg_reg),
        .ex_gpr_write_reg(ex_gpr_write_reg),
        .ex_gpr_write_reg_0(ex_gpr_write_reg_0),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .\ex_opcode_reg[1] (of_instr[4]),
        .ex_set_bip(ex_set_bip),
        .ex_set_bip0__1(ex_set_bip0__1),
        .\imm_reg_reg[0] (\imm_reg_reg[0] ),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .of_Take_Interrupt(of_Take_Interrupt),
        .of_instr_ii_41(of_instr_ii_41),
        .of_op2_imm_addr(of_op2_imm_addr),
        .of_op2_sel_imm(of_op2_sel_imm),
        .of_pause_reg(of_pause_reg),
        .of_read_ex_write_op2_conflict_part1(of_read_ex_write_op2_conflict_part1),
        .of_read_ex_write_op2_conflict_part2(of_read_ex_write_op2_conflict_part2),
        .of_read_imm_reg_ii_reg(of_read_imm_reg_ii_reg_0),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2),
        .p_0_in31_in(p_0_in31_in),
        .p_28_in(p_28_in),
        .sync_reset(sync_reset),
        .use_Reg_Neg_S_reg(use_Reg_Neg_S_reg),
        .use_Reg_Neg_S_reg_0(use_Reg_Neg_S_reg_0),
        .wb_exception(wb_exception),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_146 \Instruction_Prefetch_Mux[1].Instr_Mux_MUXF7 
       (.I0165_out(I0165_out),
        .I1163_out(I1163_out),
        .of_instr_ii_41(of_instr_ii_41),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_147 \Instruction_Prefetch_Mux[20].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Performance_Debug_Control.ex_brki_hit_reg (\Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [12]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [9]),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [10]),
        .\ex_instr_reg[20] (\ex_instr_reg[11] [11]),
        .of_instr_ii_22(of_instr_ii_22),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_148 \Instruction_Prefetch_Mux[20].Instr_Mux_MUXF7 
       (.I089_out(I089_out),
        .I187_out(I187_out),
        .of_instr_ii_22(of_instr_ii_22),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_149 \Instruction_Prefetch_Mux[21].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[21] (\ex_instr_reg[11] [10]),
        .of_instr_ii_21(of_instr_ii_21),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_150 \Instruction_Prefetch_Mux[21].Instr_Mux_MUXF7 
       (.I085_out(I085_out),
        .I183_out(I183_out),
        .of_instr_ii_21(of_instr_ii_21),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_151 \Instruction_Prefetch_Mux[22].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_1 (of_instr[3]),
        .\ex_instr_reg[22] (\ex_instr_reg[11] [9]),
        .of_instr_ii_20(of_instr_ii_20),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_152 \Instruction_Prefetch_Mux[22].Instr_Mux_MUXF7 
       (.I081_out(I081_out),
        .I179_out(I179_out),
        .of_instr_ii_20(of_instr_ii_20),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_153 \Instruction_Prefetch_Mux[23].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[23] (\ex_instr_reg[11] [8]),
        .of_instr_ii_19(of_instr_ii_19),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_154 \Instruction_Prefetch_Mux[23].Instr_Mux_MUXF7 
       (.I077_out(I077_out),
        .I175_out(I175_out),
        .of_instr_ii_19(of_instr_ii_19),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_155 \Instruction_Prefetch_Mux[24].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Performance_Debug_Control.ex_brki_hit_reg (\Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [8]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [5]),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [6]),
        .\ex_instr_reg[24] (\ex_instr_reg[11] [7]),
        .of_instr_ii_18(of_instr_ii_18),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_156 \Instruction_Prefetch_Mux[24].Instr_Mux_MUXF7 
       (.I073_out(I073_out),
        .I171_out(I171_out),
        .of_instr_ii_18(of_instr_ii_18),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_157 \Instruction_Prefetch_Mux[25].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[25] (\ex_instr_reg[11] [6]),
        .of_instr_ii_17(of_instr_ii_17),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_158 \Instruction_Prefetch_Mux[25].Instr_Mux_MUXF7 
       (.I069_out(I069_out),
        .I167_out(I167_out),
        .of_instr_ii_17(of_instr_ii_17),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_159 \Instruction_Prefetch_Mux[26].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Sext_Op_reg[0] (\Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [6]),
        .\ex_instr_reg[26] (\ex_instr_reg[11] [5]),
        .of_instr_ii_16(of_instr_ii_16),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_160 \Instruction_Prefetch_Mux[26].Instr_Mux_MUXF7 
       (.I065_out(I065_out),
        .I163_out(I163_out),
        .of_instr_ii_16(of_instr_ii_16),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_161 \Instruction_Prefetch_Mux[27].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [2]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [3]),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [1]),
        .\Using_FPGA.Native_3 (\ex_instr_reg[11] [0]),
        .\ex_instr_reg[27] (\ex_instr_reg[11] [4]),
        .of_Imm180(of_Imm180),
        .of_instr_ii_15(of_instr_ii_15),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_162 \Instruction_Prefetch_Mux[27].Instr_Mux_MUXF7 
       (.I061_out(I061_out),
        .I159_out(I159_out),
        .of_instr_ii_15(of_instr_ii_15),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_163 \Instruction_Prefetch_Mux[28].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[28] (\ex_instr_reg[11] [3]),
        .of_instr_ii_14(of_instr_ii_14),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_164 \Instruction_Prefetch_Mux[28].Instr_Mux_MUXF7 
       (.I057_out(I057_out),
        .I155_out(I155_out),
        .of_instr_ii_14(of_instr_ii_14),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_165 \Instruction_Prefetch_Mux[29].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[29] (\ex_instr_reg[11] [2]),
        .of_instr_ii_13(of_instr_ii_13),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_166 \Instruction_Prefetch_Mux[29].Instr_Mux_MUXF7 
       (.I053_out(I053_out),
        .I151_out(I151_out),
        .of_instr_ii_13(of_instr_ii_13),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_167 \Instruction_Prefetch_Mux[2].Gen_Instr_DFF 
       (.Clk(Clk),
        .E(E),
        .\EX_ALU_Op_reg[0] (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_5 ),
        .EX_SWAP_Instr_reg(\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_6 ),
        .\Performance_Debug_Control.ex_brki_hit_reg (\Performance_Debug_Control.ex_brki_hit_reg ),
        .\Serial_Dbg_Intf.control_reg_reg[8] (\Serial_Dbg_Intf.control_reg_reg[8] ),
        .\Using_FPGA.Native_0 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_4 ),
        .\Using_FPGA.Native_1 ({\ex_instr_reg[11] [20:17],\ex_instr_reg[11] [15:13],\ex_instr_reg[11] [10]}),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_4 (of_instr[2]),
        .\Using_FPGA.Native_5 (of_instr[0]),
        .\Using_FPGA.Native_6 (of_instr[5]),
        .\Using_FPGA.Native_7 (of_instr[1]),
        .\Using_FPGA.Native_8 (of_instr[4]),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_decode_reg(ex_mbar_decode_cmb),
        .\ex_opcode_reg[2] (of_instr[3]),
        .of_Imm180(of_Imm180),
        .of_instr_ii_40(of_instr_ii_40),
        .of_pause_reg(of_pause_reg),
        .p_1_in26_in(p_1_in26_in),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_168 \Instruction_Prefetch_Mux[2].Instr_Mux_MUXF7 
       (.I0161_out(I0161_out),
        .I1159_out(I1159_out),
        .of_instr_ii_40(of_instr_ii_40),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_169 \Instruction_Prefetch_Mux[30].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[30] (\ex_instr_reg[11] [1]),
        .of_instr_ii_12(of_instr_ii_12),
        .p_2_in(p_2_in),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_170 \Instruction_Prefetch_Mux[30].Instr_Mux_MUXF7 
       (.I049_out(I049_out),
        .I147_out(I147_out),
        .of_instr_ii_12(of_instr_ii_12),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_171 \Instruction_Prefetch_Mux[31].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_4 ),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [14]),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [3]),
        .\Using_FPGA.Native_3 (\ex_instr_reg[11] [1]),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [2]),
        .\ex_instr_reg[31] (\ex_instr_reg[11] [0]),
        .ex_move_to_MSR_instr113_out(ex_move_to_MSR_instr113_out),
        .of_instr_ii_11(of_instr_ii_11),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_172 \Instruction_Prefetch_Mux[31].Instr_Mux_MUXF7 
       (.I045_out(I045_out),
        .I143_out(I143_out),
        .of_instr_ii_11(of_instr_ii_11),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_173 \Instruction_Prefetch_Mux[32].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3_reg[31] (\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1 ),
        .\EX_Op3_reg[31]_0 (\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_2 ),
        .\EX_Op3_reg[31]_1 (\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3 ),
        .\Using_FPGA.Native_0 (of_predecode[0]),
        .ex_gpr_write_reg(ex_gpr_write_reg_0),
        .ex_valid(ex_valid),
        .mem_gpr_write(mem_gpr_write),
        .mem_valid_instr(mem_valid_instr),
        .of_instr_ii_10(of_instr_ii_10),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception),
        .wb_gpr_write_i(wb_gpr_write_i),
        .wb_reset(wb_reset),
        .wb_valid_reg(wb_valid_reg));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_174 \Instruction_Prefetch_Mux[32].Instr_Mux_MUXF7 
       (.I041_out(I041_out),
        .I139_out(I139_out),
        .of_instr_ii_10(of_instr_ii_10),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_175 \Instruction_Prefetch_Mux[33].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[0] (\EX_Branch_CMP_Op1_reg[0] ),
        .EX_SWAP_Instr_reg(EX_SWAP_Instr_reg_0),
        .EX_SWAP_Instr_reg_0(EX_SWAP_Instr_reg_1),
        .EX_SWAP_Instr_reg_1(EX_SWAP_Instr_reg_2),
        .EX_SWAP_Instr_reg_10(EX_SWAP_Instr_reg_11),
        .EX_SWAP_Instr_reg_11(EX_SWAP_Instr_reg_12),
        .EX_SWAP_Instr_reg_12(EX_SWAP_Instr_reg_13),
        .EX_SWAP_Instr_reg_13(EX_SWAP_Instr_reg_14),
        .EX_SWAP_Instr_reg_14(EX_SWAP_Instr_reg_15),
        .EX_SWAP_Instr_reg_15(EX_SWAP_Instr_reg_16),
        .EX_SWAP_Instr_reg_16(EX_SWAP_Instr_reg_17),
        .EX_SWAP_Instr_reg_17(EX_SWAP_Instr_reg_18),
        .EX_SWAP_Instr_reg_18(EX_SWAP_Instr_reg_19),
        .EX_SWAP_Instr_reg_19(EX_SWAP_Instr_reg_20),
        .EX_SWAP_Instr_reg_2(EX_SWAP_Instr_reg_3),
        .EX_SWAP_Instr_reg_20(EX_SWAP_Instr_reg_21),
        .EX_SWAP_Instr_reg_21(EX_SWAP_Instr_reg_22),
        .EX_SWAP_Instr_reg_22(EX_SWAP_Instr_reg_23),
        .EX_SWAP_Instr_reg_23(EX_SWAP_Instr_reg_24),
        .EX_SWAP_Instr_reg_24(EX_SWAP_Instr_reg_25),
        .EX_SWAP_Instr_reg_25(EX_SWAP_Instr_reg_26),
        .EX_SWAP_Instr_reg_26(EX_SWAP_Instr_reg_27),
        .EX_SWAP_Instr_reg_27(EX_SWAP_Instr_reg_28),
        .EX_SWAP_Instr_reg_28(EX_SWAP_Instr_reg_29),
        .EX_SWAP_Instr_reg_29(EX_SWAP_Instr_reg_30),
        .EX_SWAP_Instr_reg_3(EX_SWAP_Instr_reg_4),
        .EX_SWAP_Instr_reg_4(EX_SWAP_Instr_reg_5),
        .EX_SWAP_Instr_reg_5(EX_SWAP_Instr_reg_6),
        .EX_SWAP_Instr_reg_6(EX_SWAP_Instr_reg_7),
        .EX_SWAP_Instr_reg_7(EX_SWAP_Instr_reg_8),
        .EX_SWAP_Instr_reg_8(EX_SWAP_Instr_reg_9),
        .EX_SWAP_Instr_reg_9(EX_SWAP_Instr_reg_10),
        .GPR_Op1(GPR_Op1),
        .MEM_Fwd(MEM_Fwd),
        .\Using_FPGA.Native_0 (of_predecode[1]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_2 (of_predecode[2]),
        .WB_Byte_Access_reg(WB_Byte_Access_reg),
        .WB_Doublet_Access_reg(WB_Doublet_Access_reg),
        .WB_Doublet_Access_reg_0(WB_Doublet_Access_reg_0),
        .WB_Doublet_Access_reg_1(WB_Doublet_Access_reg_1),
        .WB_Doublet_Access_reg_10(WB_Doublet_Access_reg_10),
        .WB_Doublet_Access_reg_11(WB_Doublet_Access_reg_11),
        .WB_Doublet_Access_reg_12(WB_Doublet_Access_reg_12),
        .WB_Doublet_Access_reg_13(WB_Doublet_Access_reg_13),
        .WB_Doublet_Access_reg_14(WB_Doublet_Access_reg_14),
        .WB_Doublet_Access_reg_2(WB_Doublet_Access_reg_2),
        .WB_Doublet_Access_reg_3(WB_Doublet_Access_reg_3),
        .WB_Doublet_Access_reg_4(WB_Doublet_Access_reg_4),
        .WB_Doublet_Access_reg_5(WB_Doublet_Access_reg_5),
        .WB_Doublet_Access_reg_6(WB_Doublet_Access_reg_6),
        .WB_Doublet_Access_reg_7(WB_Doublet_Access_reg_7),
        .WB_Doublet_Access_reg_8(WB_Doublet_Access_reg_8),
        .WB_Doublet_Access_reg_9(WB_Doublet_Access_reg_9),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .\ex_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg),
        .\mem_gpr_write_addr_reg[0] (\mem_gpr_write_addr_reg[0] [4:3]),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_9(of_instr_ii_9),
        .p_222_in(p_222_in),
        .p_225_in(p_225_in),
        .p_29_in(p_29_in),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] [4:3]),
        .\wb_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_176 \Instruction_Prefetch_Mux[33].Instr_Mux_MUXF7 
       (.I037_out(I037_out),
        .I135_out(I135_out),
        .of_instr_ii_9(of_instr_ii_9),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_177 \Instruction_Prefetch_Mux[34].Gen_Instr_DFF 
       (.Clk(Clk),
        .of_instr_ii_8(of_instr_ii_8),
        .of_predecode(of_predecode[2]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_178 \Instruction_Prefetch_Mux[34].Instr_Mux_MUXF7 
       (.I033_out(I033_out),
        .I131_out(I131_out),
        .of_instr_ii_8(of_instr_ii_8),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_179 \Instruction_Prefetch_Mux[35].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode[3]),
        .of_instr_ii_7(of_instr_ii_7),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_180 \Instruction_Prefetch_Mux[35].Instr_Mux_MUXF7 
       (.I029_out(I029_out),
        .I127_out(I127_out),
        .of_instr_ii_7(of_instr_ii_7),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_181 \Instruction_Prefetch_Mux[36].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode[4]),
        .of_instr_ii_6(of_instr_ii_6),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_182 \Instruction_Prefetch_Mux[36].Instr_Mux_MUXF7 
       (.I025_out(I025_out),
        .I123_out(I123_out),
        .of_instr_ii_6(of_instr_ii_6),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_183 \Instruction_Prefetch_Mux[37].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[31] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ),
        .\EX_Branch_CMP_Op1_reg[31]_0 (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ),
        .\EX_Branch_CMP_Op1_reg[31]_1 (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3 ),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (of_predecode[5]),
        .\Using_FPGA.Native_1 (of_predecode[3]),
        .\Using_FPGA.Native_2 (of_predecode[4]),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg[4]_0 ),
        .\mem_gpr_write_addr_reg[2] (\mem_gpr_write_addr_reg[0] [2:0]),
        .of_instr_ii_5(of_instr_ii_5),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[2] (\wb_gpr_write_addr_reg[0] [2:0]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_184 \Instruction_Prefetch_Mux[37].Instr_Mux_MUXF7 
       (.I021_out(I021_out),
        .I119_out(I119_out),
        .of_instr_ii_5(of_instr_ii_5),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_185 \Instruction_Prefetch_Mux[38].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] ),
        .EX_SWAP_Instr_reg(EX_SWAP_Instr_reg_0),
        .EX_SWAP_Instr_reg_0(EX_SWAP_Instr_reg_1),
        .EX_SWAP_Instr_reg_1(EX_SWAP_Instr_reg_2),
        .EX_SWAP_Instr_reg_10(EX_SWAP_Instr_reg_11),
        .EX_SWAP_Instr_reg_11(EX_SWAP_Instr_reg_12),
        .EX_SWAP_Instr_reg_12(EX_SWAP_Instr_reg_13),
        .EX_SWAP_Instr_reg_13(EX_SWAP_Instr_reg_14),
        .EX_SWAP_Instr_reg_14(EX_SWAP_Instr_reg_15),
        .EX_SWAP_Instr_reg_15(EX_SWAP_Instr_reg_16),
        .EX_SWAP_Instr_reg_16(EX_SWAP_Instr_reg_17),
        .EX_SWAP_Instr_reg_17(EX_SWAP_Instr_reg_18),
        .EX_SWAP_Instr_reg_18(EX_SWAP_Instr_reg_19),
        .EX_SWAP_Instr_reg_19(EX_SWAP_Instr_reg_20),
        .EX_SWAP_Instr_reg_2(EX_SWAP_Instr_reg_3),
        .EX_SWAP_Instr_reg_20(EX_SWAP_Instr_reg_21),
        .EX_SWAP_Instr_reg_21(EX_SWAP_Instr_reg_22),
        .EX_SWAP_Instr_reg_22(EX_SWAP_Instr_reg_23),
        .EX_SWAP_Instr_reg_23(EX_SWAP_Instr_reg_24),
        .EX_SWAP_Instr_reg_24(EX_SWAP_Instr_reg_25),
        .EX_SWAP_Instr_reg_25(EX_SWAP_Instr_reg_26),
        .EX_SWAP_Instr_reg_26(EX_SWAP_Instr_reg_27),
        .EX_SWAP_Instr_reg_27(EX_SWAP_Instr_reg_28),
        .EX_SWAP_Instr_reg_28(EX_SWAP_Instr_reg_29),
        .EX_SWAP_Instr_reg_29(EX_SWAP_Instr_reg_30),
        .EX_SWAP_Instr_reg_3(EX_SWAP_Instr_reg_4),
        .EX_SWAP_Instr_reg_4(EX_SWAP_Instr_reg_5),
        .EX_SWAP_Instr_reg_5(EX_SWAP_Instr_reg_6),
        .EX_SWAP_Instr_reg_6(EX_SWAP_Instr_reg_7),
        .EX_SWAP_Instr_reg_7(EX_SWAP_Instr_reg_8),
        .EX_SWAP_Instr_reg_8(EX_SWAP_Instr_reg_9),
        .EX_SWAP_Instr_reg_9(EX_SWAP_Instr_reg_10),
        .MEM_Fwd(MEM_Fwd),
        .\Using_FPGA.Native_0 (of_predecode[6]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_6 ),
        .\Using_FPGA.Native_10 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_14 ),
        .\Using_FPGA.Native_11 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_15 ),
        .\Using_FPGA.Native_12 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_16 ),
        .\Using_FPGA.Native_13 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_17 ),
        .\Using_FPGA.Native_14 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_18 ),
        .\Using_FPGA.Native_15 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_19 ),
        .\Using_FPGA.Native_16 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_20 ),
        .\Using_FPGA.Native_17 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_21 ),
        .\Using_FPGA.Native_18 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_22 ),
        .\Using_FPGA.Native_19 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_23 ),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_7 ),
        .\Using_FPGA.Native_20 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_24 ),
        .\Using_FPGA.Native_21 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_25 ),
        .\Using_FPGA.Native_22 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_26 ),
        .\Using_FPGA.Native_23 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_27 ),
        .\Using_FPGA.Native_24 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_28 ),
        .\Using_FPGA.Native_25 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_29 ),
        .\Using_FPGA.Native_26 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_30 ),
        .\Using_FPGA.Native_27 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_31 ),
        .\Using_FPGA.Native_28 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_32 ),
        .\Using_FPGA.Native_29 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_33 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_30 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_34 ),
        .\Using_FPGA.Native_31 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_35 ),
        .\Using_FPGA.Native_32 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_36 ),
        .\Using_FPGA.Native_33 (of_predecode[7]),
        .\Using_FPGA.Native_4 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_8 ),
        .\Using_FPGA.Native_5 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_9 ),
        .\Using_FPGA.Native_6 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_10 ),
        .\Using_FPGA.Native_7 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_11 ),
        .\Using_FPGA.Native_8 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_12 ),
        .\Using_FPGA.Native_9 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_13 ),
        .WB_Byte_Access_reg(WB_Byte_Access_reg),
        .WB_Doublet_Access_reg(WB_Doublet_Access_reg),
        .WB_Doublet_Access_reg_0(WB_Doublet_Access_reg_0),
        .WB_Doublet_Access_reg_1(WB_Doublet_Access_reg_1),
        .WB_Doublet_Access_reg_10(WB_Doublet_Access_reg_10),
        .WB_Doublet_Access_reg_11(WB_Doublet_Access_reg_11),
        .WB_Doublet_Access_reg_12(WB_Doublet_Access_reg_12),
        .WB_Doublet_Access_reg_13(WB_Doublet_Access_reg_13),
        .WB_Doublet_Access_reg_14(WB_Doublet_Access_reg_14),
        .WB_Doublet_Access_reg_2(WB_Doublet_Access_reg_2),
        .WB_Doublet_Access_reg_3(WB_Doublet_Access_reg_3),
        .WB_Doublet_Access_reg_4(WB_Doublet_Access_reg_4),
        .WB_Doublet_Access_reg_5(WB_Doublet_Access_reg_5),
        .WB_Doublet_Access_reg_6(WB_Doublet_Access_reg_6),
        .WB_Doublet_Access_reg_7(WB_Doublet_Access_reg_7),
        .WB_Doublet_Access_reg_8(WB_Doublet_Access_reg_8),
        .WB_Doublet_Access_reg_9(WB_Doublet_Access_reg_9),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .\ex_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg),
        .\mem_gpr_write_addr_reg[0] (\mem_gpr_write_addr_reg[0] [4:3]),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1 ),
        .of_Take_Interrupt(of_Take_Interrupt),
        .of_instr_ii_4(of_instr_ii_4),
        .of_op2_imm_addr(of_op2_imm_addr),
        .of_op2_sel_imm(of_op2_sel_imm),
        .p_0_in31_in(p_0_in31_in),
        .p_222_in(p_222_in),
        .p_225_in(p_225_in),
        .p_29_in(p_29_in),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] [4:3]),
        .\wb_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2 ));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_186 \Instruction_Prefetch_Mux[38].Instr_Mux_MUXF7 
       (.I017_out(I017_out),
        .I115_out(I115_out),
        .of_instr_ii_4(of_instr_ii_4),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_187 \Instruction_Prefetch_Mux[39].Gen_Instr_DFF 
       (.Clk(Clk),
        .of_instr_ii_3(of_instr_ii_3),
        .of_predecode(of_predecode[7]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_188 \Instruction_Prefetch_Mux[39].Instr_Mux_MUXF7 
       (.I013_out(I013_out),
        .I111_out(I111_out),
        .of_instr_ii_3(of_instr_ii_3),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_189 \Instruction_Prefetch_Mux[3].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_ALU_Op1__1(EX_ALU_Op1__1),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] [1]),
        .\Using_FPGA.Native_0 (\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_11 ),
        .\Using_FPGA.Native_1 (\ex_gpr_write_addr_reg[3] ),
        .\Using_FPGA.Native_10 (\Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_12 (D[1]),
        .\Using_FPGA.Native_2 (\ex_gpr_write_addr_reg[4] ),
        .\Using_FPGA.Native_3 (\ex_gpr_write_addr_reg[2] ),
        .\Using_FPGA.Native_4 (of_instr[5]),
        .\Using_FPGA.Native_5 (of_instr[0]),
        .\Using_FPGA.Native_6 (of_instr[4]),
        .\Using_FPGA.Native_7 (of_instr[1]),
        .\Using_FPGA.Native_8 (of_instr[3]),
        .\Using_FPGA.Native_9 ({\ex_instr_reg[11] [20],\ex_instr_reg[11] [10]}),
        .ex_branch_with_delayslot_reg(\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_10 ),
        .ex_load_alu_carry_reg(ex_load_alu_carry_reg),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .\ex_opcode_reg[3] (of_instr[2]),
        .ex_sel_alu_i0(ex_sel_alu_i0),
        .force12_out(force12_out),
        .force2_reg(ex_op1_cmp_eq1),
        .force_Val10_out(force_Val10_out),
        .force_Val2_N_reg(force_Val2_N_reg),
        .of_instr_ii_39(of_instr_ii_39),
        .sync_reset(sync_reset),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_190 \Instruction_Prefetch_Mux[3].Instr_Mux_MUXF7 
       (.I0157_out(I0157_out),
        .I1155_out(I1155_out),
        .of_instr_ii_39(of_instr_ii_39),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_191 \Instruction_Prefetch_Mux[40].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode[8]),
        .of_instr_ii_2(of_instr_ii_2),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_192 \Instruction_Prefetch_Mux[40].Instr_Mux_MUXF7 
       (.I09_out(I09_out),
        .I17_out(I17_out),
        .of_instr_ii_2(of_instr_ii_2),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_193 \Instruction_Prefetch_Mux[41].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode[9]),
        .of_instr_ii_1(of_instr_ii_1),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_194 \Instruction_Prefetch_Mux[41].Instr_Mux_MUXF7 
       (.I05_out(I05_out),
        .I13_out(I13_out),
        .of_instr_ii_1(of_instr_ii_1),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_195 \Instruction_Prefetch_Mux[42].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2_reg[31] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[31]_0 (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2 ),
        .\EX_Op2_reg[31]_1 (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3 ),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (of_predecode[10]),
        .\Using_FPGA.Native_1 (of_predecode[8]),
        .\Using_FPGA.Native_2 (of_predecode[9]),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg[4]_0 ),
        .\mem_gpr_write_addr_reg[2] (\mem_gpr_write_addr_reg[0] [2:0]),
        .of_instr_ii_0(of_instr_ii_0),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[2] (\wb_gpr_write_addr_reg[0] [2:0]));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_196 \Instruction_Prefetch_Mux[42].Instr_Mux_MUXF7 
       (.I0_1(I0_1),
        .I1(I1),
        .IReady(IReady),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .if_missed_fetch(if_missed_fetch),
        .of_instr_ii_0(of_instr_ii_0),
        .of_pause_reg(of_pause_reg),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_FDR_197 \Instruction_Prefetch_Mux[4].Gen_Instr_DFF 
       (.Clk(Clk),
        .D233_out(D233_out),
        .Dbg_Clean_Stop0(Dbg_Clean_Stop0),
        .\EX_Op1_reg[10] (\EX_Op1_reg[10] ),
        .\EX_Op1_reg[11] (\EX_Op1_reg[11] ),
        .\EX_Op1_reg[12] (\EX_Op1_reg[12] ),
        .\EX_Op1_reg[13] (\EX_Op1_reg[13] ),
        .\EX_Op1_reg[14] (\EX_Op1_reg[14] ),
        .\EX_Op1_reg[15] (\EX_Op1_reg[15] ),
        .\EX_Op1_reg[16] (\EX_Op1_reg[16] ),
        .\EX_Op1_reg[17] (\EX_Op1_reg[17] ),
        .\EX_Op1_reg[18] (\EX_Op1_reg[18] ),
        .\EX_Op1_reg[19] (\EX_Op1_reg[19] ),
        .\EX_Op1_reg[1] (\EX_Op1_reg[1] ),
        .\EX_Op1_reg[20] (\EX_Op1_reg[20] ),
        .\EX_Op1_reg[21] (\EX_Op1_reg[21] ),
        .\EX_Op1_reg[22] (\EX_Op1_reg[22] ),
        .\EX_Op1_reg[23] (\EX_Op1_reg[23] ),
        .\EX_Op1_reg[24] (\EX_Op1_reg[24] ),
        .\EX_Op1_reg[25] (\EX_Op1_reg[25] ),
        .\EX_Op1_reg[26] (\EX_Op1_reg[26] ),
        .\EX_Op1_reg[27] (\EX_Op1_reg[27] ),
        .\EX_Op1_reg[28] (\EX_Op1_reg[28] ),
        .\EX_Op1_reg[29] (\EX_Op1_reg[29] ),
        .\EX_Op1_reg[2] (\EX_Op1_reg[2] ),
        .\EX_Op1_reg[30] (\EX_Op1_reg[30] ),
        .\EX_Op1_reg[31] (\EX_Op1_reg[31] ),
        .\EX_Op1_reg[3] (\EX_Op1_reg[3] ),
        .\EX_Op1_reg[4] (\EX_Op1_reg[4] ),
        .\EX_Op1_reg[5] (\EX_Op1_reg[5] ),
        .\EX_Op1_reg[6] (\EX_Op1_reg[6] ),
        .\EX_Op1_reg[7] (\EX_Op1_reg[7] ),
        .\EX_Op1_reg[8] (\EX_Op1_reg[8] ),
        .\EX_Op1_reg[9] (\EX_Op1_reg[9] ),
        .EX_SWAP_Instr_reg(EX_SWAP_Instr_reg),
        .\EX_Sext_Op_reg[1] (\EX_Sext_Op_reg[0] [0]),
        .I1_0(I1_0),
        .LOCKSTEP_Master_Out(LOCKSTEP_Master_Out),
        .OF_Op1_Sel_SPR_PC0__0(OF_Op1_Sel_SPR_PC0__0),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_10 (of_instr[2]),
        .\Using_FPGA.Native_11 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_4 ),
        .\Using_FPGA.Native_12 (\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_11 ),
        .\Using_FPGA.Native_13 (\ex_instr_reg[11] [0]),
        .\Using_FPGA.Native_14 (of_instr[3]),
        .\Using_FPGA.Native_15 (of_instr[5]),
        .\Using_FPGA.Native_16 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_17 (\ex_instr_reg[11] [2]),
        .\Using_FPGA.Native_18 (\ex_instr_reg[11] [1]),
        .\Using_FPGA.Native_19 (\ex_instr_reg[11] [3]),
        .\Using_FPGA.Native_2 (of_valid),
        .\Using_FPGA.Native_3 ({\ex_instr_reg[11] [14],\ex_instr_reg[11] [10]}),
        .\Using_FPGA.Native_4 (of_instr[0]),
        .\Using_FPGA.Native_5 (\ex_instr_reg[11] [6]),
        .\Using_FPGA.Native_6 (\ex_instr_reg[11] [5]),
        .\Using_FPGA.Native_7 (\ex_instr_reg[11] [8]),
        .\Using_FPGA.Native_8 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_6 ),
        .\Using_FPGA.Native_9 (of_instr[4]),
        .ex_MSR(ex_MSR),
        .ex_atomic_Instruction_Pair0(ex_atomic_Instruction_Pair0),
        .ex_is_multi_instr2_reg(\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_4 ),
        .ex_is_multi_or_load_instr0(ex_is_multi_or_load_instr0),
        .ex_jump(ex_jump),
        .ex_jump_nodelay_reg(ex_jump_nodelay_reg),
        .ex_load_shift_carry0(ex_load_shift_carry0),
        .\ex_opcode_reg[4] (of_instr[1]),
        .\imm_reg_reg[15] (\imm_reg_reg[15] ),
        .mem_exception_from_ex_reg(mem_exception_from_ex_reg),
        .of_Sel_SPR_MSR1(of_Sel_SPR_MSR1),
        .of_Sel_SPR_MSR88_out(of_Sel_SPR_MSR88_out),
        .of_Take_Interrupt(of_Take_Interrupt),
        .of_branch_with_delayslot118_out(of_branch_with_delayslot118_out),
        .of_instr_ii_38(of_instr_ii_38),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg(of_pause_reg),
        .of_read_imm_reg_ii(of_read_imm_reg_ii),
        .of_read_imm_reg_ii_reg(of_read_imm_reg_ii_reg),
        .p_0_in31_in(p_0_in31_in),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_198 \Instruction_Prefetch_Mux[4].Instr_Mux_MUXF7 
       (.I0153_out(I0153_out),
        .I1151_out(I1151_out),
        .of_instr_ii_38(of_instr_ii_38),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_199 \Instruction_Prefetch_Mux[5].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_1 (of_instr[1]),
        .\ex_opcode_reg[5] (of_instr[0]),
        .of_instr_ii_37(of_instr_ii_37),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_200 \Instruction_Prefetch_Mux[5].Instr_Mux_MUXF7 
       (.I0149_out(I0149_out),
        .I1147_out(I1147_out),
        .of_instr_ii_37(of_instr_ii_37),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_201 \Instruction_Prefetch_Mux[6].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3_reg[0] (\EX_Op3_reg[0] ),
        .EX_SWAP_Instr_reg(EX_SWAP_Instr_reg_0),
        .EX_SWAP_Instr_reg_0(EX_SWAP_Instr_reg_1),
        .EX_SWAP_Instr_reg_1(EX_SWAP_Instr_reg_2),
        .EX_SWAP_Instr_reg_10(EX_SWAP_Instr_reg_11),
        .EX_SWAP_Instr_reg_11(EX_SWAP_Instr_reg_12),
        .EX_SWAP_Instr_reg_12(EX_SWAP_Instr_reg_13),
        .EX_SWAP_Instr_reg_13(EX_SWAP_Instr_reg_14),
        .EX_SWAP_Instr_reg_14(EX_SWAP_Instr_reg_15),
        .EX_SWAP_Instr_reg_15(EX_SWAP_Instr_reg_16),
        .EX_SWAP_Instr_reg_16(EX_SWAP_Instr_reg_17),
        .EX_SWAP_Instr_reg_17(EX_SWAP_Instr_reg_18),
        .EX_SWAP_Instr_reg_18(EX_SWAP_Instr_reg_19),
        .EX_SWAP_Instr_reg_19(EX_SWAP_Instr_reg_20),
        .EX_SWAP_Instr_reg_2(EX_SWAP_Instr_reg_3),
        .EX_SWAP_Instr_reg_20(EX_SWAP_Instr_reg_21),
        .EX_SWAP_Instr_reg_21(EX_SWAP_Instr_reg_22),
        .EX_SWAP_Instr_reg_22(EX_SWAP_Instr_reg_23),
        .EX_SWAP_Instr_reg_23(EX_SWAP_Instr_reg_24),
        .EX_SWAP_Instr_reg_24(EX_SWAP_Instr_reg_25),
        .EX_SWAP_Instr_reg_25(EX_SWAP_Instr_reg_26),
        .EX_SWAP_Instr_reg_26(EX_SWAP_Instr_reg_27),
        .EX_SWAP_Instr_reg_27(EX_SWAP_Instr_reg_28),
        .EX_SWAP_Instr_reg_28(EX_SWAP_Instr_reg_29),
        .EX_SWAP_Instr_reg_29(EX_SWAP_Instr_reg_30),
        .EX_SWAP_Instr_reg_3(EX_SWAP_Instr_reg_4),
        .EX_SWAP_Instr_reg_4(EX_SWAP_Instr_reg_5),
        .EX_SWAP_Instr_reg_5(EX_SWAP_Instr_reg_6),
        .EX_SWAP_Instr_reg_6(EX_SWAP_Instr_reg_7),
        .EX_SWAP_Instr_reg_7(EX_SWAP_Instr_reg_8),
        .EX_SWAP_Instr_reg_8(EX_SWAP_Instr_reg_9),
        .EX_SWAP_Instr_reg_9(EX_SWAP_Instr_reg_10),
        .GPR_Op3(GPR_Op3),
        .MEM_Fwd(MEM_Fwd),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_1 (D[0]),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3 ),
        .WB_Byte_Access_reg(WB_Byte_Access_reg),
        .WB_Doublet_Access_reg(WB_Doublet_Access_reg),
        .WB_Doublet_Access_reg_0(WB_Doublet_Access_reg_0),
        .WB_Doublet_Access_reg_1(WB_Doublet_Access_reg_1),
        .WB_Doublet_Access_reg_10(WB_Doublet_Access_reg_10),
        .WB_Doublet_Access_reg_11(WB_Doublet_Access_reg_11),
        .WB_Doublet_Access_reg_12(WB_Doublet_Access_reg_12),
        .WB_Doublet_Access_reg_13(WB_Doublet_Access_reg_13),
        .WB_Doublet_Access_reg_14(WB_Doublet_Access_reg_14),
        .WB_Doublet_Access_reg_2(WB_Doublet_Access_reg_2),
        .WB_Doublet_Access_reg_3(WB_Doublet_Access_reg_3),
        .WB_Doublet_Access_reg_4(WB_Doublet_Access_reg_4),
        .WB_Doublet_Access_reg_5(WB_Doublet_Access_reg_5),
        .WB_Doublet_Access_reg_6(WB_Doublet_Access_reg_6),
        .WB_Doublet_Access_reg_7(WB_Doublet_Access_reg_7),
        .WB_Doublet_Access_reg_8(WB_Doublet_Access_reg_8),
        .WB_Doublet_Access_reg_9(WB_Doublet_Access_reg_9),
        .\ex_gpr_write_addr_reg[0] (D[1]),
        .\ex_gpr_write_addr_reg[0]_0 (\ex_gpr_write_addr_reg[0] ),
        .\ex_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg),
        .ex_valid_reg(\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_2 ),
        .\mem_gpr_write_addr_reg[0] (\mem_gpr_write_addr_reg[0] [4:3]),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ),
        .mem_valid_reg(\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_36(of_instr_ii_36),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] [4:3]),
        .\wb_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2 ));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_202 \Instruction_Prefetch_Mux[6].Instr_Mux_MUXF7 
       (.I0145_out(I0145_out),
        .I1143_out(I1143_out),
        .of_instr_ii_36(of_instr_ii_36),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_203 \Instruction_Prefetch_Mux[7].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (D[1]),
        .\ex_gpr_write_addr_reg[1] (D[0]),
        .ex_mbar_is_sleep(ex_mbar_is_sleep),
        .ex_mbar_is_sleep_reg(ex_mbar_is_sleep_cmb),
        .of_instr_ii_35(of_instr_ii_35),
        .of_pause_reg(of_pause_reg),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_204 \Instruction_Prefetch_Mux[7].Instr_Mux_MUXF7 
       (.I0141_out(I0141_out),
        .I1139_out(I1139_out),
        .of_instr_ii_35(of_instr_ii_35),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_205 \Instruction_Prefetch_Mux[8].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\ex_gpr_write_addr_reg[4] ),
        .\Using_FPGA.Native_1 (\ex_gpr_write_addr_reg[3] ),
        .\Using_FPGA.Native_2 (D[1]),
        .\Using_FPGA.Native_3 (D[0]),
        .ex_gpr_write111_out__0(ex_gpr_write111_out__0),
        .\ex_gpr_write_addr_reg[2] (\ex_gpr_write_addr_reg[2] ),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .ex_op1_cmp_eq_reg(ex_op1_cmp_eq_reg),
        .of_instr_ii_34(of_instr_ii_34),
        .of_pause_reg(of_pause_reg),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_206 \Instruction_Prefetch_Mux[8].Instr_Mux_MUXF7 
       (.I0137_out(I0137_out),
        .I1135_out(I1135_out),
        .of_instr_ii_34(of_instr_ii_34),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_207 \Instruction_Prefetch_Mux[9].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_gpr_write_addr_reg[3] (\ex_gpr_write_addr_reg[3] ),
        .of_instr_ii_33(of_instr_ii_33),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_MUXF7_208 \Instruction_Prefetch_Mux[9].Instr_Mux_MUXF7 
       (.I0133_out(I0133_out),
        .I1131_out(I1131_out),
        .of_instr_ii_33(of_instr_ii_33),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDS Last_Sel_DFF
       (.Clk(Clk),
        .I0101_out(I0101_out),
        .I0105_out(I0105_out),
        .I0109_out(I0109_out),
        .I0113_out(I0113_out),
        .I0117_out(I0117_out),
        .I0121_out(I0121_out),
        .I0125_out(I0125_out),
        .I0129_out(I0129_out),
        .I0133_out(I0133_out),
        .I0137_out(I0137_out),
        .I013_out(I013_out),
        .I0141_out(I0141_out),
        .I0145_out(I0145_out),
        .I0149_out(I0149_out),
        .I0153_out(I0153_out),
        .I0157_out(I0157_out),
        .I0161_out(I0161_out),
        .I0165_out(I0165_out),
        .I0169_out(I0169_out),
        .I017_out(I017_out),
        .I021_out(I021_out),
        .I025_out(I025_out),
        .I029_out(I029_out),
        .I033_out(I033_out),
        .I037_out(I037_out),
        .I041_out(I041_out),
        .I045_out(I045_out),
        .I049_out(I049_out),
        .I053_out(I053_out),
        .I057_out(I057_out),
        .I05_out(I05_out),
        .I061_out(I061_out),
        .I065_out(I065_out),
        .I069_out(I069_out),
        .I073_out(I073_out),
        .I077_out(I077_out),
        .I081_out(I081_out),
        .I085_out(I085_out),
        .I089_out(I089_out),
        .I093_out(I093_out),
        .I097_out(I097_out),
        .I09_out(I09_out),
        .I0_1(I0_1),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [0]),
        .\Using_FPGA.Native_10 (D[1]),
        .\Using_FPGA.Native_11 (of_instr[0]),
        .\Using_FPGA.Native_12 (of_instr[1]),
        .\Using_FPGA.Native_13 (of_instr[2]),
        .\Using_FPGA.Native_14 (of_instr[3]),
        .\Using_FPGA.Native_15 (of_instr[4]),
        .\Using_FPGA.Native_16 (of_instr[5]),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [1]),
        .\Using_FPGA.Native_3 (\ex_instr_reg[11] [2]),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [3]),
        .\Using_FPGA.Native_5 (\ex_instr_reg[11] [20:4]),
        .\Using_FPGA.Native_6 (\ex_gpr_write_addr_reg[4] ),
        .\Using_FPGA.Native_7 (\ex_gpr_write_addr_reg[3] ),
        .\Using_FPGA.Native_8 (\ex_gpr_write_addr_reg[2] ),
        .\Using_FPGA.Native_9 (D[0]),
        .in({in[32:11],in[9:0]}),
        .of_predecode(of_predecode),
        .sel_input_i_0(sel_input_i_0),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized4 Mux_Select_Empty_LUT6
       (.I4_0(I4_0),
        .I5(I5),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .of_pause_reg(of_pause_reg),
        .sel_input_i_0(sel_input_i_0));
  ublaze_sopc_microblaze_0_0__MB_LUT6__parameterized6 Mux_Select_OF_Valid_LUT6
       (.I4_0(I4_0),
        .I5(I5),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .of_Valid_II(of_Valid_II),
        .of_pause_reg(of_pause_reg));
  ublaze_sopc_microblaze_0_0__MB_FDR_209 OF_Valid_DFF
       (.Clk(Clk),
        .Dbg_Clean_Stop_reg(of_valid),
        .E(E),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .Q(Q),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_jump(ex_jump),
        .ex_jump_nodelay_reg(ex_jump_nodelay_reg),
        .ex_jump_q(ex_jump_q),
        .ex_jump_q_reg(ex_jump_q_reg),
        .ex_valid(ex_valid),
        .ex_valid_jump_reg(ex_valid_jump_reg),
        .ex_valid_jump_reg_0(ex_valid_jump_reg_0),
        .ex_valid_keep(ex_valid_keep),
        .ex_valid_keep_reg(ex_valid_keep_reg),
        .ex_valid_reg(ex_valid_reg),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_valid_instr(mem_valid_instr),
        .of_Valid_II(of_Valid_II),
        .of_pause_reg(of_pause_reg),
        .sync_reset(sync_reset),
        .use_Reg_Neg_S_reg(use_Reg_Neg_S_reg_1),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    ex_branch_with_delayslot_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_1 ),
        .Q(ex_branch_with_delayslot_i),
        .R(1'b0));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][0]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][0]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[32]),
        .Q(p_1_in209_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][10]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][10]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[22]),
        .Q(p_1_in159_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][11]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][11]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[9]),
        .Q(p_1_in154_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][12]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][12]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[8]),
        .Q(p_1_in149_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][13]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][13]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[7]),
        .Q(p_1_in144_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][14]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][14]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[6]),
        .Q(p_1_in139_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][15]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][15]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[5]),
        .Q(p_1_in134_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][16]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][16]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[4]),
        .Q(p_1_in129_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][17]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][17]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[3]),
        .Q(p_1_in124_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][18]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][18]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[2]),
        .Q(p_1_in119_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][19]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][19]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[1]),
        .Q(p_1_in114_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][1]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[31]),
        .Q(p_1_in204_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][20]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][20]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[0]),
        .Q(p_1_in109_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][21]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][21]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[21]),
        .Q(p_1_in104_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][22]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][22]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[20]),
        .Q(p_1_in99_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][23]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][23]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[19]),
        .Q(p_1_in94_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][24]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][24]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[18]),
        .Q(p_1_in89_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][25]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][25]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[17]),
        .Q(p_1_in84_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][26]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][26]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[16]),
        .Q(p_1_in79_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][27]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][27]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[15]),
        .Q(p_1_in74_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][28]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][28]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[14]),
        .Q(p_1_in69_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][29]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][29]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[13]),
        .Q(p_1_in64_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][2]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[30]),
        .Q(p_1_in199_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][30]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][30]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[12]),
        .Q(p_1_in59_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][31]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][31]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[11]),
        .Q(p_1_in54_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][32]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][32]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[10]),
        .Q(\Using_FPGA.Native_8 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][33]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][33]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[9]),
        .Q(p_1_in44_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][34]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][34]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[8]),
        .Q(p_1_in39_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][35]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][35]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[7]),
        .Q(p_1_in34_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][36]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][36]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[6]),
        .Q(p_1_in29_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][37]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][37]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[5]),
        .Q(p_1_in24_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][38]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][38]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[4]),
        .Q(p_1_in19_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][39]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][39]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[3]),
        .Q(p_1_in14_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][3]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][3]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[29]),
        .Q(p_1_in194_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][40]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][40]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[2]),
        .Q(p_1_in9_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][41]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][41]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[1]),
        .Q(p_1_in4_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][42]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][42]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[0]),
        .Q(\ibuffer_reg[3][42]_srl4_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][4]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][4]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[28]),
        .Q(p_1_in189_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][5]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][5]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[27]),
        .Q(p_1_in184_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][6]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][6]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[26]),
        .Q(p_1_in179_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][7]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][7]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[25]),
        .Q(p_1_in174_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][8]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][8]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[24]),
        .Q(p_1_in169_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][9]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][9]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_1 ),
        .CLK(Clk),
        .D(in[23]),
        .Q(p_1_in164_in));
endmodule

(* ORIG_REF_NAME = "Register_File_gti" *) 
module ublaze_sopc_microblaze_0_0__Register_File_gti
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    WB_Fwd,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    ADDRD);
  output [0:31]GPR_Op1;
  output [0:31]GPR_Op2;
  output [0:31]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [0:31]WB_Fwd;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]ADDRD;

  wire [4:0]ADDRD;
  wire Clk;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire [0:31]WB_Fwd;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;

  ublaze_sopc_microblaze_0_0__MB_RAM32M \Using_LUT6.All_RAM32M[0].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[0],GPR_Op1[1]}),
        .GPR_Op2({GPR_Op2[0],GPR_Op2[1]}),
        .GPR_Op3({GPR_Op3[0],GPR_Op3[1]}),
        .WB_Fwd({WB_Fwd[0],WB_Fwd[1]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_415 \Using_LUT6.All_RAM32M[10].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[20],GPR_Op1[21]}),
        .GPR_Op2({GPR_Op2[20],GPR_Op2[21]}),
        .GPR_Op3({GPR_Op3[20],GPR_Op3[21]}),
        .WB_Fwd({WB_Fwd[20],WB_Fwd[21]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_416 \Using_LUT6.All_RAM32M[11].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[22],GPR_Op1[23]}),
        .GPR_Op2({GPR_Op2[22],GPR_Op2[23]}),
        .GPR_Op3({GPR_Op3[22],GPR_Op3[23]}),
        .WB_Fwd({WB_Fwd[22],WB_Fwd[23]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_417 \Using_LUT6.All_RAM32M[12].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[24],GPR_Op1[25]}),
        .GPR_Op2({GPR_Op2[24],GPR_Op2[25]}),
        .GPR_Op3({GPR_Op3[24],GPR_Op3[25]}),
        .WB_Fwd({WB_Fwd[24],WB_Fwd[25]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_418 \Using_LUT6.All_RAM32M[13].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[26],GPR_Op1[27]}),
        .GPR_Op2({GPR_Op2[26],GPR_Op2[27]}),
        .GPR_Op3({GPR_Op3[26],GPR_Op3[27]}),
        .WB_Fwd({WB_Fwd[26],WB_Fwd[27]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_419 \Using_LUT6.All_RAM32M[14].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[28],GPR_Op1[29]}),
        .GPR_Op2({GPR_Op2[28],GPR_Op2[29]}),
        .GPR_Op3({GPR_Op3[28],GPR_Op3[29]}),
        .WB_Fwd({WB_Fwd[28],WB_Fwd[29]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_420 \Using_LUT6.All_RAM32M[15].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[30],GPR_Op1[31]}),
        .GPR_Op2({GPR_Op2[30],GPR_Op2[31]}),
        .GPR_Op3({GPR_Op3[30],GPR_Op3[31]}),
        .WB_Fwd({WB_Fwd[30],WB_Fwd[31]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_421 \Using_LUT6.All_RAM32M[1].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[2],GPR_Op1[3]}),
        .GPR_Op2({GPR_Op2[2],GPR_Op2[3]}),
        .GPR_Op3({GPR_Op3[2],GPR_Op3[3]}),
        .WB_Fwd({WB_Fwd[2],WB_Fwd[3]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_422 \Using_LUT6.All_RAM32M[2].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[4],GPR_Op1[5]}),
        .GPR_Op2({GPR_Op2[4],GPR_Op2[5]}),
        .GPR_Op3({GPR_Op3[4],GPR_Op3[5]}),
        .WB_Fwd({WB_Fwd[4],WB_Fwd[5]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_423 \Using_LUT6.All_RAM32M[3].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[6],GPR_Op1[7]}),
        .GPR_Op2({GPR_Op2[6],GPR_Op2[7]}),
        .GPR_Op3({GPR_Op3[6],GPR_Op3[7]}),
        .WB_Fwd({WB_Fwd[6],WB_Fwd[7]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_424 \Using_LUT6.All_RAM32M[4].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[8],GPR_Op1[9]}),
        .GPR_Op2({GPR_Op2[8],GPR_Op2[9]}),
        .GPR_Op3({GPR_Op3[8],GPR_Op3[9]}),
        .WB_Fwd({WB_Fwd[8],WB_Fwd[9]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_425 \Using_LUT6.All_RAM32M[5].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[10],GPR_Op1[11]}),
        .GPR_Op2({GPR_Op2[10],GPR_Op2[11]}),
        .GPR_Op3({GPR_Op3[10],GPR_Op3[11]}),
        .WB_Fwd({WB_Fwd[10],WB_Fwd[11]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_426 \Using_LUT6.All_RAM32M[6].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[12],GPR_Op1[13]}),
        .GPR_Op2({GPR_Op2[12],GPR_Op2[13]}),
        .GPR_Op3({GPR_Op3[12],GPR_Op3[13]}),
        .WB_Fwd({WB_Fwd[12],WB_Fwd[13]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_427 \Using_LUT6.All_RAM32M[7].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[14],GPR_Op1[15]}),
        .GPR_Op2({GPR_Op2[14],GPR_Op2[15]}),
        .GPR_Op3({GPR_Op3[14],GPR_Op3[15]}),
        .WB_Fwd({WB_Fwd[14],WB_Fwd[15]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_428 \Using_LUT6.All_RAM32M[8].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[16],GPR_Op1[17]}),
        .GPR_Op2({GPR_Op2[16],GPR_Op2[17]}),
        .GPR_Op3({GPR_Op3[16],GPR_Op3[17]}),
        .WB_Fwd({WB_Fwd[16],WB_Fwd[17]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  ublaze_sopc_microblaze_0_0__MB_RAM32M_429 \Using_LUT6.All_RAM32M[9].ram32m_i 
       (.ADDRD(ADDRD),
        .Clk(Clk),
        .GPR_Op1({GPR_Op1[18],GPR_Op1[19]}),
        .GPR_Op2({GPR_Op2[18],GPR_Op2[19]}),
        .GPR_Op3({GPR_Op3[18],GPR_Op3[19]}),
        .WB_Fwd({WB_Fwd[18],WB_Fwd[19]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Module_gti" *) 
module ublaze_sopc_microblaze_0_0__Shift_Logic_Module_gti
   (out,
    \Using_FPGA.Native ,
    in0,
    \EX_Op1_reg[24] );
  output out;
  output \Using_FPGA.Native ;
  input in0;
  input \EX_Op1_reg[24] ;

  (* RTL_KEEP = "true" *) wire sign_0_15;
  (* RTL_KEEP = "true" *) wire sign_16_23;

  assign \Using_FPGA.Native  = sign_0_15;
  assign out = sign_16_23;
  assign sign_0_15 = \EX_Op1_reg[24] ;
  assign sign_16_23 = in0;
endmodule

(* ORIG_REF_NAME = "Zero_Detect_gti" *) 
module ublaze_sopc_microblaze_0_0__Zero_Detect_gti
   (ex_op1_zero,
    ex_op1_cmp_equal,
    \Zero_Detecting[0].nibble_Zero_reg ,
    ex_op1_cmp_equal_n,
    \EX_Branch_CMP_Op1_reg[0] ,
    lopt,
    lopt_1,
    lopt_2);
  output ex_op1_zero;
  input ex_op1_cmp_equal;
  input \Zero_Detecting[0].nibble_Zero_reg ;
  input ex_op1_cmp_equal_n;
  input [29:0]\EX_Branch_CMP_Op1_reg[0] ;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire [29:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire S;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire \Zero_Detecting[2].nibble_Zero_reg ;
  wire \Zero_Detecting[3].nibble_Zero_reg ;
  wire \Zero_Detecting[4].nibble_Zero_reg ;
  wire \Zero_Detecting[5].nibble_Zero_reg ;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire \^lopt_2 ;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire zero_CI_3;
  wire NLW_Part_Of_Zero_Carry_Start_lopt_UNCONNECTED;
  wire NLW_Part_Of_Zero_Carry_Start_lopt_3_UNCONNECTED;
  wire NLW_Part_Of_Zero_Carry_Start_zero_CI_0_UNCONNECTED;
  wire \NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_Zero_Detecting[2].nibble_Zero_reg_UNCONNECTED ;
  wire \NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_ex_op1_cmp_equal_n_UNCONNECTED ;
  wire \NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_zero_CI_2_UNCONNECTED ;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_UNCONNECTED ;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_2_UNCONNECTED ;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_zero_CI_4_UNCONNECTED ;

  assign lopt = lopt_5;
  assign lopt_6 = lopt_1;
  assign lopt_7 = lopt_2;
  ublaze_sopc_microblaze_0_0__MB_MUXCY_408 Part_Of_Zero_Carry_Start
       (.ex_op1_cmp_equal(ex_op1_cmp_equal),
        .lopt(NLW_Part_Of_Zero_Carry_Start_lopt_UNCONNECTED),
        .lopt_1(ex_op1_cmp_equal_n),
        .lopt_2(\Zero_Detecting[0].nibble_Zero_reg ),
        .lopt_3(NLW_Part_Of_Zero_Carry_Start_lopt_3_UNCONNECTED),
        .lopt_4(S),
        .lopt_5(\^lopt_2 ),
        .lopt_6(\Zero_Detecting[2].nibble_Zero_reg ),
        .zero_CI_0(NLW_Part_Of_Zero_Carry_Start_zero_CI_0_UNCONNECTED));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_411 \Zero_Detecting[2].I_Part_Of_Zero_Detect 
       (.\Zero_Detecting[2].nibble_Zero_reg (\NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_Zero_Detecting[2].nibble_Zero_reg_UNCONNECTED ),
        .ex_op1_cmp_equal_n(\NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_ex_op1_cmp_equal_n_UNCONNECTED ),
        .lopt(\^lopt_2 ),
        .zero_CI_2(\NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_zero_CI_2_UNCONNECTED ),
        .zero_CI_3(zero_CI_3));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_412 \Zero_Detecting[3].I_Part_Of_Zero_Detect 
       (.\Zero_Detecting[3].nibble_Zero_reg (\Zero_Detecting[3].nibble_Zero_reg ),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .lopt(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_UNCONNECTED ),
        .lopt_1(\Zero_Detecting[4].nibble_Zero_reg ),
        .lopt_2(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_2_UNCONNECTED ),
        .lopt_3(\Zero_Detecting[5].nibble_Zero_reg ),
        .lopt_4(lopt_5),
        .lopt_5(lopt_6),
        .lopt_6(lopt_7),
        .zero_CI_3(zero_CI_3),
        .zero_CI_4(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_zero_CI_4_UNCONNECTED ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__0/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [5]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [0]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [2]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [1]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [4]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [3]),
        .O(S));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__1/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [11]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [6]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [8]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [7]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [10]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [9]),
        .O(\Zero_Detecting[2].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__2/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [17]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [12]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [14]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [13]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [16]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [15]),
        .O(\Zero_Detecting[3].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__3/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [23]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [18]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [20]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [19]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [22]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [21]),
        .O(\Zero_Detecting[4].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__4/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [29]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [24]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [26]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [25]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [28]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [27]),
        .O(\Zero_Detecting[5].nibble_Zero_reg ));
endmodule

(* ORIG_REF_NAME = "address_hit" *) 
module ublaze_sopc_microblaze_0_0__address_hit
   (p_44_out,
    Hit,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    \Performance_Debug_Control.dbg_stop_i_reg ,
    Q,
    \Using_FPGA.Native ,
    \Performance_Debug_Control.normal_stop_i_reg ,
    of_pause_reg,
    Dbg_Reg_En,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    force_stop_i,
    single_Step_N,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    \Using_FPGA.Native_0 ,
    ex_Exception_Taken,
    mem_Exception_Taken,
    Dbg_TDI,
    Address,
    Dbg_Clk);
  output p_44_out;
  output Hit;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  input \Performance_Debug_Control.dbg_stop_i_reg ;
  input [1:0]Q;
  input \Using_FPGA.Native ;
  input \Performance_Debug_Control.normal_stop_i_reg ;
  input of_pause_reg;
  input [0:7]Dbg_Reg_En;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input force_stop_i;
  input single_Step_N;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  input \Using_FPGA.Native_0 ;
  input ex_Exception_Taken;
  input mem_Exception_Taken;
  input Dbg_TDI;
  input [0:31]Address;
  input Dbg_Clk;

  wire [0:31]Address;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_TDI;
  wire Hit;
  wire \Performance_Debug_Control.dbg_stop_i_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire \Performance_Debug_Control.normal_stop_i_reg ;
  wire [1:0]Q;
  wire SRL16_MC15_1;
  wire SRL16_MC15_2;
  wire SRL16_MC15_3;
  wire SRL16_MC15_4;
  wire SRL16_MC15_5;
  wire SRL16_MC15_6;
  wire SRL16_MC15_7;
  wire SRL16_Sel_0;
  wire SRL16_Sel_1;
  wire SRL16_Sel_2;
  wire SRL16_Sel_3;
  wire SRL16_Sel_4;
  wire SRL16_Sel_5;
  wire SRL16_Sel_6;
  wire SRL16_Sel_7;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire carry_0;
  wire carry_4;
  wire ex_Exception_Taken;
  wire force_stop_i;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_7;
  wire lopt_9;
  wire mem_Exception_Taken;
  wire of_pause_reg;
  wire p_44_out;
  wire single_Step_N;
  wire which_pc__0;
  wire \NLW_Compare[0].MUXCY_I_carry_7_UNCONNECTED ;
  wire \NLW_Compare[0].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[0].MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_SRL16_Sel_6_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_carry_6_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_carry_7_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_SRL16_Sel_5_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_carry_5_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_carry_6_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[3].MUXCY_I_SRL16_Sel_4_UNCONNECTED ;
  wire \NLW_Compare[3].MUXCY_I_carry_5_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_carry_3_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_SRL16_Sel_2_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_carry_2_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_carry_3_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_SRL16_Sel_1_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_carry_1_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_carry_2_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[7].MUXCY_I_SRL16_Sel_0_UNCONNECTED ;
  wire \NLW_Compare[7].MUXCY_I_carry_1_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_32 \Compare[0].MUXCY_I 
       (.Q(Q[1]),
        .SRL16_Sel_7(SRL16_Sel_7),
        .carry_7(\NLW_Compare[0].MUXCY_I_carry_7_UNCONNECTED ),
        .lopt(\NLW_Compare[0].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_2(SRL16_Sel_6),
        .lopt_3(\NLW_Compare[0].MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_3),
        .lopt_5(SRL16_Sel_5),
        .lopt_6(lopt_4),
        .lopt_7(lopt_5),
        .lopt_8(SRL16_Sel_4));
  ublaze_sopc_microblaze_0_0__MB_SRLC16E \Compare[0].SRLC16E_I 
       (.Address({Address[28],Address[29],Address[30],Address[31]}),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .SRL16_MC15_7(SRL16_MC15_7),
        .SRL16_Sel_7(SRL16_Sel_7),
        .which_pc__0(which_pc__0));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_33 \Compare[1].MUXCY_I 
       (.SRL16_Sel_6(\NLW_Compare[1].MUXCY_I_SRL16_Sel_6_UNCONNECTED ),
        .carry_6(\NLW_Compare[1].MUXCY_I_carry_6_UNCONNECTED ),
        .carry_7(\NLW_Compare[1].MUXCY_I_carry_7_UNCONNECTED ),
        .lopt(\NLW_Compare[1].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1));
  ublaze_sopc_microblaze_0_0__MB_SRLC16E_34 \Compare[1].SRLC16E_I 
       (.Address({Address[24],Address[25],Address[26],Address[27]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_6(SRL16_MC15_6),
        .SRL16_MC15_7(SRL16_MC15_7),
        .SRL16_Sel_6(SRL16_Sel_6),
        .which_pc__0(which_pc__0));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_35 \Compare[2].MUXCY_I 
       (.SRL16_Sel_5(\NLW_Compare[2].MUXCY_I_SRL16_Sel_5_UNCONNECTED ),
        .carry_5(\NLW_Compare[2].MUXCY_I_carry_5_UNCONNECTED ),
        .carry_6(\NLW_Compare[2].MUXCY_I_carry_6_UNCONNECTED ),
        .lopt(\NLW_Compare[2].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_3));
  ublaze_sopc_microblaze_0_0__MB_SRLC16E_36 \Compare[2].SRLC16E_I 
       (.Address({Address[20],Address[21],Address[22],Address[23]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_5(SRL16_MC15_5),
        .SRL16_MC15_6(SRL16_MC15_6),
        .SRL16_Sel_5(SRL16_Sel_5),
        .which_pc__0(which_pc__0));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_37 \Compare[3].MUXCY_I 
       (.SRL16_Sel_4(\NLW_Compare[3].MUXCY_I_SRL16_Sel_4_UNCONNECTED ),
        .carry_4(carry_4),
        .carry_5(\NLW_Compare[3].MUXCY_I_carry_5_UNCONNECTED ),
        .lopt(lopt_4),
        .lopt_1(lopt_5));
  ublaze_sopc_microblaze_0_0__MB_SRLC16E_38 \Compare[3].SRLC16E_I 
       (.Address({Address[16],Address[17],Address[18],Address[19]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_4(SRL16_MC15_4),
        .SRL16_MC15_5(SRL16_MC15_5),
        .SRL16_Sel_4(SRL16_Sel_4),
        .which_pc__0(which_pc__0));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_39 \Compare[4].MUXCY_I 
       (.SRL16_Sel_3(SRL16_Sel_3),
        .carry_3(\NLW_Compare[4].MUXCY_I_carry_3_UNCONNECTED ),
        .carry_4(carry_4),
        .lopt(\NLW_Compare[4].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_7),
        .lopt_2(SRL16_Sel_2),
        .lopt_3(\NLW_Compare[4].MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_9),
        .lopt_5(SRL16_Sel_1),
        .lopt_6(lopt_10),
        .lopt_7(lopt_11),
        .lopt_8(SRL16_Sel_0));
  ublaze_sopc_microblaze_0_0__MB_SRLC16E_40 \Compare[4].SRLC16E_I 
       (.Address({Address[12],Address[13],Address[14],Address[15]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_3(SRL16_MC15_3),
        .SRL16_MC15_4(SRL16_MC15_4),
        .SRL16_Sel_3(SRL16_Sel_3),
        .which_pc__0(which_pc__0));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_41 \Compare[5].MUXCY_I 
       (.SRL16_Sel_2(\NLW_Compare[5].MUXCY_I_SRL16_Sel_2_UNCONNECTED ),
        .carry_2(\NLW_Compare[5].MUXCY_I_carry_2_UNCONNECTED ),
        .carry_3(\NLW_Compare[5].MUXCY_I_carry_3_UNCONNECTED ),
        .lopt(\NLW_Compare[5].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_7));
  ublaze_sopc_microblaze_0_0__MB_SRLC16E_42 \Compare[5].SRLC16E_I 
       (.Address({Address[8],Address[9],Address[10],Address[11]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_2(SRL16_MC15_2),
        .SRL16_MC15_3(SRL16_MC15_3),
        .SRL16_Sel_2(SRL16_Sel_2),
        .which_pc__0(which_pc__0));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_43 \Compare[6].MUXCY_I 
       (.SRL16_Sel_1(\NLW_Compare[6].MUXCY_I_SRL16_Sel_1_UNCONNECTED ),
        .carry_1(\NLW_Compare[6].MUXCY_I_carry_1_UNCONNECTED ),
        .carry_2(\NLW_Compare[6].MUXCY_I_carry_2_UNCONNECTED ),
        .lopt(\NLW_Compare[6].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_9));
  ublaze_sopc_microblaze_0_0__MB_SRLC16E_44 \Compare[6].SRLC16E_I 
       (.Address({Address[4],Address[5],Address[6],Address[7]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_1(SRL16_MC15_1),
        .SRL16_MC15_2(SRL16_MC15_2),
        .SRL16_Sel_1(SRL16_Sel_1),
        .which_pc__0(which_pc__0));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_45 \Compare[7].MUXCY_I 
       (.SRL16_Sel_0(\NLW_Compare[7].MUXCY_I_SRL16_Sel_0_UNCONNECTED ),
        .carry_0(carry_0),
        .carry_1(\NLW_Compare[7].MUXCY_I_carry_1_UNCONNECTED ),
        .lopt(lopt_10),
        .lopt_1(lopt_11));
  ublaze_sopc_microblaze_0_0__MB_SRLC16E_46 \Compare[7].SRLC16E_I 
       (.Address({Address[0],Address[1],Address[2],Address[3]}),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_TDI(Dbg_TDI),
        .SRL16_MC15_1(SRL16_MC15_1),
        .SRL16_Sel_0(SRL16_Sel_0),
        .which_pc__0(which_pc__0));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_47 \The_First_BreakPoints.MUXCY_Post 
       (.Hit(Hit),
        .\Performance_Debug_Control.dbg_stop_i_reg (\Performance_Debug_Control.dbg_stop_i_reg ),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .\Performance_Debug_Control.normal_stop_i_reg (\Performance_Debug_Control.normal_stop_i_reg ),
        .Q(Q[0]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .carry_0(carry_0),
        .ex_Exception_Taken(ex_Exception_Taken),
        .force_stop_i(force_stop_i),
        .mem_Exception_Taken(mem_Exception_Taken),
        .of_pause_reg(of_pause_reg),
        .p_44_out(p_44_out),
        .single_Step_N(single_Step_N));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and
   (of_PipeRun_carry_1,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_2,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_1;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_2;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mem_is_multi_or_load_instr_reg;
  wire of_PipeRun_carry_2;
  wire NLW_MUXCY_I_of_PipeRun_carry_1_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_115 MUXCY_I
       (.lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_is_multi_or_load_instr_reg(mem_is_multi_or_load_instr_reg),
        .of_PipeRun_carry_1(NLW_MUXCY_I_of_PipeRun_carry_1_UNCONNECTED),
        .of_PipeRun_carry_2(of_PipeRun_carry_2));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_59
   (of_PipeRun_for_ce,
    ex_jump_nodelay_reg,
    ex_Take_Intr_or_Exc_reg,
    of_Take_Interrupt_hold_reg,
    in0,
    ex_Write_ICache_i_cmb,
    \Using_FPGA.Native ,
    of_PipeRun_carry_1,
    ex_jump_nodelay_reg_0,
    of_Take_Interrupt,
    of_branch_with_delayslot118_out,
    ex_jump,
    if_missed_fetch_reg,
    ex_Take_Intr_or_Exc_reg_0,
    sync_reset,
    of_Take_Interrupt_hold,
    E,
    ex_write_dcache_instr,
    ex_Write_ICache_i,
    of_pause,
    \wb_exception_kind_i_reg[28] ,
    ex_MSR_cmb2_out,
    of_MSR,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_for_ce;
  output ex_jump_nodelay_reg;
  output ex_Take_Intr_or_Exc_reg;
  output of_Take_Interrupt_hold_reg;
  output in0;
  output ex_Write_ICache_i_cmb;
  output \Using_FPGA.Native ;
  input of_PipeRun_carry_1;
  input ex_jump_nodelay_reg_0;
  input of_Take_Interrupt;
  input of_branch_with_delayslot118_out;
  input ex_jump;
  input if_missed_fetch_reg;
  input ex_Take_Intr_or_Exc_reg_0;
  input sync_reset;
  input of_Take_Interrupt_hold;
  input [0:0]E;
  input ex_write_dcache_instr;
  input ex_Write_ICache_i;
  input of_pause;
  input \wb_exception_kind_i_reg[28] ;
  input [0:0]ex_MSR_cmb2_out;
  input [0:0]of_MSR;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire [0:0]E;
  wire \Using_FPGA.Native ;
  wire [0:0]ex_MSR_cmb2_out;
  wire ex_Take_Intr_or_Exc_reg;
  wire ex_Take_Intr_or_Exc_reg_0;
  wire ex_jump;
  wire ex_jump_nodelay_reg;
  wire ex_jump_nodelay_reg_0;
  wire ex_write_dcache_instr;
  wire if_missed_fetch_reg;
  wire in0;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire [0:0]of_MSR;
  wire of_PipeRun_for_ce;
  wire of_Take_Interrupt;
  wire of_Take_Interrupt_hold;
  wire of_Take_Interrupt_hold_reg;
  wire of_branch_with_delayslot118_out;
  wire sync_reset;
  wire \wb_exception_kind_i_reg[28] ;
  wire NLW_MUXCY_I_ex_Write_ICache_i_UNCONNECTED;
  wire NLW_MUXCY_I_ex_Write_ICache_i_reg_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_1_UNCONNECTED;
  wire NLW_MUXCY_I_of_pause_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_114 MUXCY_I
       (.E(E),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .ex_MSR_cmb2_out(ex_MSR_cmb2_out),
        .ex_Take_Intr_or_Exc_reg(ex_Take_Intr_or_Exc_reg),
        .ex_Take_Intr_or_Exc_reg_0(ex_Take_Intr_or_Exc_reg_0),
        .ex_Write_ICache_i(NLW_MUXCY_I_ex_Write_ICache_i_UNCONNECTED),
        .ex_Write_ICache_i_reg(NLW_MUXCY_I_ex_Write_ICache_i_reg_UNCONNECTED),
        .ex_jump(ex_jump),
        .ex_jump_nodelay_reg(ex_jump_nodelay_reg),
        .ex_jump_nodelay_reg_0(ex_jump_nodelay_reg_0),
        .ex_write_dcache_instr(ex_write_dcache_instr),
        .if_missed_fetch_reg(if_missed_fetch_reg),
        .in0(in0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .of_MSR(of_MSR),
        .of_PipeRun_carry_1(NLW_MUXCY_I_of_PipeRun_carry_1_UNCONNECTED),
        .of_Take_Interrupt(of_Take_Interrupt),
        .of_Take_Interrupt_hold(of_Take_Interrupt_hold),
        .of_Take_Interrupt_hold_reg(of_Take_Interrupt_hold_reg),
        .of_branch_with_delayslot118_out(of_branch_with_delayslot118_out),
        .of_pause(NLW_MUXCY_I_of_pause_UNCONNECTED),
        .sync_reset(sync_reset),
        .use_Reg_Neg_S_reg(of_PipeRun_for_ce),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_60
   (of_PipeRun_carry_10,
    E,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_10;
  input [0:0]E;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire of_PipeRun_carry_10;
  wire [0:0]NLW_MUXCY_I_E_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_113 MUXCY_I
       (.E(NLW_MUXCY_I_E_UNCONNECTED[0]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .of_PipeRun_carry_10(of_PipeRun_carry_10));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_61
   (of_PipeRun_carry_9,
    EX_MBAR_Stall__2,
    \Using_FPGA.Native ,
    of_PipeRun_carry_10,
    ex_mbar_sleep,
    ex_mbar_decode,
    ex_Take_Intr_or_Exc_reg,
    ex_first_cycle,
    ex_mbar_stall_no_sleep_1,
    ex_jump_hold,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_9;
  output EX_MBAR_Stall__2;
  input \Using_FPGA.Native ;
  input of_PipeRun_carry_10;
  input ex_mbar_sleep;
  input ex_mbar_decode;
  input ex_Take_Intr_or_Exc_reg;
  input ex_first_cycle;
  input ex_mbar_stall_no_sleep_1;
  input ex_jump_hold;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire EX_MBAR_Stall__2;
  wire \Using_FPGA.Native ;
  wire ex_Take_Intr_or_Exc_reg;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire of_PipeRun_carry_10;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_9_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_112 MUXCY_I
       (.EX_MBAR_Stall__2(EX_MBAR_Stall__2),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .ex_Take_Intr_or_Exc_reg(ex_Take_Intr_or_Exc_reg),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .of_PipeRun_carry_10(of_PipeRun_carry_10),
        .of_PipeRun_carry_9(NLW_MUXCY_I_of_PipeRun_carry_9_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_62
   (E,
    of_set_MSR_IE_hold_reg,
    \mem_pc_i_reg[0] ,
    \Using_FPGA.Native ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    mem_gpr_write_reg,
    mem_gpr_write_dbg_reg,
    of_PipeRun_carry_9,
    of_set_MSR_IE_hold_reg_0,
    p_193_in,
    \ex_gpr_write_addr_reg[4] ,
    of_pause_reg,
    sync_reset,
    Q,
    wb_exception,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    \wb_exception_kind_i_reg[28] ,
    ex_MSR_cmb2_out,
    ex_MSR,
    mem_exception_from_ex_reg,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    p_44_out,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ,
    ex_gpr_write_reg,
    mem_gpr_write,
    ex_gpr_write_dbg,
    mem_gpr_write_dbg,
    lopt,
    lopt_1,
    lopt_2);
  output [0:0]E;
  output of_set_MSR_IE_hold_reg;
  output [0:0]\mem_pc_i_reg[0] ;
  output \Using_FPGA.Native ;
  output \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  output mem_gpr_write_reg;
  output mem_gpr_write_dbg_reg;
  input of_PipeRun_carry_9;
  input of_set_MSR_IE_hold_reg_0;
  input p_193_in;
  input \ex_gpr_write_addr_reg[4] ;
  input of_pause_reg;
  input sync_reset;
  input [2:0]Q;
  input wb_exception;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input \wb_exception_kind_i_reg[28] ;
  input [0:0]ex_MSR_cmb2_out;
  input [0:0]ex_MSR;
  input mem_exception_from_ex_reg;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  input p_44_out;
  input [0:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  input ex_gpr_write_reg;
  input mem_gpr_write;
  input ex_gpr_write_dbg;
  input mem_gpr_write_dbg;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire [0:0]E;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire [0:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire [2:0]Q;
  wire \Using_FPGA.Native ;
  wire [0:0]ex_MSR;
  wire [0:0]ex_MSR_cmb2_out;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_reg;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mem_exception_from_ex_reg;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_gpr_write_dbg_reg;
  wire mem_gpr_write_reg;
  wire [0:0]\mem_pc_i_reg[0] ;
  wire of_pause_reg;
  wire of_set_MSR_IE_hold_reg;
  wire of_set_MSR_IE_hold_reg_0;
  wire p_193_in;
  wire p_44_out;
  wire sync_reset;
  wire wb_exception;
  wire \wb_exception_kind_i_reg[28] ;
  wire NLW_MUXCY_I_of_PipeRun_carry_9_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_111 MUXCY_I
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 (\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ),
        .Q(Q),
        .\Using_FPGA.Native_0 (E),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .ex_MSR(ex_MSR),
        .ex_MSR_cmb2_out(ex_MSR_cmb2_out),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg[4] ),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_reg(ex_gpr_write_reg),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_exception_from_ex_reg(mem_exception_from_ex_reg),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_gpr_write_dbg_reg(mem_gpr_write_dbg_reg),
        .mem_gpr_write_reg(mem_gpr_write_reg),
        .\mem_pc_i_reg[0] (\mem_pc_i_reg[0] ),
        .of_PipeRun_carry_9(NLW_MUXCY_I_of_PipeRun_carry_9_UNCONNECTED),
        .of_pause_reg(of_pause_reg),
        .of_set_MSR_IE_hold_reg(of_set_MSR_IE_hold_reg),
        .of_set_MSR_IE_hold_reg_0(of_set_MSR_IE_hold_reg_0),
        .p_193_in(p_193_in),
        .p_44_out(p_44_out),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_63
   (of_PipeRun_carry_7,
    \Using_FPGA.Native ,
    E,
    lopt,
    lopt_1);
  output of_PipeRun_carry_7;
  input \Using_FPGA.Native ;
  input [0:0]E;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED;
  wire [0:0]NLW_MUXCY_I_E_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_110 MUXCY_I
       (.E(NLW_MUXCY_I_E_UNCONNECTED[0]),
        .\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_7(NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_64
   (of_PipeRun_carry_6,
    A,
    of_PipeRun_carry_7,
    lopt,
    lopt_1);
  output of_PipeRun_carry_6;
  input A;
  input of_PipeRun_carry_7;
  input lopt;
  output lopt_1;

  wire lopt;
  wire lopt_1;
  wire of_PipeRun_carry_6;
  wire NLW_MUXCY_I_A_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_109 MUXCY_I
       (.A(NLW_MUXCY_I_A_UNCONNECTED),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_6(of_PipeRun_carry_6),
        .of_PipeRun_carry_7(NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_65
   (of_PipeRun_carry_5,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_6,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_5;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_6;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire mem_is_multi_or_load_instr_reg;
  wire of_PipeRun_carry_6;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_5_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_108 MUXCY_I
       (.lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .mem_is_multi_or_load_instr_reg(mem_is_multi_or_load_instr_reg),
        .of_PipeRun_carry_5(NLW_MUXCY_I_of_PipeRun_carry_5_UNCONNECTED),
        .of_PipeRun_carry_6(of_PipeRun_carry_6));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_66
   (of_PipeRun_carry_4,
    ex_is_multi_or_load_instr_reg,
    of_PipeRun_carry_5,
    lopt,
    lopt_1);
  output of_PipeRun_carry_4;
  input ex_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_5;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_ex_is_multi_or_load_instr_reg_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_5_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_107 MUXCY_I
       (.ex_is_multi_or_load_instr_reg(NLW_MUXCY_I_ex_is_multi_or_load_instr_reg_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_4(NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED),
        .of_PipeRun_carry_5(NLW_MUXCY_I_of_PipeRun_carry_5_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_67
   (of_PipeRun_carry_3,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_4,
    lopt,
    lopt_1);
  output of_PipeRun_carry_3;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_4;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_mem_is_multi_or_load_instr_reg_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_106 MUXCY_I
       (.lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .mem_is_multi_or_load_instr_reg(NLW_MUXCY_I_mem_is_multi_or_load_instr_reg_UNCONNECTED),
        .of_PipeRun_carry_3(NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED),
        .of_PipeRun_carry_4(NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_68
   (of_PipeRun_carry_2,
    ex_is_multi_or_load_instr_reg,
    of_PipeRun_carry_3,
    lopt,
    lopt_1);
  output of_PipeRun_carry_2;
  input ex_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_3;
  input lopt;
  output lopt_1;

  wire lopt;
  wire lopt_1;
  wire of_PipeRun_carry_2;
  wire NLW_MUXCY_I_ex_is_multi_or_load_instr_reg_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_105 MUXCY_I
       (.ex_is_multi_or_load_instr_reg(NLW_MUXCY_I_ex_is_multi_or_load_instr_reg_UNCONNECTED),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_2(of_PipeRun_carry_2),
        .of_PipeRun_carry_3(NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_89
   (if_pc_incr_carry1,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    if_pc_incr_carry0,
    lopt,
    lopt_1);
  output if_pc_incr_carry1;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input if_pc_incr_carry0;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire \NLW_MUXCY_I_Performance_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ;
  wire NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_104 MUXCY_I
       (.\Performance_Debug_Control.dbg_stop_if_delay_i_reg (\NLW_MUXCY_I_Performance_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ),
        .if_pc_incr_carry0(NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED),
        .if_pc_incr_carry1(NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_90
   (if_pc_incr_carry0,
    if_missed_fetch,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output if_pc_incr_carry0;
  input if_missed_fetch;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire if_missed_fetch;
  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_103 MUXCY_I
       (.if_missed_fetch(if_missed_fetch),
        .if_pc_incr_carry0(NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_91
   (CI,
    if_fetch_for_timing_optimization1,
    if_pc_incr_carry1,
    lopt,
    lopt_1);
  output CI;
  input if_fetch_for_timing_optimization1;
  input if_pc_incr_carry1;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_CI_UNCONNECTED;
  wire NLW_MUXCY_I_if_fetch_for_timing_optimization1_UNCONNECTED;
  wire NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_102 MUXCY_I
       (.CI(NLW_MUXCY_I_CI_UNCONNECTED),
        .if_fetch_for_timing_optimization1(NLW_MUXCY_I_if_fetch_for_timing_optimization1_UNCONNECTED),
        .if_pc_incr_carry1(NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module ublaze_sopc_microblaze_0_0__carry_and_92
   (E,
    mem_valid_reg,
    wb_valid_reg,
    wb_gpr_write_dbg0,
    wb_gpr_write_i0,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    mem_wait_on_ready_N,
    mem_valid_instr,
    mem_exception_from_ex,
    ex_valid_reg,
    \Using_FPGA.Native_2 ,
    flush_pipe,
    wb_valid_reg_0,
    wb_piperun,
    sync_reset,
    wb_exception,
    mem_gpr_write_dbg,
    mem_gpr_write,
    \wb_exception_kind_i_reg[28] ,
    ex_MSR,
    mem_MSR,
    lopt,
    lopt_1,
    lopt_2);
  output [0:0]E;
  output mem_valid_reg;
  output wb_valid_reg;
  output wb_gpr_write_dbg0;
  output wb_gpr_write_i0;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input mem_wait_on_ready_N;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input ex_valid_reg;
  input [0:0]\Using_FPGA.Native_2 ;
  input flush_pipe;
  input wb_valid_reg_0;
  input wb_piperun;
  input sync_reset;
  input wb_exception;
  input mem_gpr_write_dbg;
  input mem_gpr_write;
  input \wb_exception_kind_i_reg[28] ;
  input [2:0]ex_MSR;
  input [2:0]mem_MSR;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire [0:0]E;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [2:0]ex_MSR;
  wire ex_valid_reg;
  wire flush_pipe;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire [2:0]mem_MSR;
  wire mem_exception_from_ex;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire sync_reset;
  wire wb_exception;
  wire \wb_exception_kind_i_reg[28] ;
  wire wb_gpr_write_dbg0;
  wire wb_gpr_write_i0;
  wire wb_piperun;
  wire wb_valid_reg;
  wire wb_valid_reg_0;
  wire NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_95 MUXCY_I
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_2 ),
        .ex_MSR(ex_MSR),
        .ex_valid_reg(ex_valid_reg),
        .flush_pipe(flush_pipe),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_MSR(mem_MSR),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(mem_valid_reg),
        .mem_wait_on_ready_N(NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ),
        .wb_gpr_write_dbg0(wb_gpr_write_dbg0),
        .wb_gpr_write_i0(wb_gpr_write_i0),
        .\wb_instr_reg[31] (E),
        .wb_piperun(wb_piperun),
        .wb_valid_reg(wb_valid_reg),
        .wb_valid_reg_0(wb_valid_reg_0));
endmodule

(* ORIG_REF_NAME = "carry_or" *) 
module ublaze_sopc_microblaze_0_0__carry_or
   (mem_databus_ready,
    mem_access_completed_reg,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output mem_databus_ready;
  input mem_access_completed_reg;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire mem_access_completed_reg;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_mem_databus_ready_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY MUXCY_I
       (.lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .mem_access_completed_reg(mem_access_completed_reg),
        .mem_databus_ready(NLW_MUXCY_I_mem_databus_ready_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_or" *) 
module ublaze_sopc_microblaze_0_0__carry_or_93
   (mem_wait_on_ready_N,
    mem_databus_ready,
    mem_load_store_access,
    mem_Write_DCache,
    mem_valid_instr,
    lopt,
    lopt_1,
    lopt_2);
  output mem_wait_on_ready_N;
  input mem_databus_ready;
  input mem_load_store_access;
  input mem_Write_DCache;
  input mem_valid_instr;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire lopt_1;
  wire lopt_2;
  wire mem_Write_DCache;
  wire mem_load_store_access;
  wire mem_valid_instr;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_mem_databus_ready_UNCONNECTED;
  wire NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_94 MUXCY_I
       (.lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_Write_DCache(mem_Write_DCache),
        .mem_databus_ready(NLW_MUXCY_I_mem_databus_ready_UNCONNECTED),
        .mem_load_store_access(mem_load_store_access),
        .mem_valid_instr(mem_valid_instr),
        .mem_wait_on_ready_N(NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "exception_registers_gti" *) 
module ublaze_sopc_microblaze_0_0__exception_registers_gti
   (DI,
    \LOCKSTEP_Out_reg[2944] ,
    \LOCKSTEP_Out_reg[2943] ,
    \LOCKSTEP_Out_reg[2942] ,
    \LOCKSTEP_Out_reg[2941] ,
    \LOCKSTEP_Out_reg[2940] ,
    \LOCKSTEP_Out_reg[2939] ,
    \LOCKSTEP_Out_reg[2938] ,
    \LOCKSTEP_Out_reg[2937] ,
    \LOCKSTEP_Out_reg[2936] ,
    \LOCKSTEP_Out_reg[2935] ,
    \LOCKSTEP_Out_reg[2934] ,
    \LOCKSTEP_Out_reg[2933] ,
    \LOCKSTEP_Out_reg[2932] ,
    \LOCKSTEP_Out_reg[2931] ,
    \LOCKSTEP_Out_reg[2930] ,
    \LOCKSTEP_Out_reg[2929] ,
    \LOCKSTEP_Out_reg[2928] ,
    \LOCKSTEP_Out_reg[2927] ,
    \LOCKSTEP_Out_reg[2926] ,
    \LOCKSTEP_Out_reg[2925] ,
    \LOCKSTEP_Out_reg[2924] ,
    \LOCKSTEP_Out_reg[2923] ,
    \LOCKSTEP_Out_reg[2922] ,
    \LOCKSTEP_Out_reg[2921] ,
    \LOCKSTEP_Out_reg[2920] ,
    \LOCKSTEP_Out_reg[2919] ,
    \LOCKSTEP_Out_reg[2918] ,
    \LOCKSTEP_Out_reg[2917] ,
    \LOCKSTEP_Out_reg[2916] ,
    \LOCKSTEP_Out_reg[2915] ,
    \LOCKSTEP_Out_reg[2914] ,
    \LOCKSTEP_Out_reg[3007] ,
    \data_rd_reg_reg[16] ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[0] ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg ,
    mem_load_store_access_reg,
    Clk,
    I1_0,
    wb_gpr_wr_dbg,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    read_register_MSR_1_reg,
    \wb_exception_kind_i_reg[31] ,
    wb_byte_access,
    wb_read_msb_doublet_sel_reg,
    Q,
    wb_read_msb_doublet_sel_reg_0,
    wb_read_msb_doublet_sel_reg_1,
    wb_read_msb_doublet_sel_reg_2,
    wb_databus_steered_read_data,
    \wb_MSR_i_reg[28] ,
    wb_read_msb_doublet_sel_reg_3,
    wb_read_msb_doublet_sel_reg_4,
    wb_read_msb_doublet_sel_reg_5,
    wb_read_msb_doublet_sel_reg_6);
  output DI;
  output \LOCKSTEP_Out_reg[2944] ;
  output \LOCKSTEP_Out_reg[2943] ;
  output \LOCKSTEP_Out_reg[2942] ;
  output \LOCKSTEP_Out_reg[2941] ;
  output \LOCKSTEP_Out_reg[2940] ;
  output \LOCKSTEP_Out_reg[2939] ;
  output \LOCKSTEP_Out_reg[2938] ;
  output \LOCKSTEP_Out_reg[2937] ;
  output \LOCKSTEP_Out_reg[2936] ;
  output \LOCKSTEP_Out_reg[2935] ;
  output \LOCKSTEP_Out_reg[2934] ;
  output \LOCKSTEP_Out_reg[2933] ;
  output \LOCKSTEP_Out_reg[2932] ;
  output \LOCKSTEP_Out_reg[2931] ;
  output \LOCKSTEP_Out_reg[2930] ;
  output \LOCKSTEP_Out_reg[2929] ;
  output \LOCKSTEP_Out_reg[2928] ;
  output \LOCKSTEP_Out_reg[2927] ;
  output \LOCKSTEP_Out_reg[2926] ;
  output \LOCKSTEP_Out_reg[2925] ;
  output \LOCKSTEP_Out_reg[2924] ;
  output \LOCKSTEP_Out_reg[2923] ;
  output \LOCKSTEP_Out_reg[2922] ;
  output \LOCKSTEP_Out_reg[2921] ;
  output \LOCKSTEP_Out_reg[2920] ;
  output \LOCKSTEP_Out_reg[2919] ;
  output \LOCKSTEP_Out_reg[2918] ;
  output \LOCKSTEP_Out_reg[2917] ;
  output \LOCKSTEP_Out_reg[2916] ;
  output \LOCKSTEP_Out_reg[2915] ;
  output [16:0]\LOCKSTEP_Out_reg[2914] ;
  output [15:0]\LOCKSTEP_Out_reg[3007] ;
  output [15:0]\data_rd_reg_reg[16] ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [31:0]\mem_pc_i_reg[0] ;
  input \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  input mem_load_store_access_reg;
  input Clk;
  input I1_0;
  input wb_gpr_wr_dbg;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input read_register_MSR_1_reg;
  input \wb_exception_kind_i_reg[31] ;
  input wb_byte_access;
  input wb_read_msb_doublet_sel_reg;
  input [15:0]Q;
  input wb_read_msb_doublet_sel_reg_0;
  input wb_read_msb_doublet_sel_reg_1;
  input wb_read_msb_doublet_sel_reg_2;
  input [7:0]wb_databus_steered_read_data;
  input [2:0]\wb_MSR_i_reg[28] ;
  input wb_read_msb_doublet_sel_reg_3;
  input wb_read_msb_doublet_sel_reg_4;
  input wb_read_msb_doublet_sel_reg_5;
  input wb_read_msb_doublet_sel_reg_6;

  wire Clk;
  wire \^DI ;
  wire I1_0;
  wire [16:0]\LOCKSTEP_Out_reg[2914] ;
  wire \LOCKSTEP_Out_reg[2915] ;
  wire \LOCKSTEP_Out_reg[2916] ;
  wire \LOCKSTEP_Out_reg[2917] ;
  wire \LOCKSTEP_Out_reg[2918] ;
  wire \LOCKSTEP_Out_reg[2919] ;
  wire \LOCKSTEP_Out_reg[2920] ;
  wire \LOCKSTEP_Out_reg[2921] ;
  wire \LOCKSTEP_Out_reg[2922] ;
  wire \LOCKSTEP_Out_reg[2923] ;
  wire \LOCKSTEP_Out_reg[2924] ;
  wire \LOCKSTEP_Out_reg[2925] ;
  wire \LOCKSTEP_Out_reg[2926] ;
  wire \LOCKSTEP_Out_reg[2927] ;
  wire \LOCKSTEP_Out_reg[2928] ;
  wire \LOCKSTEP_Out_reg[2929] ;
  wire \^LOCKSTEP_Out_reg[2930] ;
  wire \^LOCKSTEP_Out_reg[2931] ;
  wire \^LOCKSTEP_Out_reg[2932] ;
  wire \^LOCKSTEP_Out_reg[2933] ;
  wire \^LOCKSTEP_Out_reg[2934] ;
  wire \^LOCKSTEP_Out_reg[2935] ;
  wire \^LOCKSTEP_Out_reg[2936] ;
  wire \^LOCKSTEP_Out_reg[2937] ;
  wire \^LOCKSTEP_Out_reg[2938] ;
  wire \^LOCKSTEP_Out_reg[2939] ;
  wire \^LOCKSTEP_Out_reg[2940] ;
  wire \^LOCKSTEP_Out_reg[2941] ;
  wire \^LOCKSTEP_Out_reg[2942] ;
  wire \^LOCKSTEP_Out_reg[2943] ;
  wire \^LOCKSTEP_Out_reg[2944] ;
  wire [15:0]\LOCKSTEP_Out_reg[3007] ;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [15:0]Q;
  wire addr_AddSub_0;
  wire addr_AddSub_1;
  wire addr_AddSub_10;
  wire addr_AddSub_11;
  wire addr_AddSub_12;
  wire addr_AddSub_13;
  wire addr_AddSub_14;
  wire addr_AddSub_15;
  wire addr_AddSub_16;
  wire addr_AddSub_17;
  wire addr_AddSub_18;
  wire addr_AddSub_19;
  wire addr_AddSub_2;
  wire addr_AddSub_20;
  wire addr_AddSub_21;
  wire addr_AddSub_22;
  wire addr_AddSub_23;
  wire addr_AddSub_24;
  wire addr_AddSub_25;
  wire addr_AddSub_26;
  wire addr_AddSub_27;
  wire addr_AddSub_28;
  wire addr_AddSub_29;
  wire addr_AddSub_3;
  wire addr_AddSub_30;
  wire addr_AddSub_31;
  wire addr_AddSub_4;
  wire addr_AddSub_5;
  wire addr_AddSub_6;
  wire addr_AddSub_7;
  wire addr_AddSub_8;
  wire addr_AddSub_9;
  wire carry_11;
  wire carry_15;
  wire carry_19;
  wire carry_23;
  wire carry_27;
  wire carry_3;
  wire carry_31;
  wire carry_7;
  wire [15:0]\data_rd_reg_reg[16] ;
  wire lopt_10;
  wire lopt_11;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire lopt_3;
  wire lopt_32;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_38;
  wire lopt_39;
  wire lopt_4;
  wire lopt_40;
  wire lopt_41;
  wire lopt_44;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_5;
  wire lopt_8;
  wire lopt_9;
  wire mem_load_store_access_reg;
  wire [31:0]\mem_pc_i_reg[0] ;
  wire read_register_MSR_1_reg;
  wire [2:0]\wb_MSR_i_reg[28] ;
  wire wb_PC_II_0;
  wire wb_PC_II_1;
  wire wb_PC_II_10;
  wire wb_PC_II_11;
  wire wb_PC_II_12;
  wire wb_PC_II_13;
  wire wb_PC_II_14;
  wire wb_PC_II_15;
  wire wb_PC_II_16;
  wire wb_PC_II_17;
  wire wb_PC_II_18;
  wire wb_PC_II_19;
  wire wb_PC_II_2;
  wire wb_PC_II_20;
  wire wb_PC_II_21;
  wire wb_PC_II_22;
  wire wb_PC_II_23;
  wire wb_PC_II_24;
  wire wb_PC_II_25;
  wire wb_PC_II_26;
  wire wb_PC_II_27;
  wire wb_PC_II_28;
  wire wb_PC_II_29;
  wire wb_PC_II_3;
  wire wb_PC_II_30;
  wire wb_PC_II_31;
  wire wb_PC_II_4;
  wire wb_PC_II_5;
  wire wb_PC_II_6;
  wire wb_PC_II_7;
  wire wb_PC_II_8;
  wire wb_PC_II_9;
  wire wb_byte_access;
  wire [7:0]wb_databus_steered_read_data;
  wire [0:0]\wb_exception_kind_i_reg[28] ;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_wr_dbg;
  wire wb_read_msb_doublet_sel_reg;
  wire wb_read_msb_doublet_sel_reg_0;
  wire wb_read_msb_doublet_sel_reg_1;
  wire wb_read_msb_doublet_sel_reg_2;
  wire wb_read_msb_doublet_sel_reg_3;
  wire wb_read_msb_doublet_sel_reg_4;
  wire wb_read_msb_doublet_sel_reg_5;
  wire wb_read_msb_doublet_sel_reg_6;
  wire NLW_CarryIn_MUXCY_CI_UNCONNECTED;
  wire NLW_CarryIn_MUXCY_lopt_UNCONNECTED;
  wire NLW_CarryIn_MUXCY_lopt_3_UNCONNECTED;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__MB_MUXCY_313 CarryIn_MUXCY
       (.CI(NLW_CarryIn_MUXCY_CI_UNCONNECTED),
        .lopt(NLW_CarryIn_MUXCY_lopt_UNCONNECTED),
        .lopt_1(\^DI ),
        .lopt_10(lopt_4),
        .lopt_11(lopt_5),
        .lopt_2(addr_AddSub_0),
        .lopt_3(NLW_CarryIn_MUXCY_lopt_3_UNCONNECTED),
        .lopt_4(\^LOCKSTEP_Out_reg[2944] ),
        .lopt_5(addr_AddSub_1),
        .lopt_6(lopt_2),
        .lopt_7(\^LOCKSTEP_Out_reg[2943] ),
        .lopt_8(addr_AddSub_2),
        .lopt_9(lopt_3),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5 \Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2914] [16]),
        .addr_AddSub_31(addr_AddSub_31),
        .\mem_pc_i_reg[0] (\mem_pc_i_reg[0] [31]),
        .wb_PC_II_31(wb_PC_II_31),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_314 \Using_FPGA_LUT6.Gen_Ret_Addr[0].MUXCY_XOR_I 
       (.LO(carry_31),
        .\LOCKSTEP_Out_reg[3007] (\LOCKSTEP_Out_reg[3007] [15]),
        .addr_AddSub_31(addr_AddSub_31));
  ublaze_sopc_microblaze_0_0__MB_FDE \Using_FPGA_LUT6.Gen_Ret_Addr[0].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2914] (\LOCKSTEP_Out_reg[2914] [16]),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_31(wb_PC_II_31));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_315 \Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_21),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2924] ),
        .\mem_pc_i_reg[10] (\mem_pc_i_reg[0] [21]),
        .wb_PC_II_21(wb_PC_II_21),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_316 \Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3017] (\LOCKSTEP_Out_reg[3007] [5]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_34));
  ublaze_sopc_microblaze_0_0__MB_FDE_317 \Using_FPGA_LUT6.Gen_Ret_Addr[10].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2924] (\LOCKSTEP_Out_reg[2924] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_21(wb_PC_II_21));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_318 \Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_20),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2925] ),
        .\mem_pc_i_reg[11] (\mem_pc_i_reg[0] [20]),
        .wb_PC_II_20(wb_PC_II_20),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_319 \Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3018] (\LOCKSTEP_Out_reg[3007] [4]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_33));
  ublaze_sopc_microblaze_0_0__MB_FDE_320 \Using_FPGA_LUT6.Gen_Ret_Addr[11].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2925] (\LOCKSTEP_Out_reg[2925] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_20(wb_PC_II_20));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_321 \Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_19),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2926] ),
        .\mem_pc_i_reg[12] (\mem_pc_i_reg[0] [19]),
        .wb_PC_II_19(wb_PC_II_19),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_322 \Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3019] (\LOCKSTEP_Out_reg[3007] [3]),
        .S(addr_AddSub_19),
        .\Using_FPGA.Native (\LOCKSTEP_Out_reg[2926] ),
        .\Using_FPGA.Native_0 (carry_19),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2925] ),
        .lopt_10(lopt_34),
        .lopt_11(lopt_35),
        .lopt_2(addr_AddSub_20),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2924] ),
        .lopt_5(addr_AddSub_21),
        .lopt_6(lopt_32),
        .lopt_7(\LOCKSTEP_Out_reg[2923] ),
        .lopt_8(addr_AddSub_22),
        .lopt_9(lopt_33));
  ublaze_sopc_microblaze_0_0__MB_FDE_323 \Using_FPGA_LUT6.Gen_Ret_Addr[12].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2926] (\LOCKSTEP_Out_reg[2926] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_19(wb_PC_II_19));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_324 \Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_18),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2927] ),
        .\mem_pc_i_reg[13] (\mem_pc_i_reg[0] [18]),
        .wb_PC_II_18(wb_PC_II_18),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_325 \Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I 
       (.LO(carry_19),
        .\LOCKSTEP_Out_reg[3020] (\LOCKSTEP_Out_reg[3007] [2]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt_26),
        .lopt_1(lopt_29));
  ublaze_sopc_microblaze_0_0__MB_FDE_326 \Using_FPGA_LUT6.Gen_Ret_Addr[13].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2927] (\LOCKSTEP_Out_reg[2927] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_18(wb_PC_II_18));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_327 \Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_17),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2928] ),
        .\mem_pc_i_reg[14] (\mem_pc_i_reg[0] [17]),
        .wb_PC_II_17(wb_PC_II_17),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_328 \Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3021] (\LOCKSTEP_Out_reg[3007] [1]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_28));
  ublaze_sopc_microblaze_0_0__MB_FDE_329 \Using_FPGA_LUT6.Gen_Ret_Addr[14].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2928] (\LOCKSTEP_Out_reg[2928] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_17(wb_PC_II_17));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_330 \Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_16),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2929] ),
        .\mem_pc_i_reg[15] (\mem_pc_i_reg[0] [16]),
        .wb_PC_II_16(wb_PC_II_16),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_331 \Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3022] (\LOCKSTEP_Out_reg[3007] [0]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_27));
  ublaze_sopc_microblaze_0_0__MB_FDE_332 \Using_FPGA_LUT6.Gen_Ret_Addr[15].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2929] (\LOCKSTEP_Out_reg[2929] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_16(wb_PC_II_16));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_333 \Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2930] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_15),
        .\mem_pc_i_reg[16] (\mem_pc_i_reg[0] [15]),
        .wb_PC_II_15(wb_PC_II_15),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_334 \Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2930] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3023] (\LOCKSTEP_Out_reg[2914] [15]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[15]),
        .S(addr_AddSub_15),
        .\Using_FPGA.Native (carry_15),
        .\data_rd_reg_reg[16] (\data_rd_reg_reg[16] [15]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2929] ),
        .lopt_10(lopt_28),
        .lopt_11(lopt_29),
        .lopt_2(addr_AddSub_16),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2928] ),
        .lopt_5(addr_AddSub_17),
        .lopt_6(lopt_26),
        .lopt_7(\LOCKSTEP_Out_reg[2927] ),
        .lopt_8(addr_AddSub_18),
        .lopt_9(lopt_27),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg));
  ublaze_sopc_microblaze_0_0__MB_FDE_335 \Using_FPGA_LUT6.Gen_Ret_Addr[16].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2930] (\^LOCKSTEP_Out_reg[2930] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_15(wb_PC_II_15));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_336 \Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2931] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_14),
        .\mem_pc_i_reg[17] (\mem_pc_i_reg[0] [14]),
        .wb_PC_II_14(wb_PC_II_14),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_337 \Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2931] ),
        .LO(carry_15),
        .\LOCKSTEP_Out_reg[3024] (\LOCKSTEP_Out_reg[2914] [14]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[14]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[17] (\data_rd_reg_reg[16] [14]),
        .lopt(lopt_20),
        .lopt_1(lopt_23),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg_6));
  ublaze_sopc_microblaze_0_0__MB_FDE_338 \Using_FPGA_LUT6.Gen_Ret_Addr[17].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2931] (\^LOCKSTEP_Out_reg[2931] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_14(wb_PC_II_14));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_339 \Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2932] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_13),
        .\mem_pc_i_reg[18] (\mem_pc_i_reg[0] [13]),
        .wb_PC_II_13(wb_PC_II_13),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_340 \Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2932] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3025] (\LOCKSTEP_Out_reg[2914] [13]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[13]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[18] (\data_rd_reg_reg[16] [13]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg_0));
  ublaze_sopc_microblaze_0_0__MB_FDE_341 \Using_FPGA_LUT6.Gen_Ret_Addr[18].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2932] (\^LOCKSTEP_Out_reg[2932] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_13(wb_PC_II_13));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_342 \Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2933] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_12),
        .\mem_pc_i_reg[19] (\mem_pc_i_reg[0] [12]),
        .wb_PC_II_12(wb_PC_II_12),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_343 \Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2933] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3026] (\LOCKSTEP_Out_reg[2914] [12]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[12]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[19] (\data_rd_reg_reg[16] [12]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_21),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg_5));
  ublaze_sopc_microblaze_0_0__MB_FDE_344 \Using_FPGA_LUT6.Gen_Ret_Addr[19].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2933] (\^LOCKSTEP_Out_reg[2933] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_12(wb_PC_II_12));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_345 \Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_30),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2915] ),
        .\mem_pc_i_reg[1] (\mem_pc_i_reg[0] [30]),
        .wb_PC_II_30(wb_PC_II_30),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_346 \Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I 
       (.LO(carry_31),
        .\LOCKSTEP_Out_reg[3008] (\LOCKSTEP_Out_reg[3007] [14]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt_44),
        .lopt_1(lopt_47));
  ublaze_sopc_microblaze_0_0__MB_FDE_347 \Using_FPGA_LUT6.Gen_Ret_Addr[1].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2915] (\LOCKSTEP_Out_reg[2915] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_30(wb_PC_II_30));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_348 \Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2934] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_11),
        .\mem_pc_i_reg[20] (\mem_pc_i_reg[0] [11]),
        .wb_PC_II_11(wb_PC_II_11),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_349 \Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2934] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3027] (\LOCKSTEP_Out_reg[2914] [11]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[11]),
        .S(addr_AddSub_11),
        .\Using_FPGA.Native (carry_11),
        .\data_rd_reg_reg[20] (\data_rd_reg_reg[16] [11]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^LOCKSTEP_Out_reg[2933] ),
        .lopt_10(lopt_22),
        .lopt_11(lopt_23),
        .lopt_2(addr_AddSub_12),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\^LOCKSTEP_Out_reg[2932] ),
        .lopt_5(addr_AddSub_13),
        .lopt_6(lopt_20),
        .lopt_7(\^LOCKSTEP_Out_reg[2931] ),
        .lopt_8(addr_AddSub_14),
        .lopt_9(lopt_21),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg_1));
  ublaze_sopc_microblaze_0_0__MB_FDE_350 \Using_FPGA_LUT6.Gen_Ret_Addr[20].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2934] (\^LOCKSTEP_Out_reg[2934] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_11(wb_PC_II_11));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_351 \Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2935] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_10),
        .\mem_pc_i_reg[21] (\mem_pc_i_reg[0] [10]),
        .wb_PC_II_10(wb_PC_II_10),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_352 \Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2935] ),
        .LO(carry_11),
        .\LOCKSTEP_Out_reg[3028] (\LOCKSTEP_Out_reg[2914] [10]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[10]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[21] (\data_rd_reg_reg[16] [10]),
        .lopt(lopt_14),
        .lopt_1(lopt_17),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg_4));
  ublaze_sopc_microblaze_0_0__MB_FDE_353 \Using_FPGA_LUT6.Gen_Ret_Addr[21].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2935] (\^LOCKSTEP_Out_reg[2935] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_10(wb_PC_II_10));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_354 \Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2936] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_9),
        .\mem_pc_i_reg[22] (\mem_pc_i_reg[0] [9]),
        .wb_PC_II_9(wb_PC_II_9),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_355 \Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2936] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3029] (\LOCKSTEP_Out_reg[2914] [9]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[9]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[22] (\data_rd_reg_reg[16] [9]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_16),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg_2));
  ublaze_sopc_microblaze_0_0__MB_FDE_356 \Using_FPGA_LUT6.Gen_Ret_Addr[22].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2936] (\^LOCKSTEP_Out_reg[2936] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_9(wb_PC_II_9));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_357 \Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2937] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_8),
        .\mem_pc_i_reg[23] (\mem_pc_i_reg[0] [8]),
        .wb_PC_II_8(wb_PC_II_8),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_358 \Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2937] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3030] (\LOCKSTEP_Out_reg[2914] [8]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[8]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[23] (\data_rd_reg_reg[16] [8]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_15),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg),
        .wb_read_msb_doublet_sel_reg(wb_read_msb_doublet_sel_reg_3));
  ublaze_sopc_microblaze_0_0__MB_FDE_359 \Using_FPGA_LUT6.Gen_Ret_Addr[23].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2937] (\^LOCKSTEP_Out_reg[2937] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_8(wb_PC_II_8));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_360 \Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2938] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_7),
        .\mem_pc_i_reg[24] (\mem_pc_i_reg[0] [7]),
        .wb_PC_II_7(wb_PC_II_7),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_361 \Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2938] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3031] (\LOCKSTEP_Out_reg[2914] [7]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[7]),
        .S(addr_AddSub_7),
        .\Using_FPGA.Native (carry_7),
        .\data_rd_reg_reg[24] (\data_rd_reg_reg[16] [7]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^LOCKSTEP_Out_reg[2937] ),
        .lopt_10(lopt_16),
        .lopt_11(lopt_17),
        .lopt_2(addr_AddSub_8),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\^LOCKSTEP_Out_reg[2936] ),
        .lopt_5(addr_AddSub_9),
        .lopt_6(lopt_14),
        .lopt_7(\^LOCKSTEP_Out_reg[2935] ),
        .lopt_8(addr_AddSub_10),
        .lopt_9(lopt_15),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_databus_steered_read_data(wb_databus_steered_read_data[7]),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg));
  ublaze_sopc_microblaze_0_0__MB_FDE_362 \Using_FPGA_LUT6.Gen_Ret_Addr[24].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2938] (\^LOCKSTEP_Out_reg[2938] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_7(wb_PC_II_7));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_363 \Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2939] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_6),
        .\mem_pc_i_reg[25] (\mem_pc_i_reg[0] [6]),
        .wb_PC_II_6(wb_PC_II_6),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_364 \Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2939] ),
        .LO(carry_7),
        .\LOCKSTEP_Out_reg[3032] (\LOCKSTEP_Out_reg[2914] [6]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[6]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[25] (\data_rd_reg_reg[16] [6]),
        .lopt(lopt_8),
        .lopt_1(lopt_11),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_databus_steered_read_data(wb_databus_steered_read_data[6]),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg));
  ublaze_sopc_microblaze_0_0__MB_FDE_365 \Using_FPGA_LUT6.Gen_Ret_Addr[25].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2939] (\^LOCKSTEP_Out_reg[2939] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_6(wb_PC_II_6));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_366 \Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2940] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_5),
        .\mem_pc_i_reg[26] (\mem_pc_i_reg[0] [5]),
        .wb_PC_II_5(wb_PC_II_5),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_367 \Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2940] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3033] (\LOCKSTEP_Out_reg[2914] [5]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[5]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[26] (\data_rd_reg_reg[16] [5]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_10),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_databus_steered_read_data(wb_databus_steered_read_data[5]),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg));
  ublaze_sopc_microblaze_0_0__MB_FDE_368 \Using_FPGA_LUT6.Gen_Ret_Addr[26].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2940] (\^LOCKSTEP_Out_reg[2940] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_5(wb_PC_II_5));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_369 \Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2941] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_4),
        .\mem_pc_i_reg[27] (\mem_pc_i_reg[0] [4]),
        .wb_PC_II_4(wb_PC_II_4),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_370 \Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2941] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3034] (\LOCKSTEP_Out_reg[2914] [4]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[4]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[27] (\data_rd_reg_reg[16] [4]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_9),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_databus_steered_read_data(wb_databus_steered_read_data[4]),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg));
  ublaze_sopc_microblaze_0_0__MB_FDE_371 \Using_FPGA_LUT6.Gen_Ret_Addr[27].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2941] (\^LOCKSTEP_Out_reg[2941] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_4(wb_PC_II_4));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_372 \Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2942] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_3),
        .\mem_pc_i_reg[28] (\mem_pc_i_reg[0] [3]),
        .wb_PC_II_3(wb_PC_II_3),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_373 \Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2942] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3035] (\LOCKSTEP_Out_reg[2914] [3]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[3]),
        .S(addr_AddSub_3),
        .\Using_FPGA.Native (carry_3),
        .\data_rd_reg_reg[28] (\data_rd_reg_reg[16] [3]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^LOCKSTEP_Out_reg[2941] ),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(addr_AddSub_4),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\^LOCKSTEP_Out_reg[2940] ),
        .lopt_5(addr_AddSub_5),
        .lopt_6(lopt_8),
        .lopt_7(\^LOCKSTEP_Out_reg[2939] ),
        .lopt_8(addr_AddSub_6),
        .lopt_9(lopt_9),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .\wb_MSR_i_reg[28] (\wb_MSR_i_reg[28] [2]),
        .wb_databus_steered_read_data(wb_databus_steered_read_data[3]),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg));
  ublaze_sopc_microblaze_0_0__MB_FDE_374 \Using_FPGA_LUT6.Gen_Ret_Addr[28].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2942] (\^LOCKSTEP_Out_reg[2942] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_3(wb_PC_II_3));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_375 \Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2943] ),
        .I1_0(I1_0),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_2),
        .\mem_pc_i_reg[29] (\mem_pc_i_reg[0] [2]),
        .wb_PC_II_2(wb_PC_II_2),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_376 \Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2943] ),
        .LO(carry_3),
        .\LOCKSTEP_Out_reg[3036] (\LOCKSTEP_Out_reg[2914] [2]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[2]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[29] (\data_rd_reg_reg[16] [2]),
        .lopt(lopt_2),
        .lopt_1(lopt_5),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .\wb_MSR_i_reg[29] (\wb_MSR_i_reg[28] [1]),
        .wb_databus_steered_read_data(wb_databus_steered_read_data[2]),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg));
  ublaze_sopc_microblaze_0_0__MB_FDE_377 \Using_FPGA_LUT6.Gen_Ret_Addr[29].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2943] (\^LOCKSTEP_Out_reg[2943] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_2(wb_PC_II_2));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_378 \Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_29),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2916] ),
        .\mem_pc_i_reg[2] (\mem_pc_i_reg[0] [29]),
        .wb_PC_II_29(wb_PC_II_29),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_379 \Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3009] (\LOCKSTEP_Out_reg[3007] [13]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_46));
  ublaze_sopc_microblaze_0_0__MB_FDE_380 \Using_FPGA_LUT6.Gen_Ret_Addr[2].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2916] (\LOCKSTEP_Out_reg[2916] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_29(wb_PC_II_29));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_381 \Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2944] ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_1),
        .\mem_pc_i_reg[30] (\mem_pc_i_reg[0] [1]),
        .wb_PC_II_1(wb_PC_II_1),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_382 \Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2944] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3037] (\LOCKSTEP_Out_reg[2914] [1]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[1]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[30] (\data_rd_reg_reg[16] [1]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .\wb_MSR_i_reg[30] (\wb_MSR_i_reg[28] [0]),
        .wb_databus_steered_read_data(wb_databus_steered_read_data[1]),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg));
  ublaze_sopc_microblaze_0_0__MB_FDE_383 \Using_FPGA_LUT6.Gen_Ret_Addr[30].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2944] (\^LOCKSTEP_Out_reg[2944] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_1(wb_PC_II_1));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_384 \Using_FPGA_LUT6.Gen_Ret_Addr[31].I_RET_ADDR_WB 
       (.DI(\^DI ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_0),
        .\mem_pc_i_reg[31] (\mem_pc_i_reg[0] [0]),
        .wb_PC_II_0(wb_PC_II_0),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_385 \Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_CI_UNCONNECTED ),
        .DI(\^DI ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3038] (\LOCKSTEP_Out_reg[2914] [0]),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[0]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_S_UNCONNECTED ),
        .\data_rd_reg_reg[31] (\data_rd_reg_reg[16] [0]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_3),
        .read_register_MSR_1_reg(read_register_MSR_1_reg),
        .wb_databus_steered_read_data(wb_databus_steered_read_data[0]),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_wr_dbg(wb_gpr_wr_dbg));
  ublaze_sopc_microblaze_0_0__MB_FDE_386 \Using_FPGA_LUT6.Gen_Ret_Addr[31].WB_PC_FDE 
       (.Clk(Clk),
        .DI(\^DI ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_0(wb_PC_II_0));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_387 \Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_28),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2917] ),
        .\mem_pc_i_reg[3] (\mem_pc_i_reg[0] [28]),
        .wb_PC_II_28(wb_PC_II_28),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_388 \Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3010] (\LOCKSTEP_Out_reg[3007] [12]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_45));
  ublaze_sopc_microblaze_0_0__MB_FDE_389 \Using_FPGA_LUT6.Gen_Ret_Addr[3].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2917] (\LOCKSTEP_Out_reg[2917] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_28(wb_PC_II_28));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_390 \Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_27),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2918] ),
        .\mem_pc_i_reg[4] (\mem_pc_i_reg[0] [27]),
        .wb_PC_II_27(wb_PC_II_27),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_391 \Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3011] (\LOCKSTEP_Out_reg[3007] [11]),
        .S(addr_AddSub_27),
        .\Using_FPGA.Native (\LOCKSTEP_Out_reg[2918] ),
        .\Using_FPGA.Native_0 (carry_27),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2917] ),
        .lopt_10(lopt_46),
        .lopt_11(lopt_47),
        .lopt_2(addr_AddSub_28),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2916] ),
        .lopt_5(addr_AddSub_29),
        .lopt_6(lopt_44),
        .lopt_7(\LOCKSTEP_Out_reg[2915] ),
        .lopt_8(addr_AddSub_30),
        .lopt_9(lopt_45));
  ublaze_sopc_microblaze_0_0__MB_FDE_392 \Using_FPGA_LUT6.Gen_Ret_Addr[4].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2918] (\LOCKSTEP_Out_reg[2918] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_27(wb_PC_II_27));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_393 \Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_26),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2919] ),
        .\mem_pc_i_reg[5] (\mem_pc_i_reg[0] [26]),
        .wb_PC_II_26(wb_PC_II_26),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_394 \Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I 
       (.LO(carry_27),
        .\LOCKSTEP_Out_reg[3012] (\LOCKSTEP_Out_reg[3007] [10]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt_38),
        .lopt_1(lopt_41));
  ublaze_sopc_microblaze_0_0__MB_FDE_395 \Using_FPGA_LUT6.Gen_Ret_Addr[5].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2919] (\LOCKSTEP_Out_reg[2919] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_26(wb_PC_II_26));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_396 \Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_25),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2920] ),
        .\mem_pc_i_reg[6] (\mem_pc_i_reg[0] [25]),
        .wb_PC_II_25(wb_PC_II_25),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_397 \Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3013] (\LOCKSTEP_Out_reg[3007] [9]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40));
  ublaze_sopc_microblaze_0_0__MB_FDE_398 \Using_FPGA_LUT6.Gen_Ret_Addr[6].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2920] (\LOCKSTEP_Out_reg[2920] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_25(wb_PC_II_25));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_399 \Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_24),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2921] ),
        .\mem_pc_i_reg[7] (\mem_pc_i_reg[0] [24]),
        .wb_PC_II_24(wb_PC_II_24),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_400 \Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3014] (\LOCKSTEP_Out_reg[3007] [8]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_39));
  ublaze_sopc_microblaze_0_0__MB_FDE_401 \Using_FPGA_LUT6.Gen_Ret_Addr[7].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2921] (\LOCKSTEP_Out_reg[2921] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_24(wb_PC_II_24));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_402 \Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_23),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2922] ),
        .\mem_pc_i_reg[8] (\mem_pc_i_reg[0] [23]),
        .wb_PC_II_23(wb_PC_II_23),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_403 \Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3015] (\LOCKSTEP_Out_reg[3007] [7]),
        .S(addr_AddSub_23),
        .\Using_FPGA.Native (\LOCKSTEP_Out_reg[2922] ),
        .\Using_FPGA.Native_0 (carry_23),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2921] ),
        .lopt_10(lopt_40),
        .lopt_11(lopt_41),
        .lopt_2(addr_AddSub_24),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2920] ),
        .lopt_5(addr_AddSub_25),
        .lopt_6(lopt_38),
        .lopt_7(\LOCKSTEP_Out_reg[2919] ),
        .lopt_8(addr_AddSub_26),
        .lopt_9(lopt_39));
  ublaze_sopc_microblaze_0_0__MB_FDE_404 \Using_FPGA_LUT6.Gen_Ret_Addr[8].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2922] (\LOCKSTEP_Out_reg[2922] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_23(wb_PC_II_23));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized5_405 \Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB 
       (.\Performance_Debug_Control.dbg_freeze_nohalt_reg (\Performance_Debug_Control.dbg_freeze_nohalt_reg ),
        .S(addr_AddSub_22),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2923] ),
        .\mem_pc_i_reg[9] (\mem_pc_i_reg[0] [22]),
        .wb_PC_II_22(wb_PC_II_22),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_XORCY_406 \Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(carry_23),
        .\LOCKSTEP_Out_reg[3016] (\LOCKSTEP_Out_reg[3007] [6]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .lopt(lopt_32),
        .lopt_1(lopt_35));
  ublaze_sopc_microblaze_0_0__MB_FDE_407 \Using_FPGA_LUT6.Gen_Ret_Addr[9].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2923] (\LOCKSTEP_Out_reg[2923] ),
        .mem_load_store_access_reg(mem_load_store_access_reg),
        .wb_PC_II_22(wb_PC_II_22));
endmodule

(* ORIG_REF_NAME = "instr_mux" *) 
module ublaze_sopc_microblaze_0_0__instr_mux
   (I139_out,
    Y,
    in,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Instr,
    LOCKSTEP_Master_Out);
  output I139_out;
  output [0:31]Y;
  output [0:0]in;
  input [0:0]\Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:31]Instr;
  input [32:0]LOCKSTEP_Master_Out;

  wire I139_out;
  wire [0:31]Instr;
  wire [32:0]LOCKSTEP_Master_Out;
  wire [0:0]\Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:31]Y;
  wire [0:0]in;

  ublaze_sopc_microblaze_0_0__mux_bus \Mux_LD.LD_inst 
       (.I139_out(I139_out),
        .Instr(Instr),
        .LOCKSTEP_Master_Out(LOCKSTEP_Master_Out),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .Y(Y),
        .in(in));
endmodule

(* ORIG_REF_NAME = "jump_logic" *) 
module ublaze_sopc_microblaze_0_0__jump_logic
   (ex_jump,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    ex_jump_q,
    I5,
    ex_jump_hold_reg,
    ex_delayslot_Instr0,
    keep_jump_taken_with_ds_reg,
    mem_jump_taken0,
    \Instr_Addr[0] ,
    if_missed_fetch_reg,
    \Using_FPGA.Native ,
    ex_op1_zero,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg ,
    ex_branch_with_delayslot_reg,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk,
    ex_op1_cmp_eq_n5_out,
    \Using_FPGA.Native_1 ,
    ex_op1_cmp_eq1,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    \EX_Branch_CMP_Op1_reg[0] ,
    wb_exception,
    Q,
    ex_Take_Intr_or_Exc_reg,
    out,
    ex_jump_hold,
    E,
    keep_jump_taken_with_ds,
    ex_branch_with_delayslot,
    ex_mbar_stall_no_sleep_1,
    ex_first_cycle,
    ex_mbar_decode,
    ex_mbar_sleep,
    ex_databus_addr,
    \if_pc_reg[30] ,
    \EX_Op2_reg[0] ,
    O,
    \if_pc_reg[28] ,
    \if_pc_reg[27] ,
    \if_pc_reg[26] ,
    \if_pc_reg[25] ,
    \if_pc_reg[24] ,
    \if_pc_reg[23] ,
    \if_pc_reg[22] ,
    \if_pc_reg[21] ,
    \if_pc_reg[20] ,
    \if_pc_reg[19] ,
    \if_pc_reg[18] ,
    \if_pc_reg[17] ,
    \if_pc_reg[16] ,
    \if_pc_reg[15] ,
    \if_pc_reg[14] ,
    \if_pc_reg[13] ,
    \if_pc_reg[12] ,
    \if_pc_reg[11] ,
    \if_pc_reg[10] ,
    \if_pc_reg[9] ,
    \if_pc_reg[8] ,
    \if_pc_reg[7] ,
    \if_pc_reg[6] ,
    \if_pc_reg[5] ,
    \if_pc_reg[4] ,
    \if_pc_reg[3] ,
    \if_pc_reg[2] ,
    \if_pc_reg[1] ,
    O56_out,
    if_missed_fetch,
    if_fetch_in_progress_reg,
    IB_Ready,
    LOCKSTEP_Master_Out,
    of_valid,
    EX_MBAR_Stall__2,
    lopt,
    lopt_1,
    lopt_2);
  output ex_jump;
  output ex_op1_cmp_equal;
  output ex_op1_cmp_equal_n;
  output ex_jump_q;
  output I5;
  output ex_jump_hold_reg;
  output ex_delayslot_Instr0;
  output keep_jump_taken_with_ds_reg;
  output mem_jump_taken0;
  output [31:0]\Instr_Addr[0] ;
  output if_missed_fetch_reg;
  output \Using_FPGA.Native ;
  input ex_op1_zero;
  input \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  input ex_branch_with_delayslot_reg;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input ex_op1_cmp_eq_n5_out;
  input \Using_FPGA.Native_1 ;
  input ex_op1_cmp_eq1;
  input use_Reg_Neg_DI1_out;
  input force_Val10_out;
  input use_Reg_Neg_S3_out;
  input force12_out;
  input [0:0]\EX_Branch_CMP_Op1_reg[0] ;
  input wb_exception;
  input [2:0]Q;
  input ex_Take_Intr_or_Exc_reg;
  input out;
  input ex_jump_hold;
  input [0:0]E;
  input keep_jump_taken_with_ds;
  input ex_branch_with_delayslot;
  input ex_mbar_stall_no_sleep_1;
  input ex_first_cycle;
  input ex_mbar_decode;
  input ex_mbar_sleep;
  input [1:0]ex_databus_addr;
  input [1:0]\if_pc_reg[30] ;
  input [29:0]\EX_Op2_reg[0] ;
  input O;
  input \if_pc_reg[28] ;
  input \if_pc_reg[27] ;
  input \if_pc_reg[26] ;
  input \if_pc_reg[25] ;
  input \if_pc_reg[24] ;
  input \if_pc_reg[23] ;
  input \if_pc_reg[22] ;
  input \if_pc_reg[21] ;
  input \if_pc_reg[20] ;
  input \if_pc_reg[19] ;
  input \if_pc_reg[18] ;
  input \if_pc_reg[17] ;
  input \if_pc_reg[16] ;
  input \if_pc_reg[15] ;
  input \if_pc_reg[14] ;
  input \if_pc_reg[13] ;
  input \if_pc_reg[12] ;
  input \if_pc_reg[11] ;
  input \if_pc_reg[10] ;
  input \if_pc_reg[9] ;
  input \if_pc_reg[8] ;
  input \if_pc_reg[7] ;
  input \if_pc_reg[6] ;
  input \if_pc_reg[5] ;
  input \if_pc_reg[4] ;
  input \if_pc_reg[3] ;
  input \if_pc_reg[2] ;
  input \if_pc_reg[1] ;
  input O56_out;
  input if_missed_fetch;
  input [0:0]if_fetch_in_progress_reg;
  input IB_Ready;
  input [0:0]LOCKSTEP_Master_Out;
  input of_valid;
  input EX_MBAR_Stall__2;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire Clk;
  wire DI;
  wire [0:0]E;
  wire [0:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire EX_MBAR_Stall__2;
  wire [29:0]\EX_Op2_reg[0] ;
  wire I5;
  wire IB_Ready;
  wire [31:0]\Instr_Addr[0] ;
  wire [0:0]LOCKSTEP_Master_Out;
  wire MUXCY_JUMP_CARRY6_n_39;
  wire O;
  wire O56_out;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire [2:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_Take_Intr_or_Exc_reg;
  wire ex_branch_with_delayslot;
  wire ex_branch_with_delayslot_reg;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr0;
  wire ex_first_cycle;
  wire ex_jump;
  wire ex_jump_hold;
  wire ex_jump_hold_reg;
  wire ex_jump_q;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire force12_out;
  wire force1_reg_n_0;
  wire force2;
  wire force_Val10_out;
  wire force_Val1_reg_n_0;
  wire force_Val2_N;
  wire [0:0]if_fetch_in_progress_reg;
  wire if_missed_fetch;
  wire if_missed_fetch_reg;
  wire \if_pc_reg[10] ;
  wire \if_pc_reg[11] ;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[13] ;
  wire \if_pc_reg[14] ;
  wire \if_pc_reg[15] ;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[17] ;
  wire \if_pc_reg[18] ;
  wire \if_pc_reg[19] ;
  wire \if_pc_reg[1] ;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[21] ;
  wire \if_pc_reg[22] ;
  wire \if_pc_reg[23] ;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[25] ;
  wire \if_pc_reg[26] ;
  wire \if_pc_reg[27] ;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[2] ;
  wire [1:0]\if_pc_reg[30] ;
  wire \if_pc_reg[3] ;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[5] ;
  wire \if_pc_reg[6] ;
  wire \if_pc_reg[7] ;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[9] ;
  wire jump_carry1;
  wire jump_carry5;
  wire keep_jump_taken_with_ds;
  wire keep_jump_taken_with_ds_reg;
  wire lopt;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  (* DIRECT_ENABLE *) wire of_PipeRun_for_ce;
  wire of_valid;
  wire out;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_DI_reg_n_0;
  wire use_Reg_Neg_S3_out;
  wire use_Reg_Neg_S_reg_n_0;
  wire wb_exception;
  wire NLW_MUXCY_JUMP_CARRY_DI_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY_S_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY_ex_op1_zero_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY2_jump_carry2_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY2_lopt_3_UNCONNECTED;
  wire \NLW_MUXCY_JUMP_CARRY3_Performance_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ;
  wire NLW_MUXCY_JUMP_CARRY3_ex_jump_wanted_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY3_jump_carry2_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_ex_branch_with_delayslot_reg_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_ex_jump_wanted_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_jump_carry4_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_lopt_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY5_jump_carry4_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY6_mem_jump_taken0_UNCONNECTED;

  assign lopt_1 = DI;
  assign lopt_2 = S;
  assign of_PipeRun_for_ce = of_pause_reg;
  assign reset_bool_for_rst = sync_reset;
  ublaze_sopc_microblaze_0_0__MB_MUXCY_96 MUXCY_JUMP_CARRY
       (.DI(NLW_MUXCY_JUMP_CARRY_DI_UNCONNECTED),
        .S(NLW_MUXCY_JUMP_CARRY_S_UNCONNECTED),
        .ex_op1_zero(NLW_MUXCY_JUMP_CARRY_ex_op1_zero_UNCONNECTED),
        .jump_carry1(jump_carry1),
        .lopt(lopt));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_97 MUXCY_JUMP_CARRY2
       (.ex_Take_Intr_or_Exc_reg(ex_Take_Intr_or_Exc_reg),
        .force2(force2),
        .force_Val2_N(force_Val2_N),
        .jump_carry1(jump_carry1),
        .jump_carry2(NLW_MUXCY_JUMP_CARRY2_jump_carry2_UNCONNECTED),
        .lopt(\^lopt_1 ),
        .lopt_1(\^lopt_2 ),
        .lopt_2(\Performance_Debug_Control.dbg_stop_if_delay_i_reg ),
        .lopt_3(NLW_MUXCY_JUMP_CARRY2_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(ex_branch_with_delayslot_reg),
        .lopt_6(lopt_5),
        .lopt_7(lopt_6),
        .lopt_8(lopt_7),
        .out(out));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_98 MUXCY_JUMP_CARRY3
       (.EX_MBAR_Stall__2(EX_MBAR_Stall__2),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg (\NLW_MUXCY_JUMP_CARRY3_Performance_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_jump_wanted(NLW_MUXCY_JUMP_CARRY3_ex_jump_wanted_UNCONNECTED),
        .jump_carry2(NLW_MUXCY_JUMP_CARRY3_jump_carry2_UNCONNECTED),
        .lopt(\^lopt_1 ),
        .lopt_1(\^lopt_2 ),
        .of_valid(of_valid));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_99 MUXCY_JUMP_CARRY4
       (.ex_branch_with_delayslot_reg(NLW_MUXCY_JUMP_CARRY4_ex_branch_with_delayslot_reg_UNCONNECTED),
        .ex_jump_wanted(NLW_MUXCY_JUMP_CARRY4_ex_jump_wanted_UNCONNECTED),
        .jump_carry4(NLW_MUXCY_JUMP_CARRY4_jump_carry4_UNCONNECTED),
        .lopt(NLW_MUXCY_JUMP_CARRY4_lopt_UNCONNECTED),
        .lopt_1(lopt_4));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_100 MUXCY_JUMP_CARRY5
       (.jump_carry4(NLW_MUXCY_JUMP_CARRY5_jump_carry4_UNCONNECTED),
        .jump_carry5(jump_carry5),
        .lopt(lopt_5),
        .lopt_1(lopt_6),
        .lopt_2(lopt_7));
  ublaze_sopc_microblaze_0_0__MB_MUXCY_101 MUXCY_JUMP_CARRY6
       (.E(E),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] ),
        .I5(I5),
        .IB_Ready(IB_Ready),
        .\Instr_Addr[0] (\Instr_Addr[0] ),
        .LOCKSTEP_Master_Out(LOCKSTEP_Master_Out),
        .O(O),
        .O56_out(O56_out),
        .Q(Q),
        .ex_Take_Intr_or_Exc_reg(ex_Take_Intr_or_Exc_reg),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_databus_addr(ex_databus_addr),
        .ex_delayslot_Instr0(ex_delayslot_Instr0),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_jump_hold_reg(ex_jump_hold_reg),
        .ex_jump_q(ex_jump_q),
        .ex_jump_q_reg(ex_jump),
        .ex_jump_q_reg_0(MUXCY_JUMP_CARRY6_n_39),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .if_fetch_in_progress_reg(if_fetch_in_progress_reg),
        .if_missed_fetch(if_missed_fetch),
        .if_missed_fetch_reg(if_missed_fetch_reg),
        .\if_pc_reg[10] (\if_pc_reg[10] ),
        .\if_pc_reg[11] (\if_pc_reg[11] ),
        .\if_pc_reg[12] (\if_pc_reg[12] ),
        .\if_pc_reg[13] (\if_pc_reg[13] ),
        .\if_pc_reg[14] (\if_pc_reg[14] ),
        .\if_pc_reg[15] (\if_pc_reg[15] ),
        .\if_pc_reg[16] (\if_pc_reg[16] ),
        .\if_pc_reg[17] (\if_pc_reg[17] ),
        .\if_pc_reg[18] (\if_pc_reg[18] ),
        .\if_pc_reg[19] (\if_pc_reg[19] ),
        .\if_pc_reg[1] (\if_pc_reg[1] ),
        .\if_pc_reg[20] (\if_pc_reg[20] ),
        .\if_pc_reg[21] (\if_pc_reg[21] ),
        .\if_pc_reg[22] (\if_pc_reg[22] ),
        .\if_pc_reg[23] (\if_pc_reg[23] ),
        .\if_pc_reg[24] (\if_pc_reg[24] ),
        .\if_pc_reg[25] (\if_pc_reg[25] ),
        .\if_pc_reg[26] (\if_pc_reg[26] ),
        .\if_pc_reg[27] (\if_pc_reg[27] ),
        .\if_pc_reg[28] (\if_pc_reg[28] ),
        .\if_pc_reg[2] (\if_pc_reg[2] ),
        .\if_pc_reg[30] (\if_pc_reg[30] ),
        .\if_pc_reg[3] (\if_pc_reg[3] ),
        .\if_pc_reg[4] (\if_pc_reg[4] ),
        .\if_pc_reg[5] (\if_pc_reg[5] ),
        .\if_pc_reg[6] (\if_pc_reg[6] ),
        .\if_pc_reg[7] (\if_pc_reg[7] ),
        .\if_pc_reg[8] (\if_pc_reg[8] ),
        .\if_pc_reg[9] (\if_pc_reg[9] ),
        .jump_carry5(jump_carry5),
        .keep_jump_taken_with_ds(keep_jump_taken_with_ds),
        .keep_jump_taken_with_ds_reg(keep_jump_taken_with_ds_reg),
        .mem_jump_taken0(NLW_MUXCY_JUMP_CARRY6_mem_jump_taken0_UNCONNECTED),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_q_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MUXCY_JUMP_CARRY6_n_39),
        .Q(ex_jump_q),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_op1_cmp_eq_n_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_op1_cmp_eq_n5_out),
        .Q(ex_op1_cmp_equal_n),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_op1_cmp_eq_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_op1_cmp_equal),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    force1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(force12_out),
        .Q(force1_reg_n_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    force2_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_op1_cmp_eq1),
        .Q(force2),
        .R(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'hA6)) 
    force_DI1
       (.I0(force_Val1_reg_n_0),
        .I1(use_Reg_Neg_DI_reg_n_0),
        .I2(\EX_Branch_CMP_Op1_reg[0] ),
        .O(DI));
  FDRE #(
    .INIT(1'b0)) 
    force_Val1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(force_Val10_out),
        .Q(force_Val1_reg_n_0),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    force_Val2_N_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(\Using_FPGA.Native_1 ),
        .Q(force_Val2_N),
        .S(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'hA6)) 
    force_jump1
       (.I0(force1_reg_n_0),
        .I1(use_Reg_Neg_S_reg_n_0),
        .I2(\EX_Branch_CMP_Op1_reg[0] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    use_Reg_Neg_DI_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(use_Reg_Neg_DI1_out),
        .Q(use_Reg_Neg_DI_reg_n_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    use_Reg_Neg_S_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(use_Reg_Neg_S3_out),
        .Q(use_Reg_Neg_S_reg_n_0),
        .R(reset_bool_for_rst));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit
   (out,
    reset_temp__0,
    Clk);
  output [0:0]out;
  input reset_temp__0;
  input Clk;

  wire Clk;
  wire reset_temp__0;
  (* async_reg = "true" *) wire [1:2]sync;

  assign out[0] = sync[2];
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(reset_temp__0),
        .Q(sync[1]),
        .R(1'b0));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_0
   (out,
    SR,
    Wakeup,
    Clk);
  output [0:0]out;
  input [0:0]SR;
  input [0:0]Wakeup;
  input Clk;

  wire Clk;
  wire [0:0]SR;
  wire [0:0]Wakeup;
  (* async_reg = "true" *) wire [1:2]sync;

  assign out[0] = sync[2];
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Wakeup),
        .Q(sync[1]),
        .R(SR));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_1
   (out,
    SR,
    Wakeup,
    Clk);
  output [0:0]out;
  input [0:0]SR;
  input [0:0]Wakeup;
  input Clk;

  wire Clk;
  wire [0:0]SR;
  wire [0:0]Wakeup;
  (* async_reg = "true" *) wire [1:2]sync;

  assign out[0] = sync[2];
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Wakeup),
        .Q(sync[1]),
        .R(SR));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_48
   (sample_synced,
    p_93_out,
    Q,
    sync_reset,
    D,
    Clk);
  output [0:0]sample_synced;
  output p_93_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]D;
  input Clk;

  wire Clk;
  wire [0:0]D;
  wire [0:0]Q;
  wire p_93_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.normal_stop_cmd_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_93_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(D),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_49
   (sample_synced,
    p_90_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.force_stop_TClk_reg ,
    Clk);
  output [0:0]sample_synced;
  output p_90_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.force_stop_TClk_reg ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.force_stop_TClk_reg ;
  wire p_90_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.force_stop_cmd_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_90_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.force_stop_TClk_reg ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_50
   (sample_synced,
    p_87_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.single_Step_TClk_reg ,
    Clk);
  output [0:0]sample_synced;
  output p_87_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.single_Step_TClk_reg ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.single_Step_TClk_reg ;
  wire p_87_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.start_single_cmd_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_87_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.single_Step_TClk_reg ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_51
   (sample_synced,
    p_85_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.command_reg_reg[0] ,
    Clk);
  output [0:0]sample_synced;
  output p_85_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.command_reg_reg[0] ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.command_reg_reg[0] ;
  wire p_85_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.read_register_MSR_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_85_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.command_reg_reg[0] ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_52
   (sample_synced,
    p_82_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.command_reg_reg[1] ,
    Clk);
  output [0:0]sample_synced;
  output p_82_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.command_reg_reg[1] ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.command_reg_reg[1] ;
  wire p_82_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.read_register_PC_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_82_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.command_reg_reg[1] ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_53
   (sample_synced,
    \Serial_Dbg_Intf.trig_in_1_reg ,
    p_11_out,
    sync_reset,
    \Synchronize.use_sync_reset.sync_reg[2]_0 ,
    Q,
    Dbg_Trig_In,
    \Serial_Dbg_Intf.continue_from_brk_TClk_reg ,
    Clk);
  output [0:0]sample_synced;
  output \Serial_Dbg_Intf.trig_in_1_reg ;
  output p_11_out;
  input sync_reset;
  input [2:0]\Synchronize.use_sync_reset.sync_reg[2]_0 ;
  input [3:0]Q;
  input [0:0]Dbg_Trig_In;
  input [0:0]\Serial_Dbg_Intf.continue_from_brk_TClk_reg ;
  input Clk;

  wire Clk;
  wire [3:0]Q;
  wire [0:0]\Serial_Dbg_Intf.continue_from_brk_TClk_reg ;
  wire [2:0]\Synchronize.use_sync_reset.sync_reg[2]_0 ;
  wire p_11_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT4 #(
    .INIT(16'h4F44)) 
    \Serial_Dbg_Intf.continue_from_brk_i_1 
       (.I0(Q[2]),
        .I1(sync[2]),
        .I2(Q[1]),
        .I3(\Synchronize.use_sync_reset.sync_reg[2]_0 [1]),
        .O(p_11_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.continue_from_brk_TClk_reg ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_54
   (sample_synced,
    p_75_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ,
    Clk);
  output [0:0]sample_synced;
  output p_75_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ;
  wire p_75_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.if_debug_ready_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_75_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_55
   (sample_synced,
    \Serial_Dbg_Intf.trig_ack_out_1_reg ,
    Dbg_Trig_Ack_Out,
    sync_reset,
    Q,
    Dbg_Trig_Out,
    Clk);
  output [0:0]sample_synced;
  output \Serial_Dbg_Intf.trig_ack_out_1_reg ;
  input [0:0]Dbg_Trig_Ack_Out;
  input sync_reset;
  input [0:0]Q;
  input [0:0]Dbg_Trig_Out;
  input Clk;

  wire Clk;
  wire [0:0]Dbg_Trig_Out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Dbg_Trig_Out),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit_57
   (sample_synced,
    sync_reset,
    \Serial_Dbg_Intf.control_reg_reg[3] ,
    Clk);
  output [0:0]sample_synced;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.control_reg_reg[3] ;
  input Clk;

  wire Clk;
  wire [0:0]\Serial_Dbg_Intf.control_reg_reg[3] ;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.control_reg_reg[3] ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized1
   (external_interrupt,
    Interrupt,
    Clk);
  output external_interrupt;
  input Interrupt;
  input Clk;

  wire Clk;
  wire Interrupt;
  wire external_interrupt;

  FDRE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_sync_reset.sync_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(Interrupt),
        .Q(external_interrupt),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized1_31
   (trig_out_0_synced,
    \Performance_Debug_Control.trig_ack_out_0_reg ,
    \Performance_Debug_Control.dbg_stop_i_reg ,
    sync_reset,
    Dbg_Trig_Out,
    Clk,
    Dbg_Trig_Ack_Out,
    trig_out_0_synced_1,
    \Performance_Debug_Control.dbg_stop_i_reg_0 ,
    Dbg_Stop,
    dbg_stop_1,
    D,
    dbg_stop_i);
  output trig_out_0_synced;
  output \Performance_Debug_Control.trig_ack_out_0_reg ;
  output \Performance_Debug_Control.dbg_stop_i_reg ;
  input sync_reset;
  input [0:0]Dbg_Trig_Out;
  input Clk;
  input [0:0]Dbg_Trig_Ack_Out;
  input trig_out_0_synced_1;
  input \Performance_Debug_Control.dbg_stop_i_reg_0 ;
  input Dbg_Stop;
  input dbg_stop_1;
  input [0:0]D;
  input dbg_stop_i;

  wire \Performance_Debug_Control.dbg_stop_i_reg ;
  wire \Performance_Debug_Control.dbg_stop_i_reg_0 ;
  wire dbg_stop_i;

  (* OPT_MODIFIED = "RETARGET PROPCONST" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Performance_Debug_Control.dbg_stop_i_i_1 
       (.I0(\Performance_Debug_Control.dbg_stop_i_reg_0 ),
        .I1(dbg_stop_i),
        .O(\Performance_Debug_Control.dbg_stop_i_reg ));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4
   (D,
    dbg_brki_hit,
    Dbg_Clk,
    \Single_Synchronize.use_async_reset.sync_i_1 );
  output [0:0]D;
  input dbg_brki_hit;
  input Dbg_Clk;
  input \Single_Synchronize.use_async_reset.sync_i_1 ;

  wire [0:0]D;
  wire Dbg_Clk;
  wire \Single_Synchronize.use_async_reset.sync_i_1 ;
  wire dbg_brki_hit;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Single_Synchronize.use_async_reset.sync_i_1 ),
        .D(dbg_brki_hit),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_26
   (D,
    \Single_Synchronize.use_async_reset.sync_reg_0 ,
    Pause,
    Dbg_Clk,
    Scan_En,
    Scan_Reset_Sel,
    Scan_Reset);
  output [0:0]D;
  output \Single_Synchronize.use_async_reset.sync_reg_0 ;
  input Pause;
  input Dbg_Clk;
  input Scan_En;
  input Scan_Reset_Sel;
  input Scan_Reset;

  wire ZERO;

  assign \Single_Synchronize.use_async_reset.sync_reg_0  = ZERO;
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND
       (.G(ZERO));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_27
   (D,
    running_clock,
    Dbg_Clk,
    \Single_Synchronize.use_async_reset.sync_i_1 );
  output [0:0]D;
  input running_clock;
  input Dbg_Clk;
  input \Single_Synchronize.use_async_reset.sync_i_1 ;

  wire [0:0]D;
  wire Dbg_Clk;
  wire \Single_Synchronize.use_async_reset.sync_i_1 ;
  wire running_clock;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Single_Synchronize.use_async_reset.sync_i_1 ),
        .D(running_clock),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_28
   (D,
    Sleep,
    Dbg_Clk,
    \Single_Synchronize.use_async_reset.sync_i_1 );
  output [0:0]D;
  input Sleep;
  input Dbg_Clk;
  input \Single_Synchronize.use_async_reset.sync_i_1 ;

  wire [0:0]D;
  wire Dbg_Clk;
  wire \Single_Synchronize.use_async_reset.sync_i_1 ;
  wire Sleep;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Single_Synchronize.use_async_reset.sync_i_1 ),
        .D(Sleep),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_29
   (D,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    Dbg_Clk,
    \Single_Synchronize.use_async_reset.sync_i_1 );
  output [0:0]D;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input Dbg_Clk;
  input \Single_Synchronize.use_async_reset.sync_i_1 ;

  wire [0:0]D;
  wire Dbg_Clk;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Single_Synchronize.use_async_reset.sync_i_1 ;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Single_Synchronize.use_async_reset.sync_i_1 ),
        .D(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_58
   (D,
    dbg_hit,
    Dbg_Clk,
    \Single_Synchronize.use_async_reset.sync_i_1 );
  output [0:0]D;
  input [0:0]dbg_hit;
  input Dbg_Clk;
  input \Single_Synchronize.use_async_reset.sync_i_1 ;

  wire [0:0]D;
  wire Dbg_Clk;
  wire \Single_Synchronize.use_async_reset.sync_i_1 ;
  wire [0:0]dbg_hit;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Single_Synchronize.use_async_reset.sync_i_1 ),
        .D(dbg_hit),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_vec" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_vec
   (D,
    dbg_hit,
    Dbg_Clk,
    \Single_Synchronize.use_async_reset.sync_i_1 );
  output [0:0]D;
  input [0:0]dbg_hit;
  input Dbg_Clk;
  input \Single_Synchronize.use_async_reset.sync_i_1 ;

  wire [0:0]D;
  wire Dbg_Clk;
  wire \Single_Synchronize.use_async_reset.sync_i_1 ;
  wire [0:0]dbg_hit;

  ublaze_sopc_microblaze_0_0__mb_sync_bit__parameterized4_58 \sync_bits[0].sync_bit 
       (.D(D),
        .Dbg_Clk(Dbg_Clk),
        .\Single_Synchronize.use_async_reset.sync_i_1 (\Single_Synchronize.use_async_reset.sync_i_1 ),
        .dbg_hit(dbg_hit));
endmodule

(* ORIG_REF_NAME = "mb_sync_vec" *) 
module ublaze_sopc_microblaze_0_0__mb_sync_vec__parameterized1
   (sample_synced,
    \Serial_Dbg_Intf.trig_in_1_reg ,
    p_11_out,
    \Serial_Dbg_Intf.trig_ack_out_1_reg ,
    p_87_out,
    p_90_out,
    p_75_out,
    p_85_out,
    p_82_out,
    p_93_out,
    sync_reset,
    Q,
    Dbg_Trig_Ack_Out,
    Dbg_Trig_In,
    D,
    Clk,
    \Serial_Dbg_Intf.force_stop_TClk_reg ,
    \Serial_Dbg_Intf.single_Step_TClk_reg ,
    \Serial_Dbg_Intf.command_reg_reg[0] ,
    \Serial_Dbg_Intf.continue_from_brk_TClk_reg ,
    \Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ,
    Dbg_Trig_Out,
    Dbg_Trig_Ack_In,
    \Serial_Dbg_Intf.control_reg_reg[3] );
  output [0:9]sample_synced;
  output \Serial_Dbg_Intf.trig_in_1_reg ;
  output p_11_out;
  output \Serial_Dbg_Intf.trig_ack_out_1_reg ;
  output p_87_out;
  output p_90_out;
  output p_75_out;
  output p_85_out;
  output p_82_out;
  output p_93_out;
  input sync_reset;
  input [8:0]Q;
  input [0:0]Dbg_Trig_Ack_Out;
  input [0:0]Dbg_Trig_In;
  input [0:0]D;
  input Clk;
  input [0:0]\Serial_Dbg_Intf.force_stop_TClk_reg ;
  input [0:0]\Serial_Dbg_Intf.single_Step_TClk_reg ;
  input [1:0]\Serial_Dbg_Intf.command_reg_reg[0] ;
  input [0:0]\Serial_Dbg_Intf.continue_from_brk_TClk_reg ;
  input [0:0]\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ;
  input [0:0]Dbg_Trig_Out;
  input [0:0]Dbg_Trig_Ack_In;
  input [0:0]\Serial_Dbg_Intf.control_reg_reg[3] ;

  wire Clk;
  wire [0:0]D;
  wire [0:0]Dbg_Trig_Out;
  wire [8:0]Q;
  wire [0:0]\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ;
  wire [1:0]\Serial_Dbg_Intf.command_reg_reg[0] ;
  wire [0:0]\Serial_Dbg_Intf.continue_from_brk_TClk_reg ;
  wire [0:0]\Serial_Dbg_Intf.control_reg_reg[3] ;
  wire [0:0]\Serial_Dbg_Intf.force_stop_TClk_reg ;
  wire [0:0]\Serial_Dbg_Intf.single_Step_TClk_reg ;
  wire p_11_out;
  wire p_75_out;
  wire p_82_out;
  wire p_85_out;
  wire p_87_out;
  wire p_90_out;
  wire p_93_out;
  wire [0:9]sample_synced;
  wire sync_reset;
  wire \NLW_sync_bits[5].sync_bit_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ;
  wire [0:0]\NLW_sync_bits[5].sync_bit_Dbg_Trig_In_UNCONNECTED ;
  wire [3:0]\NLW_sync_bits[5].sync_bit_Q_UNCONNECTED ;
  wire [2:0]\NLW_sync_bits[5].sync_bit_Synchronize.use_sync_reset.sync_reg[2]_0_UNCONNECTED ;
  wire \NLW_sync_bits[7].sync_bit_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ;
  wire [0:0]\NLW_sync_bits[7].sync_bit_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [0:0]\NLW_sync_bits[7].sync_bit_Q_UNCONNECTED ;

  ublaze_sopc_microblaze_0_0__mb_sync_bit_48 \sync_bits[0].sync_bit 
       (.Clk(Clk),
        .D(D),
        .Q(Q[8]),
        .p_93_out(p_93_out),
        .sample_synced(sample_synced[0]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_49 \sync_bits[1].sync_bit 
       (.Clk(Clk),
        .Q(Q[7]),
        .\Serial_Dbg_Intf.force_stop_TClk_reg (\Serial_Dbg_Intf.force_stop_TClk_reg ),
        .p_90_out(p_90_out),
        .sample_synced(sample_synced[1]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_50 \sync_bits[2].sync_bit 
       (.Clk(Clk),
        .Q(Q[6]),
        .\Serial_Dbg_Intf.single_Step_TClk_reg (\Serial_Dbg_Intf.single_Step_TClk_reg ),
        .p_87_out(p_87_out),
        .sample_synced(sample_synced[2]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_51 \sync_bits[3].sync_bit 
       (.Clk(Clk),
        .Q(Q[5]),
        .\Serial_Dbg_Intf.command_reg_reg[0] (\Serial_Dbg_Intf.command_reg_reg[0] [1]),
        .p_85_out(p_85_out),
        .sample_synced(sample_synced[3]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_52 \sync_bits[4].sync_bit 
       (.Clk(Clk),
        .Q(Q[4]),
        .\Serial_Dbg_Intf.command_reg_reg[1] (\Serial_Dbg_Intf.command_reg_reg[0] [0]),
        .p_82_out(p_82_out),
        .sample_synced(sample_synced[4]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_53 \sync_bits[5].sync_bit 
       (.Clk(Clk),
        .Dbg_Trig_In(\NLW_sync_bits[5].sync_bit_Dbg_Trig_In_UNCONNECTED [0]),
        .Q({\NLW_sync_bits[5].sync_bit_Q_UNCONNECTED [3],Q[3],Q[1],\NLW_sync_bits[5].sync_bit_Q_UNCONNECTED [0]}),
        .\Serial_Dbg_Intf.continue_from_brk_TClk_reg (\Serial_Dbg_Intf.continue_from_brk_TClk_reg ),
        .\Serial_Dbg_Intf.trig_in_1_reg (\NLW_sync_bits[5].sync_bit_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ),
        .\Synchronize.use_sync_reset.sync_reg[2]_0 ({\NLW_sync_bits[5].sync_bit_Synchronize.use_sync_reset.sync_reg[2]_0_UNCONNECTED [2],sample_synced[7],\NLW_sync_bits[5].sync_bit_Synchronize.use_sync_reset.sync_reg[2]_0_UNCONNECTED [0]}),
        .p_11_out(p_11_out),
        .sample_synced(sample_synced[5]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_54 \sync_bits[6].sync_bit 
       (.Clk(Clk),
        .Q(Q[2]),
        .\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg (\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ),
        .p_75_out(p_75_out),
        .sample_synced(sample_synced[6]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_55 \sync_bits[7].sync_bit 
       (.Clk(Clk),
        .Dbg_Trig_Ack_Out(\NLW_sync_bits[7].sync_bit_Dbg_Trig_Ack_Out_UNCONNECTED [0]),
        .Dbg_Trig_Out(Dbg_Trig_Out),
        .Q(\NLW_sync_bits[7].sync_bit_Q_UNCONNECTED [0]),
        .\Serial_Dbg_Intf.trig_ack_out_1_reg (\NLW_sync_bits[7].sync_bit_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ),
        .sample_synced(sample_synced[7]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__mb_sync_bit_57 \sync_bits[9].sync_bit 
       (.Clk(Clk),
        .\Serial_Dbg_Intf.control_reg_reg[3] (\Serial_Dbg_Intf.control_reg_reg[3] ),
        .sample_synced(sample_synced[9]),
        .sync_reset(sync_reset));
endmodule

(* ORIG_REF_NAME = "msr_reg_gti" *) 
module ublaze_sopc_microblaze_0_0__msr_reg_gti
   (mem_MSR,
    ex_MSR,
    of_MSR,
    MEM_Fwd,
    \LOCKSTEP_Out_reg[2995] ,
    sync_reset,
    \Using_FPGA.Native ,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    mem_sel_msr,
    mem_ex_result,
    wb_piperun,
    wb_MSR_Clear_IE);
  output [2:0]mem_MSR;
  output [2:0]ex_MSR;
  output [1:0]of_MSR;
  output [3:0]MEM_Fwd;
  output [2:0]\LOCKSTEP_Out_reg[2995] ;
  input sync_reset;
  input \Using_FPGA.Native ;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input mem_sel_msr;
  input [3:0]mem_ex_result;
  input wb_piperun;
  input wb_MSR_Clear_IE;

  wire Clk;
  wire [2:0]\LOCKSTEP_Out_reg[2995] ;
  wire [3:0]MEM_Fwd;
  wire \MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ;
  wire \MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ;
  wire \MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire [2:0]ex_MSR;
  wire [2:0]mem_MSR;
  wire [3:0]mem_ex_result;
  wire mem_sel_msr;
  wire [1:0]of_MSR;
  wire sync_reset;
  wire wb_MSR_Clear_IE;
  wire wb_piperun;

  ublaze_sopc_microblaze_0_0__MB_FDR_305 \MEM_MSR_Bits[28].Using_FDR.MSR_I 
       (.Clk(Clk),
        .MEM_Fwd(MEM_Fwd[2]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .mem_MSR(mem_MSR[2]),
        .mem_ex_result(mem_ex_result[2]),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[28] (\MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ),
        .\wb_MSR_i_reg[28]_0 (\LOCKSTEP_Out_reg[2995] [2]),
        .wb_piperun(wb_piperun));
  ublaze_sopc_microblaze_0_0__MB_FDR_306 \MEM_MSR_Bits[29].Using_FDR.MSR_I 
       (.Clk(Clk),
        .MEM_Fwd({MEM_Fwd[3],MEM_Fwd[1]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_ex_result({mem_ex_result[3],mem_ex_result[1]}),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[29] (mem_MSR[1]),
        .\wb_MSR_i_reg[29]_0 (\MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ),
        .\wb_MSR_i_reg[29]_1 (\LOCKSTEP_Out_reg[2995] [1]),
        .wb_piperun(wb_piperun));
  ublaze_sopc_microblaze_0_0__MB_FDR_307 \MEM_MSR_Bits[30].Using_FDR.MSR_I 
       (.Clk(Clk),
        .MEM_Fwd(MEM_Fwd[0]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .mem_MSR(mem_MSR[0]),
        .mem_ex_result(mem_ex_result[0]),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .wb_MSR_Clear_IE(wb_MSR_Clear_IE),
        .\wb_MSR_i_reg[30] (\MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ),
        .\wb_MSR_i_reg[30]_0 (\LOCKSTEP_Out_reg[2995] [0]),
        .wb_piperun(wb_piperun));
  ublaze_sopc_microblaze_0_0__MB_FDR_308 \OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_2 ),
        .ex_MSR(ex_MSR[2]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_FDR_309 \OF_EX_MSR_Bits[28].Using_FDR.MSR_of_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .of_MSR(of_MSR[1]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_FDR_310 \OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .ex_MSR(ex_MSR[1]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_FDR_311 \OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .ex_MSR(ex_MSR[0]),
        .sync_reset(sync_reset));
  ublaze_sopc_microblaze_0_0__MB_FDR_312 \OF_EX_MSR_Bits[30].Using_FDR.MSR_of_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_6 ),
        .of_MSR(of_MSR[0]),
        .sync_reset(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[28] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ),
        .Q(\LOCKSTEP_Out_reg[2995] [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[29] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ),
        .Q(\LOCKSTEP_Out_reg[2995] [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[30] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ),
        .Q(\LOCKSTEP_Out_reg[2995] [0]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mux_bus" *) 
module ublaze_sopc_microblaze_0_0__mux_bus
   (I139_out,
    Y,
    in,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Instr,
    LOCKSTEP_Master_Out);
  output I139_out;
  output [0:31]Y;
  output [0:0]in;
  input [0:0]\Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:31]Instr;
  input [32:0]LOCKSTEP_Master_Out;

  wire I139_out;
  wire [0:31]Instr;
  wire [32:0]LOCKSTEP_Master_Out;
  wire [0:0]\Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:31]Y;
  wire [0:0]in;

  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3 \Mux_Loop[0].I_MUX_LUT6 
       (.I139_out(I139_out),
        .Instr({Instr[0],Instr[16]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32:31],LOCKSTEP_Master_Out[15]}),
        .\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] ({Y[1],Y[3]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .Y({Y[0],Y[16]}),
        .in(in));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_2 \Mux_Loop[10].I_MUX_LUT6 
       (.Instr({Instr[10],Instr[26]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[21],LOCKSTEP_Master_Out[5]}),
        .Y({Y[10],Y[26]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_3 \Mux_Loop[11].I_MUX_LUT6 
       (.Instr({Instr[11],Instr[27]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[20],LOCKSTEP_Master_Out[4]}),
        .Y({Y[11],Y[27]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_4 \Mux_Loop[12].I_MUX_LUT6 
       (.Instr({Instr[12],Instr[28]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[19],LOCKSTEP_Master_Out[3]}),
        .Y({Y[12],Y[28]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_5 \Mux_Loop[13].I_MUX_LUT6 
       (.Instr({Instr[13],Instr[29]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[18],LOCKSTEP_Master_Out[2]}),
        .Y({Y[13],Y[29]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_6 \Mux_Loop[14].I_MUX_LUT6 
       (.Instr({Instr[14],Instr[30]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[17],LOCKSTEP_Master_Out[1]}),
        .Y({Y[14],Y[30]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_7 \Mux_Loop[15].I_MUX_LUT6 
       (.Instr({Instr[15],Instr[31]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[16],LOCKSTEP_Master_Out[0]}),
        .Y({Y[15],Y[31]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_8 \Mux_Loop[1].I_MUX_LUT6 
       (.Instr({Instr[1],Instr[17]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[30],LOCKSTEP_Master_Out[14]}),
        .Y({Y[1],Y[17]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_9 \Mux_Loop[2].I_MUX_LUT6 
       (.Instr({Instr[2],Instr[18]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[29],LOCKSTEP_Master_Out[13]}),
        .Y({Y[2],Y[18]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_10 \Mux_Loop[3].I_MUX_LUT6 
       (.Instr({Instr[3],Instr[19]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[28],LOCKSTEP_Master_Out[12]}),
        .Y({Y[3],Y[19]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_11 \Mux_Loop[4].I_MUX_LUT6 
       (.Instr({Instr[4],Instr[20]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[27],LOCKSTEP_Master_Out[11]}),
        .Y({Y[4],Y[20]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_12 \Mux_Loop[5].I_MUX_LUT6 
       (.Instr({Instr[5],Instr[21]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[26],LOCKSTEP_Master_Out[10]}),
        .Y({Y[5],Y[21]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_13 \Mux_Loop[6].I_MUX_LUT6 
       (.Instr({Instr[6],Instr[22]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[25],LOCKSTEP_Master_Out[9]}),
        .Y({Y[6],Y[22]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_14 \Mux_Loop[7].I_MUX_LUT6 
       (.Instr({Instr[7],Instr[23]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[24],LOCKSTEP_Master_Out[8]}),
        .Y({Y[7],Y[23]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_15 \Mux_Loop[8].I_MUX_LUT6 
       (.Instr({Instr[8],Instr[24]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[23],LOCKSTEP_Master_Out[7]}),
        .Y({Y[8],Y[24]}));
  ublaze_sopc_microblaze_0_0__MB_LUT6_2__parameterized3_16 \Mux_Loop[9].I_MUX_LUT6 
       (.Instr({Instr[9],Instr[25]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[22],LOCKSTEP_Master_Out[6]}),
        .Y({Y[9],Y[25]}));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
